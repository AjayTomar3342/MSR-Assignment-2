,Commit Messages
0,"{'code': 'c9f4b9fcb4ae756af0be113a6c307f6702cde404', 'message': 'Add a link to `ImmutableSortedMultiset` to `collect/package-info.java`.\n\nFixes https://github.com/google/guava/pull/5384\n\nRELNOTES=n/a\nPiperOrigin-RevId: 354653838\n'}"
1,"{'code': 'd394bac847467039530f514f880ecca27263d0ff', 'message': 'Remove `@Beta` from `CountingOutputStream`.\n\nRELNOTES=`io`: Removed `@Beta` from `CountingOutputStream`.\nPiperOrigin-RevId: 354334755\n'}"
2,"{'code': 'd3c306e9e4220d80f111348a92f5cb56d8ad965c', 'message': 'Fix assertion for `FilesTest.testCopyIdenticalFiles()`.\n\nFixes https://github.com/google/guava/issues/5381\n\nRELNOTES=n/a\nPiperOrigin-RevId: 352593619\n'}"
3,"{'code': '2c9f161e10ed4f4568c67cbeb47f3f1f4b3d9c08', 'message': 'Remove `@Beta` from `HashCode`.\n\nhttps://github.com/google/guava/issues/3284\n\nRELNOTES=Remove @Beta from HashCode.\nPiperOrigin-RevId: 352463984\n'}"
4,"{'code': 'b27cf09c1cdb17158654c33720cd43b5a02837be', 'message': 'Fix a comment to reflect that the ImmutableSortedMap copyOf method uses the natural ordering of the keys, rather than a provided comparator.\n\nPiperOrigin-RevId: 350137044\n'}"
5,"{'code': '40c590b5407fbfd8beff15e1f617ff93b8672574', 'message': 'Update Public Suffix data.\n\nRELNOTES=n/a\nPiperOrigin-RevId: 349591280\n'}"
6,"{'code': '580937cdde0b7bc2d9836ae80ec09fda519f2d77', 'message': 'Internal change\n\nRELNOTES=n/a\nPiperOrigin-RevId: 349578051\n'}"
7,"{'code': 'a576512a9ff70106af8f3d1bc7b9a0f98d2e0097', 'message': 'Internal change.\n\nRELNOTES=n/a\nPiperOrigin-RevId: 349319143\n'}"
8,"{'code': '0a2e767e5e2557ffe5989aa46255c2a167496727', 'message': 'Optimize CRC32C.\n\nPiperOrigin-RevId: 348814325\n'}"
9,"{'code': '98b785aada30c1eec8149b10019a67778b4a77b5', 'message': 'Cache only .m2/repository, not all of .m2.\n\nHopefully this will fix ""Could not find artifact org.apache.maven.plugins:maven-checkstyle-plugin:jar:3.1.1 in google-maven-central"" from https://github.com/google/guava/pull/5363\n\nCompare CL 310633203 for Truth.\n\nRELNOTES=n/a\nPiperOrigin-RevId: 348522883\n'}"
10,"{'code': '99a4d3afe044f7bd55f2394ee61756bd6c0adc13', 'message': 'Bump deps.\n\nMy methodology was something like:\n\n```\n( for F in . android; do ( mvn org.codehaus.mojo:versions-maven-plugin:2.8.1:update-properties org.codehaus.mojo:versions-maven-plugin:2.8.1:use-latest-releases -f $F/pom.xml -DgenerateBackupPoms=false ); done )\n```\n\nFixes https://github.com/google/guava/pull/5273\nFixes https://github.com/google/guava/pull/5274\nMore completely addresses https://github.com/google/guava/pull/4018\n\nRELNOTES=n/a\nPiperOrigin-RevId: 348090041\n'}"
11,"{'code': 'f0b4777787a7fa50dfcede7797fb34098217f87a', 'message': 'Set @Target on @IgnoreJRERequirement.\n\nValues:\nhttps://www.mojohaus.org/animal-sniffer/animal-sniffer-annotations/apidocs/org/codehaus/mojo/animal_sniffer/IgnoreJRERequirement.html\n\nContext:\nThis doesn\'t ""fix"" anything, but it prevents us from replicating an error I just made in the future:\nhttps://github.com/mojohaus/animal-sniffer/issues/131#issuecomment-747628259\nRELNOTES=n/a\nPiperOrigin-RevId: 348062753\n'}"
12,"{'code': 'c8d05367c2862ac74781a62061b4fd55e98ffda9', 'message': 'Internal change\n\nRELNOTES=Redocumented ClosingFuture functions to make it clearer that Closeables begin closing *after* completion of the Future or ValueAndCloser that the pipeline emits, rather than before.\nPiperOrigin-RevId: 347929525\n'}"
13,"{'code': '2b55799273247661132f999d66943c6adb6ccc35', 'message': 'Internal change\n\nRELNOTES=n/a\nPiperOrigin-RevId: 347710478\n'}"
14,"{'code': '4ce1869ed7f29f51ae509425bce01e5d54a25a0e', 'message': 'Internal changes.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=347456805\n'}"
15,"{'code': 'ef0ce9216a991ea40774ef82f4fd3ea255c48597', 'message': 'Prepare for release 30.1.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=347382364\n'}"
16,"{'code': 'dc52e6e385fc9f0571dbd046d8ce5bf1a1c1f5cd', 'message': ""Log a warning if running under a Java 7 VM.\n\nMore precisely, log a warning if lambda expressions or type annotations in our classes would produce an exception. If someone wants to use Retrolambda or a similar tool to rewrite our classes, that's fine with us if it works. And our support for Android is unchanged: The Android toolchain rewrites lambdas and removes type annotations.\n\nThis is a step toward removing Java 7 support entirely: https://github.com/google/guava/issues/5269\n\nRELNOTES=Introduced a warning log message when running under Java 7. This warning is not _guaranteed_ to be logged when running under Java 7, so please don't rely on it as your only warning about future problems. If the warning _itself_ causes you trouble, you can eliminate it by silencing the logger for `com.google.common.base.MoreObjects$ToStringHelper` (which is used _only_ for this warning). This warning prepares for [removing support for Java 7 in 2021](https://github.com/google/guava/issues/5269). Please report any problems.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=346795766\n""}"
17,"{'code': 'ca3cc12cd07cc4519f92dae12ac8d47b54d919d9', 'message': 'Correct a typo and some odd phrasing in the first paragraph of the javadoc for SmoothRateLimiter.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=346781263\n'}"
18,"{'code': 'fbbec2bf00619d88b83e4a5a3fd007765c08a172', 'message': 'Fix `relativePath` warning for guava-bom.\n\nFixes #3945.\nCloses #5349.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=346096869\n'}"
19,"{'code': '7e01b017e1dff7c0005748d7139c8d96a5d69206', 'message': 'First step in cleaning up PSL handling. Next stage will be to change the template to store the trie string as a separate static constant, so that I can write a unit test that verifies that.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=345716528\n'}"
20,"{'code': 'c86fa8f205ddfdefd17ff2fd4806d1bdffde8ad7', 'message': 'Fix a bug in HashBiMap which was causing crashes in Sheets on iOS.\n\nThe crash was caused by the fact, that linked-list of BiEntry instances inside a bucket were using @Weak references, and only the first entry in the list was strongly referenced. The remaining ones were deallocated.\n\nWith this change, Sheets iOS is not crashing anymore.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=345638671\n'}"
21,"{'code': 'd3b27b84245b3a1f81b15f186a9223831254d4cb', 'message': ""System.getProperties().getProperty => System.getProperty.\n\nMy motivation was that it's slightly easier for a nullness checker to determine that System.getProperty(standardProperty) is (generally speaking) non-null. But it turns out that java.runtime.name is not a standard property!\n\nStill, this is a slight simplification, so I guess I'm submitting.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=345461863\n""}"
22,"{'code': 'b8f4b8d43da3529026bc385632b7528f6aac03f0', 'message': 'Automated rollback of 67517b5a5b7627eee39a47917197998b9f974751.\n\n*** Reason for rollback ***\n\nCausing Sheets iOS crash\n\n*** Original change description ***\n\nFix memory leaks and potential crashes in HashBiMap, which occur in transpiled ObjC code.\nAdd iOS specific unit tests in XPlat, because Guava is missing infrastructure for iOS tests.\n\n***\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=345445573\n'}"
23,"{'code': '38abf0777224de8fd0ac98b1488bef4195141d12', 'message': ""Explain when StandardSystemProperty.value() can return a null value, and deprecate JAVA_EXT_DIRS.\n\nvalue()'s return type has been @Nullable since 4232450e7bb7c46c08868f699323db3e787507c8, but I had forgotten the details about why, despite past CLs to update the test for specific missing keys.\n\nI assume that we'll never actually *remove* JAVA_EXT_DIRS.\n\n(Just slightly relevant to https://github.com/google/guava/issues/2571)\n\nRELNOTES=`base`: Deprecated `StandardSystemProperty.JAVA_EXT_DIRS`. We do not plan to remove the API, but in recent versions of Java, that property always has a value of `null`.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=345251412\n""}"
24,"{'code': '461b7bb6ebb24c94a6b8ecdf593c8573c38e1a05', 'message': 'Suppress TSAN errors for benign races.\n\nCompare other usages of `@LazyInit` on collection views, such as `HashBiMap.inverse` and `AbstractTable.cellSet`.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=345023158\n'}"
25,"{'code': '1a020b7e447bddc48b677d702611f58f7c9033cc', 'message': 'PUBLIC: Add missing Override annotations.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=344396802\n'}"
26,"{'code': '4709fe4d50cf5249b9e5e40fb8917c610831c317', 'message': 'Internal change.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=344065888\n'}"
27,"{'code': 'f3a194a87eadfb6ac6c44f67e9d875259760f7c7', 'message': 'Make toImmutableSortedMap levarage collect collectors\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=344044740\n'}"
28,"{'code': '751d7c0d5f1fe3cbc067987e7d185763affa9ec7', 'message': 'Make toImmutableEnum[Set|Map] to AndroidAccessToCollectors\n\nI think that’s the last of them.\n\nThe implementations I moved verbatim, and there was no change of code there.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=342853260\n'}"
29,"{'code': 'c8eb42172046e53264dd4a31ab9a245d2ecf5369', 'message': 'Update Public Suffix data.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=342455735\n'}"
30,"{'code': 'a6ea0890d23b361d47ab1b5a4126fd1b6566d4ab', 'message': 'Fix open source “No tests found in com.google.common.collect.TableCollectorsTest”\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=342423867\n'}"
31,"{'code': '8cddfe92af159a5cad1dcd96ddaf816e9e186365', 'message': 'Add TableCollectors to AndroidAccessToCollectors\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=342328137\n'}"
32,"{'code': '50cabc448caedd6c395420b7c5e37a8e16ac1152', 'message': 'Add Multimap collectors to AndroidAccessToCollectors\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=342267834\n'}"
33,"{'code': '70dfcd22a60cd2f3cf7975fc5d99ae15ea060b5b', 'message': 'Backport combine to Immutable[List|Set]Multimap\n\nInterestingly, ImmutableMultimap already had combine implemented by lowasser since 2017. Probably a backport oversight.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=342263966\n'}"
34,"{'code': 'fe6b3381e1446d6ba0a79bb334e224451b6d2e23', 'message': 'Add to[Immutable]Multiset to AndroidAccessToCollectors\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=342263369\n'}"
35,"{'code': '597b86c45e53c60b20ddba85c0f8c5fc8e278d19', 'message': 'Backport ImmutableTable.combine\n\nThat should be the last combine to backport. All remainging collectors are implemented in terms of existing collection transformations.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=342109380\n'}"
36,"{'code': 'c28a0f62c26fc5dc456d6036e145ef0aa7f38d1d', 'message': 'Add AndroidAccessToCollectors.\n\nThis adds the base Immutable collectors already in CollectCollectors, but is still lacking the Table-collections, Multi-collections, and mutable-collections.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=342060366\n'}"
37,"{'code': '1e2977182836b04eb5306f542892a0856ba606e1', 'message': 'Replaces cycle_finder references to ""--whitelist"" with ""--suppress-list"", and ""--blacklist"" with ""--restrict-to"".\n\nRELNOTES=none\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=342051515\n'}"
38,"{'code': 'a6752d73acba20295ecdcddd959dac904dbfa4d3', 'message': ""Tidy up description since this shows up in search results, Maven Central, and many other places around the web.\n\nCL automatically created by:\n    replace_string \\\n      'google'\\''s collections, io classes, and much' \\\n      'Google'\\''s collections, I/O classes, and'\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=341847283\n""}"
39,"{'code': '67517b5a5b7627eee39a47917197998b9f974751', 'message': 'Fix memory leaks and potential crashes in HashBiMap, which occur in transpiled ObjC code.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=341781311\n'}"
40,"{'code': 'd739485905a0b82795f1662cf4e8b884cbad3567', 'message': 'Backport `combine` to java7 for Sorted collections & (Immutable)BiMap.\n\nThis is so that Java8 code relying on the Java7 branch of Guava can still efficiently collect Guava collections.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=341671320\n'}"
41,"{'code': 'ef0261f95bd3aa33551b9a817cd5db9ccca01501', 'message': 'Backport combine to java7 for `ImmutableRangeSet`/`ImmutableRangeSet`.\n\nThis is so that Java8 code relying on the Java7 branch of Guava can still efficiently collect Guava collections.\n\nI saved this for last, but they turned out to be the easiest to do. Tests are kind of crap, but honestly, baseline tests also seemed a little bit light to me.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=341614348\n'}"
42,"{'code': '16c5bbcb031fd31de838aca5ac4a61d9915ef8c8', 'message': 'Backport `combine` to java7 for `ImmutableMap`.\n\nThis is so that Java8 code relying on the Java7 branch of Guava can still efficiently collect Guava collections.\n\nThe Java8/Java7 implementations branched once again, where Java8 uses an array of Entries, whereas Java7 uses an array of alternating key/value pairs. Either way, the implementations were pretty trivial this time.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=341613761\n'}"
43,"{'code': '93582811a2596b33e24294ab0869ddaafdf66b74', 'message': 'Fix Android test failure in ClassPathTest.\n\nReproduced the error and verified that this change fixes it.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=341509765\n'}"
44,"{'code': '8319d201cd4db01220fc4733a37b5e1ee6f608e1', 'message': 'Add `X-Request-ID` to `HttpHeaders`.\n\nFixes #5306.\n\nRELNOTES=Add `X-Request-ID` to `HttpHeaders`.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=341479875\n'}"
45,"{'code': 'c5e2d8d5cb30b1cd73fa0e86af161e140d772e03', 'message': 'Added submitAsync to ClosingFuture.\n\nRELNOTES=""Added `submitAsync(AsyncClosingCallable)` to `ClosingFuture`.""\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=341474622\n'}"
46,"{'code': '34552640758d48a1b00e764745ab18a410099ae6', 'message': 'Fix `LoadingCache` minor documentation typo.\n\nFixes #5503.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=341437035\n'}"
47,"{'code': 'd30212b68b8b6c15cabb2432578a29f293813599', 'message': 'Backport `combine` to java7 for `ImmutableList` & `ImmutableSet`.\n\nThis is so that Java8 code relying on the Java7 branch of Guava can still efficiently collect Guava collections.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=341428225\n'}"
48,"{'code': '56bc81287d8fb4036d0364a055d8a11f8ca19a2c', 'message': ""Rollback\n\n*** Original change description ***\n\nDo 16-byte strides in CRC32C in c.g.c.hash, resulting in roughly a 3.3x speedup to 1.5 GB/s.\n\nThis is probably as good as it gets until Java 11, when we'll have access to the intrinsics that use CRC hardware when available.\n\n***\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=340968144\n""}"
49,"{'code': '5c28b153325cd7a32b03354f1f8ee8d0faa8c2d3', 'message': ""Do 16-byte strides in CRC32C in c.g.c.hash, resulting in roughly a 3.3x speedup to 1.5 GB/s.\n\nThis is probably as good as it gets until Java 11, when we'll have access to the intrinsics that use CRC hardware when available.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=340917813\n""}"
50,"{'code': '11517d65524c3ad24f36a45a6162ca16097dcf38', 'message': 'Verify maximumWeight before setting\n\nThe maximumWeight builder method is the only method that does the argument verification before the assignment.\nIt looks like a typo, and does not affect anyone in practice, but it is still better to have the implementation uniform.\n\nFixes #5298\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=340507972\n'}"
51,"{'code': '6672ceee4f77b4218ff514b2dff11e40da83789b', 'message': 'Add additional test for `Crc32cHashFunction`.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=340502702\n'}"
52,"{'code': '1c4bffa7f5e47fd447fec7740b1fc67f75eca5df', 'message': 'Remove outdated reference in docs\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=340494040\n'}"
53,"{'code': 'a48fb4f72490f99a5f62586b2d7468661dca35d1', 'message': 'Add constant for Origin Isolation header\n\nSpec: https://github.com/WICG/origin-isolation\n\nRELNOTES=Adds constant for the Origin-Isolation header.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=340474672\n'}"
54,"{'code': 'b4de08caca4f766c1fc5dba1d493ec30700d7609', 'message': 'Optimize Hashing.crc32c() by eliminating two xors for every byte of input.\n\nBenchmarks suggest a modest speedup around 8%.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=339780690\n'}"
55,"{'code': '007047bc8f9319feaed95a7d9993404a17e6ba09', 'message': 'Fix documentation for HashCode.toString() that incorrectly claimed it returned in big-endian order.\n\nThe implementation of toString() goes through the bytes in the same order that asBytes() returns, so if the order of the underlying bytes is little-endian (as is the case for LongHashCode), then the string will also be little-endian, contradicting what the documentation says.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=339498078\n'}"
56,"{'code': '013381b7a8a101ad1bb03e01a70bae35eecf161b', 'message': 'Refactor ClassPath: replace Scanner with Location class.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=339481712\n'}"
57,"{'code': '7ef9f97cad23efee4cc18c63b5f3c90ca320f131', 'message': 'Fix minor documentation typos, thanks to @Stephan202 and @jbduncan\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=339045611\n'}"
58,"{'code': '410627262beccfab185209f0d2e7126177dba7c8', 'message': ""Add ClassInfo.isTopLevel().\n\nSeems like a useful method? I can't remember why I didn't add it in the first place. Perhaps just an oversight.\n\nPartially addresses https://github.com/google/guava/issues/3349\n\nRELNOTES=`reflect`: Added `ClassInfo.isTopLevel()`.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=338738055\n""}"
59,"{'code': '33f2b153a14e981e9bb1bc3dbc916c66dac00837', 'message': 'Update IteratorTester example with a greater ""steps"" value\n\nThis allows IteratorTester to check the edge case that when an iterator has been exhausted (that is, ""next"" has been called repeatedly until ""hasNext"" returns false) then calling ""next"" on the iterator again exhibits the same behavior as the user\'s chosen ""known good"" reference implementation.\n\nFixes #5281\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=337541752\n'}"
60,"{'code': 'dfb00017144bf48c408bc4cfcebadc0a0498dc73', 'message': 'Remove deprecated 1-arg ServiceManager.addListener.\n\n[]\n\nRELNOTES=`util.concurrent`: Removed the deprecated 1-arg `ServiceManager.addListener(Listener)`. Use the 2-arg `addListener(Listener, Executor)` overload, setting the executor to `directExecutor()` for equivalent behavior.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=337538866\n'}"
61,"{'code': 'cf9bab3f1ba1e30e26c005a1f867630e8cb525fb', 'message': 'Prepare for release 30.0.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=337538304\n'}"
62,"{'code': '661384d0fa41aa4e00aeca720bdf2ca3be52769e', 'message': ""Remove deprecated method Files.fileTreeTraverser() that isn't being used anymore.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=337513335\n""}"
63,"{'code': 'ef5fdf7d0bb7bccc42554c03d555ace89b5d915f', 'message': 'Added `@CanIgnoreReturnValue` to `cancel`.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=337401866\n'}"
64,"{'code': '19ec35927679a16efe5fe6381d0c18da1bdbc5a5', 'message': 'Encode all primes less-than 66 into a bitmask\n\nUse a bitmask to make prime computation for all values less-than 66 O(1) and avoid any remainder calculations in these cases.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=337357783\n'}"
65,"{'code': 'bc67a44a1676211b2c6859adbc021c3640e66990', 'message': 'Add tests which validate the run order of listeners on futures when the output is cancelled to test the behavior added in cl/161148771\n\nRemove cancellation propagation test, as the intent of not propagating cancellation is to make sure run order is as expected.\n\nIf we propagate cancellations, the test fails.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=337100661\n'}"
66,"{'code': '7affc4e29a6dff7bfb5207ebb2f979b849c5dfdd', 'message': 'Document what happens when FutureCallback throws exception.\n\nFixes #5250, #2058\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=336963896\n'}"
67,"{'code': 'c3bd4e652ed6879c2dfe58aead623930ca21e4a8', 'message': ""Clarify that Interner should be preferred instead of String.intern(); the existing language implies it's intended _only_ for other types.\n\nSee also https://github.com/google/guava/issues/399#issuecomment-61307754\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=336940613\n""}"
68,"{'code': 'e3dc2a7a0f3d89b595f6bb3b944bbe996e3824fe', 'message': 'Fix example in documentation for `IteratorTester`\n\nI made a mistake and accidentally included an example that does not\ncompile. Specifically, importing `KnownOrder` as-is does not compile;\ninstead one needs to import `IteratorTester.KnownOrder`. See #5254 for\nmore information.\n\nI also changed the example to use `Collections#unmodifiableList`\nrather than `ArrayList` because `ArrayList#iterator` does not satisfy\nall the requirements of `IteratorFeature#MODIFIABLE`.\n\nFixes #5276\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=336911192\n'}"
69,"{'code': '2ebf27fd45685e7f89bb4aae11e1709d49863717', 'message': ""Don't call toString() on the results of successful futures.\n\nRELNOTES=AbstractFuture.toString() no longer includes the toString() of the result.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=336911024\n""}"
70,"{'code': '1b20a37cf8fdf8f7622c4a50a4c59e072c375452', 'message': 'Add a bunch of warnings to ExecutionSequencer.\n\nSee discussion on CL 335046640.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=336787854\n'}"
71,"{'code': '9f03c474d92e724d2193ab64b5cfbd2b232a715e', 'message': 'Clarify how to use `IteratorTester`\n\nWhen using `IteratorTester`, IntelliJ IDEA automatically imports\n`AbstractIteratorTester.KnownOrder`. However `AbstractIteratorTester`\nis private, and it is not obvious that one was meant to import\n`IteratorTester.KnownOrder` instead. Therefore this commit updates the\nJavadoc to give an example of how to use the API properly.\n\nFixes #5272\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=336716876\n'}"
72,"{'code': 'be1c0d8a4fd00e6c5cc362cc0021db5e9e3d4fef', 'message': 'Removed all references to now useless workaround\n\nFixes #3679\nFixes #5265\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=336161257\n'}"
73,"{'code': '62ea9014fcd19711dd235a3036650518f91fe017', 'message': 'Clarify `HashMultimap` docs about concurrency.\n\nCloses #5266.\nFixes #3682.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=336158810\n'}"
74,"{'code': '90f01b880f0b691ba51bb119ec98bc67f2eb50bf', 'message': ""Omit TestModuleEntryPoint from open-source repo.\n\nSince I've disabled GWT tests in the open-source repo, these no longer serve a purpose. (They're still listed in our testModule.gwt.xml files, but as noted in a previous commit, the GWT test infrastructure doesn't seem to care what we put in those files anymore.)\n\nWe could still include them, but they're generated during our build, so that complicates exporting them with Copybara.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=336074070\n""}"
75,"{'code': 'ed4bb2b5d3f797785e68a0eec42c0ea6184d50de', 'message': ""Check the generated PublicSuffixPatterns.java into Piper.\n\nCopybara can't export generated files.\n\nAlso, reformat the template (and then the file) so that autoformatting the file doesn't produce diffs.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=335875149\n""}"
76,"{'code': 'fb363f1882cf24b47b6cf091f50893fa4ae7b320', 'message': ""Run all zero of our GWT tests during presubmit/CI.\n\nUnfortunately, this does *not* detect any bogus <inherits> lines in *test* .gwt.xml files (neither the individual testModule.gwt.xml files nor the top-level GuavaTests.gwt.xml).\n(And bogus <inherits> lines in *prod* .gwt.xml files were already detected even before this change.)\n\nAs a result, this CL appears to be very nearly a no-op -- maybe just a verification that the no-op GWT module and entry point exist. And maybe I'll end up rolling it back if we reenable the tests externally someday. Still, for now it seems like a reasonable thing to clean up, if only to prevent me from trying to clean it up again 6 months from now :)\n\n(Followup after https://github.com/google/guava/issues/3680)\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=335869875\n""}"
77,"{'code': '392f6bf278d6baa907f3d737bb5a216f94ff0794', 'message': 'Move gwt-user dep to test scope.\n\nWe no longer need it as a prod dependency (not even `provided`) after removing GWT-RPC support.\n\n(Followup after https://github.com/google/guava/issues/3680)\n\nFixes https://github.com/google/truth/issues/637, if GitHub will let me get away with closing a Truth issue with a Guava commit :)\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=335644672\n'}"
78,"{'code': 'e8a8330bbf6805007038f9e407560f96e7fd3d69', 'message': ""Remove a couple GwtSerializationDependencies classes from open-source Guava after all.\n\nAs noted in 0cb89dd110ce88770207889901e95ea2ac896932, this isn't necessary. As *also* noted there, we have *additional* FooGwtSerializationDependencies classes that I'm leaving in place because they are *supertypes* of the prod classes and thus harder to remove.\n\nBut I'm removing these 2 because it saves me a few lines in the Copybara config :)\n\n(Followup after https://github.com/google/guava/issues/3680)\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=335047921\n""}"
79,"{'code': '40ed93d8a68ad4c163fb67b32cc521783c390ef5', 'message': 'Tweak TODOs.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=335044636\n'}"
80,"{'code': '0404b2009aa179ad45ed32eb2af84701467b59e5', 'message': ""Remove GWT tests from open source.\n\nWe will continue to run these tests internally.\n\nI'm not sure how much value the remaining open-source GwtTestSuite file provides us. Hopefully it's at least a sanity check on .gwt.xml files. But I haven't tested by breaking a .gwt.xml file to see what happens.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=335038108\n""}"
81,"{'code': '56ce4a9bf3de022fb5749783b1d496a81b53c760', 'message': ""Begin tweaking Guava sources to satisfy Copybara.\n\n- Change from http to https (and from github.io links to guava.dev/truth.dev while I'm at it).\n- Remove go/ links.\n- Add whitespace around MOE directives.\n- Put MOE stripping directives alone in comments, moving other comment text to a separate comment.\n- One particular case of that: Put MOE intracomment stripping into HTML comments... even when it happens in non-Javadoc comments (i.e., /* */). It seems that Copybara wants for intracomment directives to stand alone in *some* kind of comment?\n- Add @GoogleInternal to some files that are currently omitted from Guava simply by not being in MOE filegroup targets.\n\nThis is surely not a complete set of changes, but it's enough to get me started.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=334840448\n""}"
82,"{'code': '52882ad975d2a55bb624143f02387515b3b01f46', 'message': 'Mark BigDecimalMathTest as fully @GwtIncompatible.\n\nCurrently it has every member annotated as @GwtIncompatible. This works fine internally, but the external GWT tests (which we run only at release time) complain about the resulting empty BigDecimalMathTest_gwt:\nhttps://github.com/google/guava/blob/master/guava-gwt/test/com/google/common/math/BigDecimalMathTest_gwt.java\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=334778309\n'}"
83,"{'code': '0cb89dd110ce88770207889901e95ea2ac896932', 'message': ""Fully remove GWT-RPC support externally.\n\nReally, really closes https://github.com/google/guava/issues/3680.\n\nPossible future work:\n- Be consistent about whether we put @GwtCompatible on the remaining internal CustomFieldSerializer classes. (For those files, it probably acts only as documentation (of something that is pretty obvious :)). Our open-source build used to take action when it saw `@GwtCompatible(emulated=true)`, but (a) it doesn't anymore, (b) those files don't exist externally anymore, and (c) they weren't `emulated=true` :) I believe that our internal build requires @GwtCompatible on most files in our GWT target, but I think there's an exception for GWT-target-only sources.)\n- Remove some of the GwtSerializationDependencies classes. However, some of these classe are set up as *supertypes* of our prod classes, so this would require some surgery. Keeping them is harmless: It doesn't actually make the classes GWT-serializable.\n- Remove the usages of serializable=true on @GwtCompatible, at least externally but maybe just entirely.\n\nRELNOTES=[Guava types can no longer be sent over GWT-RPC.](https://groups.google.com/d/msg/guava-announce/zHZTFg7YF3o/rQNnwdHeEwAJ) Even the earlier, temporary way to reenable support (`guava.gwt.emergency_reenable_rpc`) no longer has an effect.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=334598649\n""}"
84,"{'code': '7f164ef7e2cc536754ecdd6a26ddc3dabaa398ec', 'message': 'Fix ClassPathTest on Android JDK 11.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=334217434\n'}"
85,"{'code': '44b6fcf294b6ad1b22618e24146a8f2f2b267770', 'message': 'Also print Android test failures.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=334196405\n'}"
86,"{'code': '9ae23cd2edc542c0352b9888da5a4d66811cf1a4', 'message': 'Remove unnecessary parens\n\nFixes #4036\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=334163542\n'}"
87,"{'code': '62b1fda8bf3c5313568230bb60a7ea5a6eaac679', 'message': 'Internal changes to ClassPath.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=333752825\n'}"
88,"{'code': 'b2f5f5bd33320628904145c9e52a095ade1c178b', 'message': 'Internal changes to ClassPath.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=333547909\n'}"
89,"{'code': '27307b8a0245baf81ed317c4b67f9a195e446efa', 'message': 'Add brief test to Range for `[_, X].isConnected([X, _])`;\n\nRELNOTES: n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=332926985\n'}"
90,"{'code': 'd582751ba2f35c634a5ac1e69037fdb1f39eacdb', 'message': 'Change `ForwardingMap.remove(Object)` parameter name from `object` to `key` to match `Map.remove(Object key)`.\n\nFixes https://github.com/google/guava/issues/4028\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=332443901\n'}"
91,"{'code': 'f7e47955005cd2cc443e1eb878ab3de92af49b83', 'message': 'Deal with Class#isInstance checks which are guaranteed to be false.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=332298366\n'}"
92,"{'code': '902f10fb3dab70410da7ba772e36db075c3ef107', 'message': 'Fix UnsupportedOperationException from TreeRangeSet.subRangeSet(...).add(...).\n\nFixes #4019, #4002\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=332262870\n'}"
93,"{'code': 'c4d50482135080458858c1cd7d0c34b0a86a857d', 'message': 'Externally restore @DoNotMock to ClosingFuture.Combiner, and externally add @DoNotMock to ClosingFuture itself.\n\nThis implements an alternative workaround for https://bugs.openjdk.java.net/browse/JDK-7101822, replacing the one submitted in CL 331770482.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=332225001\n'}"
94,"{'code': '1c721cd977eae2d6e414b0c5805d724b67e72335', 'message': 'Add back web.app to public suffix list\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=332107904\n'}"
95,"{'code': 'e1ca35a5cc1c3738b3619570517bf7ffc91d1e0b', 'message': 'Fix random typos in Guava.\n\nFixes #4021\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=332065668\n'}"
96,"{'code': 'f4b88ee66f03e43f89940bbfd9e9df7a4d368036', 'message': 'Fix AssertionError from Range.gap.\n\nFixes #4007, #4004\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=332057751\n'}"
97,"{'code': 'c9570eae6909040347e1be0260bc1e7ff154ef44', 'message': 'Make EqualsTester test that non-Strings are not equal to their String representation.\n\nRELNOTES=Make EqualsTester test that non-Strings are not equal to their String representation.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=331970427\n'}"
98,"{'code': '6fff2f52b426c048559128ff51026db36ddc136d', 'message': 'Remove spurious annotation to fix Travis build.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=331770482\n'}"
99,"{'code': '1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e', 'message': ""Bump checker-qual from 2.11.1 to 3.5.0.\n\nFor unfortunate reasons involving internal legacy infrastructure, this is easier than merging #4018. But at least it gets us on the newest major version. That makes it easier to see that it's safe to resolve a conflict between, say, 3.5.0 and 3.6.1 by just using the newer one.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=331554618\n""}"
100,"{'code': '7fad458114db33674e5fd563f5688eba24e0612e', 'message': 'Fix typos and remove unnecessary words.\n\nFixes #4012\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=331149947\n'}"
101,"{'code': '52e048ed6c7f60505313b5347162dd7f3f38dd80', 'message': 'Make ClosingFuture available in open-source Guava (@Beta).\n\nRELNOTES=`util.concurrent`: Add `ClosingFuture`.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=330800398\n'}"
102,"{'code': '7fd0ff50fbaf0221d9483b99db56ad604ef878d1', 'message': 'Minor whitespace-only change\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=330053928\n'}"
103,"{'code': 'bafab6242d7fb05560b6d3ebe0f7cfc7f30803f2', 'message': ""Update Public Suffix data.\n\nThe copy is typically updated whenever Chrome's copy is updated, which\nis roughly every 6 weeks. Subscribe to the Chrome Milestone Calendar to see the\ndates.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=329222572\n""}"
104,"{'code': 'fec0dbc4634006a6162cfd4d0d09c962073ddf40', 'message': 'Deprecate Files.createTempDir(), noting that better alternatives exist for Android as well as for users running Java 7 or later.\n\nRELNOTES=`io`: Deprecated `Files.createTempDir()`.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=328552787\n'}"
105,"{'code': '554546c9718a8c0bdae233a4afd5102180ef55ca', 'message': 'Throw if @Subscribe is applied to a method that takes a primitive parameter.\n\nFixes https://github.com/google/guava/issues/3992.\n\nRELNOTES=Prevent @Subscribe being applied to a method that takes a primitive, as that will never be called.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=328195519\n'}"
106,"{'code': '9b972a21f793fcbb1ac2d41d6c6d6c97d54adb25', 'message': 'Work around an android bug in LockSupport, this time with @CanIgnoreReturnValue\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=327861568\n'}"
107,"{'code': 'dbc87a93ef4a5f541e35b1b733adb203f43e4328', 'message': 'Adding SEC-CH-UA-Arch header.\n\nHeader Spec Here: https://wicg.github.io/ua-client-hints/#http-ua-hints\n\nRELNOTES=N/A\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=327812010\n'}"
108,"{'code': '04bfbe284cd386cbd42c1ae1bca50033ce297c69', 'message': ""Don't directly call ByteBuffer, etc. methods that have covariant returns in Java 9+.\n\nDoing so produces a jar that doesn't work under Java 8.\n\nThis CL addresses the currently existing problematic calls (by calling the methods on the supertype Buffer instead), but we should also add safeguards.\n\nThe normal solution to this general problem is to use --release, but doing so here is complicated.\n\nFor more information, see https://github.com/google/guava/issues/3990\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=327654073\n""}"
109,"{'code': '23be71af402328c19e00c333e370e31357308b4b', 'message': 'Switch GWT rules implementation from native to .bzl.\n\nRELNOTES: GWT rules are now implemented in .bzl.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=327435789\n'}"
110,"{'code': 'd8e921fd2df52184708d6eb9516e4869f548d841', 'message': '[Efficiency] Modifies testToNumericFormatV6 to parse the input String in place.\n\nRELNOTES=`InetAddresses`: InetAddress parsing is now more efficient\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=326264503\n'}"
111,"{'code': '6193884f7bf96b468fb44bf03b904130d2926c2d', 'message': 'Bring back previously deleted SerializedForms so that old data can still be read.\n\nRELNOTES=`collect`: Data that was previously serialized, and that originated from ImmutableMap.keySet() or .values(), is now deserializable again.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=326086350\n'}"
112,"{'code': 'b6b4dc49b1ccfc4141181b24a26eadc689b48b43', 'message': 'Remove `@Beta` from `Multimaps.toMultimap`.\n\nFixes https://github.com/google/guava/issues/3957\n\nRELNOTES=`collect`: Removed `@Beta` from `Multimaps.toMultimap`.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=326049244\n'}"
113,"{'code': 'aa18c74a25d31228d65894a28a6c049a743edc51', 'message': 'Avoid boxing in Doubles.constrainToRange() and Floats.constrainToRange().\n\nFixes https://github.com/google/guava/issues/3984\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=325802979\n'}"
114,"{'code': '081c486173032e6096c912e3c297c1d74eddcf93', 'message': '[Efficiency] Modifies textToNumericFormatV4 to parse the input String in place.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=325432680\n'}"
115,"{'code': '70ed7f8ef3f0e844d2b5e90569016f82bf0a689a', 'message': '[Efficiency] Creates a variant of parseHextet and parseOctet that can work on a larger string with start and end indices.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=325422374\n'}"
116,"{'code': '5e519d91d038636fa5f786908aa856ba5470846d', 'message': 'Fix memory-leaks in LocalCache on iOS, caused by:\n\n1. Retain-cycle between outer LocalCache instance and inner Values, KeySet and EntrySet instances. The use of @Weak and @WeakOuter is incorrect there, since inner instances can outlive outer LocalCache instance. The correct solution is to use @RetainedWith annotation to inner-classes.\n\n2. Retain-cycle between ReferenceEntry objects which internally form a doubly-linked list. Fixed by adding @Weak annotation to ""next"" and ""previous"" links. This is correct, since ReferenceEntry instances are already retained by Segments.\n\nThe unit test for leak detection is added inside Xplat, because the required testing infrastructure is not present inside ""google_common"" (the IosAsserts class). Eventually, everything should be moved to ""google_common"".\n\nRELNOTES=Fix memory-leak in LocalCache on iOS\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=325008493\n'}"
117,"{'code': 'f5a69c33fcbaa2f570f9fc29a2f4dd4431dae264', 'message': 'Ensure that the set returned by ImmutableMap<K, V>.keySet() is serializable when K is serializable, and similarly for values().\n\nSet<T> should be serializable when T is serializable but that is not always the case for the set returned by ImmutableMap.keySet() due to a reference from the returned set back to the original map. When serializing this set, the original map is serialized is well. This change changes this so that only the keys are serialized.\n\nRELNOTES=`collect`: Ensure that the set returned by `ImmutableMap<K, V>.keySet()` is serializable when `K` is serializable (and similarly for `values()`).\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=324749502\n'}"
118,"{'code': '0f9977ba3684ed59e319af0e18d4ae22f70839d0', 'message': 'De-beta toImmutable* methods in GWT variants(""emulated"") of common.collect.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=322779681\n'}"
119,"{'code': '3a3ebc99da0722361be913e1bab0b99bd7cf0b88', 'message': 'Shorten toString for AbstractFuture implementations inside util.concurrent.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=322682481\n'}"
120,"{'code': 'f07b9540dc11c667686cfea24849659decc5a0d8', 'message': 'Add awaitTerminationUninterruptibly.\n\nFixes #3908\nFixes #1315\nSomewhat relevant to https://github.com/google/guava/issues/3655\nVaguely relevant to https://github.com/google/error-prone/issues/1490, since it creates a `@CheckReturnValue` variant of a `java.util.concurrent` method that returns `false` to indicate timeout.\n\nRELNOTES=`util.concurrent`: Added `awaitTerminationUninterruptibly`.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=322581454\n'}"
121,"{'code': '02811634236ccef4b38d319007cffdf96ea5b7c0', 'message': 'Warn about stack overflows from directExecutor, add more warnings (including on AbstractFuture.set* and cancel), and move warnings to directExecutor itself.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=322398596\n'}"
122,"{'code': '6410f18c06074e75effb7823c97df98385f822d0', 'message': 'Add @DoNotMock to Traverser.\n\nRELNOTES=Add @DoNotMock to Traverser\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=321469875\n'}"
123,"{'code': 'da93601899485518956c211e81017833071838b9', 'message': 'Unconditionally call setException for RejectedExecutionException.\n\nUnder JDK11, the write to thrownByExecute / thrownFromDelegate is upsetting TSAN. I *suspect* that TSAN is incorrect (and that it is likely to identify the same ""problem"" in other code).\n\nHowever, we years ago questioned whether the code I\'m removing served any real purpose...\n(fixes https://github.com/google/guava/issues/2877)\n...so now seems like a good time to get rid of it and, at minimum, hopefully eliminate the current TSAN failure.\n\nThe code that we\'re running in the executor is under our control. (That is, we\'re the ones who implement Runnable.run().) We\'re catching exceptions (and thus any RejectedExecutionException) in the obvious places. Occasionally we do call listeners, but naturally we do that only after completing the future or at least calling setFuture (after which a stray setException(rejectedExecutionException) would be a no-op).\n\nThe one(?) exception to that is that InterruptibleTask.run() can call currentThread.interrupt(), which we learned a few years ago can call arbitrary code through nio callbacks. At some point, though, I throw my hands up and say ""whatever.""\n\n(If the interrupt were to be a problem, it would have to be with an executor that executes tasks inline, like directExecutor. But I note that rejectionPropagatingExecutor, at least, already defends against this for directExecutor itself (by skipping the RejectedExecutionException logic entirely). So the danger exists only with CombinedFutureInterruptibleTask or with a non-directExecutor that can execute tasks inline without catching exceptions -- and again, only in concert with nio interrupt callbacks. I think.)\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=321374425\n'}"
124,"{'code': '32f2d770f7117015385083ec6e755336ddf18f21', 'message': 'Make breadth-first iterators consume the successor iterators lazily, and refactor to  cut about 150 lines of code.\n\nRELNOTES=Lazier Traverser#breadthFirst().\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=321062203\n'}"
125,"{'code': 'ea4e95008d7e17e624302e84c61ee5c15d310b73', 'message': ""Add toString() for SequentialExecutor's worker runnable\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=320760882\n""}"
126,"{'code': 'b5210ca95c4303bd91fdb9cb1d063f5680183f0b', 'message': ""Speed up Traverser and cut about 30 lines of code.\n\nWhen stacked against the unsubmitted Walker, before the change:\n   breadthFirst was roughly on par;\n   preOrder/postOrder were about 70% slower (1359 vs. 2358);\n\nAfter adopting the Walker impl, the tree traversal preorder/postorder are improved close to Walker impl.\n\nThere is still about 10% slowness (2405 vs. 2268) remaining, which I suspect is due to Iterator being slower than Spliterator, because with Spliterator, we can tryAdvance() once for each element, while with Iterator, we have to call both hasNext() and next().\n\nThe graph traversal adoption is similar, with about 15% remaining slowness compared to Walker (1583 vs. 1338), which is likely result of Spliterator.tryAdvance() vs. Iterator.hasNext() + next().\n\nDid not adopt the Walker's breadth-first impl for the following reasons:\n\n1. Adopting the Walker's breadth-first impl contributed about 10% slowdown compared to the current impl. I think this is likely due to the eager foreach loop of the successors in the current breadth-first iterator. In the full traversal benchmark, it's likely faster than consuming the successor iterator lazily.\n\nOn the other hand, the breadth-first iterator is inconsistent with the depth-first iterators that consume the successor iterators lazily.\n\nFor follow-up: It might be better to go complete lazy for breadth-first, even at the cost of 10% slowdown in the full-traversal benchmark. Plus we can reuse code and delete the two existing BreadthFirstIterator classes.\n\nI'm going to add the benchmark class in the the labs directory to compare between Iteration and Traverser.\n\nRELNOTES=Optimize Traverser\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=320688457\n""}"
127,"{'code': 'a47ab01edc470112a24d91f0026b4a369c609989', 'message': 'Declare static types as Queue instead of Deque.\n\nThis may slightly clarify how the object is used.\n\n(I was looking through com.google.common for Deque instances that were used as stacks, so I noticed this one that was used only as a queue.)\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=320498758\n'}"
128,"{'code': 'd7a26416109381a6770681bc6c299567615e8341', 'message': ""Update Public Suffix data.\n\nThe [] copy is typically updated whenever Chrome's copy is updated, which\nis roughly every 6 weeks. Subscribe to the Chrome Milestone Calendar to see the\ndates.\n\nFor this update, []\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=320112849\n""}"
129,"{'code': '90c9b9e0a54d952839412f89e0cdc5a96e7e2193', 'message': 'Fix annotation positions in Guava.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=319981882\n'}"
130,"{'code': 'a5ddc61fceb44eb48faecb93c33f4b447cfd0ced', 'message': ""Hint with the type that `oldFuture` / `newFuture` / `ref`'s `Future` never contains a value.\n\nBeing clear may become slightly more valuable when we put nullness type annotations on this code.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=319804826\n""}"
131,"{'code': '03f43227fea9c02bc7bc0fb374001f37c9d5cb43', 'message': 'Remove unnecessary comment.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=319265960\n'}"
132,"{'code': 'e352076da65aa3afb5dc59cfd3c1f41574b5ebeb', 'message': 'Fix Converter.java by moving @RetainedWith annotation to the correct side of the cycle.\n\nThe annotation should be placed inside the ""parent"" object, and not the ""child"" object.\n\nReference: https://developers.google.com/j2objc/javadoc/annotations/reference/com/google/j2objc/annotations/RetainedWith\n\nRELNOTES=N/A\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=319018701\n'}"
133,"{'code': 'bee4f3c7ed1c79938a03c6c798a0b5f77b37ace7', 'message': 'Implement BigDecimalMath.roundToDouble.\n\nRELNOTES=Add BigDecimalMath.roundToDouble.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=318342542\n'}"
134,"{'code': '689d2b3ba38cf49b56b091a2b1687aed58a46f91', 'message': 'In ImmutableDoubleArray and ImmutableLongArray, use Arrays.copyOf when expanding the internal array.\n\nIn ImmutableIntArray, where we already made this change, remove an inconsistent `this.`.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=318294443\n'}"
135,"{'code': '2814650b55eedd297b89bdd2a769df9fbb565461', 'message': 'Correct LongMath.roundToDouble for values at and near Long.MAX_VALUE\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=317890040\n'}"
136,"{'code': '0ad38b88bd92319508ebc0b28bab5be1fbf1891f', 'message': 'Fix memory leak in SingletonImmutableBiMap which would appear in transpiled J2ObjC code.\n\nThe @RetainedWith annotation can not be used on both sides of the retain-cycle. The RegularImmutableBiMap does not have this problem, because it uses Inverse inner class. This CL applies similar trick in SingletonImmutableBiMap, although without additional inner class.\n\nRELNOTES=Update SingletonImmutableBiMap to avoid retain-cycle in transpiled Obj-C code.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=317856944\n'}"
137,"{'code': '6cc0bb9e5b93839526f08e5fa4775fd445d8b771', 'message': 'Avoid reentrancy in ExecutionSequencer.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=317189958\n'}"
138,"{'code': 'ac0c3424411c0974010d754042d75e9d82665379', 'message': 'Add a test for the bug introduced by CL 316779471.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=316982088\n'}"
139,"{'code': '633abf2c62823421ced4440f0dfe10295d5671e2', 'message': 'Add LongMath.roundToDouble.\n\nRELNOTES=Add LongMath.roundToDouble (#3895)\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=316951853\n'}"
140,"{'code': 'bbf3e1b440f03ec0e810d22b1f1872e199e32c7c', 'message': 'Revert db53357fea477695deeaa32746660bf86d6d51c1\n\nBroke a test\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=316808913\n'}"
141,"{'code': '31ca01fd3d1b2f874f975f4f8415bdb9cb7a4386', 'message': 'Avoid reentrancy in ExecutionSequencer.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=316779471\n'}"
142,"{'code': 'e51aba174d2bb04030ff352dd92e23a30f018acc', 'message': 'Add a Guava wiki entry about finding the min/max for various circumstances.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=316745738\n'}"
143,"{'code': 'e839f94fb4eb1240f10763586aa92a7f701caa89', 'message': 'Revert a1e9a0bd1260a657f7502e5b81d38dfb818cd1d4\n\nCausing some internal failures\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=316509747\n'}"
144,"{'code': 'a1e9a0bd1260a657f7502e5b81d38dfb818cd1d4', 'message': 'Upgraded ByteStreams#copy(InputStream, OutputStream) to use the faster FileChannel if possible.\nSee also https://medium.com/@xunnan.xu/its-all-about-buffers-zero-copy-mmap-and-java-nio-50f2a1bfc05c for some background.\n\nRELNOTES=`io`: Upgraded `ByteStreams#copy(InputStream, OutputStream)` to use the faster `FileChannel` if possible.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=316177487\n'}"
145,"{'code': '14dd8fe040f5c1d1326bbc2ef7ed22e786444261', 'message': 'Inline `ByteStreamsTest#assertEquals(byte[], byte[])`\n\n#codehealth\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=315898541\n'}"
146,"{'code': '89e677367ebf9557c7f018144c49b1b29aa09783', 'message': 'Cleanup ByteStreamsTest.java to fix a couple of IntelliJ warnings/suggestions.\n\n#codehealh\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=315895616\n'}"
147,"{'code': 'a602bbebb3c666683cdc3089cf9edd31a64a7d8d', 'message': 'Break retain-cycle in Converter.java, when used in J2ObjC target.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=315679614\n'}"
148,"{'code': '9ff8d4a40354ee7eb8d3c154f42601cf2b39920c', 'message': 'Suppress IdentityHashMapBoxing check\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=315558134\n'}"
149,"{'code': '04997b1cf7b34ed2d93a6070a91d5c393ae7f1a7', 'message': 'Discourage Ordering.min(E, E) and max(E, E) in favor of Comparators.min(E, E, Comparator) and max(E, E, Comparator).\n\nRELNOTES=Discourage the use of Ordering.min(E, E) and max(E, E).\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=315373918\n'}"
150,"{'code': '958186c07127f1cd9bb9ba82da99da75745766df', 'message': 'Add Comparators.min/max\n\nRELNOTES=`collect`: Added two-element min and max methods to Comparators.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=315365436\n'}"
151,"{'code': '2d346856c76dc80aac3be2fbe3fe58b99c64f210', 'message': 'Efficient UnmodifiableMultimap forEach\n\nforEach can pass calls directly to the delegate protected\ncollection because it is a read-only operation.\n\nFixes #3911\nFixes #3912\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=314952594\n'}"
152,"{'code': '2b5c096ddf412241c320edccd207d089d5b79b21', 'message': 'Implement BigIntegerMath.roundToDouble, which rounds to the nearest representable double value.\n\nPartially implements https://github.com/google/guava/issues/3895\n\nRELNOTES=`math`: Added `BigIntegerMath.roundToDouble`.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=314837286\n'}"
153,"{'code': 'f87596bbba76821bf89205eb751b5455c6000ccb', 'message': ""Update Public Suffix data.\n\nThis copy is typically updated whenever Chrome's copy is updated, which\nis roughly every 6 weeks. Subscribe to the Chrome Milestone Calendar to see the\ndates.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=314699619\n""}"
154,"{'code': 'eee079f2a1074b1295dab075456b49acb86a9818', 'message': 'Remove @DoNotCall from FluentIterable.from(FluentIterable).\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=314570253\n'}"
155,"{'code': '592202a6223b3c7834e495489e49a8628c50421f', 'message': 'guava: disavow VisibleForTesting\n\nJohannes and I invented this class in the early days of Blaze,\nand in hindsight it was clearly a mistake; it encourages self-deception.\nThis change adds a comment discouraging its further use.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=314347092\n'}"
156,"{'code': '571cf66bac6840bee7ab9878bb643eb8d758fc90', 'message': 'Added support for the ""font"" Top-Level Media Type (https://tools.ietf.org/html/rfc8081)\n\nRELNOTES=`net`: Added support for ""font"" Top-Level Media Type\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=314193029\n'}"
157,"{'code': 'abea45853ffda02029e37b6d5236bc849a9942bd', 'message': 'Document that Ranges are immutable.\n\nFixes https://github.com/google/guava/issues/1813\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=313873952\n'}"
158,"{'code': '45958948bea8f7aaf38c1a3dd200ce0263c0bcfa', 'message': ""Adding the rest of the client-hints headers (besides Arch which I don't think we need).\n\nHeader Spec Here: https://wicg.github.io/ua-client-hints/#http-ua-hints\n\nRELNOTES=N/A\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=311801249\n""}"
159,"{'code': '1926d72dc0b7f97f6a506eacee45a685f72e2323', 'message': 'Adding the Sec-CH-UA header. Ignore ClangTidy. It has to do with the constant naming scheme for httputils.h.\n\nSpec for header: https://wicg.github.io/ua-client-hints/\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=311420502\n'}"
160,"{'code': '6484ca86c8f4156d48f4b6b8e9ea80243ac54913', 'message': 'Suppress IdentityHashMapBoxing check\n\nThis would soon become an ERROR in blaze.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=311352634\n'}"
161,"{'code': '48c7cfd5e38c8492e4356aab5c633254d1ce43be', 'message': 'Implemented lastIndexOf in CartesianList\n\nFixes #3878\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=311190643\n'}"
162,"{'code': 'd39d2196daab31c9196fb2fe502b5952925a7178', 'message': 'In ImmutableIntArray, use Arrays.copyOf when expanding the internal array.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=311154274\n'}"
163,"{'code': 'cbe09804a5174f0fda6db8c351678b79764ca547', 'message': 'Ensure QueueWorker does not outlive SequentialExecutor on iOS.\n\nWhen `SequentialExecutor` is used on iOS as J2ObjC-transpiled code, we need to\nmake sure that `SequentialExecutor.QueueWorker` does not outlive its outer\nclass. Previously, because the inner class was annotated with `@WeakOuter`, it\ncould happen, and, when this happened, the inner class would then invoke\nmethods on a dangling pointer and crash the process in turn. The issue is now\nfixed by annotating the worker field in the outer class with `@RetainedWith`.\n\nAlthough `@RetainedWith` was initially designed for bimaps, the annotation\naddresses exactly the lifecycle problem here.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=311046012\n'}"
164,"{'code': '181807f3951db714f0fb77f24c031460612ce916', 'message': 'Implement tryLockUninterruptibly\n\nFixes #3880\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=310009910\n'}"
165,"{'code': 'c3bf73187a0863c35101069d3cf10963840bda3d', 'message': 'Adds constants for `Cross-Origin-Embedder-Policy(-Report-Only)?` headers ([W3](https://wicg.github.io/cross-origin-embedder-policy/#COEP)).\n\nRELNOTES=Adds constants for `Cross-Origin-Embedder-Policy(-Report-Only)?` headers.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=309944590\n'}"
166,"{'code': '215b1f0dd715d58d61aa31e3a7a8ca4ac48e218a', 'message': ""Fix PowerSet.equals() when comparing to another PowerSet whose items are the same, but in a different iteration order.\n\nRELNOTES:\n  Fix issue where PowerSet.equals(PowerSet) would erroneously return\n  false if the PowerSet's underlying Sets were equal, but in a different\n  iteration order.\n\nFixes #3891, #3890\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=309745434\n""}"
167,"{'code': '24fe5d982f0c06b7e2b24d0439c392d7ed62896c', 'message': 'Fixed TreeRangeMap.SubRangeMap.putCoalescing\n\nThe short circuiting on an attempt to put an empty range caused the contract of putCoalescing to be violated.\n\nFixes #3886\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=308881996\n'}"
168,"{'code': '1f55c42201a61814303c50d001261d938b5f8b10', 'message': 'Move comment to a more appropriate location\n\nThe comment was added along with putCoalescing in CL 143507326.\n\nFixes #3883\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=308826616\n'}"
169,"{'code': 'bc7248bcb0a987e18cf7a4e7ef92ed458086f4b0', 'message': 'Fix GitHub #3873 by reimplementing Cartesian{Set,List}.contains.\n\nRELNOTES=Fixed #3873.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=308079008\n'}"
170,"{'code': '13d288a4195e9df4bfe151637174413b757becff', 'message': ""Update Public Suffix data.\n\nThe Guava copy is typically updated whenever Chrome's copy is updated, which\nis roughly every 6 weeks. Subscribe to the Chrome Milestone Calendar to see the\ndates.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=308028590\n""}"
171,"{'code': '42013c5effdd392e07e57f267aba448f79df2599', 'message': 'Hide InternetDomainName.region() from GWT/j2cl.\n\nThe method is not used from GWT/j2cl.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=307886252\n'}"
172,"{'code': '7afcafb1b705878d41bc1402c5cadc843c4c6b7f', 'message': 'Update readme with some grammar corrections.\n\nCloses #3857\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=307658343\n'}"
173,"{'code': '7fcdfa5710d5f3c2f11c8061d4984f862c9c8f5d', 'message': 'This change suppresses DefaultPackage check for any java class which uses the default java package, in preparation for enabling a compiler error that will prevent new instances of the bug.\n\nThe Google Java Style Guide §8.2.1 requires Java files to have a (non-default) package declaration.  Missing package declarations can cause odd problems that are difficult to debug, such as a class not being included in a test suite or confusion around package-private visibility.\n\nRELNOTES=suppresses warning for using default package\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=307410557\n'}"
174,"{'code': 'caa3ce8daea5c30f3d02a30425a27e6600c0b879', 'message': 'Exclude Vim swap files from the jar we build.\n\nFixes https://github.com/google/guava/issues/3861\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=306441053\n'}"
175,"{'code': '1f6bbc13b9644d03b61668e0a88d600013bc68fe', 'message': 'Remove duplicate assumption.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=306428327\n'}"
176,"{'code': '5cee4f7300da4d7ff87c92663ab105f5e433f0cc', 'message': 'Fix typo.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=306383354\n'}"
177,"{'code': '510021e1ab0fc10d7f31428a022a27fa75ce3fe4', 'message': 'Prepare for release 29.0.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=306300771\n'}"
178,"{'code': 'ae63c19b38ca815272fb3352dd69f51998c04d72', 'message': 'Add `@since NEXT` for recently added `graph` APIs.\n\nhttps://guava.dev/releases/snapshot-jre/api/diffs/changes/alldiffs_index_additions.html\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=306291939\n'}"
179,"{'code': 'dc46627fea51a6c5fc7a0f1506c6e85f75a3a15e', 'message': ""Remove `@Beta` from `Service` and `ServiceManager`.\n\nThis leaves `AbstractListeningExecutorService` as `@Beta`.\n\nFixes #3806, #3418\nRelevant to #2966\n\n(I have tweaked Jesse's initial PR to leave `AbstractExecutionThreadService.triggerShutdown` and `AbstractService.doCancelStart` as `@Beta`, since we aren't sure we like the locking behavior of the former, and we've realized that `Listener.stopping` _might_ be a reasonable substitute for both.)\n\nRELNOTES=`util.concurrent`: Removed `@Beta` from `Service` and related classes.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=305878924\n""}"
180,"{'code': '9537f78cc652a4f5e77f4f418d5bbf4f49674515', 'message': ""Don't request openjdk-11-source.\n\nWe don't need it yet, since we build Javadoc snapshots with OpenJDK 8.\nMaybe we'll need it someday, but currently it doesn't exist :)\n\nhttps://travis-ci.org/github/google/guava/jobs/673105448\nE: Unable to locate package openjdk-11-source\n\nFollowup to CL 305716744.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=305735746\n""}"
181,"{'code': '053918ec2b444ce275c1bc380a9c735ddc2b80c4', 'message': 'Use @code instead of @link to allow imports to be stripped\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=305727790\n'}"
182,"{'code': '067129401668d9be2d5fe4c3e40b8afef663b52c', 'message': 'Try yet again to inherit docs from the JDK when building Javadoc for snapshots.\n\nI am optimistic: See https://github.com/google/guava/issues/3669#issuecomment-611658339\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=305716744\n'}"
183,"{'code': 'afe2d9100b7a3285c8a59c5245198e3fa3865644', 'message': 'Fix unnecessary method access level escalation.\n\nFixes https://github.com/google/guava/pull/3843\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=305559100\n'}"
184,"{'code': 'ff0271c0ea31db2d5ebce279c183d5dc0ab28c3b', 'message': 'Add StandardImmutableDirectedNetworkTest.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=305438093\n'}"
185,"{'code': '7015107b778be608a16193946e2371a604c36f9a', 'message': 'Merge StandardUndirectedMultiNetworkTest into StandardMutableUndirectedNetworkTest\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=305437272\n'}"
186,"{'code': 'cccae92edf4eff0e58c287254ded09e27ec60e48', 'message': 'Merge StandardDirectedMultiNetworkTest into StandardMutableDirectedNetworkTest.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=305436422\n'}"
187,"{'code': '170d4e05375d53d3786d0ada8ff5f0d68419ad01', 'message': 'Move tests from Multinetwork-test classes to base classes in preparation for merging the Multinetwork-classes with the mutable classes.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=305434560\n'}"
188,"{'code': '32d099ab7c38d1c4beb8db6cdf380153b2898616', 'message': 'Merge StandardSimpleDirectedSortedNetworkTest into StandardMutableDirectedNetworkTest.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=305433344\n'}"
189,"{'code': '31999ae6f56e71c341333afde90fcf66c13ce657', 'message': 'Change return type of ServiceManager.servicesByState() to ImmutableSetMultimap.\n\nBut also generate a bridge method with the old signature for binary compatibility.\n\nhttps://github.com/google/guava/issues/3418 (which I keep forgetting to mention from commits...)\n\n[]\n\nRELNOTES=`util.concurrent`: Changed the return type of `ServiceManager.servicesByState()` to `ImmutableSetMultimap` (but also retained a method with the old signature for binary compatibility).\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=304613375\n'}"
190,"{'code': 'c34f5842044d1564dda8460e7fedaa0e134d881f', 'message': 'Add j2cl specializers for Doubles.min/max, Floats.min/max, Ints.min/max, and Shorts.min/max.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=304448129\n'}"
191,"{'code': 'd86c8508eb5160fae28cee82963b5313c23780b1', 'message': ""Extend deadline to fix flakiness.\n\nIt's possible that we don't really need to assert that the pool finishes shutting down at all. Maybe the other existing assertions are enough? But I haven't bothered to look into it.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=304194678\n""}"
192,"{'code': '89450c275c7020414ad88180fc35b1867994299f', 'message': ""Make `Duration` overloads of `awaitRunning` and `awaitTerminated` `final` in all `Abstract*Service` classes.\n\nThe other overloads already are already `final`. These ones aren't only because we didn't think to do this when adding the new `default` methods.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=304180695\n""}"
193,"{'code': '5f2fbf27b2f8f7c72adfe6b366c7aaec2e36b81b', 'message': 'Making headSet(E, boolean), tailSet(E, boolean) public in GWT emulated ImmutableSortedSet.\n\nRELNOTES=`com.google.common.collect.ImmutableSortedSet`: Making `headSet(E, boolean)` and `tailSet(E, boolean)` methods public for GWT emulated ImmutableSortedSet.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=303959507\n'}"
194,"{'code': '7e0fe90ca8d55a55dc035e4103a9e36f301f8f28', 'message': 'Introducing floor(E) and ceiling(E) method in GWT emulated ImmutableSortedSet package.\n\nRELNOTES=`com.google.common.collect.ImmutableSortedSet`: Added `ceiling` and `floor` methods for GWT emulated ImmutableSortedSet\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=303898439\n'}"
195,"{'code': '9f3bae585349808c5a6fe6c88db0f573036d553f', 'message': 'Add immediateVoidFuture() to Futures.java to create an immediately succeeding ListenableFuture<Void>.\n\nRELNOTES=`util.concurrent`: Added `immediateVoidFuture`.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=303756624\n'}"
196,"{'code': '86e36201255c2c123076e2163bdcd654f848989f', 'message': 'Deprecate 1-arg overload of ServiceManager.addListener.\n\nIt default to directExecutor(). directExecutor() is often useful, but it should be an explicit choice, as some usages are dangerous:\nhttps://guava.dev/releases/snapshot-jre/api/docs/com/google/common/util/concurrent/ListenableFuture.html#addListener-java.lang.Runnable-java.util.concurrent.Executor-\n\nhttps://github.com/google/guava/issues/3418\n\nRELNOTES=`util.concurrent`: Deprecated the 1-arg overload of `ServiceManager.addListener`.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=303500936\n'}"
197,"{'code': 'ce37aee980860798636f80ff67e0c00999a47696', 'message': 'Add missing `@since` for 1-arg `ServiceManager.addListener`.\n\nhttps://guava.dev/releases/15.0/api/diffs/changes/com.google.common.util.concurrent.ServiceManager.html#com.google.common.util.concurrent.ServiceManager.addListener_added%28com.google.common.util.concurrent.ServiceManager.Listener%29\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=302741311\n'}"
198,"{'code': '6880b6804dc897dd5e7419ab24116b44b6bbee0c', 'message': 'Make sure native.js files are included in the Guava GWT release.\n\nThis is needed for J2CL compatibility.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=302737505\n'}"
199,"{'code': '0deafc440a6aa3cec7bef35b61d0055b4ddf6e00', 'message': 'Add some unit tests for base64Url() in BaseEncoding\n\nFixes #3816\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=302064745\n'}"
200,"{'code': '82b3e9806dc3422e51ecb9400d8f50404b083dde', 'message': 'Fixed double slicing ByteSource (#3501).\n\nFixes #3829\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=301827957\n'}"
201,"{'code': '931e83f969de433f6f0cad9f09eafe0c1d44325e', 'message': 'Add `Duration`-based default methods to `ListeningScheduledExecutorService`\n\nThey just delegate to the existing methods from the interface, using the existing saturated conversion to nanoseconds. This matches existing `Duration`-based overloads of `(long, TimeUnit)` methods in the same package.\n\nRELNOTES=Added `Duration`-based `default` methods to `ListeningScheduledExecutorService`.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=301435427\n'}"
202,"{'code': '9ee69976b640eb146be2b7910ffaaf7dc201e677', 'message': 'Store `values` in a local first instead of repeatedly reading it from a field.\n\nAt worst, this is a no-op. At best, it may perform better.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=301180270\n'}"
203,"{'code': 'bfacdb00ce93fc2f442298dfbbdedbb483011703', 'message': 'Implement some more toString() methods for debugging.\n\nI added these locally while debugging, but they seem potentially generally useful.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=301170647\n'}"
204,"{'code': 'a749ce9257ddab4a11fe49ef38eb4e15d33738a4', 'message': 'Replace Thread.currentThread().interrupted() with Thread.interrupted() or Thread.currentThread().interrupt(), whichever seems appropriate.\n\nThread.interrupted: static method on Thread which returns whether the thread has been interrupted (and resets the interrupt bit)\n\nThread.currentThread().interrupt(): interrupts the current thread\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=301162686\n'}"
205,"{'code': 'd261ceea3997f4711d7a1c212b88ccbbff0374ca', 'message': 'Make StandardMutableDirectedNetworkTest parameterized so that it tests both with and without self loops.\n\nThis is similar to an earlier refector of the AbstractGraphTest tree.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=300064412\n'}"
206,"{'code': 'f0575b14482e43f91e4c55c5da424e74914173ca', 'message': 'Move all tests from StandardMutableDirectedNetworkTest to AbstractStandardDirectedNetworkTest\n\nThis is similar to an earlier refector of the AbstractGraphTest tree.\n\nNote: This is a pure refactor: No tests were added or removed.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=300063227\n'}"
207,"{'code': '53b15338d1cb1dcaae413bdd804b43ea6f1745b2', 'message': 'Simplify the AbstractNetworkTest tree (directed branch): Delete StandardSimpleDirectedNetworkTest\n\nThis is similar to an earlier refector of the AbstractGraphTest tree.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=300062171\n'}"
208,"{'code': '21e95ba07d438cabe32d11fc391a4539d0c9328e', 'message': 'Make StandardMutableUndirectedNetworkTest parameterized so that it tests both with and without self loops.\n\nThis is similar to an earlier refector of the AbstractGraphTest tree.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=300060641\n'}"
209,"{'code': '12dff868341369bcd19b2fb985569b5862adbe56', 'message': 'Move all tests from StandardMutableUndirectedNetworkTest to AbstractStandardUndirectedNetworkTest\n\nThis is similar to an earlier refector of the AbstractGraphTest tree.\n\nNote: This is a pure refactor: No tests were added or removed.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=300057069\n'}"
210,"{'code': '8565a9522f004aafe84826a8769a8b87519c58e7', 'message': 'Simplify the AbstractNetworkTest tree (undirected branch): Delete StandardSimpleUndirectedNetworkTest\n\nThis is similar to an earlier refector of the AbstractGraphTest tree.\n\nNote: This is a pure refactor: No tests were added or removed.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=300055427\n'}"
211,"{'code': '824322afb283e0e2a42ea37acb5e493393684da3', 'message': 'Simplify AbstractGraphTest by replacing allowsSelfLoops() and incidentEdgeOrder() by graph accessors.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=300054861\n'}"
212,"{'code': '4aaa57479a9bad7ba12e2d60e031f09f5d7646f2', 'message': 'Document that our racy access is safe.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=299431193\n'}"
213,"{'code': '064fac35d71231aba35062d1965983ecd36b6873', 'message': 'Roll-forward of a8107fae90ddec3a1c6d4dbba80ccf9c8a90c54d\n\nMake nullWriter().append(...) (both overloads) accept a null CharSequence.\n\nThe docs of Writer are misleading:\n\n""""""\nAn invocation of this method of the form out.append(csq) behaves in exactly the same way as the invocation\n     out.write(csq.toString())\n""""""\nhttps://docs.oracle.com/javase/7/docs/api/java/io/Writer.html#app...\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=298459337\n'}"
214,"{'code': 'f6c3cd268a1d6815abef9a5f829510ae950423e0', 'message': 'Rollback a8107fae90ddec3a1c6d4dbba80ccf9c8a90c54d pending internal break\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=298450900\n'}"
215,"{'code': '559e1ac1359e8d5dc0941aa72691698185d65407', 'message': ""Migrate from @MonotonicNonNull to @Nullable.\n\nThe features of @MonotonicNonNull don't buy us anything in our use case, since we check the fields for null on every access, anyway.\n\nAnd @MonotonicNonNull is likely not to be available in the set of nullness annotations we adopt.\n\nhttps://checkerframework.org/api/org/checkerframework/checker/nullness/qual/MonotonicNonNull.html\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=298398523\n""}"
216,"{'code': '766943b4b267717b896f86a1e39d7e18c2289c94', 'message': 'Store each result in a ""Present<V>"" instance instead of an Optional<V>.\n\nWe can\'t store a plain V because we need to distinguish between Optional.absent() and null (at least in the Google-internal successfulAsMap -- and eventually in whenAllComplete(...).collectToList() (#1519), which is likely to omit failures instead of mapping them to null as successfulAsList does).\n\nWe may have problems using Optional when we adopt new nullability annotations, since Optional<V> might not be a valid instantiation when V is instantiated with a nullable type.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=298398456\n'}"
217,"{'code': 'a8107fae90ddec3a1c6d4dbba80ccf9c8a90c54d', 'message': 'Make nullWriter().append(...) (both overloads) accept a null CharSequence.\n\nThe docs of Writer are misleading:\n\n""""""\nAn invocation of this method of the form out.append(csq) behaves in exactly the same way as the invocation\n     out.write(csq.toString())\n""""""\nhttps://docs.oracle.com/javase/7/docs/api/java/io/Writer.html#append%28java.lang.CharSequence%29\n\nBut that\'s not true, as the docs go on to say:\n\n""""""\ncsq - The character sequence to append. If csq is null, then the four characters ""null"" are appended to this writer.\n""""""\n\nAccepting null in the 2-arg method is arguably even weirder, but at least the docs call it out more prominently:\nhttps://docs.oracle.com/javase/7/docs/api/java/io/Writer.html#append%28java.lang.CharSequence,%20int,%20int%29\n\nCredit to the Checker Framework for identifying this bug.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=298388993\n'}"
218,"{'code': 'a94114b13fc73e1756f310a7f964574834cd4e34', 'message': 'Delete unused method\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=297620200\n'}"
219,"{'code': '1e870add58b2132c1f4e86e26a7bcc46210fc57f', 'message': 'Remove remaining documentation references to configurable implementations\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=297612048\n'}"
220,"{'code': 'b21d5719e6a0ce6f4e2f71eec09bf55908ede062', 'message': ""Rename 'ConfigurableX' to 'StandardX' for Network, which better captures what these implementations represent.\n\nNote that this work was already done for [Value]Graph.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=297602755\n""}"
221,"{'code': '245358b839c4a4e5ac31a4a07799855d56649ded', 'message': 'Update Public Suffix data.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=297380985\n'}"
222,"{'code': 'a204557d8015c6b6caa7afd4f62cedb3b50b39da', 'message': 'Make GWT compilation of tests no longer flaky.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=297372033\n'}"
223,"{'code': '5345f11f280c6ce8ff37065a71acd8cb0a54d660', 'message': ""Make lenientToString easier for nullness-analysis tools to understand.\n\nAnd I think prevent it from turning a StackOverflowError into a NullPointerException in unlikely cases?\n\nAs far as tools know, String.valueOf is capable of throwing an Error or RuntimeException, even when it's called with a parameter whose values is null. Thus, tools conclude that the flow of the program might reach `o.getClass().getName()` when `o` is null. That would in turn produce NullPointerException.\n\nTools might not even be wrong, since String.valueOf could produce a StackOverflowError if we were *just* about to run out of space. Of course, in that case we're going to have problems in the catch() block no matter what... :)\n\nTo avoid this, we check for null in lenientToString itself.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=297360806\n""}"
224,"{'code': '7f6c9654209df8dfa6377422738dc0ab11394509', 'message': 'Make Compact(Linked)HashSet fall back to a java.util.LinkedHashSet if hash flooding is detected, just as the immutable collections do.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=297204164\n'}"
225,"{'code': '9d60a8f5941265876f21a0ed7b37b8b224461a82', 'message': 'Refactor AbstractNetworkTest in the same way as AbstractGraphTest was refactored earlier: Allow the graph under test to be immutable.\n\nNote: This is a pure refactor, no coverage is changing.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=297126494\n'}"
226,"{'code': '0479dcdc4a7a904016727caae0439c240835451e', 'message': 'Simplify redundant `Collection.addAll()` calls.\n\nFixes #3800\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=296511169\n'}"
227,"{'code': '6cfc96410918beb06443e9b1b28e702627e1e2c6', 'message': 'Invalidate delegate iterators during clear() and make FPP tests more strict\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=296256794\n'}"
228,"{'code': 'd40b923176315e4ee449169cb9b7a4a7b989f961', 'message': 'Fixing a typo in some Guava javadocs.\n\nRELNOTES=Fixing a typo in javadoc.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=295958517\n'}"
229,"{'code': 'b1c77b7df3b8abfeffbfdedcdd7bf0fe95bbcbd5', 'message': 'Annotate FluentIterable.from(FluentIterable) with @DoNotCall\n\nRELNOTES=Annotate FluentIterable.from(FluentIterable) with @DoNotCall\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=295783622\n'}"
230,"{'code': '4941afc8a87518f500e2e28220cda0dc5a065f24', 'message': 'Make TopKSelector ctor throw IllegalArgumentException when buffer size is too big to be held in memory.\n\nPreviously this would lead to java.lang.NegativeArraySizeException.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=295752662\n'}"
231,"{'code': '18cdc775081924cfeec87bfe5ff3547ed81784f6', 'message': ""Rename 'ConfigurableX' to 'StandardX' for [Value]Graph, which better captures what these implementations represent.\n\nNote that this work was already started in the past with the abstract StandardGraph tests.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=294879089\n""}"
232,"{'code': '9be29901b40f34ec72cadb0232b9546bd5618043', 'message': 'Apply changes from https://github.com/google/guava/pull/3778 (which edited guava.dev) to README.md.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=294671757\n'}"
233,"{'code': 'c892d5699bc640c78e6b35413c68932dbbcfe327', 'message': 'Add missing @Nullable.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=294351502\n'}"
234,"{'code': '6e0c5b5d50a3e457ae0d787f7c9be7b48c10120b', 'message': 'Make AbstractFuture compatible with ForkJoinPool by catching exceptions from property retrieval.\n\nFixes #3788, #3784\n\nRELNOTES=Made it safe to load the `AbstractFuture` class from a `ForkJoinPool` thread under a security manager.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=293696683\n'}"
235,"{'code': 'c6f48dced81bc0dbfb8df3cfcc9475d6b9e0f460', 'message': 'Annotate upperCase and lowerCase with @LazyInit.\n\nThis eliminates a TSAN warning.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=292973956\n'}"
236,"{'code': 'd9348500d6e61692dc1ac60e2ea2575c12ec2091', 'message': 'Link directly to guava.dev for Javadoc.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=291383669\n'}"
237,"{'code': '66c2f795f2cbc90e104dde9d73ceb484b184b34b', 'message': 'Write type annotations on types, not on declarations\n\nFixes #3774\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=290747030\n'}"
238,"{'code': 'd44669df2f1540ae52c278181377f0adea88f8fb', 'message': 'Update Resource.getResource to allow ignoring return value for existence checks.\n\nSpecifically this impacts getResource(contextClass, resourceName) as this is already present on getResource(resourceName)\n\nRELNOTES=Update Resource.getResource(*) to allow ignoring return value for existence checks.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=290278034\n'}"
239,"{'code': '7a545da7b0c00a7404a1bfb6e9c3219d74acd3bd', 'message': 'Rewrite the Stopwatch docs to explain elapsed vs wall time\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=289974621\n'}"
240,"{'code': '6d764a41431fac6adb4894dfc78180e6f8065014', 'message': 'Update Public Suffix data.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=289672158\n'}"
241,"{'code': '13eaba58986988c11631b3cd7a6d02320425848d', 'message': 'Upgrade checker-qual to v2.11.1.\n\nFixes https://github.com/google/guava/pull/3671\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=289450047\n'}"
242,"{'code': '70164025a8cac6ddec8c25c721e2ad427d7d75b7', 'message': 'Make incidentEdgeOrder() public for [Value]Graph\n\nRELNOTES=`graph`: Allow setting a stable incident edge order by calling the newly added method `[Value]Graph.Builder.incidentEdgeOrder(ElementOrder.stable())`.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=288715042\n'}"
243,"{'code': 'cde576ec0005403d0664e25d1df55e3fc0a498b9', 'message': 'Add incidentEdgeOrder() to the [Value]Graph interface\n\nRELNOTES=`graph`: Add `incidentEdgeOrder()` to the `[Value]Graph` interfaces\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=288714914\n'}"
244,"{'code': '5214a10b1eac7a1f7267ee6ed5cf82c9cd76ad0b', 'message': 'Disable GWT-RPC by default in the open-source release.\n\nRELNOTES=[Guava types can no longer be sent over GWT-RPC.](https://groups.google.com/d/msg/guava-announce/zHZTFg7YF3o/rQNnwdHeEwAJ) To _temporarily_ reenable support, set the `guava.gwt.emergency_reenable_rpc` system property to `true`.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=288676838\n'}"
245,"{'code': '682a25ff8761619736b7ef594de596fc6328b226', 'message': 'Fix off-by-one error in AsciiDigits.asciiDigits initialization.\n\nFixes #3761.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=288531873\n'}"
246,"{'code': 'e8e8ba8ec171067456bea40692033e278409b652', 'message': 'Add test for stable incidentEdgeOrder support for mutable undirected valuegraphs in ValueGraphTest\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=288506124\n'}"
247,"{'code': '9d669517970a872b56a9311b4ea3d706cd67fa98', 'message': 'Add test case stable incidentEdgeOrder with a self loop to AbstractStandard[Un]directedGraphTest.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=288506050\n'}"
248,"{'code': '34c4578eff6a346e1546ea691b88699e39f4f24d', 'message': ""Suppress GuardedBy violation in LocalCache.\n\nThis looks like it's just for testing, which I think makes it /probably OK/, but feel free to suggest otherwise.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=288479243\n""}"
249,"{'code': 'c06cffc3f5a5a9b7cfae13c2704ab46466c37e7c', 'message': 'Add StandardImmutableUndirectedGraphTest\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=288467384\n'}"
250,"{'code': 'a080a6d0821c2604aed6b8f1617483df599c436b', 'message': 'Graph: Support stable incidentEdgeOrder for undirected graphs\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=288467327\n'}"
251,"{'code': '6c3fe557cc2064a0dacc9915c146fd0cf2344a86', 'message': 'ImmutableValueGraph: Support incidentEdgeOrder=stable\n\nRELNOTES=N/A\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=288467276\n'}"
252,"{'code': '845c97429eb25924c2d7f6749b533fa6297aaee1', 'message': 'ValueGraph: Support incidentEdgeOrder=stable\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=288467225\n'}"
253,"{'code': '1f5dff3b97101d6ef4f6e03f47e2283eba6325f1', 'message': ""Ensure that we generate a non-empty Javadoc jar for guava-gwt.\n\nWithout it, we get an error during Sonatype deployment:\n  Missing: no javadoc jar found in folder '/com/google/guava/guava-gwt/28.2-jre'\n\nI hacked around this on the GitHub release branch for 28.2 by reenabling Javadoc:\nhttps://github.com/google/guava/commit/a1b3c06876803a0b0e5d2f16708e1328da1bac09\n\nBut as you may recall from CL 276327335, we're soon going to have no classes to generate Javadoc for (after we remove GWT-RPC support). So even with Javadoc generation enabled, we'd end up with no jar.\n\nTo ensure that we get a jar, I've introduced a package-private dummy class (and then excluded it from the other steps in which source files are used).\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=288314285\n""}"
254,"{'code': '8f0c0a205b185f6a8429d7679f61cdfeae9f3d09', 'message': 'Suppress ignored return values from Collection#contains*.\n\nI think this is all of them!\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=288028198\n'}"
255,"{'code': '859df70a783f9e554c1f8446d27bc88e038c7860', 'message': 'Note another case in which our implementation of TypeVariable throws UnsupportedOperationException.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=288025987\n'}"
256,"{'code': '7ce4007f6ad555a92bc7813f4f64af720cc53a90', 'message': 'Update to JUnit 4.13\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=287995705\n'}"
257,"{'code': 'c08594fe71101397918901e6587ff54c6e15185a', 'message': 'Fix instances of {#foo} in Javadoc.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=287583870\n'}"
258,"{'code': '28b36c80447729d1edeffedd70dc4a7ac91e76ce', 'message': 'Assign the result of contains() and containsAll() to a variable.\n\nThis satisfies the CheckReturnValue checker.\n[]\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=287279350\n'}"
259,"{'code': 'fb6ef19602c060f46b7554d538f9f848c827eadd', 'message': 'Prepare for release 28.2.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=287221546\n'}"
260,"{'code': '87a383e06a30c89e1e07689c2ea7a005a1379743', 'message': 'documenting IllegalArgumentException for too-large Cartesian\nProduct in Sets.cartesianProduct\n\nFixes #3756\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=287214700\n'}"
261,"{'code': 'd9b73b20964b9d87457c56d1e422a67f45c2c257', 'message': ""Stop classifying AbstractHashFloodingTest as a test to be run directly.\n\nWhen it's classified as a test to be run directly, our custom infrastructure generates AbstractHashFloodingTest_gwt, and Maven tries to run it, failing with:\n  No tests found in com.google.common.collect.AbstractHashFloodingTest_gwt\n\nIdeally, our infrastructure would recognize that an abstract class could never be run directly, at which point we wouldn't need to manually classify tests like this. But I don't remember seeing this problem in a long time, so we probably won't bother.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=287204169\n""}"
262,"{'code': '7adf07df455556d26c75d5b539e4d704535cc794', 'message': 'Fix external GWT breakage from CL 272446666.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=287032121\n'}"
263,"{'code': '32003c2deafd98c272413c0de17c60d01a6672a8', 'message': 'Correct @Nullable and use Ints.constrainToRange()\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=286925184\n'}"
264,"{'code': 'afde11dbcad73c695f237e1f009cb8b9d3298d49', 'message': 'refactor: Lambda can be replaced method reference\n\nFixes #3745\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=286897808\n'}"
265,"{'code': '8fa9a12cf5c84e338c4019ffd8f44d476f9e90b2', 'message': 'Add @SuppressWarnings for new violations of the GuardedBy checker.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=286896398\n'}"
266,"{'code': 'ad3551a8f499f43e3b249274347614addbda183b', 'message': 'Fix Maven test failures from CL 286604248:\n- Make ""abstract"" class abstract. (And make its constructor package-private while we\'re at it.)\n- Add a dummy test method (similar to what FilteredCollectionsTest already has).\n\nThese should fix:\n- warning(junit.framework.TestSuite$1): Class com.google.common.collect.AbstractHashFloodingTest has no public constructor TestCase(String name) or TestCase()\n- warning(junit.framework.TestSuite$1): No tests found in com.google.common.collect.ImmutableBiMapTest\n\nhttps://travis-ci.org/google/guava/jobs/628734577\n\n(Also, address a review comment: https://github.com/google/guava/pull/3746/files/40d75c94d568935159ce838c61940430fce54249#r360917786)\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=286896172\n'}"
267,"{'code': '78b54f8250067837828e9b7235d7db6f8d728a24', 'message': 'Make Compact(Linked)HashMap fall back to a java.util.LinkedHashMap if hash flooding is detected, just as the immutable collections do.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=286604248\n'}"
268,"{'code': 'c6d0c3782937ad89f68a85e4b9c0142212c77cbe', 'message': 'Expand Android access to Compact*Hash*\n\nAlso rename newCompactHashMapWithExpectedSize(int) to newCompactHashMap(int) to\nmatch newCompactHashSet(int).\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=286449854\n'}"
269,"{'code': 'c15cd8040f5d802b396c39911a11eb2a12c4b3a4', 'message': ""Use Error Prone's @GuardedBy enforcement to make sure that mutable state is appropriately synchronized.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=286044036\n""}"
270,"{'code': 'b224ce81f7c5d4efcf6b1f74ca6cc56cac9aae63', 'message': 'Actually map Thenable helper interface to JS IThenable. The name is different to avoid a clash with elemental2 IThenable.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=285989786\n'}"
271,"{'code': '44823f8787dc3b14b0b3ef1690a03ae1a00d07c5', 'message': 'Format the Javadoc of ByteStreams.read() with @throw tags.\n\nFixes https://github.com/google/guava/pull/3735\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=285774424\n'}"
272,"{'code': '5e8b3cd5d5da6a4779d02ef43af43d37dd4ec07f', 'message': ""Remove @DoNotMock from HashFunction.\n\nUsers need some kind of way to, e.g., easily produce collisions in cases in which collisions should be rare.\nMaybe we can provide a better way to do this, but for now, let's at least not forbid using mocking frameworks.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=284620519\n""}"
273,"{'code': 'b4a573fae2a1b4c78652dba3a59da72ff6b80a13', 'message': 'Fix small error with how CaseFormat calculates the StringBuilder size when converting one format to another.\n\nFixes https://github.com/google/guava/pull/3730\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=284567420\n'}"
274,"{'code': 'add430908ec77c1859f84bd753b84a5eca57b327', 'message': 'Add @DoNotMock to ListenableFuture\n\nRemove @DoNotMock from AbstractFuture, as it is now covered by @DoNotMock on ListenableFuture\n\nRELNOTES=N/A\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=284433016\n'}"
275,"{'code': '4eea0f79c27864039a653ec4ca09ef7585e439fc', 'message': 'Add @DoNotMock to several com.google.common types\n\nRelnotes:\n  - Add @DoNotMock to several com.google.common types.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=284229762\n'}"
276,"{'code': 'ac122499bd07ed588e1e37b1040f05bfa8a9c862', 'message': 'Support stable incident edge order for directed Immutable[Value]Graphs.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=284109953\n'}"
277,"{'code': 'b54558e0aa90584582ac8862ef24833f39b1ed05', 'message': 'Make equally named putEdge() method adjacent\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=283987870\n'}"
278,"{'code': '6a6e5421760e8ef2461d6d35061c27fa7863100e', 'message': 'The Graph tests now consistently call graphAsMutableGraph.foo() when testing foo(), rather than proxy methods\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=283984080\n'}"
279,"{'code': 'cfcc49e7280fa0c26286fe04aebecf0441875a24', 'message': 'Add @SuppressWarnings(""GoodTime"") to GWT supersource for LocalCache operating in primitive millis.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=283636634\n'}"
280,"{'code': '3cfa33d462f2b90f764966a9bc2e39cf8de16260', 'message': 'Use ""IPv4"" instead of ""Ipv4"" for consistency.\n\nThis CL goes against the style guide, but we should be consistent within the file. We could instead rename the existing, lightly used methods to match the style guide, but I don\'t think this will be the best use of someone\'s time.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=283378996\n'}"
281,"{'code': 'f4b3f611c4e49ecaded58dcb49262f55e56a3322', 'message': 'Annotate benign race in AbstractTable so as to avoid TSAN issues.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=283176468\n'}"
282,"{'code': '530dd557b569c4fcc31f41b329e07971be647f3a', 'message': 'Add StandardImmutableDirectedGraphTest\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=283039950\n'}"
283,"{'code': 'ecf0f7cd5eaea9d078bc77d95513e1d88a50172a', 'message': 'Merge StandardMutableDirectedGraphTest and its variant with stable order.\n\nThis is in preparation for adding an Immutable version that also needs tests for the stable order.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=283039017\n'}"
284,"{'code': 'b50d343580e0139429adc61e1af4a92c50ba3927', 'message': 'Make the AbstractGraphTest tree more sane with only leaf nodes non-abstract and merge the tests for with and without self-loops.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=283037760\n'}"
285,"{'code': 'b03067f2c78b2352cba8f5136c9aa0be667068a5', 'message': ""Merge AbstractXGraphTest and ConfigurableSimpleXGraphTest, thus removing one layer from the AbstractGraphTest tree.\n\nReason: Nobody in [] is using these abstract test classes (even though they are designed for general purpose graphs). However, even though they aren't used, these classes add a layer of complexity to an already complex class tree that is going to become more complex with the addition of ImmutableGraph tests and stable incident edge order tests.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=283036660\n""}"
286,"{'code': '1c757483665f0ba8fed31a2af7e31643a4590256', 'message': ""Refactor AbstractGraphTest to allow for tests with ImmutableGraph.\n\nReason: ImmutableGraph implementations are undertested compared to MutableGraph implementations. The current tests didn't catch a bug I deliberately introduced in [] Also, it would be nice to be able to share the incident edge order tests.\n\nNote about design: I started out by making an AbstractGraphTest subclass for mutable graphs. However, that would lead to a duplication of all 7 subclasses and most of their tests. The issue is that directed/undirected and mutable/immutable are orthogonal and we also want to test allowSelfLoops=true/false and incidentEdgeOrder=unordered/stable. The proposed solution is somewhat unconventional, but at least allows us to share much more code between the tests.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=283035873\n""}"
287,"{'code': '2ee7f9da69308c56d5af71267e8b797cedaf31ba', 'message': 'AbstractNetwork: fix bug in AbstractNetwork.hasEdgeConnecting() causing it to throw if either endpoint was not in the graph.\n\nRELNOTES=Fix bug in AbstractNetwork.hasEdgeConnecting() causing it to throw if either endpoint was not in the graph.  Originally reported as GitHub issue #3721.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=282846559\n'}"
288,"{'code': '0b2aacf4fd74b67e919463936209a119b654e3af', 'message': 'Make incidentEdges() return edges in insertion order\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=282777947\n'}"
289,"{'code': '032201fe0c7d974b1c92a3bfa8164fbc70012f2b', 'message': ""Add @JsOptional annotations to the 2nd parameter of the 'then' method, since the second parameter is actually optional. This satisfies JsCompiler type checking.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=282755478\n""}"
290,"{'code': 'c22d8dd6432cde97a2b2c671cf1585443b20c0cd', 'message': 'Support incidentEdgeOrder for directed Graphs\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=282737558\n'}"
291,"{'code': '2cc483055a488f25de7caeadd8152f7ffd04ca8d', 'message': 'Use internal fast path for getting failure without allocating a wrapper ExecutionException\n\nAlso fix GWT AbstractFuture so that it respects the trusted interface. (More motivation for https://github.com/google/guava/issues/2934)\n\nRELNOTES=N/A\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=282674203\n'}"
292,"{'code': '543af39035841f68e004842e4fe34b303b8f6fb5', 'message': 'subject verb agreement\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=281322594\n'}"
293,"{'code': '71de4064ac005e1d283b8a6d4153aab834903720', 'message': 'Update to Truth 1.0\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=281279350\n'}"
294,"{'code': '5be5fb6b422ea438081901b4990b1bf1a4d7fd5a', 'message': ""Update Public Suffix data.\n\nThe [] copy is updated whenever Chrome's copy is updated, which is\ntypically every 6 weeks. Star the following to watch Chrome's updates:\n\nhttps://bugs.chromium.org/p/chromium/issues/detail?id=610495\n\nWhen that bug is not updated, the [] copy is updated 3 weeks before the\nEstimated Week of Stable:\n\nhttps://www.chromium.org/developers/calendar#TOC-Estimated-Stable-Dates\n\nFor this update, []\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=281088952\n""}"
295,"{'code': '134ffd3798ebbd6c89e910f698f912c637db0269', 'message': 'checker-qual 2.10.0\n\nFixes #3706\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=281041572\n'}"
296,"{'code': '129e3149275613c67a31f4beeb428b316aea802f', 'message': 'Correct documentation of getCoercedIPv4Address.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=280454590\n'}"
297,"{'code': 'a0d798a54f99f85819dd75e92a16d74b8f4f1ffe', 'message': 'Use Truth assertions instead of JUnit assertions in InetAddressesTest.\n\nMake assertions stronger if possible (check object equality instead of reference equality).\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=280450120\n'}"
298,"{'code': '473706097f35ec1eab6a2bf652716dc7272eee9c', 'message': 'Format with Locale.ROOT.\n\nThis guarantees that the message matches across locales, including hi-IN, which we test with under Maven:\nhttps://travis-ci.org/google/guava/jobs/611945191\nhttps://github.com/google/guava/blob/cc6cff2df9d66d4d9cd18f378cb75d03f7002852/pom.xml#L212\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=280441968\n'}"
299,"{'code': '8a7d36a8e5044096919a3512aa6734c95032f38c', 'message': 'Add support for scope IDs to InetAddresses.isInetAddress().\n\nFixes https://github.com/google/guava/issues/2587\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=280418121\n'}"
300,"{'code': 'd7a0b3d367734c07f75bfdfd1f4bb5636d59a088', 'message': 'Move the big integer conversion code into InetAddresses\n\nRELNOTES=Add toBigInteger and fromIpv4BigInteger/fromIpv6BigInteger to InetAddresses for manipulating InetAddresses as BigIntegers\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=280282088\n'}"
301,"{'code': 'cc6cff2df9d66d4d9cd18f378cb75d03f7002852', 'message': 'Clean up some unnecessary initializations.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=280196393\n'}"
302,"{'code': '12f5d49ab20764d52b0a3f8912896a70b7d1f9ca', 'message': 'Migrate from arrays to ImmutableSets in InetAddressesTest.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=280186277\n'}"
303,"{'code': 'ad529ca5425cb17bd9e26a7f7fc06e80bef0d692', 'message': 'Roll forward CL 269313299.\n\n*** Original change description ***\n\nLet ListenableFuture implement thenable via a default interface method in J2CL\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=279693687\n'}"
304,"{'code': 'ca6d0e72e5cabb493a083321876f0eefc8bee59d', 'message': 'Fix broken links in AtomicDouble.\n\nSee https://github.com/google/guava/pull/3689\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=279162422\n'}"
305,"{'code': '0fb8666e1a1671ca74c4c033763eda6c7df39b3a', 'message': 'Add javadoc in attempt to help readers differentiate Futures.allAsList() vs Futures.successfulAsList().\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=279105047\n'}"
306,"{'code': '85f355e9a93c277a008c87cfe07bab4f363b56cb', 'message': 'Simplify some range constraints.\n\nFixes https://github.com/google/guava/pull/3607.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=279094799\n'}"
307,"{'code': 'f741a536e0eb6dc22d6d3de1f3b94aba40cc3d73', 'message': 'Upgrade maven source plugin from 3.1.0 to 3.2.0\nUpgrade maven jar plugin from 3.0.2 to the latest 3.2.0\nMaven source and jar plugins both introduced build reproducibility in 3.2.0\n\nSee https://github.com/google/guava/pull/3534\nSee https://github.com/google/guava/pull/3681\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=279077794\n'}"
308,"{'code': 'ff9fb8d30edbba5357615ecebf69120f1de556f7', 'message': 'Migrate org.mockito.Matchers#any* to org.mockito.ArgumentMatchers\n\nThe former is deprecated and replaced by the latter in Mockito 2. However, there is a\nfunctional difference: ArgumentMatchers will reject `null` and check the type\nif the matcher specified a type (e.g. `any(Class)` or `anyInt()`). `any()` will\nremain to accept anything.\n\nAll remaining `any(Class)` references are migrated to `nulllable(Class)` to maintain the functionality of Mockito 1.\nAll remaining `anyString()` references are migrated to `nullable(String.class)` to maintain the functionality of Mockito 1.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=278736072\n'}"
309,"{'code': '2fee65ef8b48a354b1cae71ec32d57c8c8b2d695', 'message': 'Have ImmutableGraph.Builder set incidentEdgeOrder to stable().\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=278640882\n'}"
310,"{'code': '706b6be0cfb069dbae17cd113d4d2fcf21327e10', 'message': 'Remove usages of deprecated CharMatcher functions\n\nFixes #3565\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=278637856\n'}"
311,"{'code': '6f32e84c698168f2351bd53bd046c1a6d01eb987', 'message': 'Add GraphBuilder.incidentEdgeOrder().\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=278614668\n'}"
312,"{'code': '775aec93a86a08898a6942387fe9474ab478a5f7', 'message': 'Add @SuppressWarnings(""DoNotMock"") to mocked com.google.common types\n\n@DoNotMock will be added to these types. This change suppresses warnings for current cases where these types are mocked.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=278536113\n'}"
313,"{'code': '49f5a6332a63737dff70cf77472f9867bc7ca6eb', 'message': 'Update Documentation\n\nFixes #3507\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=277725484\n'}"
314,"{'code': 'a2e6acc0098cd09e1f7578a01b25d16ce9413872', 'message': ""Handle StackOverflowError from both pendingToString and appendUserObject.\n\nAdds a bunch of tests to validate error handling in toString code\n- Verify that a future completing during the toString call results in a done formatted string\n- Verify that an exception thrown by pendingToString doesn't cause toString to fail\n- Verify that cycles don't cause toString to fail\n- Verify that deep chains of SetFuture don't cause toString to fail\n\nRELNOTES=Catch StackOverflowError in AbstractFuture.toString to prevent long chains of futures from failing toString calls.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=277570829\n""}"
315,"{'code': '90989fb8f9e850e812efa79378179849b5945d17', 'message': 'Fix toString exception handling change from 957c37116fb2cc52b2f8b405871b65a84917f2ca.\n\nThis is not an ideal code fix but it restores the previous functionality and adds a test that verifies the exception handling logic.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=277525740\n'}"
316,"{'code': '957c37116fb2cc52b2f8b405871b65a84917f2ca', 'message': 'Move the SetFuture check into AbstractFuture.toString() and out of pendingToString(), so that even if the latter is overriden we can include the SetFuture detail.\n\nThis is useful for futures that initially do some of their own work, but then delegate to setFuture(), as FutureCombiner.callAsync() does.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=277087923\n'}"
317,"{'code': 'ab5b0fad1e844963259a667b636eb2a832f7ccd1', 'message': 'Format README.md.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=276739948\n'}"
318,"{'code': '3d33cd45f5d15f58b9365b63478f4d1f936f4e85', 'message': 'Update \'adding Guava to your build using Gradle\' snippet\n\nThe notation with brackets - () - and double quotes - "" - is valid\nin both Gradle\'s Groovy and Kotlin DSL.\n\nThe ""compile"" configuration is already discouraged since some time and\nofficially deprecated with Gradle 6.\n\nFixes #3673\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=276737926\n'}"
319,"{'code': '048103edf106c49524eddaa12116f5a1f53ce39a', 'message': ""Rollback\n\n*** Reason for rollback ***\n\nDidn't work: https://guava.dev/releases/snapshot-jre/api/docs/com/google/common/primitives/UnsignedInteger.html#equals-java.lang.Object-\n\n*** Original change description ***\n\nAttempt to fix inheriting Javadoc from the JDK again.\n\nIt's currently missing:\nhttps://guava.dev/releases/snapshot-jre/api/docs/com/google/common/primitives/UnsignedInteger.html#equals-java.lang.Object-\n\nBut I haven't managed to reproduce the problem locally.\n\nI'm trying this on the theory that java.home might be pointing to the JDK (the top-level directory in which src.zip lives) rather than the JRE (a subdirectory).\n\nNote that JDK11 has src.zip in a lib/ subdirectory. I tried adding it to a Ja...\n\n***\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=276546857\n""}"
320,"{'code': '5ff90caf1562f89aaed56252f05b4a5bf8b57197', 'message': 'Prepare to move gwt-user to test scope after we remove GWT-RPC support.\n\nWhen we do that, we\'ll no longer be able to compile ForceGuavaCompilationEntryPoint as part of the normal javac compile or build its Javadoc (because of the ""missing"" dependency).\n(ForceGuavaCompilationEntryPoint lives under the main (i.e., non-test) sources because we want to ensure that our prod code compiles without any dependencies added by our tests.)\n\nSo exclude it from the javac compile, and turn off building Javadoc altogether. (Javadoc already isn\'t useful for guava-gwt, since it covers only ForceGuavaCompilationEntryPoint and the internal serialization classes. Once the serialization classes go away and ForceGuavaCompilationEntryPoint is hidden, we would get an error from Javadoc because it wouldn\'t find *any* sources.)\n\nRemoving ForceGuavaCompilationEntryPoint from the javac compile is fine: I\'ve verified that the GWT compiler still runs and identifies any GWT compilation errors. And I\'ve diffed the resulting GWT jars.\n\nWhile here, I moved some GWT-specific configuration into the guava-gwt pom.xml.\n\nRelevant to https://github.com/google/truth/issues/637\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=276327335\n'}"
321,"{'code': '79983a915f6c37bda832b37ab6f9e7ac09c57388', 'message': 'Make inheriting Javadoc from the JDK work under JDK11.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=276122493\n'}"
322,"{'code': 'dcd373bd033f64c2dbe2dc7253e54f10d8bf2e3e', 'message': ""Fix Javadoc errors (and sometimes warnings).\n\nThese are mostly (perhaps entirely) problems new with Java 11's javadoc (or at least with Java 9+).\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=276098398\n""}"
323,"{'code': 'c81c0368048d0d7ae0c34ab307a9fcf0c0e2be47', 'message': 'Use int[] for entries and byte[]/short[]/int[] for hashtable\n\nThe entries array containing the hash and next index was reduced from a long[]\nto int[]. This is achieved by storing only the bits of the hash not covered by\nthe hashtable mask; the bits covered by the hashtable mask are implied-by and\ncan be inferred-from the hashtable bucket index. By ensuring that next pointers\nare always less than or equal to the hashtable mask, everything needed can be\npacked into an int[]. Inferring the missing hash bits from the hashtable bucket\nindex is only required for rehashing (the hashtable bucket chains must be\nwalked) and is the source of the slowdown for unsized instances.\n\nThe hashtable is created as a byte[]/short[]/int[] based on size, stored as an\nObject, and cast to the correct type using instanceof checks.\n\nAndroid performance impact varies but stays within +/-15% (average: 3% better).\nJVM performance impact generally stays within +/-15% but unsized instances are\nup to 42% worse (average: 5% worse).\n\nCompactHashSet Android memory usage:\nbyte[] sizes (1-255): 14-48% better (average: 43% better)\nshort[] sizes (256-65535): 24-40% better (average: 38% better)\nint[] sizes (65536+): 0-25% better (average: 22% better)\n\nCompactHashMap Android memory usage:\nbyte[] sizes (1-255): 10-40% better (average: 34% better)\nshort[] sizes (255-65535): 19-33% better (average: 31% better)\nint[] sizes (65536+): 0-20% better (average: 18% better)\n\nEffects on CompactHashSetProGuard:\n12817 bytes => 14189 bytes (+11%)\n3 classes => 3 classes (0%)\n39 methods => 44 methods (+13%)\n\nEffects on CompactHashMapProGuard:\n19133 bytes => 21883 bytes (+14%)\n11 classes => 11 classes (0%)\n75 methods => 83 methods (+11%)\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=276093555\n'}"
324,"{'code': '453e808a97f9eac4b62fe5dd48283b4902f5d218', 'message': 'Add ElementOrder.stable().\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=276076649\n'}"
325,"{'code': '4497e2a620892a0540a7d739519cdf77612539fc', 'message': 'Attempt to fix inheriting Javadoc from the JDK again.\n\nIt\'s currently missing:\nhttps://guava.dev/releases/snapshot-jre/api/docs/com/google/common/primitives/UnsignedInteger.html#equals-java.lang.Object-\n\nBut I haven\'t managed to reproduce the problem locally.\n\nI\'m trying this on the theory that java.home might be pointing to the JDK (the top-level directory in which src.zip lives) rather than the JRE (a subdirectory).\n\nNote that JDK11 has src.zip in a lib/ subdirectory. I tried adding it to a Java 11 build of Guava, but things blew up because the JDK contains module declarations, which naturally are incompatible with our -source 8. Possibly the right fix there is to avoid -source 8 in favor of the approach I used for jimfs in CL 272937179 -- except that maybe I already tried that and it wasn\'t sufficient? I\'m happy to punt on that for now, especially since I just tried removing -source 8 and got a bunch of ""too many module declarations found"" errors :)\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=275925004\n'}"
326,"{'code': '7575f5c518478e69c5ff7d458f49fa522442e664', 'message': 'Fix ImmutableList#of Javadoc\n\nFixes #3561\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=275915127\n'}"
327,"{'code': 'cff0c80bde24971a3478257ab3e74e45554c8d7a', 'message': 'Fix ByteStreams.skipUpTo to avoid making unnecessary allocations.\n\n- Fixes https://github.com/google/guava/issues/3662\n- Closes https://github.com/google/guava/issues/3663\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=275531490\n'}"
328,"{'code': '2480f414ae5cf6436523188e51a4def373595a24', 'message': 'Resolve some rawtypes warnings in Converter\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=275108038\n'}"
329,"{'code': 'e2f4eba6369abc8f1e5790304d8374807ada8027', 'message': 'Add Stream support to Stats and StatsAccumulator.\n\nThis adds:\n - A static method Stats.toStats() that returns a Collector<Number, StatsAccumulator, Stats>.\n - Stats.of overloads and StatsAccumulator.addAll overloads that take DoubleStream, IntStream, and LongStream.\n - A StatsAccumulator.addAll overload that takes StatsAccumulator.\n\n(In passing, this also improves the tests in a couple of ways. It removes the use of static initializer blocks in StatsTesting, which is contrary to best practice. And it fixes some tolerances on the assertions: the min() and max() ones should use exact equality, and the ones with INTEGER_MANY_VALUES and LONG_MANY_VALUES should scale up the tolerance to match the order of magnitude of the values. This latter change fixes the ErrorProne warnings that, in some cases, the tolerance was actually less than the difference between the expected value and the next nearest double. It just happened that everything was close enough before.)\n\nRELNOTES=Add Stream support to Stats and StatsAccumulator.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=274998178\n'}"
330,"{'code': 'bf4627d8cd692f600fda6315813edd1318cc60dc', 'message': 'update failureaccess version to match docs with code\n\nFixes #3653\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=274569910\n'}"
331,"{'code': 'e1286450777b73bdd81952efcbb830d8851d214f', 'message': 'Log warnings for users who send Guava types over GWT-RPC.\n\n(Roll forward CL 273803350, which was rolled back in CL 273825377. This time with updates to one-definition whitelist.)\n\n[]\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=274191489\n'}"
332,"{'code': '543a7be6d9b25f128604f5d176414f180d5a7ce7', 'message': 'Suppress more GoodTime errors.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=274023658\n'}"
333,"{'code': '7752a0b1983a48ea40258e797815a907db2de782', 'message': 'Rename package-private Duration APIs:\n  saturatedToNanos() -> toNanosSaturated()\n  saturatedToMillis() -> toMillisSaturated()\n\n#goodtime\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=273995985\n'}"
334,"{'code': '5f37e53fd73540acdc1d69e33ecc8a91827890a7', 'message': 'switch to an internal annotation for ignoring JRE\nrequirements\n\nFixes #3652\n\nRELNOTES=Removed dependency on `animal-sniffer-annotations`.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=273964192\n'}"
335,"{'code': '368c33722aa18c0c1f49816ce396bc72c9904c2a', 'message': ""Revert previous CL:\n\n============\nLog warnings for users who send Guava types over GWT-RPC.\n\nI've left this change out of the Android branch. For starters, it's not necessary there, since we don't support GWT. But normally we'd include it anyway to minimize diffs. However, doing so increases the number of classes retained after running Proguard (thanks, I assume, to the Logger field). There are other ways of getting around this, but for a temporary feature, the diffs seem tolerable.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=273825377\n""}"
336,"{'code': 'f79c4fe0a732e86745ad56b4f2435ede2b43b6dd', 'message': '[OpenSearch] Add MediaType for ""application/opensearchdescription+xml""\n\nRELNOTES=Add MediaType for ""application/opensearchdescription+xml""\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=273816540\n'}"
337,"{'code': '742846b94354c5e85558af7eec9a18a69151a2d0', 'message': 'Steam -> Stream in the names of certain locals in ByteStream.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=273806477\n'}"
338,"{'code': '08bbf53ab0a16a18a80c269227c2621d46790020', 'message': ""Log warnings for users who send Guava types over GWT-RPC.\n\nI've left this change out of the Android branch. For starters, it's not necessary there, since we don't support GWT. But normally we'd include it anyway to minimize diffs. However, doing so increases the number of classes retained after running Proguard (thanks, I assume, to the Logger field). There are other ways of getting around this, but for a temporary feature, the diffs seem tolerable.\n\nRELNOTES=***Warning to users of GWT-RPC:*** The first Guava release of 2020 will [remove support for GWT-serializing Guava types](https://groups.google.com/d/msg/guava-announce/zHZTFg7YF3o/rQNnwdHeEwAJ). To test ahead of time with GWT-RPC support for Guava types disabled, set the `guava.gwt.emergency_reenable_rpc` system property to `false`.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=273803350\n""}"
339,"{'code': '5f2c9fde7ae7d392ae9ef416b91ec79cd94bd431', 'message': 'Require tokens to be non-empty.\n\nFollowup to CL 272190935.\n\nFixes https://github.com/google/guava/issues/3626 (again :))\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=273763774\n'}"
340,"{'code': '0e94fb5bb8a6c3a4084854c87335d2e6fa20a97e', 'message': 'Address TSAN errors:\n\n1. Suppress safe racy init in AbstractMultiset and HashBiMap. All the classes that are stored in the newly annotated fields have only final fields (except HashBiMap.Inverse, which inherits AbstractBiMap\'s keySet and values fields, which are themselves @LazyInit), so they are safe to read racily.\n\n2. Mark some graph ""cache"" fields as volatile. These fields are an optimization: When the user accesses an entry through iteration (and sometimes through get(...)), the graph stores the entry in a field. That way, if the user then queries it again (such as to look up the value associated with a key during iteration), the graph doesn\'t have to perform a potentially mildly expensive lookup. But this caching isn\'t implemented in a thread-safe way. It *ought* to be safe to initialize a graph in one thread, safely publish it, and then read it concurrently from other threads. But because of the racy reads of the cached entry fields, I don\'t think this is guaranteed to be safe.\n\nRELNOTES=`graph`: Fixed data race.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=273585560\n'}"
341,"{'code': '491fe70163262b0da469da4fa7856a0aa5b9ce09', 'message': 'Remove duplicate null check from EnumMultiset.\n\nFixes https://github.com/google/guava/pull/3559\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=272892514\n'}"
342,"{'code': '5496c37d4d904869297c2ced1f0d20e6f1507eaa', 'message': 'Change tryParse methods to explicitly document that they throw NPE if the input is null.\n\nThis is to hopefully reduce the chance of confusion based on the fact that the methods say that they do not throw an exception ""if parsing fails"".\n\nFixes https://github.com/google/guava/issues/1259\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=272520863\n'}"
343,"{'code': '7fdf1a64313fd6335f4ae4160ddad70971124ccd', 'message': 'Document the JDK 9+ alternative to `MoreObjects#firstNonNull`\n\nFixes https://github.com/google/guava/pull/3383\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=272511395\n'}"
344,"{'code': 'b5a3f4b9652763e3f264fae34ba6439051164f3b', 'message': 'Upgrade maven source plugin from 2.1.2 to 3.1.0\n\nFixes https://github.com/google/guava/pull/3466\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=272506067\n'}"
345,"{'code': '433d8dfc824d91e438483ba1191068867ff1d603', 'message': 'Use if statement instead of for statement for a single item.\n\nFixes #3633\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=272503429\n'}"
346,"{'code': 'e33f7ee731d92a7a0db627cfe49c4d8851fe5d41', 'message': 'Bump version, which went out of date since the previous CL was created.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=272478122\n'}"
347,"{'code': '786c3d84f11482451217a9fd76b886a0d2a8afe3', 'message': ""Change Quantiles' compute() methods for multiple indexes to return a map with entries in the order in which the indexes were provided in the call to indexes().\n\nFixes https://github.com/google/guava/pull/2989\n\nRELNOTES=`math`: `Quantiles` `compute()` methods which return a `Map` now return a map with entries in the same order in which the indexes were provided.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=272459623\n""}"
348,"{'code': '188a218963327052c9004a67f483c6e7f7e3aa15', 'message': 'Add testlib readme.\n\nFixes #3453\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=272455172\n'}"
349,"{'code': 'e3ee00d6769d219c9646a17114fa00e2955b54aa', 'message': 'Fix the logic that decides whether to use currentRequestThreadFactory() under App Engine.\n\nWhile there, also support thread renaming under App Engine.\n\nFixes https://github.com/google/guava/issues/3598\nRelevant to https://github.com/google/guava/issues/3606\n(also, the CL in which I experimented with https://github.com/google/guava/issues/3569 before backing it out)\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=272446666\n'}"
350,"{'code': '67dd062cb9cf27c366eaf51260c1585aff9027fe', 'message': 'Add a MIME type MPEG-DASH (mpd files)\n\nFixes #2677\n\nRELNOTES=`net`: Added the `MediaType` constant for MPEG-DASH.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=272444649\n'}"
351,"{'code': 'ba7f51ff91b16a3ec42825be83641c47440eb2bc', 'message': 'Document the JDK 9+ alternative to `Iterators#forEnumeration`\n\nFixes #3382\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=272441426\n'}"
352,"{'code': '81b1094ca14fc12afd891fc1203081192e539529', 'message': 'Simplify some code.\n\nFixes #3580\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=272440567\n'}"
353,"{'code': '9bd98d1d19e5a5e659d01f9e4aaf7c0b803e79ce', 'message': 'Check the array indexes in Quantiles.ScaleAndIndexes is non empty.\n\nFixes #3210\nFixes #3211\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=272435318\n'}"
354,"{'code': '4ef2111641f149876dbf45bf9c3c221f30639670', 'message': 'Add constant for the Cross-Origin-Opener-Policy header.\n\n[]\n\nRELNOTES=Adds constant for the Cross-Origin-Opener-Policy header.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=272415924\n'}"
355,"{'code': '2220eb21ff7e63c7e6c658bc5b49d953d1860c64', 'message': 'Add missing @since 20.0.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=272289939\n'}"
356,"{'code': '2278123479357836b9090b0e14bca8222c5b0459', 'message': 'Fix 2 bugs in MediaType parameter handling:\n\n1. Make empty parameter values serialize to a quoted string.\n2. Require parameter values to be ASCII.\n\nFixes https://github.com/google/guava/issues/3626\n\nRelnotes:\n  Made `MediaType` serialize empty parameter values to quoted strings.\n  Made `MediaType` reject non-ASCII parameter values.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=272190935\n'}"
357,"{'code': 'afd127cbc84a70c360c388d192915b8b919e2e42', 'message': 'Update errorprone to 2.3.3\n\nFixes #3628\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=272051186\n'}"
358,"{'code': 'c7ef0cc93be9b76a708287345cfdb3963bcf4cca', 'message': 'Add Futures.submit().\n\nRELNOTES=`util.concurrent`: Added `Futures.submit()`\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=271840585\n'}"
359,"{'code': '5a8f19bd3556012ed9e65cd4268a85ddde95733f', 'message': 'Add Splitter.splitToStream().\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=271168270\n'}"
360,"{'code': '473b5b7339473fea887281989f20e6af22c9b07d', 'message': 's/a/an/\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=271167617\n'}"
361,"{'code': '6e9069225a46bb152fb7b3fc20324c1600b397df', 'message': 'Test iteration over a collection containing null.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=270909197\n'}"
362,"{'code': '86b30cb5c6b060fb86d6e96e0ab8df8e6ebd0e6b', 'message': 'Clean up leftovers from MapMaker.makeComputingMap:\n\n- Remove makeComputingMap from the GWT emulation.\n- Deprecate ComputationException.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=270019222\n'}"
363,"{'code': '0faa8fd78f575dce2b88f79a71446e016cab6b05', 'message': 'Rollback of change to let ListenableFuture implement thenable via a default interface method in J2CL.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=270016981\n'}"
364,"{'code': '36d53edd09f561ec14464a897a03f2b4f26fc0b3', 'message': 'Rollback of adding Splitter.splitToStream().\n\n*** Reason for rollback ***\n\nMy guess is that this change somehow upsets an allowed list of\none-definition violations.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=269929261\n'}"
365,"{'code': '2fdb5194fbdf139c93d49c03d41d359cd1693b92', 'message': 'Add comment explaining TABLE and MULTIPLIER in CharMatcher.Whitespace\n\nFixes #1661\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=269915181\n'}"
366,"{'code': '4276ecb1e6f53b3c7460d2c599b4bcdab6f493af', 'message': 'Add Splitter.splitToStream().\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=269903927\n'}"
367,"{'code': 'a8870a09f130d2807194e1325b12e393232d9996', 'message': 'Undo test CL 9a50815df26be7416be0fac489e29feee7a3c220.\n\nIt produces a tiny diff between the common.base and common.collect copies of AbstractIterator.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=269600788\n'}"
368,"{'code': 'b9aaec3f7531ac6e371355f54ae7ff11d35d5ec6', 'message': 'Add test for behavior described in #1900\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=269390831\n'}"
369,"{'code': '1ade5b2c0b43f70237c3bd5ab734b0cee8ebddb9', 'message': 'Let ListenableFuture implement thenable via a default interface method in J2CL.\n\nThis is a second attempt after problems in e0bac74571b81756c4acf767e3ad186b7473a4f8 were fixed.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=269313299\n'}"
370,"{'code': '6de11dffff34314624d53f646e62477611834aaf', 'message': 'Add @LazyInit and @RetainedWith annotations to the lazily calculated ""entries"" field of ImmutableSetMultimap.\n\nThis field is lazily evaluated by entries() without holding a lock, but multiple concurrent calls to entries() will produce idempotent results at the cost of some performance.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=268955922\n'}"
371,"{'code': '732365b9a00ff101db1f3b1e8089cb9796da51ce', 'message': 'Export new AtomicLongMapBasherTest to open-source repo.\n\nhttps://github.com/google/guava/pull/3605#discussion_r324303026\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=268953144\n'}"
372,"{'code': 'e3c1457ca7b6274bc525ff6a2160009796fcbe2b', 'message': ""Increase various tests' timeouts.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=268726044\n""}"
373,"{'code': 'aa73da81be1c3dfd41b10ea6318970d279559b1c', 'message': ""Fix (and in one case, suppress) low-hanging rawtypes warnings.\n\nIt looks like at least some of these may once have been necessary for the Eclipse compiler (used by GWT). In fact, I had to revert one similar change because it broke a GWT build. I'm hoping that that means that the others are safe.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=268660244\n""}"
374,"{'code': 'fd9a17fbdbe6d92d15a0bd449a5d0dbd95e2041b', 'message': 'Roll forward previous rollback, but without making the type final.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=268660218\n'}"
375,"{'code': '020f8673502ffbb31ab2f272e2b4ee26eae40093', 'message': 'Rollback previous commit.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=267685692\n'}"
376,"{'code': '950026cc80d35705dbc882b9ded7f5ad41f8b15b', 'message': 'Combine ImmediateSuccessfulFuture into ImmediateFuture.\n\nImmediateFuture used to have other implementations, but we switched those to extend TrustedFuture instead.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=267654247\n'}"
377,"{'code': 'bdaa4683401dbe9c05e16e6cd2b1ba3caba7c961', 'message': 'Explicitly document that whenAllComplete will swallow failures (in contrast to waiting for all futures to complete and then propagating the first failure).\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=267421508\n'}"
378,"{'code': '551207b426314b599927de21afc6ae51698cbf3b', 'message': 'Modify comment about safeOctets.length to be consistent with code.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=266379201\n'}"
379,"{'code': 'a7fe1333440cb39f91bce8ee6292528ea6af42b0', 'message': ""Update Public Suffix data.\n\nThe copy is updated whenever Chrome's copy is updated, which is\ntypically every 6 weeks. Star the following to watch Chrome's updates:\n\nhttps://bugs.chromium.org/p/chromium/issues/detail?id=610495\n\nWhen that bug is not updated, the copy is updated 3 weeks before the\nEstimated Week of Stable:\n\nhttps://www.chromium.org/developers/calendar#TOC-Estimated-Stable-Dates\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=266255422\n""}"
380,"{'code': '3eaea28caf415ac7b5adc68c029a14511fbd9c56', 'message': 'Let ListenableFuture implement thenable via a default interface method in J2CL\n\n***\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=266217624\n'}"
381,"{'code': 'e0bac74571b81756c4acf767e3ad186b7473a4f8', 'message': 'Let ListenableFuture implement thenable via a default interface method in J2CL\n\nRELNOTES=Let ListenableFuture implement thenable via a default interface method in J2CL\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=266186458\n'}"
382,"{'code': 'bbc26e180ba06dc45daa1aa6a3d56fd14594bb0e', 'message': 'Release the input futures as soon as we submit the combiner task. But really, redo how we release resources in general.\n\nThis is a followup to CL 265489523, which ""only"" released the input futures as soon as the combiner task finished running (which had often happened even before that CL but hadn\'t if the combiner returned a Future that was still pending). That CL was good enough for practical purposes, but I wanted to better understand how we release resources.\n\nThis CL standardizes on AggregateFuture.releaseResources() as the way to null out all fields[*], merging logic from releaseResources(), releaseResourcesAfterFailure(), and AsyncCallableInterruptibleTask.setValue(...). As part of that, it merges AggregateFuture and AggregateFutureState/RunningState into a single object.\n\n[*] OK, except seenExceptions, which gets its own handling. As a bonus, I believe that this CL clears seenExceptions earlier than it used to be cleared in the CombinedFuture case. Specifically, it clears it when all inputs are done, rather than when the combiner task has finished running.\n\nIt turns out that blindly nulling out fields is too aggressive, so we need to be careful in 2 cases:\n\n1. CombinedFuture.releaseResources() can\'t null out `task` until the future is done or the task is done running. That\'s because it may need to interrupt the task. To handle this, I don\'t null out `task` in releaseResources() unless isDone(). To ensure that `task` still gets nulled out as soon as it\'s done running, I null it out directly in afterRanInterruptibly(). (OK, this is another exception to my claim that releaseResources() handles nulling out ""all"" fields....)\n\n2. Even if the output future is done, processCompleted() sometimes needs access to the original futures in order to see whether any of them failed. To handle this, I store them in the listener and pass them through to processCompleted() (when necessary).\n\nThe changes to prod code are net negative in line count, at least ignoring the added comments. I\'ve also added a couple tests, only one of which passed before this CL. And I think the model for when fields are nulled out is overall clearer after this CL. So hopefully this CL is a step forward, despite the complexity of the changes and the remaining complexity in the code. (I also included a few unrelated simplifications, like not bothering to check collectsValues before calling collectOneValue(...).)\n\n(Aside: This CL\'s releaseResources() is like our proposed afterCommit() API but different. First, releaseResources() may be called even before set() or setAsync() in the CombinedFuture case. Second, CombinedFuture may rely on the fact that it\'s called twice in some cases: It\'s called once when all inputs complete, but it doesn\'t null out `task`, and then it can be called again if the output is cancelled, at which point it *does* null out `task`. But that probably doesn\'t matter too much because the task was probably handed to an executor in the meantime, so CombinedFuture is unlikely to hold the final reference to it. Anyway, for more discussion of afterCommit(), see https://github.com/google/guava/issues/2886)\n\n[]\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=266130757\n'}"
383,"{'code': 'b503ce6589fbb892d2affca6cc7ac07776e2fc15', 'message': 'Prepare for release 28.1.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=265978211\n'}"
384,"{'code': '52de2ac182c711213580da1a663d371a489dd540', 'message': 'Add missing @since, setting it straight to 28.1.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=265963602\n'}"
385,"{'code': 'f21f4f574a0a1eb42e0f86da933b7ec94e663392', 'message': 'Fix snapshots (and snapshot javadoc/jdiff) to be created again.\n\nThey stopped at some point when we switched from oraclejdk8 to openjdk8 on Travis.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=265917106\n'}"
386,"{'code': '109421efed0515d0921da5895cd67e8c102bed0e', 'message': ""Prepare for removing GWT-RPC support for Guava types by adding a system property that disables it.\n\nWhen the time comes, we'll flip the default value, and users who didn't see our earlier warnings can use a system property to restore support until they can stop serializing our types.\n\n[]\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=265490471\n""}"
387,"{'code': '494834bd4e245e5598a724bd462a06672f836627', 'message': 'Release resources of whenAllSucceed/whenAllComplete once input futures are complete.\n\nRELNOTES=Fixes potential memory leak in Futures.whenAllSucceed/whenAllComplete\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=265489523\n'}"
388,"{'code': '11a2cf129cdeccf376674b2ee9326cf79bcd8e23', 'message': 'Simplify while+break into do-while.\n\nFixes #3577\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=265464337\n'}"
389,"{'code': '93ce68b41636faafb78d391dcf720e06154862da', 'message': 'Fix ""bug"" link that was actually a CL.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=265457436\n'}"
390,"{'code': '89138e916d8c1445fafb40adb7c858a9a8e920ab', 'message': 'Restore Javadoc unintentionally lost in CL 264984423.\n\nhttps://github.com/google/guava/pull/3575#issuecomment-524440221\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=265346398\n'}"
391,"{'code': '6a8b716afa575ab97719b1da980f40e9b27ba024', 'message': 'Adds constant for the Upgrade-Insecure-Requests header.\n\nhttps://w3c.github.io/webappsec-upgrade-insecure-requests/#preference\n\nRELNOTES=Adds constant for the Upgrade-Insecure-Requests header.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=264984423\n'}"
392,"{'code': '794a10a4495fd7cd554eb0a9e480708d0277aced', 'message': 'Automated g4 rollback of changelist 263577879.\n\n*** Original change description ***\n\nTemporarily update public_suffix to include web.app\n\nWithout this, developers are not able to set up Google OAuth clients with URLs in Firebase Hosting web.app domain.\n\n***\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=264649425\n'}"
393,"{'code': '0007cb257b593400097f37cf5fa9c8d5fb598c62', 'message': 'Fix #3570 by resetting expandTableThreshold and\nmaxRunBeforeFallback after resizing the hashTable.\n\nFixes #3571\n\n[]\n\nRELNOTES=Fixed a bug in `ImmutableSet.Builder` that could lead to infinite loops when building multiple sets from the same builder.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=264648412\n'}"
394,"{'code': '7ab65d08c22fa95adb987d3b3849e5cab60a1c72', 'message': 'Add toString() to ForwardingFluentFuture, to match ForwardingFuture\n\nRELNOTES=N/A\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=264467645\n'}"
395,"{'code': 'eec9354dfb7a1eb543f162352dc38f3b2f6af53e', 'message': 'Temporarily update public_suffix to include web.app\n\nWithout this, developers are not able to set up Google OAuth clients with URLs in Firebase Hosting web.app domain.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=263577879\n'}"
396,"{'code': '5d20c304e39ca8a920bdfc207a29a75dd0eb8867', 'message': 'Fix https://github.com/google/guava/issues/3156 by implementing a proper `CollectSpliterators.flatMapTo{Int,Long,Double}`.\n\nAlso, modify the existing `CollectSpliterators.flatMap` to accept `null` from its `function` by treating it as an empty `Stream`, like `Stream.flatMap` does. Add tests for this behavior.\n\nTo test that the new methods also accept `null` through both their `{Int,Long,Double}Consumer` APIs and their `Consumer` APIs, add `of{Int,Long,Double}` methods to `SpliteratorTester`. They test the given `Spliterator.of{Int,Long,Double}` through both APIs.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=263208125\n'}"
397,"{'code': '588ce172f1270a1a5267933fab5486a048e60025', 'message': ""Add note about {@code ByteSource.wrap}'s use of the given byte array.\n\nFixes https://github.com/google/guava/issues/2603\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=262439830\n""}"
398,"{'code': 'e2ee9b73506eee7b15cdd9011b82ad88f432c615', 'message': 'Document that HashBiMap.containsValue() tends to run in faster-than-linear time (overriding the default documentation from AbstractMap.containsValue()).\n\nFixes #1973\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=262138857\n'}"
399,"{'code': 'ac43113d540647787155996a3e7ca4ebccb9be93', 'message': 'Add more clarification on what ""access"" means in expireAfterAccess().\nPrevious comment doesn\'t mention ""containsKey()""\n\nCopied from https://github.com/google/guava/wiki/CachesExplained#asmap\n\nRELNOTES=comment change\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=261755877\n'}"
400,"{'code': 'ddd4a49fb760ccccc7903305f68310f4f9a90587', 'message': 'Fix an issue where the InputStream returned by BaseEncoding.decodingStream(Reader) could fail to throw DecodingException while decoding an invalid string.\n\nThis was caused by the default behavior of InputStream.read(byte[], int, int), which swallows any IOException thrown by any call to the single-byte read() method other than the first. To fix it, just override that method with an implementation that does not swallow any exceptions.\n\nFixes https://github.com/google/guava/issues/3542\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=261712883\n'}"
401,"{'code': 'a3c9f2cbe27886ef052922dba1cceedbf39cec2d', 'message': ""Change a use of Iterable.forEach, which isn't available under Desugar.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=260986815\n""}"
402,"{'code': '508696a4c7dd63779bd2bcbabcd4f625eb217e16', 'message': 'Add MediaType for ""image/heif"" and ""image/jp2""\n\nRELNOTES=Add MediaType for ""image/heif"" and ""image/jp2""\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=260960132\n'}"
403,"{'code': 'ff9057f78e5ec3edbcbc21cd78940dd00e2c67a4', 'message': 'gwt.xml change from internal change.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=260785140\n'}"
404,"{'code': 'f1663d4b76f3750950999d066af0a6db2d1df2c3', 'message': 'Change the Splitter::limit arg to maxItems, for IDE usage.\n\nThe old name of `limit` was uninformative when presented in e.g. IDE autocompletions. `maxItems` will help distinguish it from the alternative meaning of max number of splits to make.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=260630553\n'}"
405,"{'code': '3e0d4639fc9f412c1c705f795a0d1886de73f35f', 'message': 'Remove inaccurate comment.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=260541273\n'}"
406,"{'code': '82988bb2cafb95fd5dde57720024112c20891ac3', 'message': 'Link to guava-announce.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=259743523\n'}"
407,"{'code': '687252d355dc804d07bd1f3cc6bd6bf6abe08634', 'message': 'Add RangeMap#merge, analogous to Map#merge.\n\nRollback of 8000dc992d0124372972729b20df40a42b27a849\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=258637808\n'}"
408,"{'code': '278fffdfc20385167acf0581abe942a5d6e00d69', 'message': 'Rename a method to avoid J2ObjC collisions\n\nPrevent J2ObjC from treating `getAddSuppressed` as a getter by renaming it `generateAddSuppressed`. This silences a -Wobjc-property-implementation warning; soon, such warnings will become errors. See the referenced bug for full context.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=257616241\n'}"
409,"{'code': '44e40a5b14386b1a5abcd5c128c7000c1a686b13', 'message': 'Remove unneeded @SuppressWarnings from @Benchmark methods.\n\nRELNOTES=none\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=257615215\n'}"
410,"{'code': '21cfbea052d2a6e32aa0768087b013c72358bfdb', 'message': 'Clarify that SortedSetMultimap exposes the values for a key in sorted order but does *not* necessarily expose the keys in sorted order.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=257601507\n'}"
411,"{'code': '8000dc992d0124372972729b20df40a42b27a849', 'message': 'Automated rollback of 8dc46a72fa5417d02063052f05fd0355703411fc\n\n*** Reason for rollback ***\n\nBreaking a number of projects\n\n*** Original change description ***\n\nAdd RangeMap#merge, analogous to Map#merge.\n\n***\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=256288437\n'}"
412,"{'code': '48c42b214820089390c03646f1581dbe56df88a9', 'message': 'Add RangeMap#merge, analogous to Map#merge.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=256273536\n'}"
413,"{'code': '54d89c54150f0f12e18d0e6a6246369b659709cb', 'message': 'Saturate LongAdder.sum() results to Long.MAX_VALUE during an overflow.\n\nFixes https://github.com/google/guava/issues/3503\n\nRELNOTES=Fix potential overflow/IAE during cache stats calculations.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=256243122\n'}"
414,"{'code': '689a32b6a3736eee85dffc1bf3bee59d7e5b2552', 'message': 'Fix some rawtypes in com.google.common.cache.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=256201831\n'}"
415,"{'code': 'ab7caa4bff18c31626067ee7437699cdababb6f3', 'message': 'Add a test for LongAdder overflow behavior.\n\nSee https://github.com/google/guava/issues/3503\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=256193549\n'}"
416,"{'code': '2fc0f78e78ca4918c377e6fefe1a4ab2e46aacc5', 'message': ""Update Fetch Metadata (formerly Sec-Metadata) headers to point to w3c documentation now it's been adopted by WebAppSec.\n\nRELNOTES=Update Fetch Metadata (formerly Sec-Metadata) headers to point to w3c documentation now it's been adopted by WebAppSec.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=256030288\n""}"
417,"{'code': '2d42b8f6708e8a4a33e133b19e97ae863d7a2b3b', 'message': 'Fix typo in ImmutableList.java.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=255985057\n'}"
418,"{'code': 'af57f19e99110695d2b1329ae313aa5158580417', 'message': 'Fix the travis build\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=255595656\n'}"
419,"{'code': '705101e7c738edaf8f781f43294830951513a3d7', 'message': 'Use LongMath.saturatedAdd/Subtract in CacheStats.\n\nFixes https://github.com/google/guava/issues/3503\n\nRELNOTES=avoid overflows/underflows in CacheStats\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=254899180\n'}"
420,"{'code': '9ef8b741ce47b1b5836e4c2d4b4004ee599f5cef', 'message': ""Halve memory consumption when creating a Bloom filter.\n\nAtomicLongArray(long[]) clones its input, which is a waste when we're passing\nin a new array.\n\nRELNOTES=Halve VmPeak when creating a Bloom filter.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=254770497\n""}"
421,"{'code': '41253a22cef1f3708665375eb3a1f09921a8354d', 'message': 'Add more @Nullables to variadic parameter lists.\n\nRELNOTES=Add more @Nullables to variadic parameter lists.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=254718073\n'}"
422,"{'code': '0a68dadd3dc76dd9f643c64ca6e0ccbd956d291f', 'message': 'Tweaks to the list of Guava features.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=253664020\n'}"
423,"{'code': 'dcf63a6c97dfde2946c201d1595f33469d25c1a4', 'message': 'Use saturatedToNanos() in CacheBuilder to avoid overflows.\n\nRELNOTES=Use saturatedToNanos() in CacheBuilder to avoid overflows.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=253341058\n'}"
424,"{'code': '542631d94c89f1c8193487cc173c1ee0565f52c7', 'message': 'Document default values of builder setters.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=252895367\n'}"
425,"{'code': '6d7f6acbbb511dce9f038aaca9ee9b14ab103628', 'message': 'Upgrade animal sniffer version to 1.18\n\nFixes #3497\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=252891687\n'}"
426,"{'code': '10abdc5092ab80f20d5060b19ed0e084dadbb2ad', 'message': ""Split catch() blocks so that javac doesn't generate a reference to their common supertype, ReflectiveOperationException.\n\nReflectiveOperationException isn't available on the old versions of Android that we support.\n\nAs far as we know, there is no actual problem with these references because no methods are called on them. However, the new version of Animal Sniffer we're updating to will flag them anyway, and I think that avoiding them is the safe thing to do.\n\nPrepares for #3497\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=252888170\n""}"
427,"{'code': '7e5aedef2916c57194181723154c01ede021f4d4', 'message': ""Fix typo in 'stoppingCount' variable name\n\nFixes #3500\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=252852929\n""}"
428,"{'code': '2321cde06d208b1523e54d7ed60718782e9236d2', 'message': 'Add missing description tags to guava-parent poms.\n\nWe were previously apparently inheriting them from sonatype-oss-parent, until we removed that. Releases don\'t work without a description. ""Invalid POM: /com/google/guava/guava-parent/28.0-android/guava-parent-28.0-android.pom: Project description missing""\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=252733039\n'}"
429,"{'code': 'bf9e8fa954bd76fd6642445fa644c729f91f30f2', 'message': 'Prepare for release 28.0.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=252665595\n'}"
430,"{'code': '554ca092bc57f44c5a69ce44078df5bb0793b232', 'message': 'Push back removal date for some deprecated APIs.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=252635817\n'}"
431,"{'code': '58d8f643807b05a68472a8fc030a209c5e386fd7', 'message': 'Fix typo in testFindClassesToTeset_ignoreUnderscores\n\nFixes #3499\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=252402185\n'}"
432,"{'code': '633e51a00a1d86250f27165473fe0be486e21745', 'message': 'Remove `inOrder` assertion for iterable with single element.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=252398740\n'}"
433,"{'code': '83a79f6f2b3e2a3f4c21f4784de25cc4862f44cd', 'message': 'Use `Stream.empty()` instead of `Stream.of()` to get empty stream.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=252398259\n'}"
434,"{'code': '6b0f7857a24014c6de0c52b8fa95d41fc17c13c5', 'message': 'Fix typo for accomodate -> accommodate in LocalCache.\n\nAs raised in #3492\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=251860172\n'}"
435,"{'code': 'c723d25fb84eabd971a7e546caa8f8b9dd703fa9', 'message': 'Delete deprecated callWithTimeout().\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=251819931\n'}"
436,"{'code': '8ee1c994a71a7ba04a6b6f489f8e8fd738222b70', 'message': 'Make the adjacentNodes() documentation a little bit more clear.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=251649057\n'}"
437,"{'code': '674148d9d7a99c450fec9751edb9f826bc3f5784', 'message': 'Simplify implementation of Graphs.reachableNodes()\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=251609087\n'}"
438,"{'code': '2d0020950331ddcab321c89bb98e3c1c4ee32820', 'message': 'Make the incidentEdges() documentation a little bit more clear.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=251608211\n'}"
439,"{'code': 'aaec967fe1aa4546e3340651da56fee73cf64ebc', 'message': 'Clarify behavior of `ImmutableList#copyOf` for null argument.\n\nFixes #3485\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=251291249\n'}"
440,"{'code': 'e3090f0dadbfde16fd0960a394f440edaeade4d9', 'message': 'Upgrade maven-gpg-plugin to 1.6\n\nFixes github.com/google/guava/pull/3490\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=251265047\n'}"
441,"{'code': '5ec1360912ce94dabe801b1cf5826bf94947aa4e', 'message': 'Remove `@Beta` from `setFuture`.\n\nRELNOTES=Removed `@Beta` from `setFuture`.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=251241741\n'}"
442,"{'code': 'b72102d427be43b5c092042c9a9e5d972d55510c', 'message': 'Document the Java 9 alternatives for Optional APIs.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=251234528\n'}"
443,"{'code': '7ce8f68757ec01a4add6a01bacf4aba0da3dd591', 'message': 'MapMakerInternalMap - Remove redundant if statement\n\nFixes #3489\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=251224058\n'}"
444,"{'code': 'a772418be2bc254b76c767eb43cb356b9a63d462', 'message': 'Add Duration-based overloads to MoreExecutors.\n\n#goodtime\n\nRELNOTES=Add Duration-based overloads to MoreExecutors.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=251044481\n'}"
445,"{'code': 'ec0c2a56c37db8d11feae26f2e04541805f3702a', 'message': 'Replace google.github.io/dagger with dagger.dev\n\n[]\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=250908858\n'}"
446,"{'code': '1ef1d52a53b5eabadc859bbd40b11d8c6fa424dd', 'message': 'Add Duration-based default methods to the TimeLimiter interface.\n\n#goodtime\n\nRELNOTES=Add Duration-based default methods to the TimeLimiter interface.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=250780768\n'}"
447,"{'code': '62527509110d379f3cb5182b10552bd9aa506f5c', 'message': ""Migrate Correspondence subclasses to instead call Correspondence.from.\n\nThis makes the code shorter, and the subclassing approach is deprecated.\n\nOpen-source note: Correspondence.from was added to Truth 0.43. (So was Correspondence.transforming, which I'm using occasionally instead.) Correspondence.formattingDiffsUsing was added in Truth 0.44.\n\nEND_PUBLIC\n\n[]\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=250766819\n""}"
448,"{'code': '5eef67d0711e7c164168756587f4cdba5406576d', 'message': 'Replace maven prerequisites with the enforcer plugin\n\nAdds minimum required maven and java version into the parent poms which gets inherited by all children.\n\nFixes #3483\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=250564119\n'}"
449,"{'code': '5d31f81898ffb6d80b8c013edc3e48503493578b', 'message': 'Fix Javadoc.\n\nFixes #3487\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=250530800\n'}"
450,"{'code': '0f08fad6b0c7f029bdb8b9a4382ed1c37b9095dd', 'message': ""Update Public Suffix data.\n\nThe [] copy is updated whenever Chrome's copy is updated, which is\ntypically every 6 weeks. Star the following to watch Chrome's updates:\n\nhttps://bugs.chromium.org/p/chromium/issues/detail?id=610495\n\nWhen that bug is not updated, the [] copy is updated 3 weeks before the\nEstimated Week of Stable:\n\nhttps://www.chromium.org/developers/calendar#TOC-Estimated-Stable-Dates\n\nFor this update, []\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=250513952\n""}"
451,"{'code': '0cb756acf8ee44c28bee8b9ea626e2a65cee5880', 'message': 'Fix littleEndian/bigEndian checks in HashTestUtils.\n\nThis surfaced as two errorprone warnings while creating a copy this code: \'bigEndian\' is currently unused. Let me know if I inferred the intented semantics of the test correctly?\n\nThe methods that calls this tests, assertHashByteBufferInvariants(..), seems currently unused in [] -- I assume that\'s why ""assertEquals(ByteOrder.BIG_ENDIAN, littleEndian.order());"" didn\'t trigger any errors. (Also, the fix shouldn\'t break anything then).\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=250455177\n'}"
452,"{'code': '60e108886fcb173ca21f3966965a0b57cf5b5797', 'message': 'RFC1123 InternetDomainName Test Cases\n\nFixes #3482\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=250345834\n'}"
453,"{'code': 'd6170e0c921ce17b14b322a9a1a0432b44bdcbc8', 'message': 'Fix Apache license name in guava pom\n\nCloses https://github.com/google/guava/pull/3471\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=250289501\n'}"
454,"{'code': '1b6e4067d58fae4a9966911a348177671cc99f7c', 'message': 'Update documentation to refer correct method name.\n\nhttps://docs.oracle.com/javase/8/docs/api/java/util/Map.html#getOrDefault-java.lang.Object-V-\n\nRELNOTES=N/A\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=250009325\n'}"
455,"{'code': '285fc3f47fc49723b3d34b1e610502820f373967', 'message': 'Fix Javadoc links.\n\nFixes https://github.com/google/guava/pull/3481\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=249894052\n'}"
456,"{'code': 'e17fd1449595d9040c9c49f9a7ae614abd43ac98', 'message': 'Add Cross-Origin-Resource-Policy header name constants.\n\nDetails https://fetch.spec.whatwg.org/#cross-origin-resource-policy-header\n\nRELNOTES=Add Cross-Origin-Resource-Policy header to library.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=249720339\n'}"
457,"{'code': '7fcd08a7d983c62bea8c08c1d492865dc9d26526', 'message': 'Upgrade maven-javadoc-plugin to 3.1.0.\n\nFixes https://github.com/google/guava/pull/3478.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=249642506\n'}"
458,"{'code': '36cd5cfc5c727e4408758ef78e5b05a15ca027c9', 'message': 'Add MediaType for ""application/geo+json"".\n\nvia https://github.com/google/guava/pull/3243\n\nRELNOTES=Add MediaType for ""application/geo+json"".\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=249531547\n'}"
459,"{'code': '1ddcd2738c29bf86e185281e57b4ff010234a45a', 'message': 'Fix Streams.zip documentation typo.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=249277218\n'}"
460,"{'code': 'a0ed6c57bf6f58f2e22229fb2b702b5279e167d1', 'message': 'Fix ""Apache License, Version 2.0"" spelling\n\nThere are many Java libraries licensed under ""Apache License, Version 2.0"" that do not use its official spelling.\nThis causes issues like https://issues.apache.org/jira/browse/MPIR-382: with every library defining its own spelling, it\'s difficult in large projects to have a clear view of all licenses in use.\nThis PR changes the license spelling to the official one, as advised by Maven developers.\n\nCloses https://github.com/google/guava/pull/3471\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=249139087\n'}"
461,"{'code': '6216ff20a4bfbd23427463ee3e53b8c2c6bda3e6', 'message': 'Define project build source encoding as UTF-8\n\nCloses https://github.com/google/guava/pull/3465\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=249112040\n'}"
462,"{'code': '62a888101db1cc34c4bd280abea18964ec0685b1', 'message': 'Add Duration-based overload to Monitor.\n\n#goodtime\n\nRELNOTES=Add Duration-based overload to Monitor.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=249042605\n'}"
463,"{'code': '044571dcee93828abe3017d9e377366cac36d46e', 'message': 'Add Duration-based overloads to RateLimiter.\n\n#goodtime\n\nRELNOTES=Add Duration-based overloads to RateLimiter.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=248965398\n'}"
464,"{'code': 'df25b6fcc8dd859b926fb7ef95f5b1fb34147862', 'message': 'Remove CheckedFuture utilities from util.concurrent.Futures.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=248947498\n'}"
465,"{'code': '9e808bcba5d9586ac2276d4feac4e586e24d9a98', 'message': 'Add Duration-based overloads to ServiceManager.\n\n#goodtime\n\nRELNOTES=Add Duration-based overloads to ServiceManager.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=248946446\n'}"
466,"{'code': 'b574769cd78da2744cb76e98ea7b738baf9a71b3', 'message': 'Add Duration-based overloads to Service.\n\n#goodtime\n\nRELNOTES=Add Duration-based overloads to Service.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=248945544\n'}"
467,"{'code': '76d74b3c839dee671040e2c9d94a102de71e854c', 'message': 'Add Duration-based overloads to AbstractScheduledService.\n\n#goodtime\n\nRELNOTES=Add Duration-based overloads to AbstractScheduledService.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=248944452\n'}"
468,"{'code': 'f463e01913d1d55536d929d0a37a25687876971b', 'message': 'Add Duration-based overloads to Futures.\n\n#goodtime\n\nRELNOTES=Add Duration-based overloads to Futures.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=248812611\n'}"
469,"{'code': '6aa29a6a8bf39c33f27eca26d3034bc701efbf10', 'message': 'Add Duration-based overloads to FluentFuture.\n\n#goodtime\n\nRELNOTES=Add Duration-based overloads to FluentFuture.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=248788685\n'}"
470,"{'code': '5dea327a8cbf84518cc787aae597f416f2969964', 'message': 'Add Duration-based overloads to MoreExecutors.\n\n#goodtime\n\nRELNOTES=Add Duration-based overloads to MoreExecutors.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=248759366\n'}"
471,"{'code': '2d28beb44476a109ba3c73a15f6086c1d3b53f76', 'message': 'Always complete TimeoutFuture, even if toString() throws\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=248753958\n'}"
472,"{'code': '401afeabb187f0eb68c2a0d8a4c73e917dad377b', 'message': 'Add Duration-based overloads to Uninterruptibles.\n\n#goodtime\n\nRELNOTES=Add Duration-based overloads to Uninterruptibles.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=248753214\n'}"
473,"{'code': '454799cc2697be95695766f1294670cc4784b7dc', 'message': 'Tighten the GoodTime suppression locations in RateLimiter.\n\n#goodtime\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=248708274\n'}"
474,"{'code': 'f84c7bdd271dff6b6fe4f1f17b5d2641a5057a73', 'message': 'Copy Durations.saturatedToNanos(Duration) to package-private c.g.c.u.c.Internal so it can be used by the concurrent package (and in Guava).\n\n#goodtime\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=248590041\n'}"
475,"{'code': '6cf3e2ec338a1e5ddd9796eaf3c8031d2b637939', 'message': 'Add a link back to the goodtime rate bug.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=248579020\n'}"
476,"{'code': 'd09f0f48a4b805ac23f4180df51e067109f18344', 'message': 'Remove app.link from the Public Suffix List.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=247658982\n'}"
477,"{'code': 'ac5bdc8506c348d00aa2e1e8010d81a3fc1cf83c', 'message': 'Add a new header field ""CDN-Loop"" to httputils.\n\nMore details: https://tools.ietf.org/html/rfc8586\n\nRELNOTES=Add CDN-Loop header to library according to RFC8586.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=247529463\n'}"
478,"{'code': '21d06cf1d48175ab5cdf3d88f1776d3cba227b37', 'message': 'Add Queues.drain(BlockingQueue, Collection, int, Duration) and drainUninterruptibly(BlockingQueue, Collection, int, Duration).\n\nRELNOTES=add Duration-based Queues drain methods.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=247454175\n'}"
479,"{'code': 'b954fff1e8f4d71f844cc57e281e58672bc8bc75', 'message': 'Add FakeTicker.advance(Duration) and setAutoIncrementStep(Duration).\n\n#goodtime\n\nRELNOTES=Add FakeTicker.advance(Duration) and setAutoIncrementStep(Duration).\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=247246196\n'}"
480,"{'code': 'fa6c4bd2d095700b8883ede96da601fce131a728', 'message': 'Update versions of some Guava dependencies.\n\nFixes https://github.com/google/guava/issues/3405\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=247074524\n'}"
481,"{'code': '0de37443ce263a3a1b3fc1c12a8e627a54006811', 'message': 'Upgrade compiler plugin.\n\nFixes https://github.com/google/guava/pull/3454.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=247059644\n'}"
482,"{'code': '8b9d1d31da78ec013e6e811ac7b6d8dad12309b0', 'message': 'Add java.util.UUID to ArbitraryInstances\n\nFixes #3448\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=247017124\n'}"
483,"{'code': 'b54bb040884cd54d9b1f62098b8b8f6ca23f1197', 'message': 'Add app.link to the Public Suffix List.\n\nThis is a temporary solution to stop app.link affiliated websites being grouped together in the Password Manager UI. We will reach out to the owners of app.link and work with them to update the public version of the PSL.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=246976477\n'}"
484,"{'code': 'dec10414174449323673e1086e3bdbeb70b0d6cc', 'message': 'Upgrade maven dependency plugin.\n\nFixes https://github.com/google/guava/pull/3456\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=246840308\n'}"
485,"{'code': '9afafaaabb7c19ac21871c0730f1ab1497d7349e', 'message': 'Migrate from assertThat(foo).named(""foo"") to assertWithMessage(""foo"").that(foo).\n\n(The exact change is slightly different in some cases, like when using custom subjects or check(), but it\'s always a migration from named(...) to [assert]WithMessage(...).)\n\nnamed(...) is being removed.\n\nThis CL may slightly modify the failure messages produced, but all the old information will still be present.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=246367399\n'}"
486,"{'code': '3dd22fe75a1dce9dcb169a91e3b617da5bb77587', 'message': 'Remove CheckedFuture from Guava.\n\nRELNOTES=Removed deprecated `CheckedFuture` and related utilities.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=246300659\n'}"
487,"{'code': '4c3859846c23e035095ef915df540d5a4271073f', 'message': 'A few more doc tweaks, caught by @jbduncan in f2591b5c2a\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=246146162\n'}"
488,"{'code': 'c8542f65ca36545089b7a9fa8aebaad8a7da8762', 'message': 'Migrate from is(Not)SameAs to is(Not)SameInstanceAs.\n\nThey behave identically, and the old names are being removed.\n\nOpen-source note: The new methods are available in Truth as of version 0.44.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=246135538\n'}"
489,"{'code': '14ffeecb1e68e022829fd920b07bcbd0ee35e30c', 'message': 'Migrate from assertThat(foo).named(""foo"") to assertWithMessage(""foo"").that(foo).\n\n(The exact change is slightly different in some cases, like when using custom subjects or check(), but it\'s always a migration from named(...) to [assert]WithMessage(...).)\n\nnamed(...) is being removed.\n\nThis CL may slightly modify the failure messages produced, but all the old information will still be present.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=245945957\n'}"
490,"{'code': 'c8ec3b8fcf823e5b02b50b58faf292c3053a53bb', 'message': ""Fixed some links.\n\nThe comparisons to the Android Hash* classes haven't been accurate since at least CL 81367572, so I've removed them entirely.\n\nFixes #3398\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=245829774\n""}"
491,"{'code': '7155d12b70a2406fa84d94d4b8b3bc108e89abfd', 'message': 'Migrate from isNotSameAs to isNotSameInstanceAs.\n\nThe two behave identically, and isNotSameAs is being removed.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=245089419\n'}"
492,"{'code': 'cdf7546a5e2e36e87d8d5180546f4e66af63c3f6', 'message': 'Update to Truth 0.44.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=244957378\n'}"
493,"{'code': 'd254e04f4628686f470a5a8fe5ee9bdbf0e2465c', 'message': 'Remove outdated references to the ""next release of Guava"".\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=244709329\n'}"
494,"{'code': '1f20155632fbf6fb1eaf026d10b4b9555932e5ac', 'message': 'Update Public Suffix data.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=244682930\n'}"
495,"{'code': '820b9a057442535a345772eaf5429dd81c5284c7', 'message': 'Match the casing of the WebSocket HTTP headers to the RFC directly.\n\nRELNOTES=Match the casing of the WebSocket HTTP headers to the RFC directly.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=244661448\n'}"
496,"{'code': '96025849639613e6b0296d8b6cd1382c5f9d7fbf', 'message': 'Fix misspelled Sec-WebSocket-Version header.\n\nThe correct name is Sec-WebSocket-Version, not Sec-WebSocket-Versions.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=244372774\n'}"
497,"{'code': 'f686c4ec86066c9775bbd9f90aaabb27708e9186', 'message': 'Enable GoodTime-API\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=244369482\n'}"
498,"{'code': 'd4fe4cd80712f7ba9f5c75c43498756b5df19dad', 'message': 'Update NetworkBuilder documentation with option of building an immutable graph.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=244303038\n'}"
499,"{'code': '276b8d95854dcdad992efb956b0a8cad01ed5ff0', 'message': 'Update ValueGraphBuilder documentation with option of building an immutable graph.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=244299818\n'}"
500,"{'code': '57e4b6d560874946d7142103386f7f17384e1708', 'message': 'Mitigate https://github.com/google/guava/issues/3223 by guessing that Sets are already deduplicated and making ""half and half"" expectations about un-duplicated inputs in ImmutableSet creation.\n\nRELNOTES=Mitigate https://github.com/google/guava/issues/3223.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=244047930\n'}"
501,"{'code': '47b033ff4ee0d2534aa2ca333bcba0dbb3a9e79a', 'message': 'Override a method instead of special-casing it.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=244001970\n'}"
502,"{'code': '23e4ad3ee650aa2954a7c9c5e60410de9cb342c9', 'message': 'Remove obsolete parent per https://github.com/sonatype/oss-parents\nand Fixes https://github.com/google/guava/issues/2756\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=243291402\n'}"
503,"{'code': '0194a8d1e65a5dbd732fdde7253744887e8e35cf', 'message': 'Upgrade error_prone\n\nFixes #3439\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=242946434\n'}"
504,"{'code': 'eacf08dbdc3d67a7c7a103f177a64dae5bb273af', 'message': 'Simplify graph.PackageSanityTests by applying the new immutable graph builder.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=242881059\n'}"
505,"{'code': '106948459ac6dc6dfc5d3053639b47e0dc4e8745', 'message': 'Update GraphBuilder documentation with option of building an immutable graph\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=242879149\n'}"
506,"{'code': '32cf2ddd1febac4483c1fba5cb01ca0af61bc0c7', 'message': 'Add websocket headers to HTTP header listings.\n\nThis adds five headers, as defined in RFC 6455: Sec-WebSocket-Accept,\nSec-WebSocket-Extensions, Sec-WebSocket-Key, Sec-WebSocket-Protocol, and\nSec-WebSocket-Versions.\n\nThis also changes the C++ per-header unit test so that it can recognize the\nalternate capitalization of WebSocket, instead of adding five special cases. The\nGo and Java versions use the ""Websocket"" capitalization instead.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=242732915\n'}"
507,"{'code': '206d7681cea8d19ae958de0c1115bce8689ed795', 'message': 'Bumped the FPP to prevent OOMs on JDK 11.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=241778584\n'}"
508,"{'code': 'ff3ce87590c8a18da6931e64c5543bb9ed3f849a', 'message': 'Fix @param tag as per https://github.com/google/guava/pull/3431#pullrequestreview-221507095\n\ncc @jbduncan\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=241525141\n'}"
509,"{'code': 'c86ee2657ba63f8d0feb4bb2cedf140a1a48cfab', 'message': 'Remove unused configuration of load factor\n\nThis allows removal of loadFactor/threshold which saves 8 bytes per object.\n\nWhile here:\n- Reduce diff between Map/Set classes\n- Make base forEach() work for Linked classes\n\nShallow object size (bytes):\n- CompactHashMap: 64 -> 56\n- CompactLinkedHashMap: 80 -> 72\n- CompactHashSet: 40 -> 32\n- CompactLinkedHashSet: 56 -> 48\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=241053148\n'}"
510,"{'code': '6d7f6556b0db2d177e3aa4cebbfbcfdb4170745f', 'message': 'Add NetworkBuilder.immutable().\n\nRELNOTES=`graph`: Added `NetworkBuilder.immutable()` for building immutable networks in a fluent way\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=240318306\n'}"
511,"{'code': 'eb635997c3cd1f6ce6b809987e50e71f0e1a665c', 'message': 'Remove unnecessary Type parameter\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=239816226\n'}"
512,"{'code': '35c85d27c510552807b8ec643f897497e893e0e2', 'message': 'Add ValueGraphBuilder.immutable().\n\nRELNOTES=`graph`: Added `ValueGraphBuilder.immutable()` for building immutable value graphs in a fluent way\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=239795455\n'}"
513,"{'code': '8d76ceb557d1fc9551f00dd4713670806c7f4732', 'message': ""Use byte[]/short[]/int[] for hashtable depending on size\n\nThe hashtable is stored as an Object and cast to the correct type using\ninstanceof checks.\n\nMemory:\nbyte[] sizes (2-89): 12-41% better (average: 32% better)\nshort[] sizes (90-22937): 20-29% better (average: 24% better)\nint[] sizes (22938+): unchanged\n\nRuntime on a Pixel 2:\ncreateAndPopulate: 9% better to 6% worse (average: 4.3% better)\nget: 1% better to 8% worse (average: 3.5% worse)\niterateWithKeySetAndGet: 9% better to 13% worse (average: 3.2% worse)\niterateWithEntrySet: unchanged (doesn't use hashtable)\n\nEffects on ImmutableMapProGuard:\n59105 bytes => 60369 bytes (+2.1%)\n21 classes => 21 classes (0%)\n200 methods => 201 methods (+0.5%)\n\nEffects on ImmutableBiMapProGuard:\n68893 bytes => 70235 bytes (+1.9%)\n25 classes => 25 classes (0%)\n232 methods => 233 methods (+0.4%)\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=239644823\n""}"
514,"{'code': 'f9f2807765c3f896c09e633026ef34f907ec7c48', 'message': 'Add FluentFuture.from(FluentFuture) factory method.\n\nThis follows the steps of FluentIterable.from(FluentIterable) and other\n“migration aid” methods that are deprecated from inception and are just here to\npoint out code that is no longer needed.\n\nRELNOTES=Added deprecated `FluentFuture.from(FluentFuture)` to point out redundant code.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=239402828\n'}"
515,"{'code': '71b9f37d349f659a9c26a893f6c48b6fddcbac8c', 'message': 'Implement GraphBuilder.immutable().\n\nRELNOTES=`graph`: Added `GraphBuilder.immutable()` for building immutable graphs in a fluent way\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=239359023\n'}"
516,"{'code': 'e66bf81da3163a6a8b4e93250c27ac2b5498db5e', 'message': 'Adds constants for prefetch headers.\n\nOf note, X-Purpose is NOT just a google specific header as previously defined.\n\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Link_prefetching_FAQ#As_a_server_admin.2C_can_I_distinguish_prefetch_requests_from_normal_requests.3F\n\nhttps://developers.google.com/web/updates/2018/07/nostate-prefetch\n\nRELNOTES=Adds constants for prefetch headers.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=238580695\n'}"
517,"{'code': '23b6bcb04c03993b3d5d25432d30a85591b56c3b', 'message': 'Add (unimplemented) API for GrapbBuilder.immutable() and ImmutableGraph.Builder.\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=238235253\n'}"
518,"{'code': 'be92294be598b9b6ff0bd1cae3335759dafcb534', 'message': 'Lazily allocate CompactHash backing arrays on first write\n\nEmpty maps/sets are extremely common. Lazily allocating the backing arrays can\nsave hundreds of KB of heap and reduce load on the garbage collector.\n\nWhile here:\n- Use serialized size to pre-size the arrays\n- Respect ordering during serialization (without using an iterator)\n- Consistently mark unused links as UNSET\n\nMemory savings before first write (bytes):\n- CompactHashMap.create(): 184 -> 64\n- CompactLinkedHashMap.create(): 240 -> 80\n- CompactHashSet.create(): 136 -> 40\n- CompactLinkedHashSet.create(): 200 -> 56\n- CompactHashMap.createWithExpectedSize(0): 136 -> 64\n- CompactLinkedHashMap.createWithExpectedSize(0): 168 -> 80\n- CompactHashSet.createWithExpectedSize(0): 96 -> 40\n- CompactLinkedHashSet.createWithExpectedSize(0): 144 -> 56\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=237817874\n'}"
519,"{'code': '74fc49faf283f106302794f7af82c7ab1fcb5412', 'message': ""Use J2ObjC's @RetainedWith annotation instead of @Weak on\nImmutableMap.entrySet() to prevent crashes on iOS.\n\nTESTED=Created a map inside an autorelease pool and saved a reference to the\nentry set. Checked that the entry set functions correctly outside the\nautorelease pool. Checked that both the entry set and the are deallocated by the\nautorelease pool when not holding a strong reference to the entry set. Did this\ntest with the following constructions to cover all entry set implementations:\n- ImmutableMap.of(<2 entries>)\n- ImmutableMap.copyOf(<EnumMap with 2 entries>)\n- ImmutableSortedMap.of(<2 entries>)\n- ImmutableBiMap.of(<2 entries>).inverse()\n\nRELNOTES=J2ObjC: Fixes crashes from use of ImmutableMap.entrySet().\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=237300208\n""}"
520,"{'code': '8e174e76971449665658a800af6dd350806cc934', 'message': 'Prepare for release 27.1.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=237291180\n'}"
521,"{'code': '2fabbea450b6c33d3feef1cfd3ba1bfb0d9941fb', 'message': 'Add missing @since NEXTs.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=237274232\n'}"
522,"{'code': '7d9c1304fc0afceda8695553ada7c930b886e593', 'message': 'Internal GWT change.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=237058448\n'}"
523,"{'code': 'dc416181af160fd43d07485fe63c71c43a687c86', 'message': ""Remove misleading javadoc line (we haven't published microbenchmarks in N\nyears).\n\nFixes #3396\n\nRELNOTES=None\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=236749357\n""}"
524,"{'code': 'daed909a0b4e1e6039441077357793c1a3ea7913', 'message': ""Optimize ImmutableSet's hash flooding detection, using an algorithm which allows more false positives (though we calibrate the constant factors to compensate) but runs O(log n) times faster on average.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=236729050\n""}"
525,"{'code': 'c37130733fd791487a5c01cb0f3e9b2b4786534c', 'message': 'Suppress error for bad implementations of Comparable\n\nRELNOTES=N/A\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=236248361\n'}"
526,"{'code': 'dcaf89380dae1d3ecc05907acd32444cfc4e40eb', 'message': ""Update Public Suffix data.\n\nThe [] copy is updated whenever Chrome's copy is updated, which is\ntypically every 6 weeks. Star the following to watch Chrome's updates:\n\nhttps://bugs.chromium.org/p/chromium/issues/detail?id=610495\n\nWhen that bug is not updated, the [] copy is updated 3 weeks before the\nEstimated Week of Stable:\n\nhttps://www.chromium.org/developers/calendar#TOC-Estimated-Stable-Dates\n\nFor this update, []\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=236146421\n""}"
527,"{'code': '0fb7d73629819739332f41cb0fd3903a922b8683', 'message': 'Document that the memory increases appear to be necessary for Travis only (and that they do appear to solve the problem there).\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=235776445\n'}"
528,"{'code': '5aca883cc649a99d5272abd86cc1598a9ef4f401', 'message': 'Fix a URL.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=235723889\n'}"
529,"{'code': '5f3507252d43c0e9c4e7f16dfddb08c387435eb1', 'message': 'Remove GWT emulations that are no longer needed as of GWT 2.8.2.\n\nRELNOTES=Removed GWT emulations that are no longer needed as of GWT 2.8.2. This means that GWT projects that use this version of Guava must use GWT 2.8.2 or higher.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=235524613\n'}"
530,"{'code': 'ed3ba0728dc18d58e2cb43c6308dc30b31cfc2f5', 'message': 'Fix Javadoc breakage under JDK11 canary.\n\nhttps://bugs.openjdk.java.net/browse/JDK-8212233\nhttps://bugs.openjdk.java.net/browse/JDK-8193030\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=235241314\n'}"
531,"{'code': 'f4ed20e9b3eabaacfa165bf532f67c19f22809f9', 'message': ""Use J2ObjC's @RetainedWith annotation instead of @Weak on ImmutableMap.values\nto prevent crashes on iOS.\n\nTESTED=Created a map inside an autorelease pool and saved a reference to the\nvalues collection. Checked that the values collection functions correctly\noutside the autorelease pool. Checked that both the values collection and the\nmap are deallocated by the autorelease pool when not holding a strong reference\nto the values collection. Did this test with ImmutableMap.of(<2 entries>) and\nImmutableMap.copyOf(<EnumMap with 2 entries>).\n\nRELNOTES=J2ObjC: Fixes crashes from use of `ImmutableMap.values()`.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=235206171\n""}"
532,"{'code': 'ead2404f33b16b2f87825b80669afb54457a1785', 'message': 'Internal GWT change\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=234795462\n'}"
533,"{'code': 'a99c15f4cfcfc6106b99b6ec98e6007d211faff0', 'message': 'Create constants for the SourceMap header\n\nNone of the tests like this header name, so each required some workarounds.\n\nRELNOTES=Add the SourceMap header to HttpHeaders\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=234254287\n'}"
534,"{'code': '282bdf81d05835b36ce46c46672211d1f220b0a4', 'message': 'Modernize book reference.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=234212413\n'}"
535,"{'code': 'ddb5543dadb0cb14d387772e80a51336eb4b01e9', 'message': 'Document the JDK 9+ alternative to `Maps#immutableEntry`\n\nFixes #3385\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=234208826\n'}"
536,"{'code': 'a890c444e55973384d1370b56afe1a02e7db9c3c', 'message': ""Annotate checkNotNull's input and output as @NonNull.\n\nWe don't want to go down the road of annotating most things @NonNull, as we eventually want to use tools that assume that that's the default. However, it's pretty weird for checkNotNull() to return a @Nullable value in the minds of some tools, so let's annotate just that method and see how it goes.\n\nRELNOTES=Annotated `checkNotNull`'s input and output as `@NonNull`.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=233963788\n""}"
537,"{'code': '3ff4d1ae6f47c577cd4070080461290904f308c9', 'message': ""Use J2ObjC's @RetainedWith annotation instead of @Weak on ImmutableMap.keySet\nto prevent crashes on iOS.\n\nTESTED=Created a map inside a autorelease pool and saved a reference to the\nkeyset. Checked that the keyset functions correctly outside the autorelease\npool. Checked that both the keyset and the map are deallocated by the\nautorelease pool when not holding a reference to the keyset. Did this test with\nboth ImmutableMap.of(<2 entries>) and ImmutableBiMap.of(<2 entries>).\n\nRELNOTES=J2ObjC: Fixes crashes from use of `ImmutableMap.keySet()`.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=233811320\n""}"
538,"{'code': '5929fcf18f78a8826544f0aa1a4eb2ced704787b', 'message': 'Automated rollback of commit 1d49ade94c3e7d2c056893a630739c8a6b897f66\n\n*** Original change description ***\n\nInternal GWT change\n\n***\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=233628983\n'}"
539,"{'code': '07f3d6ca86cac1d27cb2f13e6fe0bb4d0faca7fe', 'message': 'Internal GWT change\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=233617662\n'}"
540,"{'code': 'a0f748e78516c8c80c945f6a4c4fae752d11bff5', 'message': ""Delete WellBehavedMap.\n\nThe bug it worked around was fixed in Java 7:\nhttps://bugs.java.com/bugdatabase/view_bug.do?bug_id=6312706\n\nAnd I don't believe it was ever present under Android:\nhttps://android.googlesource.com/platform/libcore/+/fdb2704414a9ed92394ada0d1395e4db86889465/luni/src/main/java/java/util/EnumMap.java#146\n\nI haven't looked for the absolute first version ever of GWT, but the still very old GWT file doesn't have the bug, either.\n\nDeleting this class will simplify some work I'm doing around our EnumMap usage for j2cl.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=233418344\n""}"
541,"{'code': 'd60ff99a73ad0f2c5d4048a5aee107f30e034bb8', 'message': ""Make a constructor private.\n\n(I'm looking into EnumMap stuff for other reasons, and I got to wondering if this was used outside the file. Nope.)\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=233408580\n""}"
542,"{'code': '4c7ae6a39378d0d42289968659c3f9bc42465ec2', 'message': 'Remove @CanIgnoreReturnValue from Ordering.sortedCopy() and immutableSortedCopy().\n\nRELNOTES=Remove `@CanIgnoreReturnValue` from `Ordering.sortedCopy()` and `immutableSortedCopy()`.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=232883462\n'}"
543,"{'code': 'f6e4e4e1fded5609a202b65541a08e522a772497', 'message': ""Add some known UTF-8 hash values to Murmur3_32 tests. UTF-8 is more comparable between platforms than relying on Java's internal encoding.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=232756904\n""}"
544,"{'code': '6242bdd27bfa7a2223548a082c25a8ef97a951db', 'message': ""Remove @Beta from APIs:\n\ncollect\n- most Collectors (aside from BloomFilter and ImmutableRange*, as those whole classes are @Beta (though I did remove the redundant @Beta annotation from the Collector-returning methods for clarity))\n- Maps: asConverter, immutableEnumMap\n- MultimapBuilder\n- Streams: stream(Iterable), concat\n\nio\n- ByteStreams: copy, toByteArray\n- CharStreams: copy, toString\n- Files: as(Char|Byte)(Source|Sink)\n\nutil.concurrent\n- Futures: addCallback, getDone, getUnchecked, immediateCancelledFuture, immediateFailedFuture, immediateFuture\n- ListeningScheduledExecutorService\n- Uninterruptibles\n\nother\n- HtmlEscapers\n- Splitter.splitToList\n- Ticker\n\nFixes https://github.com/google/guava/pull/3287\nFixes https://github.com/google/guava/issues/3251 (aside from ImmutableRange*, but those whole classes are @Beta, anyway)\nAddresses the main concerns of https://github.com/google/guava/issues/3285 but doesn't cover the broader request\nFixes https://github.com/google/guava/issues/3340\nPartially addresses https://github.com/google/guava/issues/3239\n\nRELNOTES=Removed `@Beta` from a number of frequently used APIs.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=232681253\n""}"
545,"{'code': '84fee435a1eb130239a8c0f7972541aff5c438f6', 'message': ""Name the method parameter 'unused' for ImmutableSortedSet.readObject(ObjectInputStream) (so the static analysis doesn't complain)\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=232557400\n""}"
546,"{'code': 'f09c017033417cc50b047d607f5917fff39ca0dd', 'message': 'Reformat with google-java-format\n\nRELNOTES=N/A\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=232329476\n'}"
547,"{'code': '3e7f6fe874f482a87e6aad27f29ad2abbf10d3ea', 'message': 'Document the retention of listeners added to Guava implementations of ListenableFuture.\n\nRELNOTES=Document the retention of listeners added to Guava implementations of `ListenableFuture`.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=232007326\n'}"
548,"{'code': '7452a047726b0f4a3d05f91f6f2f259b72610f76', 'message': 'Add missing @Override annotations\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=232004516\n'}"
549,"{'code': '3f1facfd4197a00e6a5e05333739e006ff398dcc', 'message': 'Reformat with google-java-format\n\nRELNOTES=N/A\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=231889594\n'}"
550,"{'code': '735fb5a5c11be21f7f93ae588e21ef521eaa2e83', 'message': 'Remove unused imports and warnings.\n\nFixes #3356\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=231638663\n'}"
551,"{'code': '3d873a513aa59996fbaf1ee48d898eda68ce0d3c', 'message': 'Add Report-To header.\n\nhttps://www.w3.org/TR/reporting/\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=231590633\n'}"
552,"{'code': '2763649a49907a645b97afd860ca74257368ab45', 'message': 'Remove @CanIgnoreReturnValue from Futures.catchingAsync()\n\nRELNOTES=Remove @CanIgnoreReturnValue from Futures.catchingAsync()\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=231435265\n'}"
553,"{'code': '715971c03dcd5ebeb35ffefb3e24269c28db3698', 'message': 'Removes java/util GWT emul dependency\n\nMost of the emulation provided by this target moved to JRE proper and most of dependencies are no longer needed.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=230773476\n'}"
554,"{'code': '7bf778459e3050fcc00c97705c6dceba50983920', 'message': 'Remove @CanIgnoreReturnValue from c.g.c.collect.Lists.newArrayList().\n\nRELNOTES=Remove @CanIgnoreReturnValue from c.g.c.collect.Lists.newArrayList().\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=230742908\n'}"
555,"{'code': 'd9947a2c753238ea1d57131a5e20433dedb5202f', 'message': 'Automated rollback of commit 8fd7f60484218df9a208df0edf41bdee22d86900\n\n*** Reason for rollback ***\n\n*** Original change description ***\n\nRemoves java/util GWT emul dependency\n\nMost of the emulation provided by this target moved to JRE proper and most of dependencies are no longer needed.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=230673390\n'}"
556,"{'code': '8fd7f60484218df9a208df0edf41bdee22d86900', 'message': 'Removes java/util GWT emul dependency\n\nMost of the emulation provided by this target moved to JRE proper and most of dependencies are no longer needed.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=230668984\n'}"
557,"{'code': '63ceb311d285fb3e87a2dd8882d37ac235ba8b4f', 'message': 'Remove @CanIgnoreReturnValue from c.g.c.base.Ticker\n\nRELNOTES=Remove @CanIgnoreReturnValue from c.g.c.base.Ticker\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=230567802\n'}"
558,"{'code': '02a6f40b4bee23688df14d7fef36b590b7e8e989', 'message': 'Remove @CanIgnoreReturnValue from c.g.c.collect.Iterators.getOnlyElement()\n\nRELNOTES=Remove @CanIgnoreReturnValue from c.g.c.collect.Iterators.getOnlyElement()\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=230556586\n'}"
559,"{'code': 'a979103380e546a2d3c008d7eed3b334dc5e981f', 'message': 'Remove @CanIgnoreReturnValue from c.g.c.collect.ClassToInstanceMap.getInstance()\n\nRELNOTES=Remove @CanIgnoreReturnValue from c.g.c.collect.ClassToInstanceMap.getInstance()\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=230554404\n'}"
560,"{'code': 'dd3c1391646098008046c8f687c471ea53236dad', 'message': 'Swap the parameter order of the Collections.disjoint call in Sets.intersection\n\nCollections.disjoint is implemented in such a way that it has better\nperformance if its 2nd parameter is the smaller of the two when both params are\ninstances of Set. The Sets.intersection javadoc says it has better performance\nwhen set1 is the smaller set, but that is currently not the case for the\nisEmpty operation specifically.\n\nOur team ran into a pathological case of this where we check for an empty\nintersection of two sets, one being ~5 orders of magnitude larger than the\nother.\n\nRELNOTES=Update isEmpty operation of intersection to follow the smaller set first advice in the javadoc.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=230394245\n'}"
561,"{'code': '8b97f783b25b19d66fda216db86689750562f664', 'message': 'Remove @CanIgnoreReturnValue from c.g.c.collect.Ordering.min/max()\n\nRELNOTES=Remove @CanIgnoreReturnValue from c.g.c.collect.Ordering.min/max()\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=230348727\n'}"
562,"{'code': '673b243766aea6c8c5f8168c966ab7bd882c9621', 'message': 'Adds constants for Sec-Fetch-(Dest|Mode|Site|User) headers.\n\nhttps://github.com/mikewest/sec-metadata\n\nRELNOTES=Adds constants for Sec-Fetch headers.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=229692513\n'}"
563,"{'code': '1cc9b8303b38a123853b21e7ac624fd6b0464c53', 'message': 'refactor literal to named constant\n\nFixes #3364\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=229370202\n'}"
564,"{'code': 'd5cd6a6c97055bb5bf3ada0f13cb667b65aa3adc', 'message': 'Enable GoodTime-API for c.g.common.cache\n\nRELNOTES=Enable GoodTime-API for c.g.common.cache\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=228898976\n'}"
565,"{'code': '838560034dfaa1afdf51a126afe6b8b8e6cce3dd', 'message': ""Correct the spelling of the Range class.\n\nIt's Range not Ranges.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=227899203\n""}"
566,"{'code': '3ba6d135439c1fa6ac80cf5ccab118c396dd402c', 'message': 'Specify that Range static factories can throw ClassCastException if the provided endpoints are not mutually comparable.\n\nFixes https://github.com/google/guava/issues/3343\n\nRELNOTES=Specify that Range static factories can throw ClassCastException if the provided endpoints are not mutually comparable.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=227525705\n'}"
567,"{'code': 'f15fdd10cd1e3e81ad2c31f555dfaaf70a72cf69', 'message': 'Hide Files methods that are @Deprecated internally\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=226486688\n'}"
568,"{'code': '99698d4229783a93ec68883d9102dabe623cc297', 'message': 'Use maven-javadoc-plugin 3.0.1.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=225846924\n'}"
569,"{'code': 'a7e1c180907c597b73373d347fbcfe124f1d77b6', 'message': ""Suppress soon to be GoodTime errors ('time' is now considered a keyword).\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=225199757\n""}"
570,"{'code': 'd416e04cf673f7b3a05e54e45ec1c1406e968c9e', 'message': 'Add the application/jose and application/jose+json media types.\n\nhttps://www.iana.org/assignments/media-types/application/jose\nhttps://www.iana.org/assignments/media-types/application/jose+json\nhttps://tools.ietf.org/html/rfc7515#section-9.2\n\nRELNOTES=Add MediaType for ""application/jose"" and ""application/jose+json"".\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=225193891\n'}"
571,"{'code': 'e41e8d13f3b1d3101b47df73bb2f582b8cdb51e2', 'message': 'Use the primitive ""number"" type instead of the object counterpart ""Number"" to avoid a jscompiler error.\n\nAn upcoming change to J2CL that simplifies how casting logic is transpiled will make the code ""(Number) (Object) 3"" here transpile to just ""/** @type {Number} */ (3)"" and jscompiler will see the ""invalid cast"" since ""3"" is not ""Number"" in the closure type system.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=225046969\n'}"
572,"{'code': '3dfee64294921a4d8ec634961991210f6b188e88', 'message': 'Make example compile (i.e. supply a Path/File) and use depth first instead of breadth first.\n\nReason: Depth first is more common for file traversal.\n\nRELNOTES=N/A\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=223782436\n'}"
573,"{'code': '920e72ffc5ab0e568b1250a6b39e6d4f9573b910', 'message': 'Remove ""Media type for"" or similar phrasing for visible constants in the MediaType class.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=223540269\n'}"
574,"{'code': '2b9566ae47708988cd04d745149aea72bd5cf918', 'message': 'Add missing documentation and @since tags to MediaType entries that were added\nafter its initial relase of 12.0\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=223521781\n'}"
575,"{'code': 'e59ea0f78c832dd6a140a8e8e754dee8b08a322a', 'message': 'Add the @Immutable a few more classes. Both annotations enforce at compile-time that the annotated class meets the annotation’s requirements.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=223369138\n'}"
576,"{'code': '0bd61c21ca140283bc8aa70ccf32fde5ef0230d3', 'message': 'Internal change\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=223215329\n'}"
577,"{'code': 'b86fe4fc7ec511d78507c3ba32c789d1f250f827', 'message': ""Update Public Suffix data.\n\nThe copy is updated whenever Chrome's copy is updated, which is\ntypically every 6 weeks. Star the following to watch Chrome's updates:\n\nhttps://bugs.chromium.org/p/chromium/issues/detail?id=610495\n\nWhen that bug is not updated, the copy is updated 3 weeks before the\nEstimated Week of Stable:\n\nhttps://www.chromium.org/developers/calendar#TOC-Estimated-Stable-Dates\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=222877055\n""}"
578,"{'code': 'c77be7a745fc5e0992126949832c6c25253ad289', 'message': ""Replace usages of Truth's deprecated hasMessage() with hasMessageThat() in Guava tests.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=222834185\n""}"
579,"{'code': '8aad0dc649aa57d46886913b1f4ea84f56f813be', 'message': 'Improve docs on Splitter.fixedLength() when used in conjunction with Splitter.limit().\n\nFixes https://github.com/google/guava/issues/3321\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=222409733\n'}"
580,"{'code': '9c9c3f39da7bc605707ef0df4c29907e54daf576', 'message': 'Add additional test of existing behavior of Splitter.limit(n)\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=222407796\n'}"
581,"{'code': '1a6c66855a0de8f0e8fa6f194a5d5d028cfe20d8', 'message': 'Update failureaccess dep to 1.0.1, which includes OSGi metadata.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=222252322\n'}"
582,"{'code': '280992540d6e5e368a6dc70f04ded228485c9a3c', 'message': 'Update Guava README for 27.0.1.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=222248998\n'}"
583,"{'code': '0e596412953f7f9f07070b64b63f0d38bb263bc8', 'message': 'Create a Guava BOM.\n\nRELNOTES=Create a BOM for Guava.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=222112576\n'}"
584,"{'code': 'b8d5ecd40b9cfbd9cafc08bf50bd2382369812e9', 'message': 'Add the Origin-Trial HTTP response header.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=221639042\n'}"
585,"{'code': '4d5e9445c2edeb89803dc2883df4570116a7979a', 'message': 'Address why users should prefer our immutable collections to things like Collections.emptyList().\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=221486706\n'}"
586,"{'code': '0ac4a8b114e731880773b09fbf25dec0ea913ffe', 'message': 'common.graph PackageSanityTests: specify a default object for EndpointPair inputs.\nThis should resolve a few internal flaky test issues\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=220529228\n'}"
587,"{'code': '5f47d39fcf83daad916466f3bd1180150cbbe2d9', 'message': 'Standardise message format for ""duplicate key"" IllegalArgumentException thrown from ImmutableTable.Builder.build().\n\nInternally, ImmutableTable.Builder.build() delegates to two classes, {Dense,Sparse}ImmutableTable and these currently have inconsistent error messages when a duplicate key is detected.\n\nPrior to this CL, SparseImmutableTable had a message formatted like:\n  ""Duplicate value for row=%rowKey%, column=%columnKey%: %newValue%, %oldValue%""\nWhereas DenseImmutableTable had:\n  ""duplicate key: (%rowKey%, %columnKey%)""\n\nAfter this CL both classes will format the message like:\n  ""Duplicate key: (row=%rowKey%, column=%columnKey%), values: [%newValue%, %oldValue%].""\n\nRELNOTES=Standardise message format for ""duplicate key"" IllegalArgumentException thrown from ImmutableTable.Builder.build().\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=220478817\n'}"
588,"{'code': '2d8651410cdd2bd5eb50444d39f2a958b05339ab', 'message': 'Correct documentation for Splitter#withKeyValueSeparator(Splitter)\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=220473960\n'}"
589,"{'code': 'c367e9456396bfca14de1c6a26a8c39e3f86e722', 'message': 'Use maven-compiler-plugin version 3.8.0.\n\nSee https://github.com/google/guava/pull/3294.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=219835316\n'}"
590,"{'code': 'f3542eee27163c3ea8af032206a719ead9f9d4b6', 'message': 'Add MediaType.MICROSOFT_OUTLOOK and add missing javadocs to a few other MediaTypes.\n\nSee https://github.com/google/guava/pull/3309\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=219797217\n'}"
591,"{'code': '218bfd46bd4bc63b24af9640fb9e11d75c12b8ab', 'message': 'Change failureaccess packaging to bundle so the OSGi metadata actually gets included.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=219320897\n'}"
592,"{'code': '5d3295aea4a7bb305a809bf7d6027cceccd8b123', 'message': 'Document that Chars.lexicographicalOrdering is different than Alphabetical\nordering, which is more appropriate for user text.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=219121417\n'}"
593,"{'code': 'a980611b96ea86b67ccb836687a50d2a9cecf98d', 'message': ""Fix the issue with classes that should only be included in the failureaccess artifact being included in the main Guava jar.\n\nIt appears (thanks to @michaelhixson on https://github.com/google/guava/issues/3302) that the issue is with the maven-bundle-plugin (which does OSGi stuff). Presumably because Guava was declaring that it exports com.google.common.* (and doesn't exclude com.google.common.util.concurrent.internal), it was pulling those class files in from the dependency. It was also pointed out by @talios in that issue that failureaccess doesn't include OSGi metadata to export that package.\n\nThis change should fix both of those issues, but we're going to need to release a failureaccess 1.0.1 and then guava 27.0.1.\n\nRELNOTES=Fixes an issue where classes that should only be included in failureaccess (Guava's one dependency) were also being included in the main Guava jar.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=218884985\n""}"
594,"{'code': 'addd09ad01d7dbe7d5a72a1c5b949c3e08571910', 'message': 'Ensure InterruptibleTask.interruptTask works even when Thread.interrupt() throws or takes a long time\n\nJava nio APIs enable arbitrary code to register callbacks that get run on calls to interrupt() as a result interrupt() can throw arbitrary exceptions, or even deadlock.  This adds some defense against this in InterruptibleTask.\n\n* we move the call to set(DONE) to a finally block to ensure it always runs\n* we have the completing task park itself if it spins for a long time waiting for set(DONE) to be called.  This adds some complexity to the interruptTask protocol\n\nRELNOTES=Ensure that interrupting an InterruptibleTask works even if Thread.interrupt() throws or takes a long time.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=218884075\n'}"
595,"{'code': '333bf9db1a6ebe6ccebbae5a9e3442492344269f', 'message': ""Document behavioral caveat on Splitter#withKeyValueSeparator(Splitter): the options in Splitter don't change anything about the behavior of the keyValueSplitter.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=218857993\n""}"
596,"{'code': 'af3ee1c5986005e4fdeec6e3430d8d63316bee6b', 'message': 'common.graph: adding new EndpointPair-accepting overloads.\n\nRELNOTES=common.graph: added overloads to methods accepting pairs of nodes to also accept EndpointPair; changed behavior of *Graph.edges().contains() to allow undirected graphs to accept ordered EndpointPairs.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=218724287\n'}"
597,"{'code': '64276db0c49df56a609374d4617af88653c24e2b', 'message': 'Suppress warnings in classes that implement equals() without also implementing\nhashCode().\n\nThe contract for Object.hashCode states that if two objects are equal, then\ncalling the hashCode() method on each of the two objects must produce the same\nresult. Implementing equals() but not hashCode() causes broken behaviour when\ntrying to store the object in a collection.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=218187142\n'}"
598,"{'code': 'cceb25923a827b293dc848caac4d4887e6c506bf', 'message': '*Builder.java: add @param documentation for the node/value/edge types that clarifies their behavior.\n\nThis is in response to (and should resolve) https://github.com/google/guava/issues/3299.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=218186251\n'}"
599,"{'code': '473f8d27b3f95b7ddbfc76677992ae6c22ba6836', 'message': 'Enable goodtime-api for Guava (with some exceptions).\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=217765496\n'}"
600,"{'code': '292118d2480374d0e43c4eab366788d69d0311db', 'message': ""Mention Guava's new dependency in documentation.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=217758655\n""}"
601,"{'code': '74034a9d8b62ee3590d1c153772f8a462b459cd5', 'message': ""Remove oraclejdk10 from Travis build.\n\nIt's currently failing on Travis because Oracle has seemingly removed the ability to download JDK 10. Since we're already running on JDK 11, having a JDK 10 build may no longer be needed anyway.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=217745829\n""}"
602,"{'code': '968f5c9cb9b8398b9c61def6b3cdc1c39fc92424', 'message': 'Enable GoodTime API checker for guava-testlib.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=217704624\n'}"
603,"{'code': '9704538cd9aa8e4b783b824773cfc76290f572c2', 'message': 'Prepare for release 27.0.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=217587480\n'}"
604,"{'code': 'd6a12e433fbe6baceec4317c92923a3ab866f661', 'message': 'Push back deprecated API removals again.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=217580358\n'}"
605,"{'code': 'a5cafa67da64a12444037bd4f4c30c39a0c184aa', 'message': 'Enable GoodTime API checker for Guava\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=217557131\n'}"
606,"{'code': 'e72e35d0662069b6ce3009904011d0545b3e12f2', 'message': 'Fix ThrowablesTest for JDK 11.\n\nInstead of hardcoding ""9"" and ""10"" as the versions of Java that lazyStackTrace() doesn\'t work for, only check that it works when the version is < 9.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=217202901\n'}"
607,"{'code': 'f6d4417f0f9271e49eb3db82d0e1d348469f61e8', 'message': 'Fix ForwardingMapTest in JDK11.\n\nWe need to be able to create a valid instance of IntFunction<T[]> to pass to Collection.toArray(IntFunction<T[]>), including having its method return an array of the correct type. Switch from using raw Class<?> to TypeToken to handle that.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=217198963\n'}"
608,"{'code': '94863a0c8957efba6b443c2b316a0d8b46b8790c', 'message': 'Update Public Suffix data.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=216573087\n'}"
609,"{'code': '581ba1436ebaa54a7f5d0f1db8cc4da0ca72127e', 'message': 'Clarify a comment in Futures.NonCancellationPropagatingFuture.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=214975745\n'}"
610,"{'code': 'e074cf1a77bf2657037953834031b0e73b964495', 'message': 'Add support for Early-Data HTTP header.\n\nRELNOTES=`net`: Added `HttpHeaders.EARLY_DATA`.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=214512011\n'}"
611,"{'code': '3912da1f70af002c4a4a0ea738c56212f724cbac', 'message': 'Add JDK11 to the Travis config.\n\nCloses https://github.com/google/guava/pull/3274\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=214450758\n'}"
612,"{'code': '3bab1fbeb2f0bb7705df398cac5254838ce7c825', 'message': ""Cast null to make sure to select the right Collection.toArray(). In JDK 11 there's a new default method that takes a different parameter.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=214442788\n""}"
613,"{'code': '0d34c125acd88f9bb36bd334117c1cb01a3a44b9', 'message': ""Check input collection size in PowerSet before actually copying it's content.\n\nCloses https://github.com/google/guava/pull/3275\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=214310409\n""}"
614,"{'code': '8dbe749b9e78a0caa4da949048c82dc50eb8da8d', 'message': 'Properly handle input cancellations in Futures.catching[Async]\n\nCurrently, if input future is cancelled and the fallback handler does not handle CancellationException, the output future will end up as failed with CancellationException. Instead, the more logical result should be that output future ends up as cancelled as well.\n\nRELNOTES=`concurrent`: When the input to `Futures.catching*` is cancelled, cancel the output, rather than failing the output with a `CancellationException` (unless the exception is caught).\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=213597852\n'}"
615,"{'code': '0743f9aeb96cccff4b79b2c9935ea1c58e0ccf19', 'message': 'Remove unnecessary mocking of a data structure.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=213551639\n'}"
616,"{'code': '95521f78d442084e2d9ebd6e2d096a834caccdad', 'message': 'Update truth, animal sniffer, error prone annotations, and JUnit\n\nAll of these dependencies are out of date from those used in gRPC, and preventing me from getting a current build of Guava into gRPC.\n\nFixes #3268\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=213550989\n'}"
617,"{'code': 'ec9b5d56271cd3ce1bf145fccbea77c8c3b8aa5c', 'message': 'Make FutureCombiner recommend Futures.getDone().\n\nWhile there, switch it to a lambda.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=213505269\n'}"
618,"{'code': '88e6fb86f5317bdfd2e8a78899334e9f0ba16987', 'message': 'Remove trustedGetException()\n\ntryInternalFastPathGetFailure gives access to similar fast-path\n\nRELNOTES=N/A\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=212701154\n'}"
619,"{'code': 'e2cf262d89c65a701de72df20c38808640e7e86c', 'message': ""Use newGuard() to make example in Monitor class javadoc more\nconcise.\n\nThis commit also cleans up the method javadoc for newGuard() itself and\nreplaces a lingering 'throw Throwables.propagate(throwable)' with simply\n`throw throwable` (not related to newGuard(), but good to clean up).\n\nFixes #3236\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=212669316\n""}"
620,"{'code': 'b62d52926b904a8def90fd427acad53d79fa0e9f', 'message': 'Introduce listenablefuture and failureaccess artifacts, plus InternalFutureFailureAccess.\n\n(taken over from CL 210155310 to add Maven setup)\n\nIt provides a direct access to the cause of any failures,\nso we can avoid unnecessary allocation of an exception.\n\nDesign discussion: https://docs.google.com/document/d/1_RVTtztq5pqrhs0srvJWHMI7PT1tA71--iaauV2l5UA/edit\n\nRELNOTES=Created separate `listenablefuture` and `failureaccess` artifacts, the latter containing the new `InternalFutureFailureAccess`. For more details about `listenablefuture`, see [this announcement](https://groups.google.com/d/topic/guava-announce/Km82fZG68Sw).\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=212516713\n'}"
621,"{'code': 'eb3a9f447715b05c18179bf6313dfd28851bb56e', 'message': ""Fix a bug in AbstractFuture.addListener where we failed to follow the contract precisely.\n\nListenableFuture.addListener says that listeners should execute 'immediately' when the future is done.  However, because the old version of addListener only checked the listeners field, it is possible to observe that the future is done and that your listener would not execute immediately.  This cl fixes that by adding an explicit check for isDone.\n\nRELNOTES=Close a short race where you could observe that an AbstractFuture was done, but that listeners wouldn't execute immediately.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=212281545\n""}"
622,"{'code': 'b611718c8b4334795dffcc7f043bef49a435506b', 'message': 'Disambiguate Collection.toArray() call so that the test passes in Java 11 where a new toArray method was added.\n\nhttps://download.java.net/java/early_access/jdk11/docs/api/java.base/java/util/Collection.html#toArray(java.util.function.IntFunction)\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=212037283\n'}"
623,"{'code': 'b03e282f246794f3e3cc6dcce6543e449049ce47', 'message': 'Short circuit in withTimeout if the input future is already done.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=212017146\n'}"
624,"{'code': 'd3abde3e788c5d52502f716be6871d3e18453e88', 'message': 'Include original input value and RoundingMode in the failure message for MathPreconditions.checkInRange().\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=212012861\n'}"
625,"{'code': '3e4d052920b6c090aa544affda1533e049871082', 'message': 'Use TrustedFuture where possible\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=211511882\n'}"
626,"{'code': 'a149cd450b1ea347fac0a0beaee4ab1e82c15429', 'message': 'Bail early without a CancellationException in AbstractTransformFuture.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=211143128\n'}"
627,"{'code': '326562f3d22bf0864a1f8264f1720c5a96984243', 'message': 'Add more validation to AbstractFuture when cancellation causes are enabled, so that it matches the behavior when they are disabled.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=211109711\n'}"
628,"{'code': '83ea00f0b4a5a866981f6dbf847b611bb5b7770d', 'message': ""Update Public Suffix data.\n\nThe copy is updated whenever Chrome's copy is updated, which is\ntypically every 6 weeks. Star the following to watch Chrome's updates:\n\nhttps://bugs.chromium.org/p/chromium/issues/detail?id=610495\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=210378042\n""}"
629,"{'code': 'ec2dedebfa359991cbcc8750dc62003be63ec6d3', 'message': 'Automated rollback of changelist f380040f0041f94c83d24623c10f32de58d436c4\n\n*** Reason for rollback ***\n\nTest depends on incorrect Future implementation\n\n*** Original change description ***\n\nAdd more validation to AbstractFuture when cancellation causes are enabled, so that it matches the behavior when they are disabled.\n\n***\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=210143037\n'}"
630,"{'code': '40fad58d8489390ec66fa80fe2abfd3934cf2071', 'message': 'Suppress violation of MissingEqualsCall for EqualsTesterTest, given it quite legitimately fails to call #testEquals.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=210138846\n'}"
631,"{'code': '879482a0df4791ad29e44dbec4e6924edc8383ba', 'message': 'Suppress warnings on thread suspending test.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=210116708\n'}"
632,"{'code': '1b12d0f95a409144e78122ffa57a8bcb8daa4d21', 'message': 'Add more validation to AbstractFuture when cancellation causes are enabled, so that it matches the behavior when they are disabled.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=210110607\n'}"
633,"{'code': '1e072a7922a0b3f7b45b9f53405a233834175177', 'message': ""Fix parameter name in Javadoc\n\n`name` doesn't exist in the current context.\n\n#CodeHealth\n\nRELNOTES=Fix parameter name in Javadoc\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=209811377\n""}"
634,"{'code': '99ada5a3181f509981f6dd350e72ec8327162810', 'message': '[guava concurrent] Inlined getDone() and getUninterruptibly() to break the source dependency from AbstractFuture to other classes in /util/concurrent.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=209449236\n'}"
635,"{'code': 'a922dfe7222b2d5b5f3215be98f91777f0532a60', 'message': 'Add Javadoc for MediaType.KML+KMZ+MBOX\n\nCloses https://github.com/google/guava/pull/3244\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=209155440\n'}"
636,"{'code': '0bcf0c13bc74b06c0810c2e9eb19bae9c8ea9c00', 'message': ""Don't allocate a CancellationException if cancellation causes are not enabled.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=209011426\n""}"
637,"{'code': '0f8d3608af401d9090642da2b88f9a8b5999ff1f', 'message': ""Switch FluentFuture and AbstractFuture in inheritance chain\n\nRELNOTES=AbstractFuture doesn't expose FluentFuture APIs anymore.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=208673292\n""}"
638,"{'code': '59f3b8a6e148527b8c9539396c9441e3bc2bd0a2', 'message': 'Make delayed get() test more resilient to thread scheduling delays.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=208665643\n'}"
639,"{'code': '1cd76fd2f926a0791f1debd2817ce0d3a9409b45', 'message': 'Remove unnecessary local.\n\nIt is a holdover from when we used the value locally, rather than just returned it: 353ae349a24fb6c9b3e233ca03e4012761c7f3d8\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=208556144\n'}"
640,"{'code': 'e662c3db029d6a6f58052b6d88436ecb89cda348', 'message': 'Add information about thread wakeup or scheduling delays to TimeoutExceptions thrown from guava futures.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=208538024\n'}"
641,"{'code': '829db489bd07e2d2dfc41bf2781cb7cfb80b517f', 'message': 'Add missing @since tag.\n\nhttps://google.github.io/guava/releases/21.0/api/diffs/changes/com.google.common.util.concurrent.Monitor.html#com.google.common.util.concurrent.Monitor.newGuard_added(java.util.function.BooleanSupplier)\n\nNoticed because of https://github.com/google/guava/issues/2853#issuecomment-412360793\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=208515466\n'}"
642,"{'code': '4675e306f7ebae38ff9baa835b7c00b38a3d9f9b', 'message': 'Use gradle formatting\n\nFixes https://github.com/google/guava/pull/3216\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=208489219\n'}"
643,"{'code': 'a9dd7098f741d652fe2daf8193b831737dc36aa0', 'message': ""Add a gap method to Range which computes the range that lies between two ranges. This operation is particularly useful as a replacement for Joda Time's Interval.gap when migrating to Java Time which has no Interval class.\n\nJoda Time:\nInterval interval = ...;\nInterval gap = interval.gap(interval);\n\nJava Time (after this CL):\nRange<Instant> interval = ...;\nRange<Instant> gap = interval.gap(otherInterval);\n\nRELNOTES=Adds a gap() method to Range that computes the Range that lies between them.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=208259360\n""}"
644,"{'code': 'f264e9671e33744b4b7733cf3e4c8eb95be51999', 'message': 'Make ordering of Primitives#all{Wrapper,Primitive}Types deterministic\n\nRELNOTES=N/A\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=207985657\n'}"
645,"{'code': '2fc1819f6fe2fb6169fe3f377db93ca4a425053a', 'message': 'Enhance toString() for futures returned from ExecutionSequencer.\n\nAlso make tests for ExecutionSequencer actually run, by porting them to junit3 :-(\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=207970225\n'}"
646,"{'code': 'f7af0da04b1132af12f1734849f79db0fc0a6334', 'message': ""Add callable's toString to null failure message.\n\nI find this happens in mock-heavy tests, and this makes it easier to identify the source of the bad mock call.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=207936357\n""}"
647,"{'code': 'bd8019f69d284249d34a894ef9e44e4407f2544a', 'message': 'Fix javadoc typo in LinkedListMultimap\n\nFixes https://github.com/google/guava/issues/3228\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=207897448\n'}"
648,"{'code': '27bfe412b83bc64b7f4c0fa7fa21087c1e3320ad', 'message': 'Allow Service to transition from STARTING to TERMINATED. Add a new ""doCancelStart"" method that is called when a service is stopped while still starting. This gives implementations a chance to abort code which may be preventing the service from starting.\n\nRELNOTES=Added `doCancelStart` protected method to `AbstractService`\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=207746343\n'}"
649,"{'code': '0b3eb0f4e727f35b4e959f857d2bde8dcfd8ca40', 'message': 'Adds WASM as a supported Media type to Google Java utilities.\nAdds WASM support to the StaticFileAction in devserver (so that it is served\nwith the correct Content Type).\n\nRELNOTES=Adds WASM as a supported Media type to Google Java utilities.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=207663220\n'}"
650,"{'code': 'f29f5d3343a4963c6aeeadc1a185b9f308621bb1', 'message': 'Optimize ImmutableCollection.toArray(T[]) as per https://shipilev.net/blog/2016/arrays-wisdom-ancients/, the key goal being to avoid the necessity of zeroing a newly created array where possible.\n\nAddresses https://github.com/google/guava/issues/3209.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=207635563\n'}"
651,"{'code': 'bd3a4719b8844b3d17b5314f774c866b18ab27a6', 'message': 'Automated rollback of 45ca38358cac4368877650e591daf9650f5eaae1\n\n*** Reason for rollback ***\n\nThe test that caused the inital rollback is buggy\n\n*** Original change description ***\n\nIntroduce Trusted interface.\n\nSo we can create FluentFuture.Trusted without introduction of a dependency on FluentFuture in AbstractFuture.\n\n***\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=207588457\n'}"
652,"{'code': '45ca38358cac4368877650e591daf9650f5eaae1', 'message': 'Automated rollback of 227d67fc6600a6041a3a3881f1e1b6652d3cf75c\n\n*** Original change description ***\n\nIntroduce Trusted interface.\n\nSo we can create FluentFuture.Trusted without introduction of a dependency on FluentFuture in AbstractFuture.\n\n***\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=207326809\n'}"
653,"{'code': 'e4474ffb3c8f3568c4197886da98678714132d2a', 'message': 'Introduce Trusted interface.\n\nSo we can create FluentFuture.Trusted without introduction of a dependency on FluentFuture in AbstractFuture.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=207271690\n'}"
654,"{'code': '78d793e6de1500f35bdf43cd1031a024071b334b', 'message': 'Remove reference to Strings.isNullOrEmpty from AbstractFuture.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=207174127\n'}"
655,"{'code': '129b7f26367c6188c56d69f799cd96787f981866', 'message': 'Insulate AbstractFuture from Futures.java/MoreExecutors.java dependency\n\nMade DirectExecutor package-private so that we can refer to it directly in AbstractFuture.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=207154713\n'}"
656,"{'code': '0c5bb7afe4482cda6ef25fc87e3558897b0caafe', 'message': 'Add a note about the relative ordering of afterDone and listener execution\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=207146806\n'}"
657,"{'code': '59ca61a255620bf7e5f55f991c74e8b61e99d765', 'message': 'Prepare for release 26.0.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=206991255\n'}"
658,"{'code': 'a4cb541a19fec23dfdb675cea0cab498d167f548', 'message': 'Isolate AbstractFuture from dependency on Ascii.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=206957925\n'}"
659,"{'code': 'de09995c54989834289e37e0949ae0f713154415', 'message': 'Push back removals again.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=206818123\n'}"
660,"{'code': '59d7140f925abaaa54ddec1d004e8b60f3e618cc', 'message': 'Roll-forward addition of ExecutionSequencer.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=206806123\n'}"
661,"{'code': '13e39cd167a49aad525be462e61d9e5f2b1781ec', 'message': 'Change to some TODOs caused by some internal change.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=206688194\n'}"
662,"{'code': 'fdc342613ba3f2e94b23e4912671af4744fbf8cc', 'message': 'Automated rollback of c7aa4671cd70853515171333c823e3cdece92918.\n\n*** Original change description ***\n\nMove ExecutionSequencer into guava as @Beta.\n\n***\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=206620316\n'}"
663,"{'code': '8d1fbc96eaf281d78360c72fa17274c4c2227ebe', 'message': 'Move ExecutionSequencer into guava as @Beta.\n\nRELNOTES=Added `ExecutionSequencer`, a new utility to run a series of asynchronous operations serially.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=206609150\n'}"
664,"{'code': 'f1249c4f0449260ff123e8da6b921a37fc058147', 'message': 'Remove deprecated CharMatcher constants.\n\nRELNOTES=Removed deprecated `public static` fields from `CharMatcher`. Use the equivalent `public static` methods instead.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=205873973\n'}"
665,"{'code': '591825f50eb7382a85abcc5a69fb77f5f3c843cc', 'message': 'Reduce ProGuard retained code from usages of Multimaps.synchronizedXYZMultimap.\n\nEffects on MultimapSynchronizedProGuard:\nJAR bytes: 148295 bytes => 50236 bytes (-66%)\nClasses: 67 classes => 28 classes (-58%)\nMethods: 458 methods => 155 methods (-66%)\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=205710875\n'}"
666,"{'code': '87d87f5cac5a540d46a6382683722ead7b72d1b3', 'message': 'Remove Futures methods that implicitly use directExecutor().\n\nRELNOTES=Removed the `Futures` methods that implicitly use `directExecutor()`.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=205408078\n'}"
667,"{'code': '148688a62d696f9dd0d84205b8df77e5723bb92f', 'message': 'Fix initialCapacity calculation for a maximum size over Integer.MAX_VALUE.\n\nNoticed during discussion of https://github.com/google/guava/issues/3202\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=205076830\n'}"
668,"{'code': '34c1616279efe08089960aafd3df486cf8a04820', 'message': 'Change HostAndPort equals() and hashCode() to stop depending on whether brackets were included\n\nNow they depend only on host and port.\n\nUseful for storing IPv6 addresses in Set and Map\n\nRELNOTES=`net.HostAndPort`: Changed equals() and hashCode() to stop depending on whether brackets were included. Now they depend only on host and port.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=204509648\n'}"
669,"{'code': '08adcecc14943e90cb5c0fe05748c5ba9fa9e065', 'message': 'Internally, use PatternCompiler from Doubles.tryParse.\n\n(Redo of CL 202132002, which was partially rolled back in CL 202139691.)\n\nThis time including tests to cover the RE2J approach.\nTo avoid the errors of last time, I had to remove the possessive quantifiers under RE2J and replace \\p{XDigit} with [0-9a-fA-F] (which is equivalent; see the Pattern Javadoc).\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=204301262\n'}"
670,"{'code': '7975a2f0e678a8e57aacbfd79338b9a5f9481207', 'message': ""Add @Nullable to AbstractSequentialIterator's computeNext() method return value so that [] doesn't complain\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=203775669\n""}"
671,"{'code': 'f85390d6c89cfc6990763569f0a80ad9c678db76', 'message': ""Update Public Suffix data.\n\nThis copy is updated whenever Chrome's copy is updated, which is\ntypically every 6 weeks. Star the following to watch Chrome's updates:\n\nhttps://bugs.chromium.org/p/chromium/issues/detail?id=610495\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=203488570\n""}"
672,"{'code': '986a3a3ef168dc0edcd135d2a2a8808af248cd7c', 'message': 'Adds constants for Sec-Metadata header.\n\nhttps://github.com/mikewest/sec-metadata\n\nRELNOTES=Adds constants for Sec-Metadata header.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=203268410\n'}"
673,"{'code': 'c9add81c4a0139747b23e8bf7054abbfb30b72e9', 'message': 'Change Files.map(File, MapMode) to get the size of the file from the channel just before mapping rather than before opening the file.\n\nSee https://github.com/google/guava/issues/3190.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=202535742\n'}"
674,"{'code': '5af518fc0d123d05e8f377e60cc0c08f36cf90e1', 'message': 'Avoid using inotify, which is causing problem under JDK10.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=202521600\n'}"
675,"{'code': '644e9182d9929ade7252719fb6b685efbbe84acb', 'message': 'Remove @WeakOuter from ImmutableMultiset.ElementSet. @WeakOuter is useful for inner classes but not for static nested classes.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=202500806\n'}"
676,"{'code': 'fa63efcc6d36955f1385acfa26f35c4914d7b9ac', 'message': 'Remove incorrect Javadoc in Multimaps.\n\nFixes https://github.com/google/guava/pull/3141 and https://github.com/google/guava/issues/3140\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=202364744\n'}"
677,"{'code': '1b94234578817593da7275fc4afaa88a996355f9', 'message': 'Implement Lists.cartesianProduct.indexOf efficiently.\n\nFixes https://github.com/google/guava/pull/2544/\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=202202752\n'}"
678,"{'code': 'c0b2828d23e9e83130042d5f12b2d705dc846d67', 'message': ""add 'oraclejdk10' to Travis build matrix\n\nFixes #3186\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=202166033\n""}"
679,"{'code': '06aad4c2ba82ebc161a7984bec25f1770b23c42c', 'message': 'Make Guava tests pass under Java 10.\n\nRelevant to https://github.com/google/guava/pull/3186\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=202163744\n'}"
680,"{'code': '625d180373ed2c96e48570526e92e9dcf1f8ce9f', 'message': 'Partial automated g4 rollback of changelist 202132002.\n\n*** Reason for rollback ***\n\nThe regex in Doubles uses ++, which isn\'t supported by RE2.\n\n*** Original change description ***\n\nInternally, use PatternCompiler from Doubles.tryParse.\n\nAlso, remove equals() and hashCode() from CommonPattern implementations. The implementations delegate to the underlying Pattern classes, which use identity equality. If we want ""real"" equality, we should check the equality of pattern() and flags(). Why bother now? Because our automated equals() tests expect equals(), if present, to behave in a sane way once they discover the CommonPattern.compile() factory method (which they now do, since i...\n\n***\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=202139691\n'}"
681,"{'code': 'dc53de741f94c3e6a92bc9680c5cdfb49b6c94a8', 'message': 'Internally, use PatternCompiler from Doubles.tryParse.\n\nAlso, remove equals() and hashCode() from CommonPattern implementations. The implementations delegate to the underlying Pattern classes, which use identity equality. If we want ""real"" equality, we should check the equality of pattern() and flags(). Why bother now? Because our automated equals() tests expect equals(), if present, to behave in a sane way once they discover the CommonPattern.compile() factory method (which they now do, since it\'s now located on CommonPattern itself).\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=202132002\n'}"
682,"{'code': 'fea88fe49bb4ff6f83685e2370cdc5901db35946', 'message': 'Add MediaType for ""application/hal+json"".\n\nFixes https://github.com/google/guava/issues/3184\n\nRELNOTES=`net`: Added `MediaType` for ""application/hal+json"".\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=201955521\n'}"
683,"{'code': '86eabf1fe6991cf7fbc65980dac59a604303b362', 'message': 'Omit some unnecessary parens\n\nRELNOTES=N/A\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=201703715\n'}"
684,"{'code': '0530d7aaefebeff5795974bdffa9d7e7371286a2', 'message': 'Remove GWT emulation of UndeclaredThrowableException.\n\nWe no longer need it now that Futures.transform() no longer has a special case for it.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=201217932\n'}"
685,"{'code': '7a6a9718a7e321eea44ee6e65091a7f66e352805', 'message': 'Bump Checker Framework annotations version to 2.5.2.\n\nFixes https://github.com/google/truth/issues/467 for Truth and perhaps similar problems for other projects that use Guava.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=201097814\n'}"
686,"{'code': '9466b62f54a359d335a998fd549be4d0a6252197', 'message': 'Removed special-casing UndeclaredThrowableException in Futures.transform()\n\nRELNOTES=`util.concurrent`: Removed special-casing `UndeclaredThrowableException` in `Futures.transform()`.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=201046764\n'}"
687,"{'code': '39fda5d5fd2558b4770cf6c626ab5464515ad31f', 'message': 'Update Guava to use Truth 0.41.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=200852297\n'}"
688,"{'code': '438d6d9d34b5005e4d034709531bc08fefdc7ff8', 'message': 'Test setValue(null) (both success and failure cases).\n\nFixes #2467, #3176\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=200386576\n'}"
689,"{'code': '0cd4e9faa1360da4a343f84cb275d6eda0c5e732', 'message': 'Fix nonpublic identifiers and documentation that use ""whitelist"" or ""blacklist"" to use less problematic terms.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=199834981\n'}"
690,"{'code': 'c2f8967beb5a6feb9b104739d453dc116982a76a', 'message': 'Fix mangled Javadocs.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=198884357\n'}"
691,"{'code': 'dd71527fc004c5dc5451a7256097d46ba0abb4f5', 'message': ""Add a direct dependency from guava-gwt to checker-qual.\n\nThe GWT sources (specifically, GwtSerializationDependencies) use @Nullable directly, so we shouldn't rely on relying on it indirectly through guava-jre.\n\nHowever, what actually prompted this is a strange behavior in Compile-Testing, which Truth uses. This CL should help, though it might not be a fully solution.\nhttps://github.com/google/compile-testing/issues/149\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=198882337\n""}"
692,"{'code': '15764d7f37160d81c3489c860c868c3e92d6c637', 'message': 'Fix b/80241237 to correctly *not* change segment weight, nor report an eviction, when a compute() call does not change the present value.\n\nRELNOTES=Fix a bug where Cache.asMap.compute* methods could cause nonsensical weights to be stored, breaking cache eviction.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=198618238\n'}"
693,"{'code': '3ac6f729191e4d91f5cf61c806f075211058109c', 'message': 'Create an htmlescapers target for people who want to avoid the bulk of i18n identifiers and ICU4J.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=198553510\n'}"
694,"{'code': '01181d7da17e763ec06a344514ed441caa3f9198', 'message': ""Suppress exceptions raised from argument's toString methods during lenient formatting - take 2.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=198468540\n""}"
695,"{'code': '8287cdfa317ea97a7a5e8e1a0f5a786ae09d2eac', 'message': ""In open-source Guava, completely skip trying to discover pluggable PatternCompiler implementations.\n\nIt's never been possible to create such implementations externally, anyway, and users are now seeing problems running the useless discovery code under the module system.\n\nFixes https://github.com/google/guava/issues/3147\n\nRELNOTES=`base`: Fixed the `ServiceConfigurationError` that some users encountered when using Guava as a JPMS module.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=198449885\n""}"
696,"{'code': '73bb080d06c7174d2049831ffb4869e3e0c01f33', 'message': 'fix a grammar mistake\n\nFixes #3161\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=198404709\n'}"
697,"{'code': 'c30df914935008e5a6357e99aa368fb982c74039', 'message': 'Automated rollback of 9e6e1d02faa4ff07f2c5746a1902ae36cd54335b\n\n*** Reason for rollback ***\n\nAppears to tickle a J2CL bug.\n\n*** Original change description ***\n\nFix https://github.com/google/guava/issues/3156 by implementing a proper CollectSpliterators.flatMapTo{Int,Long,Double}.\n\n***\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=198112871\n'}"
698,"{'code': 'e04eb5948b7cdfa401a190bb3fb071a59dfbe5bc', 'message': 'Fix https://github.com/google/guava/issues/3156 by implementing a proper CollectSpliterators.flatMapTo{Int,Long,Double}.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=198102330\n'}"
699,"{'code': 'fffd6a33652bdf7c7b3782feebbf73b1edd75dac', 'message': ""Some changes to the Guava README.\n\nMove most information about the latest release to the release badge at the top, which now links to the GitHub release page for the latest release and automatically displays the latest release version number.\n\nNote: I probably would have removed explicit references to the latest version number entirely (meaning no changes to it need to be made when a new release is created) except for the fact that the release process currently relies on there being *some* change made when prepare_release is run so that the release script knows what commit to create the release from. There are ways we could deal with that, but I didn't want to deal with that yet.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=198086774\n""}"
700,"{'code': '4adedb7fd5293e7825853333a54af9cd0badbdb2', 'message': 'Add duration info to checkArugment() call in Suppliers.memoizeWithExpiration()\n\nRELNOTES=Add duration info to checkArugment() call in Suppliers.memoizeWithExpiration()\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=198051129\n'}"
701,"{'code': '0f49eb5dab9479c930cfa9f06970c6c63a6b1849', 'message': 'Use api instead of compile for Android\n\nFixes #3154\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=197947742\n'}"
702,"{'code': '824f80f850edec1be70465ac3e40621a9b67f892', 'message': 'Prepare for release 25.1.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=197733080\n'}"
703,"{'code': '57e9707542f5dc59beeee0f21a0f2e718f791c3a', 'message': ""Automated g4 rollback of changelist 197588491.\n\n*** Reason for rollback ***\n\nBreaking a JS build\n\n*** Original change description ***\n\nSuppress exceptions raised from argument's toString methods during lenient formatting.\n\n***\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=197631208\n""}"
704,"{'code': '69912164fdbaaa8d14befa73451e7d6f4c5bc587', 'message': 'Add missing test case for emptiesLast.\n\nCloses https://github.com/google/guava/pull/3089\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=197618303\n'}"
705,"{'code': '11327783b1317d5c73b98c0ee27a7f2b556af9d6', 'message': 'Put @NullableDecl last in lists of annotations\n\nFixes #3152\n\nRELNOTES=N/A\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=197590230\n'}"
706,"{'code': 'b3a48123f3d7eb9dd9b08ae7354a925ba2138103', 'message': ""Suppress exceptions raised from argument's toString methods during lenient formatting.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=197588491\n""}"
707,"{'code': '9876a8897ef89ea1368beaaf32d926dcc5e5efc6', 'message': 'Remove now-unused dependency on the Checker Framework compatibility annotations\n\nFor example, @NullableDecl.\n\nRELNOTES=N/A\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=197225712\n'}"
708,"{'code': '46f4886a7898a29e2156dca8701368a9aa72c11e', 'message': 'Migrate from @MonotonicNonNullDecl to @MonotonicNonNull\n\nRELNOTES=N/A\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=197223170\n'}"
709,"{'code': '821082833783f76a1b384924f904ecfd0281ae63', 'message': 'Fixes deadlocks in LocalCache.asMap().compute() if the Function throws\n\nCloses https://github.com/google/guava/pull/2901\n\nRELNOTES=Fixes deadlocks in `LocalCache.asMap().compute()` if the Function throws\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=197201577\n'}"
710,"{'code': 'aaf89e0093c7422fcbfaa5e4b948634aa6263726', 'message': 'Migrate ClassSanityTester to type annotations\n\nRELNOTES=N/A\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=197185172\n'}"
711,"{'code': '53c84f944b3d71ec40299ecffbc6b1ec1df7750f', 'message': 'Fix a typo. Change ""if the this"" to ""if this"".\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=197161416\n'}"
712,"{'code': '49a1df62b9a8a5e96f4f32a6bad4afd9cd871b56', 'message': 'Added @DoNotCall to Futures methods which do not take an executor\n\nFutures methods which run a callback and do not accept an Executor will be removed in a future release.  @DoNotCall has been added to these methods to prevent their use until that time.\n\nFor more information, see []\nRELNOTES=`util.concurrent`: Added @DoNotCall to Futures methods that do not accept an Executor in preparation for removal\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=196905403\n'}"
713,"{'code': 'f972c21554d99610ed2560fa915d16d6231dd450', 'message': ""Remove usages of CaliperMain from java_benchmarks targets since the deps for java_benchmarks don't need to (and shouldn't) include CaliperMain anymore.\n\nSuch benchmarks should be run via the java_benchmarks generated binary directly.\n\nGITHUB_BREAKING_CHANGES=n/a\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=196848071\n""}"
714,"{'code': '79acc6486355638865da909c372591eae0840e28', 'message': 'Continue migrating to type annotations for @Nullable\n\nRELNOTES=N/A\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=196724561\n'}"
715,"{'code': '31aac2196e229ffa03ac8663347582e74f6bf900', 'message': 'Swap Preconditions and Verify over to Strings.lenientFormat.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=196692442\n'}"
716,"{'code': 'b44fc6fdc31c6ae16a0d5f8208c2085894a57eb9', 'message': 'Branch eventbus, net, and escape for Java 7\n\nRELNOTES=N/A\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=196672675\n'}"
717,"{'code': '7fe1702aeacff37ad4a7aca5d82ac9958e46e639', 'message': 'Introduce Strings.lenientFormat(), copied from Preconditions.format(). Rewrote documentation but the method body remains unchanged.\n\nRELNOTES=Introduce `Strings.lenientFormat()`, copied from `Preconditions.format()`.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=196586088\n'}"
718,"{'code': '9b4a9dbe4cc44abf5ef8dd915acfffcf00f7c28c', 'message': 'Move type annotations immediately before the type they apply\nto\n\nFixes #3145\n\nRELNOTES=N/A\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=196531789\n'}"
719,"{'code': '4038405e4e0ed27cd5ab0e14f387f7fc14b5b713', 'message': ""Update Public Suffix data.\n\nThe copy is updated whenever Chrome's copy is updated, which is\ntypically every 6 weeks. Star the following to watch Chrome's updates:\n\nhttps://bugs.chromium.org/p/chromium/issues/detail?id=610495\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=196136837\n""}"
720,"{'code': '07b4f00bc2cb5fcab1b96df8d186e499703eb50d', 'message': 'Fix a documentation error.\n\nFluentFuture.catchingAsync does not take a future as an argument.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=195984943\n'}"
721,"{'code': '0a2258e6691a22aa7ff2604871b520d44bbac01f', 'message': 'Use the type annotation version of @Nullable in the Java 8 branch\n\nRELNOTES=Use the type annotation version of @Nullable in the Java 8 branch\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=195842620\n'}"
722,"{'code': 'd9113d51bf9f5537b4121807b2ed9862b80a6ad3', 'message': 'Add Token Binding HTTP header names to header libraries.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=195838519\n'}"
723,"{'code': '8845872de78d51bafdf76062c3e32a4c7c3291c6', 'message': 'Continue type annotation preparations in NullPointerTester\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=195723059\n'}"
724,"{'code': 'd94eb93fbce557cebb780b8ceff6dbb8806072b7', 'message': 'Support type annotations in NullPointerTester\n\nRELNOTES=N/A\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=195695054\n'}"
725,"{'code': '71b04c4271b9f280a23dd9a20a6f658a57cbc935', 'message': 'Replace http://errorprone.info with https://errorprone.info since that site\nserves from https now\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=195671646\n'}"
726,"{'code': '1477e566467de19399cf468062ffb8f893b0a46c', 'message': 'Bump jsr305 version.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=195303433\n'}"
727,"{'code': '436d4769bde6cf1928ebef10c8fc8d99b9747c31', 'message': 'Fix a few formatting nits\n\nRELNOTES=N/A\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=195263207\n'}"
728,"{'code': '0c0c70d5b95a4d1054c4fd89e40c1aade7282cae', 'message': 'Use @SafeVarargs annotation for Sets.cartesianProduct().\n\nFixes https://github.com/google/guava/pull/3127\nFixes https://github.com/google/guava/issues/2724\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=194451754\n'}"
729,"{'code': '2cac83e70d77f0fa9b2352fe5ac994280fc3b028', 'message': 'Prepare for release 25.0.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=194299979\n'}"
730,"{'code': 'f56117eeee4e4e1a8bce464f3f6455f8a9a9cab0', 'message': 'Push back some Guava removal dates to July 2018.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=194278086\n'}"
731,"{'code': 'ce6d93c20e143db79cc6b5c42109ca702e3acd55', 'message': 'Remove Files.fileTreeTraverser().\n\nRELNOTES=`io`: Removed deprecated `Files.fileTreeTraverser()` and `MoreFiles.directoryTreeTraverser()`.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=194276111\n'}"
732,"{'code': '62b40aa4f321e23ed14052ef441389256fb4ef5e', 'message': 'Add Annotations to a gwt.xml file.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=194244915\n'}"
733,"{'code': 'a0edc852497f111222d18b65b4ee634466561c0d', 'message': 'Re-fix https://github.com/google/guava/issues/3081.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=194114174\n'}"
734,"{'code': 'f89ece5721b2f637fe754937ff1f3c86d80bb196', 'message': 'Avoid presizing arrays.\n\nRELNOTES=Fixed Denial of Service vulnerability for servers that use Guava and deserialize attacker data: [CVE-2018-10237](https://github.com/google/guava/wiki/CVE-2018-10237).\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=194113840\n'}"
735,"{'code': '5d8209c28d83a7bc6e3153970efe4b795e8ad88d', 'message': 'Strip @DoNotMock annotations\n\nRELNOTES=N/A\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=193962447\n'}"
736,"{'code': '3383db7fdb965ec9bb61a4cfbe8acbca72d31b1b', 'message': 'Use https for API docs\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=193714229\n'}"
737,"{'code': 'e214f901e84ca370466c1393c7917f38059bde53', 'message': 'Make SuppliersTest.testMemoizeExceptionThrown() actually memoize the suppliers before testing them.\n\nFixes https://github.com/google/guava/issues/3122\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=193705380\n'}"
738,"{'code': 'd61375f7260e138e393822c2d1bda42a88419fc9', 'message': 'Adding a new (initially internal, pending API Review) static factory to Striped.\n\nThis allows for custom Lock injection, which might be useful for cases not covered by the currently existing factories. With this, Striped<Lock> with fair sync is possible.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=193545335\n'}"
739,"{'code': 'acf29b389bc9ff8701f69d05b30e9d899bc10e35', 'message': ""Don't enable use of Unsafe.getLong() on aarch64 devices.\n\nAndroid devices may report to run aarch64 while running in 32-bit mode, and then\ncrash when loading 64-bit values at unaligned addresses.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=193371483\n""}"
740,"{'code': '2d3f1be46eebf47d1b7188cdd33d31882fee7235', 'message': 'Automated rollback of a12ef6b46b26fe178021c099e3db6a8a99f5174e.\n\nIt looks like the original change can cause an infinite loop in LocalCache.LoadingValueReference.get().\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=193210868\n'}"
741,"{'code': '49a77de5fcf6f859e3a98df0fa1e91d7868cde39', 'message': 'Use Diamond.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=193206905\n'}"
742,"{'code': 'bf37f69a19bd78118b4601ee5b840cd1ffcaf508', 'message': 'Use Splitter for IPv6, too. This eliminates usage of java.util.regex from this file (which is used via String.split, otherwise).\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=193096877\n'}"
743,"{'code': 'b1bc2300943df6f67149b8f44a435162e1d8a73f', 'message': 'Use Splitter instead of String.split, in InternetDomainName.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=193087177\n'}"
744,"{'code': 'c84ffbfa6a3ccc941592d796b0ab35e282a661e9', 'message': 'Fix toString of NonSerializableMemoizingSupplier\n\nFixes #3107\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=193043319\n'}"
745,"{'code': '0dbd46b13a8df13998f69caa368359c878f36b67', 'message': ""Update Public Suffix data.\n\nThis copy is updated whenever Chrome's copy is updated, which is\ntypically every 6 weeks. Star the following to watch Chrome's updates:\n\nhttps://bugs.chromium.org/p/chromium/issues/detail?id=610495\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=192451340\n""}"
746,"{'code': 'ed5e8f7e10512f61d5ef947245f754cb72f821af', 'message': 'Remove pre-mature optimization of storing a total bit size for ConcatenatedHashFunction.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=192376063\n'}"
747,"{'code': '6cfbe16f0db316ec93698cff2e8bbcdf9b295214', 'message': 'Fix typo in Future javadoc.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=191789473\n'}"
748,"{'code': 'a652fa0d6354c78334f5ef9833ad1082333975c0', 'message': ""Fix tests that failed if we couldn't recursively delete securely by using Jimfs and just getting rid of the whole file system each time.\n\nFixes https://github.com/google/guava/issues/3100\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=191677352\n""}"
749,"{'code': '3ad8bffdc73cf604f8d32da450b2cfabe9785c0e', 'message': 'Slightly discourage the use of the <long, TimeUnit> overloads on CacheBuilder.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=191628750\n'}"
750,"{'code': '9e4e0e1dbb2bdcea79c7fd2470b2ccefbdaff2ac', 'message': 'remove maven-badges.herokuapp.com from readme\n\nFixes #3090\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=191298096\n'}"
751,"{'code': '9bf6d959014abb08f6d42902c9ce252e16ac0ea4', 'message': 'Add java.time.Duration overloads to CacheBuilder:\n  cacheBuilder.expireAfterAccess(Duration)\n  cacheBuilder.expireAfterWrite(Duration)\n  cacheBuilder.refreshAfterWrite(Duration)\n\nFixes https://github.com/google/guava/issues/2999\n\nRELNOTES=Add `java.time.Duration` overloads to `CacheBuilder`.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=191116944\n'}"
752,"{'code': 'a12ef6b46b26fe178021c099e3db6a8a99f5174e', 'message': 'Fix https://github.com/google/guava/issues/3081.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=190674741\n'}"
753,"{'code': '21f4dd72d436d62a07a89f6f818370c0574854c4', 'message': 'Ignore FinalizableReferenceQueueClassLoaderUnloadingTest in JDK 9.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=190513510\n'}"
754,"{'code': 'ddaf710bedddf89bdd85c4f3cc5c767a03fc5e5e', 'message': ""Open source refactorings directory.  This is knowingly very simple, without yet documentation or many refactorings; it's a prototype first.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=190505527\n""}"
755,"{'code': '38d2f3296b722e7d84a01d31037e31fade13951c', 'message': 'Supersource nullToEmpty and emptyToNull in Strings.java to native JS.\n\nThis allows us to improve performance in docs/xplat code that uses those methods.\n\nRELNOTES=GWT: Supersource `Strings.nullToEmpty()` and `Strings.emptyToNull()`\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=190278952\n'}"
756,"{'code': 'd0d5bd73d86efa5f3e4989ca589c9c7fc0b232b2', 'message': ""Stop using ByteArrayOutputStream in ByteStreams.toByteArray methods.\n\nThey were using ByteStreams.copy to copy the source to the BAOS. This meant reading from the source into a buffer, then copying from that buffer to a different buffer in the BAOS. Additionally, the way BAOS operates is not great: whenever it needs more space, it creates a new array twice as large as the previous, copies all bytes from the previous array to the new one, and discards the previous array.\n\nInstead, read directly from the source into a sequence of buffers. When a buffer fills up, don't discard it, but instead create a new, twice as large, buffer and start reading into it.\n\n(Roll-forward of previously rolled back e50ce7e7ed79fbce1901081838c8e0f9269d4128 now that the tests failing because they were mocking InputStream are fixed.)\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=190008826\n""}"
757,"{'code': '4f27e367ebf5a3e6dc5bcb922c0512eeebe3431d', 'message': 'HashBiMap: unnecessary call to rehashIfNecessary\n\nCloses https://github.com/google/guava/pull/3076\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=189940772\n'}"
758,"{'code': 'eff86554100e0e39c1f2f148d21dfb9626d2a52b', 'message': ""Automated rollback of e50ce7e7ed79fbce1901081838c8e0f9269d4128\n\n*** Reason for rollback ***\n\nCausing OutOfMemoryError in some tests.\n\n*** Original change description ***\n\nStop using ByteArrayOutputStream in ByteStreams.toByteArray methods.\n\nThey were using ByteStreams.copy to copy the source to the BAOS. This meant reading from the source into a buffer, then copying from that buffer to a different buffer in the BAOS. Additionally, the way BAOS operates is not great: whenever it needs more space, it creates a new array twice as large as the previous, copies all bytes from the previous array to the new one, and discards the previous array.\n\nInstead, read directly from the source into a sequence of buffers. When a buffer fills up, don't discard it, but instead create a new, twice as large, buffer and start reading into it.\n\n***\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=189797802\n""}"
759,"{'code': 'a2ce5d38d717f45c60901e618f6c3e0c0fa9a9a0', 'message': 'Set serialVersionUID in TypeToken.java\n\nRELNOTES=Add a `serialVersionUID` to `TypeToken`\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=189785498\n'}"
760,"{'code': 'e50ce7e7ed79fbce1901081838c8e0f9269d4128', 'message': ""Stop using ByteArrayOutputStream in ByteStreams.toByteArray methods.\n\nThey were using ByteStreams.copy to copy the source to the BAOS. This meant reading from the source into a buffer, then copying from that buffer to a different buffer in the BAOS. Additionally, the way BAOS operates is not great: whenever it needs more space, it creates a new array twice as large as the previous, copies all bytes from the previous array to the new one, and discards the previous array.\n\nInstead, read directly from the source into a sequence of buffers. When a buffer fills up, don't discard it, but instead create a new, twice as large, buffer and start reading into it.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=189775254\n""}"
761,"{'code': '6cd80a9443ab2d8f15c8bff60b289e3b5d94a9d0', 'message': ""Make ByteSource.read() use sizeIfKnown(), if available, to help avoid extra byte array allocations/copies.\n\nAlso don't use 32 as the initial ByteArrayOutputStream size in either version of ByteStreams.toByteArray(); just seems way too small. Use the default size for buffers instead, at a minimum.\n\nAlso change ConcatenatedByteSource.sizeIfKnown() to return absent if its Iterable of sources is not a Collection; this is to prevent sizeIfKnown() trying to loop over an infinite Iterable, which previous caused an infinite loop. That is also fixed in this CL; ConcatenatedByteSource.size() and sizeIfKnown() now stop and return Long.MAX_VALUE if the result would exceed that rather than going negative and continuing. But looping over an infinite Iterable in sizeIfKnown() seems potentially slow even if it will eventually stop, and as such against the spirit of sizeIfKnown(), which should be fast.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=189589899\n""}"
762,"{'code': 'e24fddc5fff7fd36d33ea38737b6606a7e476845', 'message': 'In Ascii, define a constant for the character case bitmask, and use it in place of 0x20 and 0x5f throughout the class.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=189264305\n'}"
763,"{'code': '444ff98e688b384e73d7b599b4168fed8003eb3f', 'message': 'Prepare for release 24.1.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=189080439\n'}"
764,"{'code': '8ec13b0cde7aaec648a429a2318ad626794ab79f', 'message': 'Add @since NEXT to new methods on Traverser.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=189037283\n'}"
765,"{'code': '9b9a17535673a34a2f6aa770ca97a75bafc7a251', 'message': 'Add X-Download-Options header (IE8 header to control the ""Open"" button on the download dialog).\n\nRELNOTES=Defined an [X-Download-Options](https://blogs.msdn.microsoft.com/ieinternals/2009/06/30/internet-explorer-and-custom-http-headers) header\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=188866409\n'}"
766,"{'code': '7f1defafe4155a4e14a9805cb6c14fa406b390f3', 'message': 'Change all instances of encoded.subSequence() to use a simple start index offset, which reduces the Java memory footprint for TrieParser by at at least 130 MBs. This is because the original call to subSequence() would generate a new String on the heap for each call, where as just using an offset avoids the need to generate a new String all together.\n\nThis memory enhancement was found while investigating flakiness issues for some tests which had the same root cause of: java.lang.OutOfMemoryError: GC overhead limit exceeded, mostly in the TrieParser class.\n\n100-test runs at original code:\nMemory usage\n- maximum: 503MiB (527,769,600 bytes)\n- average: 388MiB (407,225,077 bytes)\n\n100-test runs with my changes:\nMemory usage\n- maximum: 316MiB (325,271,552 bytes)\n- average: 221MiB (239,355,320 bytes)\n\nAt maximum: 187 MB saved\nAt average: 167 MB saved\n\nRELNOTES=Reduced heap memory usage when parsing domain names\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=188111053\n'}"
767,"{'code': 'e47fc1636b1cab1bbe0652545cc3ea7f6d62d7b9', 'message': 'Add isSubtypeOf() ""pre""-condition check before getSubtype() returns.\n\nWe have to call it before return because before type variable substitution, isSubtypeOf() can\'t apply.\n\nSee https://github.com/google/guava/issues/3048\n\nRELNOTES=Validate `TypeToken.getSubtype()`.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=187777105\n'}"
768,"{'code': 'd710bd82209651d6525fef7c917ae8534327e779', 'message': ""Fix List<Foo<?>>.isSubtypeOf(List<Foo<?>>).\n\nThis used to return false because isSubtypeOf() does a wildcard capture of the Foo<?> type parameter, turning it into Foo<C>, and then List<Foo<C>> isn't a subtype of List<Foo<?>>.\n\nWildcard capture is needed for resolving types at invariant or contravariant elements (fields and parameters). But for resolving in covariant context, wildcard should remain as is.\n\nI found this when trying to add isSubtypeOf() precondition check in getSubtype(), in response to https://github.com/google/guava/issues/3048.\n\nRELNOTES=TypeToken.isSubtypeOf() bug fix.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=187730924\n""}"
769,"{'code': 'cbc53084465d3a95cdb8cbd79da21624e3086d5d', 'message': 'Traverser.java: add support for multiple start nodes.\n\nUpdate documentation (in this file and in graphs_explained.md) relating to behavior and definitions of equals() and hashCode().\n\nRELNOTES=`common.graph.Traverser`: add support for traversing from multiple start nodes.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=187659103\n'}"
770,"{'code': 'ea66419b6aa52678816df77caa304e617255cca5', 'message': 'Correct a typo in ImmutableBiMapTest.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=187268361\n'}"
771,"{'code': '45b0489d4ae7f6e71e4359eae48cb15d112d9317', 'message': 'Automated g4 rollback of changelist 185433235.\n\n*** Reason for rollback ***\n\nb/73552091\n\n*** Original change description ***\n\nAdd hash flooding protection to HashBiMap.\n\n***\n\nRELNOTES=fix open source test breakage\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=187066451\n'}"
772,"{'code': '9ebd95a9a84a21e96bf2f077f4cc93efc14e9b86', 'message': ""Always expect a suppressing Closer.\n\nSince we now require Java 7, it should always be available -- other than under Android, where we don't currently run this test.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=186302361\n""}"
773,"{'code': 'e64553ed6ca419993abfae2f0b474cbe6cf7df81', 'message': 'Hide Downloading/Downloaded lines from output.\n\nhttps://stackoverflow.com/a/35653426/28465\nhttps://blogs.itemis.com/en/in-a-nutshell-removing-artifact-messages-from-maven-log-output\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=186050936\n'}"
774,"{'code': '06b08063e2dbf3386a12e5bb9be9cec6432994ae', 'message': ""Add @Override to some serialization methods.\n\nThe problem with this is that they're not overrides under GWT. The solution is to mark them @GwtIncompatible -- probably not a bad idea, anyway, in case they ever come to depend on libraries not available under GWT.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=186045036\n""}"
775,"{'code': 'f21f6f623fb6b64c4eefd1cf4f4fdae709f983a9', 'message': ""Update Public Suffix data.\n\nThe [] copy is updated whenever Chrome's copy is updated, which is\ntypically every 6 weeks. Star the following to watch Chrome's updates:\n\nhttps://bugs.chromium.org/p/chromium/issues/detail?id=610495\n\n[]\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=185723883\n""}"
776,"{'code': '0e6b381b484774adb0466106dade91341fda11b9', 'message': ""Document that the compact collections aren't universal wins.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=185590939\n""}"
777,"{'code': '17ccf5c69c533ac694823829d0fa8a8a1b57f03e', 'message': 'Fix @since tag from CL 185440742.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=185549467\n'}"
778,"{'code': '94ff327176a098541d432a029e354a5828e6de5a', 'message': 'Migrate uses of the double-brace initialization pattern to factory methods or builders\n\n[]\n\n[]\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=185463519\n'}"
779,"{'code': '34ee6ec7a731ff2d4b23fedd3a10a768c2049507', 'message': 'Add linear 16 audio type. We are using L16 audio in our project ([] and need this field defined to match our mime type.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=185440742\n'}"
780,"{'code': 'c92686d75ac754065f298da2e342f6bc70ee8bdc', 'message': 'Add hash flooding protection to HashBiMap.\n\nRELNOTES=Add hash flooding protection to HashBiMap.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=185433235\n'}"
781,"{'code': 'afe6ff88023693d9c825b8d619dab56276fa8885', 'message': ""Add hash flooding protection to ImmutableMultiset, falling back to a JDK HashMap backed implementation when probable flooding is detected.\n\nWhile we're at it, rearchitect ImmutableMultiset on GWT to use that implementation rather than the handrolled hash table in RegularImmutableMultiset.\n\nRELNOTES=Add hash flooding protection to ImmutableMultiset, and significantly improve its GWT impl while we're at it.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=185173745\n""}"
782,"{'code': 'a98632ee83a6c4c93f4b31820437f68ddde041dd', 'message': ""In Java 8 branch, fall back to an ImmutableSet backed by j.u.HashSet (and its binary tree magic) if apparent hash flooding is detected.\n\nAs part of this restructuring, we redesign Immutable{Set,SortedSet}.Builder to always allocate O(distinct) memory instead of O(insertions), deduplicating as elements come in (somewhat lazily in ISS.B's case).\n\nRELNOTES=Protect against hash flooding in ImmutableSet, addressing https://github.com/google/guava/issues/3016.  Additionally, use only O(distinct) memory in Immutable{Set,SortedSet}.Builder, rather than O(insertions).\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=185156965\n""}"
783,"{'code': '26b09c1fd30c23bc0e48701ff7131f2de1e5fe35', 'message': 'Adds the @Immutable annotation to InternetDomainName.java.\n\nRELNOTES=`net`: Added the `@Immutable` annotation to `InternetDomainName`\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=185033867\n'}"
784,"{'code': '7abf5990b29f19a7e8c458b63af73c88523e1820', 'message': 'Group overloads together.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=185026614\n'}"
785,"{'code': 'a132ce0d0fb0307cfa0ae0b8f51b5b37dc6f4729', 'message': 'In Java 8 branch, fall back to j.u.HashMap based implementation in ImmutableBiMap if hash flooding appears probable.  (Partially motivated by external feature requests, partially by []\n\nRELNOTES=Protect against hash flooding in ImmutableBiMap, addressing https://github.com/google/guava/issues/3015\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=185017249\n'}"
786,"{'code': '594e3b73fe99b66110920c5fd7f2a6ddb95f2e6d', 'message': 'Hide class used from Google-internal test.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=184686532\n'}"
787,"{'code': '198c384ccdb14af182fea9b484963ba6c249fb7d', 'message': ""Remove incorrect Javadoc.\n\nIt looks like we got this wrong back in CL 62226066 (from https://codereview.appspot.com/58760044/patch/1/10006): The tests aren't identical. One tests a null key; the other, a null value. Does that sound right?\n\n(Motivation: The @link in the Javadoc is broken, so we're getting warnings from the Guava build.)\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=184573912\n""}"
788,"{'code': '42361d3784e15efde9975340f411a28ffda57279', 'message': 'Add meaningful null check messages to ImmutableTable.\n\nThis is especially important in cellOf(), where we had 3 null checks on a single line, making it impossible to determine which argument caused the NPE.\n\nRELNOTES=Improved NPE messages in ImmutableTable.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=184557451\n'}"
789,"{'code': '06395ae25fc0756503b0b4550009c66f7a354688', 'message': 'In Java 8 branch, fall back to j.u.HashMap based implementation in ImmutableMap if hash flooding appears probable.  (Partially motivated by external feature requests, partially by []\n\nRELNOTES=Protect against hash flooding in ImmutableMap\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=184313314\n'}"
790,"{'code': '49454c4afb0c681bb3df519bc9635170f8be82c7', 'message': 'Work around breakage in which release builds run maven-javadoc-plugin 2.7 in child poms, even though pluginManagement tells them to use 3.0.0.\n\nThis is similar to the fix for Truth in []\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=184063561\n'}"
791,"{'code': '49f562c03c92ce7111f456876ca3ee34faf3d8c1', 'message': 'Replace @link reference to an old, removed API with @code.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=184058216\n'}"
792,"{'code': 'abd0906f6ed288671b75aa6f828a6ba904fe4477', 'message': 'Prepare for release 24.0.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=184031422\n'}"
793,"{'code': '11e5f8ebc8508d8313bde7a421846747ce324034', 'message': 'Mark HashFunction @Immutable.\n\nRELNOTES=Mark HashFunction @Immutable.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=183717956\n'}"
794,"{'code': 'b928d40eb637706755def56c8e93ba859271e66e', 'message': '""Fix"" Types.toString doc for arrays.\n\nRelevant to https://github.com/google/guava/pull/2990\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=183436855\n'}"
795,"{'code': '9f0269fd0a43458850b5d3989bf5033d35d8679f', 'message': 'Restrict length of varargs array in immutable collection factory methods\n\nThis PR documents the restriction that immutable collection factory methods with varargs pose on the length of the last argument, and adds a check for this precondition to prevent NegativeArraySizeException from being thrown.\n\nFixes #3027\nFixes #3026\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=183115996\n'}"
796,"{'code': 'bf1931b9d9a68e3ef7c3c1ba1c5377aaac06bb9d', 'message': ""Stop using `forward.new InverseEntrySet()` because javac9 generates Objects.requireNonNull() calls for it.\n\nThat method isn't available under old versions of Android.\nThankfully, the calls are caught by Animal Sniffer.\nInternally, [] eliminates these when targeting Java 6 (b/32446315). Another reason to build with Bazel someday?\n\nNo effect on Proguard numbers.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=183091037\n""}"
797,"{'code': 'd57a40e546cfe6daa8cdfe3fb9c5c8dafb446227', 'message': 'Delete deprecated Predicates.assignableFrom(Class). Please use Predicates.subtypeOf(Class) instead.\n\nRELNOTES=Delete deprecated Predicates.assignableFrom(Class).\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=182953732\n'}"
798,"{'code': '41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7', 'message': 'Remove Graphs.equivalent() methods. Please use graphA.equals(graphB), or Objects.equals(graphA, graphB) instead.\n\nRELNOTES=remove Graphs.equivalent()\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=182890292\n'}"
799,"{'code': 'f91ef6ca6dd95bd3806c8b573f54cd429abc5857', 'message': ""Remove a couple of APIs scheduled for removal in January 2018.\n\nFor other APIs scheduled for removal, give them a stay of execution until April so their existing usages can be cleaned up. Also update a few methods that were scheduled for removal in February to April, since we won't be doing @Beta removals in February.\n\nALSO update the java7 version of TreeTraveserTest to match changes that were made at some point in the past to the mainline version but not merged.\n\nRELNOTES:\n  - `collect`: Removed `BinaryTreeTraverser`.\n  - `concurrent`: Removed `Futures#dereference` and `MoreExecutors#sequentialExecutor`.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=182827661\n""}"
800,"{'code': '7b65f8eb78c2dd31ff6f4b4bd564645b343b69fc', 'message': ""Clarify purpose of CacheBuilder.newBuilder's function signature.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=182618578\n""}"
801,"{'code': '5b39c8b9fe6f52ded7edf4be8812d7a62eeeb6fa', 'message': 'Improve allocation behavior of Multiset copying and addAll implementations in both Guava versions.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=182573989\n'}"
802,"{'code': 'c046982d128519c5da68327b32eaa91f072c8c7e', 'message': 'Add efficient TreeMultiset.forEachEntry.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=182444635\n'}"
803,"{'code': '39ec61e6e98065d14e12cda3bf543e7a295fbf51', 'message': 'Add even more toString details to Futures.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=182432847\n'}"
804,"{'code': 'c8cca4a31d615444b6644fcfeb095d860254f56d', 'message': 'Add implementation for EnumMultiset.forEachEntry.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=182421568\n'}"
805,"{'code': '393066e5b5d1e34f2b8b7cce778d45a12dbe4c66', 'message': 'Adding [HTTP2-Settings] HTTP header.\n\nhttp://httpwg.org/specs/rfc7540.html#Http2SettingsHeader\n\nRELNOTES=Defining ""HTTP2-Settings"" HTTP header according to http://httpwg.org/specs/rfc7540.html#Http2SettingsHeader\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=182408190\n'}"
806,"{'code': '8be5ace4b008c0076badb1e3955ebd411111792a', 'message': '*Graph.java: add @since NEXT to incidentEdges(), and retire the use of @inheritDoc in favor of just copying the documentation over wholesale.  (This preserves the @throws tags in the subinterfaces.)\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=182404360\n'}"
807,"{'code': 'f7d5b0f6de5568c1901b5fb0fd442330518535c9', 'message': ""Remove AbstractMultiset's default O(n) (or worse) implementations of size(), count(), and clear().\n\nAs part of the cleanup:\n- make TreeMultiset.clear() (in the normal case) O(n) rather than something worse (due to rebalancing)\n- make AbstractMapBasedMultiset stop allocating its entrySet() and an entrySet().iterator() during construction\n- make TreeMultiset.clear() (in the normal case), StandardConcurrentMultimap.clear() and several Multiset view implementations' clear() methods avoid allocating Entry objects\n\nMaybe it makes sense to have such default implementations in AbstractMap, a public type accessible to end users who might really want a quick and dirty Map. But AbstractMultiset is package-private, and we'd probably rather be explicit about when we're choosing an O(n) implementation.\n\nAlso, rename Multisets.sizeImpl to linearTimeSizeImpl.\n\nEffects on ArrayListMultimapProGuard:\n58546 bytes => 58285 bytes\n54 classes => 54 classes\n409 methods => 406 methods\n\nEffects on HashMultimapProGuard:\n60833 bytes => 60572 bytes\n54 classes => 54 classes\n415 methods => 412 methods\n\nEffects on HashMultisetProGuard:\n21990 bytes => 21685 bytes\n17 classes => 17 classes\n150 methods => 147 methods\n\nEffects on LinkedHashMultimapProGuard:\n70828 bytes => 70567 bytes\n61 classes => 61 classes\n490 methods => 487 methods\n\nEffects on LinkedHashMultisetProGuard:\n26100 bytes => 25794 bytes\n21 classes => 21 classes\n172 methods => 169 methods\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=182364268\n""}"
808,"{'code': '57787964acb81ea339d70cc7478af59e9f9ba70a', 'message': 'Include method name and parameters in the message of the ArithmeticException during overflows.\n\nHaving this information available would make debugging overflows much easier.\n\nRELNOTES=include method name and parameters in the message of the ArithmeticException during overflows\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=182280515\n'}"
809,"{'code': '831db2b231dbe0b970ffb37f7fed96ea16d60967', 'message': 'Improve allocation behavior of ImmutableMultiset.Builder.addAll(Multiset).\n\nEffects on ImmutableMultisetProGuard:\n33905 bytes => 34170 bytes\n29 classes => 29 classes\n236 methods => 241 methods\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=182273415\n'}"
810,"{'code': '1881ceab1265aa32c39c09a6f38392772bab52e5', 'message': 'Add allocation measurements for basic immutable collection operations.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=182237064\n'}"
811,"{'code': '8eb3ea467668f63a78f03527adf7053d6502434d', 'message': 'Fix tests that assume Class.getClassLoader() returns a URLClassLoader so that they can call getURLs() to instead parse the ""java.class.path"" system property.\n\nThis doesn\'t fully fix FinalizableReferenceQueueClassLoaderUnloadingTest: I still see a failure for testUnloadableInStaticFieldIfClosed. But at least the other 2 tests in the file pass, and the failure is now a ""real"" failure (""Predicate did not become true within 10 second timeout"") rather than a ClassCastException.\n\n(I\'ve confirmed that the failing test computes exactly the same classpath under Java 9 as under Java 8, so I\'m not sure exactly what\'s up. I may ask emcmanus.)\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=182227182\n'}"
812,"{'code': 'b0a6cfeb6d88710ff4ca1e3d277ff6b815fb66bf', 'message': 'Update maven-javadoc-plugin to 3.0.0.\n\nAs part of that, migrate from additionalparam, which was deprecated and removed this year, to additionalOptions.\n\nAlso, remove duplicate -Xdoclint:-html line.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=182209120\n'}"
813,"{'code': 'd71d86f6513e8a96e5d9860df0592dead3587d61', 'message': 'Remove org.apache.maven.plugins, which is the default:\n\nhttps://maven.apache.org/guides/introduction/introduction-to-plugin-prefix-mapping.html#Configuring_Maven_to_Search_for_Plugins\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=182205463\n'}"
814,"{'code': '8afcda2d3cdfcf92d4d19862073b8cdf0f159f2a', 'message': 'Suppress warnings from existing nested futures.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=182120920\n'}"
815,"{'code': 'ce73003d8420a091fd36ca2c7c23deb6437e4fe1', 'message': 'Code cleanup.\n\nFixes #3032\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=182092218\n'}"
816,"{'code': 'd2d9a2947260a9e90189c66bcaeb67f0a49fcbfc', 'message': 'Avoid loading some javax.annotation classes\n\nTo work around split package issues under JDK 9.\n\nRELNOTES=N/A\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=182073944\n'}"
817,"{'code': 'a43b4aa7f43c4fad61ca20c3c6744a6f4f1b68ed', 'message': ""Fix REE handling in SerializingExecutor.\n\nThe old implementation had two bugs:\n1. Tasks that threw RejectedExecutionException on submission would still execute later\n2. Two threads submitting to an idle SequentialExecutor might see one submission succeed, even if the delegate threw REE. The submitted task wouldn't run until someone else successfully submitted another task.\n\nThis costs a possible extra lock acquisition  (to solve #2) and an allocation (to solve #1) when submitting to a SequentialExecutor that doesn't already have worker scheduled or running.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=181810127\n""}"
818,"{'code': '7da42d206b81c8fe184f73a9314fd8ffcf565560', 'message': 'Add MediaType.withParameters(String attribute, Iterable<String> values)\n\nRELNOTES=`net`: Added `withParameters` method that can replace a specific attribute with zero or more values\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=181805050\n'}"
819,"{'code': 'd788bc15f0721b94f6f79f0a9063247083745a27', 'message': ""common.graph: add incidentEdges() method to Graph/ValueGraph.\n\nAlso added an override of remove() to the Set returned by the edges() method, to ensure that it wouldn't allow removal of elements from the set.\n\nJava []\n\nRELNOTES=Graph, ValueGraph: added incidentEdges() method.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=181529878\n""}"
820,"{'code': '7462c09319af3e1972ef6739b612800d417aec08', 'message': 'Improve handling of Function argument so that it shows up in toString() while the future is running\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=181512420\n'}"
821,"{'code': 'b007d6db4ab71c5fc94623cac6eb8a90e227ff3a', 'message': 'Make checkedMultiply available under GWT.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=181503751\n'}"
822,"{'code': 'c911eb8cb4b010a1973640b2399206e9ac36de3e', 'message': ""Update Public Suffix data.\n\nThe [] copy is updated whenever Chrome's copy is updated, which is\ntypically every 6 weeks. Star the following to watch Chrome's updates:\n\nhttps://bugs.chromium.org/p/chromium/issues/detail?id=610495\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=181484427\n""}"
823,"{'code': 'd2dad01718097b54703159bd703ddaf43479b1d3', 'message': 'Annotate all public AbstractTester subclasses with @Ignore.\n\nThis prevents our internal Android test-suite builder from trying to run them directly.\n(The tests continue to run on the JVM (JUnit 3) test runner, which doesn\'t look for the JUnit 4 @Ignore annotation. Yes, it\'s a little strange that the Android test-suite builder respects the JUnit 4 annotation even for these JUnit 3 tests.)\n(I\'m not 100% sure what happens to our generated TestSuiteBuilder suites under Android, as they\'re currently broken for other reasons (b/30575968). If this CL causes any problem for them, we\'ll have to deal with it later. I\'m fairly sure that we\'re safe, though, as we generate code that constructs the test and calls its methods directly.)\n\nThis in turn lets us back out our binary-under-test hack.\n\nAnd that means we no longer trigger b/69965697, so we start running more tests under Android:\n\n29 => 88 for collect.testing\n1526 => 1698 for labs.collect\n2519 => 5772(!) for collect\n(no change for primitives)\n\n(Note: I believe we\'re still ignoring suite() methods. That\'s kind of a good thing, since those would further increase the number of tests to run. I\'m not sure if we even can run suite() methods with the default runner, as I believe it looks only for ""test*"" methods. I\'ve been hoping to eventually split all the suite() methods into separate classes and put them through the generated-TestSuiteBuilder-test magic, but as noted above, that doesn\'t work for Android at the moment, anyway.)\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=181351240\n'}"
824,"{'code': 'c0c117a04ab47f2fb380311efec97a7d9851cd6e', 'message': ""Fix some simple cases of stack overflow in AbstractFuture.toString()\n\nThis is a partial fix for people doing weird things and can easily be circumvented by people adding some indirection, but this is also what AbstractCollection.toString does so it seems like there is a decent precedent for a partial solution to this problem.\n\nIt doesn't appear to be possible to implement a full fix without resorting to things like threadlocals or examining the callstack, and this problem doesn't seem important enough to justify a solution like that.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=181325137\n""}"
825,"{'code': '078b85f0c64040c337f297e7e99187f642a92d88', 'message': 'Overhaul Android {Hash,LinkedHash}Multiset to operate much more directly on ObjectCountHashMap, eliminating many unnecessary classes, allocations, and even calls to hashCode on the elements.\n\nEffects on HashMultisetProGuard:\n25422 bytes => 20198 bytes\n20 classes => 16 classes\n163 methods => 123 methods\n\nEffects on LinkedHashMultisetProGuard:\n31438 bytes => 21635 bytes\n27 classes => 17 classes\n197 methods => 141 methods\n\nEffects on ArrayListMultimapProGuard:\n58474 bytes => 57991 bytes\n54 classes => 53 classes\n408 methods => 409 methods\n\nEffects on HashMultimapProGuard:\n60759 bytes => 60277 bytes\n54 classes => 53 classes\n414 methods => 415 methods\n\nEffects on LinkedHashMultimapProGuard:\n70757 bytes => 70274 bytes\n61 classes => 60 classes\n489 methods => 490 methods\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=181210213\n'}"
826,"{'code': '10ccb819ae4946fe6143590e3fedaea60eaf223f', 'message': ""Let our internal Android test runner run AbstractPackageSanityTestsTest's nested test class directly.\n\nThis is the path of least resistance, as detailed in the internal CL description.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=181202500\n""}"
827,"{'code': '992116b28a806a1655a3849b4584eb265d6c2c96', 'message': 'Add nullness annotations on the field in LinkedListMultimap.java\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180938849\n'}"
828,"{'code': '419467f34db1a7b57dccd7c225381c1e068c157a', 'message': 'Add nullness annotations on the fields in TreeBasedTable.java\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180938258\n'}"
829,"{'code': '2ad712b3109854cc45aede386a0d6205930795f5', 'message': 'Add nullness annotations on the fields in AggregateFuture.java\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180938123\n'}"
830,"{'code': '08e19cbd533582acfcd6c274146707e89004819e', 'message': 'Add nullness annotations on the fields in AbstractScheduledService.java\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180937879\n'}"
831,"{'code': '13c2a0b00d4c354dc9406f0d0601bb7aad44e2c7', 'message': 'Add nullness annotations on the fields in MinMaxPriorityQueue.java\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180937758\n'}"
832,"{'code': '9f0f396d5800173b45677149180c87a9fb876049', 'message': 'Add nullness annotations on the fields in ImmutableMultiset.java\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180937690\n'}"
833,"{'code': 'a7ae471cf91038da4dd454a96b8867bad5ce3fca', 'message': 'Add nullness annotations on the fields in DescendingMultiset.java\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180937684\n'}"
834,"{'code': '8025c8e4fdab14b930fffda9d47aa20fec98aa5f', 'message': 'Add nullness annotations on the fields in StandardTable.java\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180937460\n'}"
835,"{'code': 'a015b4a87fcadba6baf7f21fe8f728b2aeae2f1d', 'message': 'Add nullness annotations on the fields in Maps.java\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180937454\n'}"
836,"{'code': '0be2e30fc0911f2915e1f0ab623d1311ecaac175', 'message': 'Add nullness annotations on the field in ConcurrentHashMultiset.java\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180937110\n'}"
837,"{'code': 'e467252e0db647f1086188ab1093c6fe3294e2ab', 'message': 'Add nullness annotations on the fields in TreeMultiset.java\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180936791\n'}"
838,"{'code': 'b2ab1f0a0bf3849085f55acbd01e3768f995aeb7', 'message': 'Add nullness annotations on the fields in LinkedHashMultimap.java\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180936351\n'}"
839,"{'code': 'dc737c7a66ec753bf713ada5e24273ab045ba25b', 'message': 'Add nullness annotations on the fields in AbstractTable.java\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180727704\n'}"
840,"{'code': 'd07879cc68d09e76d832582e135692f2ad9becc0', 'message': 'Add nullness annotations on the field in AbstractMapBasedMultimap.java\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180718989\n'}"
841,"{'code': 'd6d92bdd072f0ef5b51eb00ecd078b8b438e20e5', 'message': 'Add nullness annotations on the field in AbstractMapBasedMultiset.java\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180714612\n'}"
842,"{'code': '092114536b415f8aca3150387fc5c02ab258f22d', 'message': 'Add nullness annotations on the field in AbstractMultiset.java\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180712315\n'}"
843,"{'code': 'e6b9bb496259856213c30b3bcfc992e84564e4ff', 'message': 'Fix bug where Multiset.elementSet.remove did not propagate changes to Multiset.size.\n\nThis fix is not the most efficient, and incurs unnecessary allocation in Multiset.elementSet iteration, but is a tolerable workaround until we do something more sophisticated.\n\nRELNOTES=Fixed bug in Multiset.elementSet.remove in Android branch.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180706899\n'}"
844,"{'code': '002f4bd6008580b4549a424cb279109f2ae4c13d', 'message': 'Add nullness on the fields in AbstractBiMap.java\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180700096\n'}"
845,"{'code': 'ae70a5c3968a49cc122f106ac44e3a14c4896801', 'message': 'Make ""emptiesFirst(naturalOrder())"" infer the type more reliably.\n\nFixes #3022.\n\n[]\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180665310\n'}"
846,"{'code': 'a33e717b645e1d15357e7a8c4df37d798214d897', 'message': 'Add nullness annotations on the fields in ArrayTable.java\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180599467\n'}"
847,"{'code': '6419216ceb8d709486c5fe1957437d39b4d81a9f', 'message': 'Add nullness annotations on the fields in CompactHashMap.java\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180597049\n'}"
848,"{'code': '5aee3ac7de63517156e3616cfc10322d192c47ec', 'message': 'Add nullness annotations on the field in AbstractMapBasedMultiset.java\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180595190\n'}"
849,"{'code': '342e38bc8402d81d536ae1e5461aa6b70f55a107', 'message': 'Add nullness annotations on the fields in HashBiMap.java\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180595157\n'}"
850,"{'code': '1e855072cf7c0a452eff3a31e3a555a0412713a8', 'message': 'Add nullness annotations on the fields in CompactHashSet.java\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180595149\n'}"
851,"{'code': '3d99dd6a582d1c753a71a63b80b611a9a7a582da', 'message': 'Add nullness annotations on the fields in AbstractMultimap.java\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180595115\n'}"
852,"{'code': '78cdd38f9731cb27a968fb333275f53c4e79d6ef', 'message': 'Add nullness annotations on the field in AbstractSequentialIterator.java\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180595106\n'}"
853,"{'code': '18a736e95f4d73304dbef1b892d644482342558e', 'message': 'Add nullness annotations on the fields in CompactLinkedHashSet.java\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180593794\n'}"
854,"{'code': '169fba64b372659806c332dac64cf4e1fa179934', 'message': 'Add nullness annotations on the field in CompactLinkedHashMap.java\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180593336\n'}"
855,"{'code': 'f3fe08a62b99c75dfa107949af399888fb2fa944', 'message': 'Add nullness annotations on the fields in Cut.java\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180592138\n'}"
856,"{'code': 'fff4c80b01b5ff66dcb4e4141666b3b5faebc6b9', 'message': 'Add nullness anntations on the field in AbstractMapBasedMultimap.java\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180591831\n'}"
857,"{'code': '42529bc38bc611f555e21b0b78f7c005269f9786', 'message': 'Add nullness annotations on the field in AbsatractIterator.java\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180591710\n'}"
858,"{'code': '72e9658a58bf55eeb6a5ee29b526bd7817614ab5', 'message': 'Add nullness annotations on the fields in AbstractSortedMultiset.java\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180590921\n'}"
859,"{'code': '035ea9accf591ecbb5522add76a3c2e348837f69', 'message': 'Add nullness annotations on the fields in ImmutableSetMultimap.java\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180589716\n'}"
860,"{'code': 'a956b8d9045410e5f086b73ca444f170e264f04e', 'message': 'Add nullness annotations on the fields in ImmutableMultimap.java\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180589265\n'}"
861,"{'code': 'd40791fc6c13a8f99633de71c7fd8cb7269bcd04', 'message': 'Push down implementation of Multiset.iterator() from AbstractMultiset.\n\nEffects on ArrayListMultimapProGuard:\n59653 bytes => 58487 bytes\n55 classes => 54 classes\n414 methods => 408 methods\n\nEffects on HashMultimapProGuard:\n61927 bytes => 60761 bytes\n55 classes => 54 classes\n420 methods => 414 methods\n\nEffects on LinkedHashMultimapProGuard:\n71932 bytes => 70766 bytes\n62 classes => 61 methods\n495 methods => 489 methods\n\nEffects on HashMultisetProGuard:\n26583 bytes => 25426 bytes\n21 classes => 20 classes\n169 methods => 163 methods\n\nEffects on LinkedHashMultisetProGuard:\n32586 bytes => 31429 bytes\n28 classes => 27 classes\n203 methods => 197 methods\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180585887\n'}"
862,"{'code': '6824c4d104836e6de387eecf9f3da87ecd57c0d7', 'message': 'Add nullness annotations on the fields in Iterators.java\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180585443\n'}"
863,"{'code': 'b6492022b5122cf3f73820d1cc4ce78794558541', 'message': 'Add nullness annotations on the fields in LinkedHashMultimap.java\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180576953\n'}"
864,"{'code': 'dab6c597fce2e59f280642bfbe0044f83eb0947f', 'message': 'Add nullness annotations on the fields in ImmutableEntry.java\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180566933\n'}"
865,"{'code': '395e8d1de97e2de6498f3c277022f551328b9a41', 'message': 'Add nullness annotations on the fields in ImmutableMap.java\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180566256\n'}"
866,"{'code': '232f23d1ecd87609577b821f9e75fb3726d756cd', 'message': 'Add nullness annotations on the fields in ImmutableRangeSet.java\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180566119\n'}"
867,"{'code': '25b25fc244979651535dcc00cf79366bb6890621', 'message': 'Add annotations on the fields in GeneralRange.java\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180565813\n'}"
868,"{'code': '0587768e3e83429a74f2c9d2bda198e5052e8c04', 'message': 'Add nullness annotations on the fields in AbstractBiMap.java\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180565729\n'}"
869,"{'code': '8c8d60c59121aadc8d2b04fa4f7a30363598f28b', 'message': 'Eliminate the apparently unnecessary Multimaps.Keys.KeysEntrySet.\n\nEffects on ArrayListMultimapProGuard:\n62399 bytes => 59653 bytes\n57 classes => 55 classes\n426 methods => 414 methods\n\nEffects on HashMultimapProGuard:\n64797 bytes => 61927 bytes\n57 classes => 55 classes\n432 methods => 420 methods\n\nEffects on LinkedHashMultimapProGuard:\n74790 bytes => 71932 bytes\n64 classes => 62 classes\n507 methods => 495 methods\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180564093\n'}"
870,"{'code': '3a93661aa078bf7e7ef000afb86fa4f528076d37', 'message': 'Add nullness annotations on the fields in ImmutableTable.java\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180293563\n'}"
871,"{'code': '2a045c839c0de9b72d746eed334a267e8879019c', 'message': 'Add nullness annotations on the fields in LinkedListMultimap.java\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180280622\n'}"
872,"{'code': 'defe4e880cb9c6e8c949ad86ef5fb3ae86b433d0', 'message': 'Add nullness annotations on the fields in MapMakerInternalMap.java\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180275726\n'}"
873,"{'code': '9f592b5eaf405c6e886465077755efe609bba1b8', 'message': 'Add nullness annotations on the fields in Lists.java\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180235531\n'}"
874,"{'code': '99730a15a616b841902ae58a55241e7e1392a80f', 'message': 'Add nullness annotations on the fields in MapMakerInternalMap.java.\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180235523\n'}"
875,"{'code': '239a56316a1089f52eb9466bf271c8a4fa6c1390', 'message': 'Add nullness annotations on the fields in MapMaker.java\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180235387\n'}"
876,"{'code': 'a84923fdb4def9b8c7fd0777d0b66954d91eb2db', 'message': 'Add nullness annotations on the fields in Maps.java\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180235376\n'}"
877,"{'code': '472d252f684b5f09f21f701c95dbd627aef96b5d', 'message': 'Add nullness annotations on the field in MinMaxPriorityQueue.\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180235360\n'}"
878,"{'code': '4351f43196b47d0b5acd86ba82b354ab103b3735', 'message': 'Add nullness annotations on the field in Multimaps.java\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180235336\n'}"
879,"{'code': '51177f97bc5bb50e0242db164a267722be078c9e', 'message': 'Add nullness annotations on the fields in Multisets.java\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180235326\n'}"
880,"{'code': '5cd74d28a2994554e01cbc33501a13e3ffd09e04', 'message': 'Add nullness annotations on the fields in StandardTable.java\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180219638\n'}"
881,"{'code': '8721f2cfc5a55b7b1608d04d11e531ee72cbf216', 'message': 'Add @Nullable on the field in Tables.java\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180219605\n'}"
882,"{'code': '5c9ed4923b21863a317ed971ba51247e8c8feba9', 'message': 'Add nullness annotations on the fields in RegularImmutableMultiset.java\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180219580\n'}"
883,"{'code': '114d32094d3c956d7975cb7d3e43236351184ec4', 'message': 'Add nullness annotations on the fields in Synchronized.java\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180218976\n'}"
884,"{'code': '56b1cc77ee8f1005f2979bb603981adf5cc05f87', 'message': 'Add @NullableDecl on the field in TreeBasedTable.\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180218874\n'}"
885,"{'code': '63c0965408de1d39c3a336d2fe6cfb910dc7054b', 'message': 'Add @NullableDecl on the field in TopKSelector.java\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180218819\n'}"
886,"{'code': '77859722f2ab83141b8392cc4ecf52cd4552e32e', 'message': 'Add nullness annotations on the fields in NaturalOrdering.\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180218746\n'}"
887,"{'code': '289cff4981aebc8d84e890c18fe209a60305d26e', 'message': ""Attempt to fix bugs where objects that are incompatible with eachother are tested for equality (generally: Lists and Sets, or Classes of incompatible types).\n\nIn order to facilitate enhancements to an existing compile-time error check ([] it's necessary to fix existing issues before updating the static analysis.\n\nIf I've gotten the fix incorrect, please let me know here, or, if you'd prefer, I can add a suppression on the existing buggy code for you or your team to pick up later.\n\n[]\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180217836\n""}"
888,"{'code': '699e66a65dfc803988ddb06998415cd80e9430cf', 'message': 'Add @NullableDecl to the fields of TreeMultiset\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180217049\n'}"
889,"{'code': '0f7dd9d15ce52b4a4064e6cdd9af3eba6c63992f', 'message': 'Add nullness annotations on the field in Sets.java\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180216808\n'}"
890,"{'code': 'd0383634dc3c6eb93e31797f13058c5eb331e3dd', 'message': 'Push down AbstractMapBasedMultimap.wrapCollection logic into subtypes.\n\nEffects on ArrayListMultimapProGuard:\n80560 bytes => 62399 bytes\n73 classes => 57 classes\n575 methods => 426 methods\n\nEffects on HashMultimapProGuard:\n91236 bytes => 64797 bytes\n80 classes => 57 classes\n646 methods => 432 methods\n\nEffects on LinkedHashMultimapProGuard:\n101181 bytes => 74790 bytes\n87 classes => 64 classes\n720 methods => 507 methods\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180216298\n'}"
891,"{'code': '8912f0781a45c7313544fe7013ef8db94ee2c963', 'message': 'Add nullness annotation to the filed ""holder"" in Streams.\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180206224\n'}"
892,"{'code': '734578a386670aa812b5c2f76ad78a968cb7196a', 'message': 'Push down logic of AbstractMapBasedMultimap.createKeySet into subtypes.\n\nEffects on ArrayListMultimapProGuard:\n83062 bytes => 80560 bytes\n75 classes => 73 classes\n599 methods => 575 methods\n\nEffects on HashMultimapProGuard:\n93757 bytes => 91236 bytes\n82 classes => 80 classes\n670 methods => 646 methods\n\nEffects on LinkedHashMultimapProGuard:\n103682 bytes => 101181 bytes\n89 classes => 87 classes\n744 methods => 720 methods\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180205257\n'}"
893,"{'code': 'e3d3b2a2f40e675154b31f254dab75d0be483f32', 'message': 'Push down logic of AbstractMapBasedMultimap.createAsMap into subtypes.\n\nEffects on ArrayListMultimapProGuard:\n86365 bytes => 83062 bytes\n77 classes => 75 classes\n642 methods => 599 methods\n\nEffects on HashMultimapProGuard:\n97037 bytes => 93757 bytes\n84 classes => 82 classes\n713 methods => 670 methods\n\nEffects on LinkedHashMultimapProGuard:\n106972 bytes => 103682 bytes\n91 classes => 89 classes\n787 methods => 744 methods\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=180201876\n'}"
894,"{'code': '96294be6f728d3d88a67cc125cca18e32cd99b2e', 'message': 'Add missing nullable annotations on the fields in the cache package.\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=179953330\n'}"
895,"{'code': 'cc7db9c93ca1d900de2c8bd47d0091533c014966', 'message': 'Add missing nullness annotation on the field in WellBehavedMap\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=179929812\n'}"
896,"{'code': '39f94051bb9f4ee355cbe0ecf706328a4518d574', 'message': 'Add @MonotonicNonNullDecl to TreeRangeSet.\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=179929331\n'}"
897,"{'code': '3cc099880dd4183e5fade1ea9524968b2e4e95b0', 'message': 'Add mising nullness annotations to the fields in the io package in guava.\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=179929055\n'}"
898,"{'code': 'ac0503b50d25eb3ec2c8e459d24d9664d70664ef', 'message': 'Add missing nullness annotations on the fields in the base package in guava.\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=179929002\n'}"
899,"{'code': '7146b1752454252110bf0f8b414524102462d664', 'message': 'Add missing nullness annotations on the fields in the hash package in guava.\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=179928714\n'}"
900,"{'code': '2219b8ba2c584ecb73ef0f425e467a53925692aa', 'message': 'Add @MonotonicNonNullDecl to UnmodifiableSortedMultiset.\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=179928569\n'}"
901,"{'code': 'b8e50369243a9ff4603c81328e0c1dc0d626db50', 'message': 'Add missing nullness annotations to the fields in the concurrent package in\nguava.\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=179866024\n'}"
902,"{'code': '44dcaef1404c592c07bd7f09987adcb906b0c0f7', 'message': 'Make Stopwatch.toString() work under j2cl, which checks casts more strictly than GWT.\n\nWithout this change, I see:\njava.lang.ClassCastException: java.lang.Double cannot be cast to Number\n\nThe original code was taken from []\nI noticed this when attempting to use a similar idiom in Truth (now with j2cl tests, yay! but not yet for Guava): http://[]\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=179865256\n'}"
903,"{'code': 'cabe970448982758adaa7850b71c95fb8611a20b', 'message': ""{#id} doesn't work from the Github Wiki, I think, only from github.io sites (e.g., http://google.github.io/truth/faq#imports).\n\nFollowup to CL 179856462.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=179861167\n""}"
904,"{'code': '04df3ed0e53ce52ceb172405696245943b98243d', 'message': 'Link directly to instructions for repackaging Guava.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=179856462\n'}"
905,"{'code': '079db3945c9c62d235aa788c268409e36fc8a478', 'message': 'Add a recommendation to the Guava README that libraries using Guava use the Beta Checker.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=179830005\n'}"
906,"{'code': '5cb62f8b84ec0aeec933b7da3250c341cbea7432', 'message': 'Prepare for release 23.6.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=179736077\n'}"
907,"{'code': 'a37ccd13af00ed9f938b6382125b38cc41eb58c0', 'message': ""Add dummy test methods to Compact(Linked)HashSetTest so that the Maven test runner doesn't complain.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=179735094\n""}"
908,"{'code': '9acfe48a7801dff159080aef8503350efd69e448', 'message': ""Don't use Iterables.transform in Maps.{key,value}Iterator.\n\nEffects on ArrayListMultimapProGuard:\n88459 bytes => 86365 bytes\n80 classes => 77 classes\n647 methods => 642 methods\n\nEffects on HashMultimapProGuard:\n99137 bytes => 97037 bytes\n87 classes => 84 classes\n718 methods => 713 methods\n\nEffects on LinkedHashMultimapProGuard:\n109126 bytes => 106972 bytes\n94 classes => 91 classes\n792 methods => 787 methods\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=179727140\n""}"
909,"{'code': 'df3df9e2ef9bffe86eb7ac627e59d900cfd5788a', 'message': 'Link to the things I wrote about our Javadoc link problems.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=179724753\n'}"
910,"{'code': '01cfa0b47c2e57029f8d0f7772cdbbb843ec733f', 'message': 'Add missing @Nullable annotations on the fields in the reflect package.\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=179720129\n'}"
911,"{'code': 'ce4bc9bc7b9ae10e2da1ba8c4ade01a69be6f608', 'message': 'Add missing @NullableDecl on the fields ""instance"" in Suppliers.\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=179706506\n'}"
912,"{'code': 'e365f2f1393d41dcc38f4e4c25ed4cc518ee568f', 'message': 'Add @since NEXT to FutureCombiner.run.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=179706233\n'}"
913,"{'code': '798774bf0ca9f5d641b949b041b601c92f784fde', 'message': 'Use compact data structures in ImmutableMultimap builders.\n\nYes, this hurts code size, we want to know how much.  It does improve allocations incurred in creating ImmutableMultimaps.\n\nEffects on ImmutableListMultimapProGuard:\n61163 bytes => 71554 bytes\n52 classes => 61 classes\n409 methods => 465 methods\n\nEffects on ImmutableSetMultimapProGuard:\n82739 bytes => 97853 bytes\n69 classes => 80 classes\n560 methods => 641 methods\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=179594998\n'}"
914,"{'code': '7a839f7c0827ee82d3b9781f6943465dd575c049', 'message': ""Don't mention ImmutableSortedSet in Sets.unmodifiableNavigableSet.  That was causing many immutable collections to get retained by mutable multimap usages.\n\nEffects on ArrayListMultimapProGuard:\n108287 bytes => 88459 bytes\n97 classes => 80 classes\n791 methods => 647 methods\n\nEffects on HashMultimapProGuard:\n113059 bytes => 99137 bytes\n99 classes => 87 classes\n819 methods => 718 methods\n\nEffects on LinkedHashMultimapProGuard:\n122946 bytes => 109126 bytes\n106 classes => 94 classes\n892 methods => 792 methods\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=179593919\n""}"
915,"{'code': 'ccc239f85a4a0b3620148c54df1c55cb2db71d53', 'message': 'Start some simple improvements to multimaps in code size and allocation count.\n\nAll of these measurements are taken after the switch to CompactHash* structures:\nInitial ArrayListMultimapProGuard:\n108287 bytes\n97 classes\n791 methods\n\nInitial HashMultimapProGuard:\n113059 bytes\n99 classes\n819 methods\n\nInitial LinkedHashMultimapProGuard:\n122946 bytes\n106 classes\n892 methods\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=179580140\n'}"
916,"{'code': 'b3b74c0ddbd8dbd9e4307661143de574adb3400f', 'message': 'Add missing @NullableDecl on fields in google common base.\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=179576682\n'}"
917,"{'code': 'ba01ab2a8778af76c78a5c1e5bc29c56bbd38731', 'message': 'Push view creation down to subtypes of AbstractMultimap, so ImmutableMap can strip them out.\n\nEffects on ImmutableListMultimapProGuard:\n80938 bytes => 61163 bytes\n74 classes => 52 classes\n546 methods => 409 methods\n\nEffects on ImmutableSetMultimapProGuard:\n102365 bytes => 82739 bytes\n91 classes => 69 classes\n693 methods => 560 methods\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=179494000\n'}"
918,"{'code': 'd181e111ada75de243598c2522e725905adcdcc3', 'message': 'Use maps directly in ImmutableMultimap.Builder, instead of delegating to a mutable multimap.\n\nEffects on ImmutableListMultimapProGuard:\n135061 bytes => 80938 bytes\n122 classes => 74 classes\n963 methods => 546 methods\n\nEffects on ImmutableSetMultimapProGuard:\n147668 bytes => 102365 bytes\n131 classes => 91 classes\n1024 methods => 693 methods\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=179487542\n'}"
919,"{'code': 'd21ad7b1a035997fa000dedc7e60e4a434539362', 'message': ""Don't bother sharing a superclass of ImmutableMultimap.values().iterator and ImmutableMultimap.entries().iterator.\n\nEffects on ImmutableListMultimapProGuard:\n135474 bytes => 135061 bytes\n123 classes => 122 classes\n966 methods => 963 methods\n\nEffects on ImmutableSetMultimapProGuard:\n148081 bytes => 147668 bytes\n132 classes => 131 classes\n1027 methods => 1024 methods\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=179461342\n""}"
920,"{'code': '9aaeb95faee253d0742003bab6f1365f27f6aba9', 'message': ""Push down the implementation of ImmutableMultiset.SerializedForm, so ImmutableMultimap.keys() doesn't retain implementations of ImmutableMultiset it doesn't use.\n\nEffects on ImmutableListMultimapProGuard:\n142493 bytes => 135474 bytes\n128 classes => 123 classes\n1002 methods => 966 methods\n\nEffects on ImmutableSetMultimapProGuard:\n155088 bytes => 148081 bytes\n138 classes => 132 classes\n1063 methods => 1027 methods\n\nEffects on ImmutableMultisetProGuard:\n34823 bytes => 34989 bytes\n29 classes => 29 classes\n236 methods => 237 methods\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=179454342\n""}"
921,"{'code': 'd49a375f71427bf97eed9a31b575f62e24324e6d', 'message': ""Make CompactHash data structures package-private in external Guava.  (Before we didn't expose them at all externally.  This is so they can be used in multimap guts in Android.)\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=179254514\n""}"
922,"{'code': 'f8818809918b91c07ed2559714ea72d081fbc985', 'message': 'Avoid having ImmutableMultimap/ImmutableListMultimap depend on ImmutableSetMultimap due to serialization shenanigans.\n\nEffects on ImmutableListMultimapProGuard:\n153838 bytes => 142493 bytes\n136 classes => 128 classes\n1060 methods => 1002 methods\n\nEffects on ImmutableSetMultimapProGuard:\n154486 bytes => 155088 bytes\n136 classes => 137 classes\n1062 methods => 1063 methods\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=179251652\n'}"
923,"{'code': 'c6a2cf04045b3b6852ecc925d0bfd76d77d8936b', 'message': 'Add missing @NullableDecl to OrderedPermutationIterator.nextPermutation\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=179190829\n'}"
924,"{'code': '94a971941d12e063cad28b3fae1db6ba3b06fee1', 'message': ""Explicitly document that RateLimiter is thread-safe now that we've removed @ThreadSafe.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=179103073\n""}"
925,"{'code': '207e0716eb9d2540c072d3003a643e80b75f8fc5', 'message': 'Remove an unneeded dependency.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=179039547\n'}"
926,"{'code': '2f6e034d896fbd219f52fa47a8d5afd49cb0220c', 'message': 'Switch from @Nullable to @NullableDecl.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=178964631\n'}"
927,"{'code': '794a8ca432c6561ff2495f8155d8f900d79a37c3', 'message': 'Add Uninterruptibles methods for Condition.\n\nFixes #3010, #2870\n\nRELNOTES=Add Uninterruptibles methods for Condition.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=178964181\n'}"
928,"{'code': '201af437f443f4d86689b670729adbd67925416c', 'message': 'Add missing @NullableDecl to BaseEncoding.java\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=178961614\n'}"
929,"{'code': '1edf17d8c84a5c15372b82ab29bc7168d4289a96', 'message': 'Add missing @Nullable to Shorts.ShortArrayAsList.\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=178915723\n'}"
930,"{'code': 'f58203fbc4ba0597fdbc7cfebe7ff2c5ce6ec1d4', 'message': ""Link to JDK Supplier, just as we link to JDK Function and Predicate.\n\nChange Function and Predicate to display the fully qualified name of the class they're linking to.\n\nAlso link to the JDK versions of all those classes in the backport, which we're building with a Java 8 version of Javadoc and from which we're linking to Java 9 Javadoc.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=178673695\n""}"
931,"{'code': '610ddd154554d5ca13b524216fef813803ddfcb4', 'message': 'Partial g4 rollback of changelist 170507937.\n\n*** Reason for rollback ***\n\nThe Files APIs are @Beta, so they can still be removed.\n\n*** Original change description ***\n\nRemove removal dates for non-@Beta deprecations.\n\n***\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=178623245\n'}"
932,"{'code': '08983fb25b9f915d2ca51393697f34c9a3854bbd', 'message': ""Document that it's safe to exclude Guava's annotation dependencies.\n\nhttps://groups.google.com/d/topic/guava-discuss/esIthL_9AIc/discussion\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=178379402\n""}"
933,"{'code': '5326555a3bf848b26058b17dfb6d66de4a5b542d', 'message': 'Reduce iterations of testBuilder_bruteForce under GWT.\n\nMaven timings:\nImmutableDoubleArrayTest: 00:11 -> 00:01\nImmutableIntArrayTest: 00:35 -> 00:04\nImmutableLongArrayTest: 00:49 -> 00:06\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=178279918\n'}"
934,"{'code': 'c223b988e3ece8118f2247b34659e2ff97e5c7fa', 'message': 'Run fewer iterations of testByteArrayRoundTrips.\n\nMaven timing: 01:30 -> 00:09\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=178279876\n'}"
935,"{'code': '12606526ebd5e57798435f584b2db46db906458a', 'message': ""Document why AbstractIteratorTest looks slow under GWT but really isn't.\n\n(It's because it runs first in our internal test setup, so it pays for browser startup.)\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=178279804\n""}"
936,"{'code': '6f22af40e1526b8c194e9e36d457bcd37680c6a3', 'message': 'Migrate from jsr305 @Nullable to Checker Framework @NullableDecl.\n[]\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=178274875\n'}"
937,"{'code': '4bd7d17d99316aecb4006873d8f8bb73fe636b78', 'message': ""Make Javadoc output quieter.\n\nThe important stuff is still there: See below. (I inserted the ERROR from an earlier version of []it's not present at HEAD or that in CL.)\n\n[INFO] --- maven-javadoc-plugin:2.10.4:javadoc (default-cli) @ guava ---\n[ERROR] Error fetching link: https://checkerframework.org/api//package-list. Ignored it.\n[INFO]\n1 warning\n[WARNING] Javadoc Warnings\n[WARNING] /tmp/tmp.DGUFqGBmMY/guava/src/com/google/common/collect/ImmutableTable.java:226: warning - Tag @link: can't find Builder() in com.google.common.collect.ImmutableTable.Builder\n\nI think you had silenced some other plugins not too long ago. Maybe it just wasn't clear how to silence this one, since it uses a Javadoc-specific flag? But if there's a reason to avoid quiet here, let me know.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=178259859\n""}"
938,"{'code': '76f93b3f00ff2691f8f4909264aa21688f3a3d65', 'message': ""Fix JSR305 links yet again.\n\nI broke them when I added links to the Checker Framework, which began to claim javax.annotations, just as the JDK had previously done.\n\nI had hoped that the fix was as simple as moving the Checker Framework to the -linkoffline section so that it could come after JSR305, but that didn't work: Maven tries to prevalidate the package-list file, and somehow it fails to connect to checkerframework.org.\n\nWe saw problems with pre-validation before with JSR305 in []But I diagnosed it wrong there: I thought that Maven was trying to fetch the Javadoc root URL -- e.g., https://checkerframework.org/api/. But I was wrong: I was confusing the `link` and `linkUri` variables in the maven-javadoc-plugin source. In fact, Maven tries to fetch the package-list file, as you'd expect. But for some reason, this fails for javadoc.io and for checkerframework.org, even though it succeeds for docs.oracle.com. But it doesn't appear to be a User-Agent problem: I'm able to wget from checkerframework.org with the default Java User-Agent (which fails in the javadoc.io case), an absent User-Agent, and the User-Agent that I think maven-javadoc-plugin is using (judging from its source code). Plus, as far as I can tell, the connection attempt doesn't even get far enough to send a User-Agent.\n\nHere are the logs provided by `mvn javadoc:javadoc -Dorg.slf4j.simpleLogger.log.org.apache.http=debug`. (Note: Even *that* logging may go away with the upgrade to maven-javadoc-plugin 3.) Both javadoc.io and checkerframework.org follow the same pattern:\n\n[DEBUG] Connection request: [route: {s}->https://checkerframework.org][total kept alive: 0; route allocated: 0 of 2; total allocated: 0 of 20]\n[DEBUG] Connection leased: [id: 1][route: {s}->https://checkerframework.org][total kept alive: 0; route allocated: 1 of 2; total allocated: 1 of 20]\n[DEBUG] Connecting to checkerframework.org:443\n[DEBUG] Connection org.apache.http.impl.conn.DefaultClientConnection@45545e7a closed\n[DEBUG] Connection org.apache.http.impl.conn.DefaultClientConnection@45545e7a shut down\n[DEBUG] Connection org.apache.http.impl.conn.DefaultClientConnection@45545e7a closed\n[DEBUG] Connection released: [id: 1][route: {s}->https://checkerframework.org][total kept alive: 0; route allocated: 0 of 2; total allocated: 0 of 20]\n[DEBUG] Connection manager is shutting down\n[DEBUG] Connection manager shut down\n[ERROR] Error fetching link: https://checkerframework.org/api//package-list. Ignored it.\n\nCompare to the successful logs for docs.oracle.com:\n\n[DEBUG] Connection request: [route: {s}->https://docs.oracle.com][total kept alive: 0; route allocated: 0 of 2; total allocated: 0 of 20]\n[DEBUG] Connection leased: [id: 0][route: {s}->https://docs.oracle.com][total kept alive: 0; route allocated: 1 of 2; total allocated: 1 of 20]\n[DEBUG] Connecting to docs.oracle.com:443\n[DEBUG] CookieSpec selected: best-match\n[DEBUG] Auth cache not set in the context\n[DEBUG] Target auth state: UNCHALLENGED\n[DEBUG] Proxy auth state: UNCHALLENGED\n[DEBUG] Attempt 1 to execute request\n[DEBUG] Sending request: GET /javase/9/docs/api//package-list HTTP/1.1\n...\n\nSo what is wrong? Probably SSL. Based on that suspicion, I learned that I could set -Djavax.net.debug=ssl, which produced more information before the close message:\n\nmain, WRITE: TLSv1.2 Handshake, length = 239\nmain, READ: TLSv1 Alert, length = 2\nmain, RECV TLSv1.2 ALERT:  fatal, handshake_failure\nmain, called closeSocket()\nmain, handling exception: javax.net.ssl.SSLHandshakeException: Received fatal alert: handshake_failure\nmain, IOException in getSession():  javax.net.ssl.SSLHandshakeException: Received fatal alert: handshake_failure\nmain, called close()\nmain, called closeInternal(true)\n[DEBUG] Connection org.apache.http.impl.conn.DefaultClientConnection@3667faa8 closed\n\nAnd now that I've written that, I can't reproduce it :\\ With -Djavax.net.debug=*all*, I can see what else is going on:\n\n%% Cached client session: [Session-1, TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384]\nmain, called close()\nmain, called closeInternal(true)\nmain, SEND TLSv1.2 ALERT:  warning, description = close_notify\nmain, WRITE: TLSv1.2 Alert, length = 26\nmain, called closeSocket(true)\n[DEBUG] Connection org.apache.http.impl.conn.DefaultClientConnection@58af5076 closed\n\nMaybe the server has an aggressive timeout? I think I saw someone suggest that as a possibility.\n\nI don't know more detail than that. I see people who suggest that the problem could involve:\n- connection managers (which maven-javadoc-plugin uses): https://stackoverflow.com/a/24084141/28465\n- a need for a specific key store: https://stackoverflow.com/a/5206837/28465\n- a need for extra crypto implementations/settings: https://stackoverflow.com/a/38264878/28465\n- or other settings (I at least tried passing -Dhttps.protocols= and adding the suggested (possibly wrong in this case) -Dhttps.cipherSuites to that): https://stackoverflow.com/a/32226688/28465\n- a new JDK: https://stackoverflow.com/a/39405982/28465\n- a new HTTPClient (though whatever comes with the newest maven-javadoc-plugin (assuming that that's built in to the plugin and not to Maven??) apparently wasn't good enough): https://stackoverflow.com/a/43220038/28465\n- aggressive timeout, I think, as noted above\n- maybe weird things happen when maven-javadoc-plugin closes the stream without reading from it?\n- I think other things that I've forgotten, and surely other things I haven't understood.\n\nAnyway, I made a local copy of the package-list, just as I'd done for the javadoc.io projects, even though this time there's only one problem instead of two :)\n\nI'm pretty sure that the Checker Framework links will work now, too, but I haven't tested because we don't have any yet in Guava itself.\n\nPossibly I should just switch us to back using -link instead of -linkoffline, adding the User-Agent override that I figured out last time....\n\nAlso, I moved some configuration to the parent pom so that it also affects guava-testlib. But I didn't move the most interesting parts, which require a little more work (though hopefully not much...).\n\nRe-fixes https://github.com/google/guava/issues/2965\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=178252119\n""}"
939,"{'code': '9df5d9e8fa136902dfb5b1aaf1da6768fc38e838', 'message': '[guava concurrent] Added ""Submitted tasks have a happens-before order as defined in the Java Language Specification"" to the documentation of newSequentialExecutor(). This popped up as a useful way to think about this Executor on a related design.\n\nRELNOTES=nil\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=178188916\n'}"
940,"{'code': 'aff6fe1841510ed17f4bbf247c42882029eb3f10', 'message': 'Deprecate ConcurrentHashMultiset#createEntrySet()\n\nFixes #3004\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=177983295\n'}"
941,"{'code': '2d0957c2bf1ee888f02119e84d824be8393c6145', 'message': 'Recognize @NullableDecl in NullPointerTester and friends.\n\nAlso, migrate common.testing to itself be annotated with @NullableDecl, rather than @Nullable.\nI could claim that I did this as a small-scale test, but honestly I just didn\'t feel like pulling the ""real"" changes of this CL out from the @NullableDecl migrations already present in my client :)\n\n[]\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=177902265\n'}"
942,"{'code': 'e8d744eb1399eae061b9b71abf860bfbaba6fb55', 'message': 'Depend on checker-compat-qual instead of checker-qual.\n\nRELNOTES=Depend on checker-compat-qual instead of checker-qual.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=177853288\n'}"
943,"{'code': '908f2fede67ae5ff3234f6d56630f42c04ecfc6e', 'message': ""Miscellanous followup to CL 177814345:\n\n- Make inverse() thread-safe in the mainline, as it is in the backport.\n- Remove an inaccurate comment: http://[]\n- Eliminate a couple spurious diffs between branches. (That said, if you don't want @RetainedWith in the java7 branch, I don't mind keeping it out. I just happened to notice it.)\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=177823345\n""}"
944,"{'code': 'fd919e54a55ba169dc7d9f54b7b3485aa7fa0970', 'message': 'google-java-format MOST OF THE THINGS.\n\nThe only things I did were:\n- fixed ""lists"" in StringUtil and NullPointerTesterTest\n- fixed a few files that needed string wrapping: WhitespaceMatcherBenchmark, SourceSinkTester, FuturesTest\n- added some missing braces for for() loops in ListsTest\n- removed `static` from interfaces in TypeTokenSubtypeTest and TypeTokenTest\n- added blank lines between methods in ListsImplTest, CharStreamsTest, UnsignedInts, UnsignedLongs, Lists (b/26486965)\n- added blank lines between copyright and package in ImmutableEnumMap, ImmutableRangeSet, TestSortedSetGenerator, SubscriberExceptionContext, SubscriberExceptionHandler, ServiceManager, WrappingScheduledExecutorService, MapsCollectionTest, ServiceManagerTest (b/28398622)\n- removed blank lines inside a method call in IntMathTest and LongMathTest (b/70148121)\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=177819369\n'}"
945,"{'code': '8b4789c403e9f4e6554852228c5a701a098040ef', 'message': ""I tripped and rewrote HashBiMap in the fully compact form, with no redundant code or storage, like I had assumed was too much work.\n\nMemory consumption effects:\nUnsized: 52 bytes/entry vs. 64 for server-side implementation vs. 74 for CompactHash* implementation\nSized: 40 bytes/entry vs. 64 for server-side implementation vs. 56 for CompactHash* implementation\n\n(NB: I did not include storage of hash codes, as included in the other implementations.  If we wanted that it'd add another 8 bytes/entry sized, and probably 12 bytes/entry unsized.)\n\nEffects on HashBiMapProGuard:\n17833 bytes vs. 30172 bytes for server-side implementation vs. 31159 bytes for CompactHash* implementation\n13 classes vs. 29 classes for server-side implementation vs. 27 classes for CompactHash* implementation\n99 methods vs. 132 methods for server-side implementation vs. 173 methods for CompactHash* implementation\n\nRELNOTES=Rewrites Java 7 HashBiMap, and fixes some bugs in both versions.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=177814345\n""}"
946,"{'code': '4dbf8572783d697ab9687383af308b200abd0ccb', 'message': 'Remove public constructors from SimpleTimeLimiter.\n\nThis change was already made for public Guava and is now done for [] users as well.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=177810919\n'}"
947,"{'code': 'de28fd831c629d77a9c1934703bd79b16098191f', 'message': '[FUTURES] Added Futures.whenAllComplete(..).run(..) to Futures.java\n\nSince runnable cannot throw checked exception, you cannot use getDone when defining your runnable which is a shame :(\n\nRELNOTES:\n  - Add a run method to FutureCombiner to allow passing a runnable to Futures.whenAllComplete and Futures.whenAllSucceed\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=177663488\n'}"
948,"{'code': 'd453cf14efb2c419527223cd3dbd0d72608712d1', 'message': ""Remove maven-gpg-plugin configuration from Guava's pom.\n\nUsing the sonatype-oss-release profile will do this for us. Also remove the default of gpg.skip=true since the gpg plugin will no longer be used for normal builds.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=177637510\n""}"
949,"{'code': 'b1d9d99b61e4012578241246c184a9466d3cae58', 'message': 'Make getUnchecked available under GWT.\n\nIn service of the tests of forthcoming CL 177218820.\n\nRELNOTES=`concurrent`: Made `Futures.getUnchecked` available under GWT.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=177634486\n'}"
950,"{'code': '87dcd47417cb611d6f0c1f38faaf24477863c1ea', 'message': 'Automated g4 rollback of changelist 177586281.\n\n*** Reason for rollback ***\n\nMissed Guice reflective calls.\n\n*** Original change description ***\n\nRemove public constructors from SimpleTimeLimiter.\n\nThis change was already made for public Guava and is now done for [] users as well.\n\n***\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=177603142\n'}"
951,"{'code': 'd1971503d16f829eb98589924325efdbca629948', 'message': 'Update oss-parent to version 9.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=177595991\n'}"
952,"{'code': 'b2b942a96a5f05788cdafe40679d5f2db422e1a7', 'message': 'Add @Nullable to MoreObjects.\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=177589042\n'}"
953,"{'code': '6baf78835926c2f35942ec9446ffd800931dd2c7', 'message': 'Change ""late 2017"" removal date to January 2018.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=177587955\n'}"
954,"{'code': 'e631915d0b3d3650a4ec051ee11f9059a7e89ee8', 'message': 'Schedule assignableFrom for deletion.\n\nIt was deprecated over a year ago: []I think our deprecation-date test (which has since been removed) missed it because it just looks for a number, and the regex ran into the @since tag.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=177587161\n'}"
955,"{'code': 'a39ce7c891f7a3599c71d09127e4c5e7c0a222fa', 'message': 'Remove public constructors from SimpleTimeLimiter.\n\nThis change was already made for public Guava and is now done for [] users as well.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=177586281\n'}"
956,"{'code': 'd06014f7567bad25ce6f9c1ad382f7b2e5e89961', 'message': 'Add missing @Nullable to the fields in ImmutableSet.java\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=177512477\n'}"
957,"{'code': 'c60f24a21b7e080e21851f06fce1e8f2d782ca93', 'message': ""Migrate from jsr305's @GuardedBy and @OverridingMethodsMustInvokeSuper to Error Prone's.\n\n[]\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=177511255\n""}"
958,"{'code': '6c2fe3711683897c25054ddad1d79de4c59f32dd', 'message': ""Migrate from jsr305's @CheckReturnValue to Error Prone's.\n\n[]\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=177507004\n""}"
959,"{'code': 'f70da79cc3afdd7cc5b3401373e680ea717ab4db', 'message': 'Depend on error_prone_annotations 2.1.3.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=177502898\n'}"
960,"{'code': 'c1102f2ff702ee1a9a3f9eed92dd96f4d1e7c626', 'message': 'Promote ReferenceEntry to a top-level class for weird reasons.\n\nSpecifically: With the switch to the Checker Framework annotations, PackageSanityTests.testNulls fails:\n\n  No exception thrown for parameter at index 3 from static com.google.common.cache.LocalCache$ReferenceEntry com.google.common.cache.LocalCache.newEntry(com.google.common.cache.LocalCache,java.lang.Object,int,com.google.common.cache.LocalCache$ReferenceEntry)[{}, , 1, null] for class com.google.common.cache.LocalCache\n\nNullPointerTester, even when updated to look for the Checker Framework @Nullable, can\'t detect it -- not as a parameter annotation, not as a type annotation. The annotation is on the method in the .class file according to javap (though I don\'t know for sure that it\'s in the ""right"" place), but Java doesn\'t see it at runtime. This class is the only place I\'m having this problem.\n\nI suspect that this is a bug specific to nested classes: NullPointerTester can detect the Checker Framework @Nullable annotation if the parameter type is a top-level ReferenceEntry class but not a nested one. I tried ""LocalCache.@Nullable ReferenceEntry<K, V>"" and variants of that with no luck, so I\'m going with top-level.\n\n(We\'re looking into reporting the bug upstream.)\n\nUpdate: There is a decent chance that I won\'t use the Checker Frameworks\' *type* annotations at all (instead using declaration annotations), in which case this CL won\'t be strictly necessary. But given that we may well migrate to those annotations someday, it seems worth working around this now while it\'s fresh on my mind.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=177456013\n'}"
961,"{'code': 'd6e0b581cdb14fc86778e02c5e96c49a6385f429', 'message': 'Add missing @Nullable to Finalizer.\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=177402717\n'}"
962,"{'code': '6f390415c441e464779f668f66ab9074e4bc5e3b', 'message': 'Add missing @Nullable to Preconditions.\n\nRELNOTES=n/a.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=177196458\n'}"
963,"{'code': '102f65c81e7eb2d8831b8d9ceb157ac20ce3329b', 'message': 'Add missing @Nullable annotation to ForwardingSortedSet.unsafeCompare(Object, Object).\n\nRELNOTES=n/a.\nGOOGLE:\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=177182100\n'}"
964,"{'code': 'f089e55e51172023365d2341529d4a126451497b', 'message': 'Adding [Server-Timing] HTTP header.\n\nhttps://www.w3.org/TR/server-timing/\n\nRELNOTES=Defining ""Server-Timing"" HTTP header according to https://www.w3.org/TR/server-timing/\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=177129769\n'}"
965,"{'code': '1e4d01f8246b8465297c3cec8cdd1744f8382e4a', 'message': ""Don't use recursion in MultiInputStream.read().\n\nFixes https://github.com/google/guava/issues/2996\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=177042984\n""}"
966,"{'code': 'f6c5a143f4b31dbcf860fe38e8f70f4d80c206ba', 'message': 'Prepare for release 23.5.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=176684657\n'}"
967,"{'code': '1e4938cd0d3663412c1e36ab1376a177191ef421', 'message': 'Add ImmutableMap.getOrDefault() in the Android branch.\n\n[]\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=176589307\n'}"
968,"{'code': 'dc3210484abc2b817484be5c140bfa583fe3864c', 'message': ""Add Checker Framework to dependencies.\n\nThis CL doesn't *use* any annotations yet, and I'm not even certain that we're going to yet. But I think we're likely to, and there's enough that can go wrong with just this step that I'd like to get it in.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=176584793\n""}"
969,"{'code': '1644f6ea9db1279f89d452f05d0dfa18061e35ba', 'message': 'Deprecate Files.fileTreeTraverser() and MoreFiles.directoryTreeTraverser().\n\nRELNOTES=`io`: Deprecated `Files.fileTreeTraverser()` and `MoreFiles.directoryTreeTraverser()`\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=176520426\n'}"
970,"{'code': 'ef6283a97b7db54f15e312656584fd72ad70948d', 'message': ""Update Public Suffix data.\n\nThe copy is updated whenever Chrome's copy is updated, which is\ntypically every 6 weeks. Star the following to watch Chrome's updates:\n\nhttps://bugs.chromium.org/p/chromium/issues/detail?id=610495\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=176514824\n""}"
971,"{'code': '17de0768eeefbbd8790407544a881e1cca9da5c3', 'message': 'Carry @CanIgnoreReturnValue over to new methods.\n\n(Same as [] except for SimpleTimeLimiter)\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=176514048\n'}"
972,"{'code': '4b8bc9c4217f1a2a968161b380db5eac2e200aab', 'message': 'Migrate usage of Files.fileTreeTraverser() to Files.fileTraverser().\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=176506906\n'}"
973,"{'code': 'd2e5e31dbf0869985b040f23c5fc57b786972b1a', 'message': 'Fix inheriting docs from the JDK.\n\nThis broke somewhere between 18.0 and 19.0, I\'d wildly speculate because of changes to Maven?\nhttp://google.github.io/guava/releases/18.0/api/docs/com/google/common/hash/BloomFilter.html#hashCode%28%29\nhttp://google.github.io/guava/releases/19.0/api/docs/com/google/common/hash/BloomFilter.html#hashCode%28%29\n\nSo it took 2-3 years to notice :\\\n\nI chose this new phase based on:\n""Invokes the execution of the lifecycle phase generate-sources prior to executing itself.""\nhttps://maven.apache.org/plugins/maven-javadoc-plugin/javadoc-mojo.html\n\nAnd generate-sources seems to make more sense than anything that comes before that:\nhttp://maven.apache.org/ref/3.5.2/maven-core/lifecycles.html\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=176502970\n'}"
974,"{'code': 'ec48806eeebe0102533da88b8bcdae6bcbf98629', 'message': 'Mutable{Graph, Network, ValueGraph}.java: tighten the contract for the edge-adding methods.  The contract now states that if the specified nodes are not already present in the graph, they are silently added.  (Removes the option of throwing in this case.)\n\nRELNOTES=`graph`: `Mutable{Graph, Network, ValueGraph}.java`: tighten the contract for the edge-adding methods.  This is a breaking change; implementors of these interfaces should verify that they still comply with this contract.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=176364203\n'}"
975,"{'code': '16b1a0f3427f3b3119d18fad198bd022f4f3d09f', 'message': 'Carry @CanIgnoreReturnValue over to new methods.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=176356932\n'}"
976,"{'code': 'a1ffef8457b88c1a0ac72d128c99196169c1b0ea', 'message': ""Fully qualify some references to javax.annotation.Nullable in files that will likely soon refer to both that Nullable and the Checker Framework's.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=176354876\n""}"
977,"{'code': '27c07248101cc4828b22724aaaf56ec330c1f155', 'message': ""Remove @ThreadSafe and @NotThreadSafe annotations.\n\nThey're part of jsr305, which we're looking to migrate off.\nAnd they aren't checked by Error Prone or providing much other value.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=176021729\n""}"
978,"{'code': '901e985598a30fadb194603d6a17142cca00614b', 'message': ""Migrate from jsr305's @Immutable to Error Prone's.\n\nRELNOTES=Migrate from jsr305's @Immutable to Error Prone's.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=176011904\n""}"
979,"{'code': '328481cb8b86f97f25e051fe16ad3f2f3b988dce', 'message': 'Import Map.Entry almost everywhere.\n\nQualified types make @Nullable annotations more complicated: If we\'re using a type annotation, the ""@Nullable"" has to come between ""Map."" and ""Entry"" rather than before the whole thing. That means diffs between the mainline, presuming that it supports type annotations, and the backport, presuming that it doesn\'t. It\'s not entirely clear that that\'s how things will work out, but I can\'t experiment until I fix the problem, and I figure I might as well submit the fix, given that I think we generally like doing this, at least with Multiset.Entry isn\'t in play? But it\'s not very hard to handle the problem as it comes up, either, if this CL is too much.\n\n(Naturally, the same problem will exist for other types. But this CL fixes the most common problem.)\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=175999659\n'}"
980,"{'code': '8959e516f7d19c62a6a0aea9a262af152872797c', 'message': 'Try out @OverridingMethodsMustInvokeSuper, and remove some unnecessary work in AbstractMapTester.\n\nThe first couple locations I found to use @OverridingMethodsMustInvokeSuper were cases where we\'re already doing the right thing, so that\'s ""disappointing.""\n\nOn the plus side, while I was looking into this, I noticed that AbstractMapTester is redoing all the work of its superclass (at least assuming that no one tries to override resetMap() rather that resetContainer() -- if anyone should be overriding that at all...). So I fixed that. Maybe, if we\'re lucky, it will make our GWT and Android tests faster -- at least internally, where we actually run our suite-builder suites on those platforms. But the GWT test times are variable enough that it\'s hard to be sure without a bunch of runs, and the Android tests aren\'t running at the moment (b/30863522), so... I don\'t know if this really helps or not.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=175986858\n'}"
981,"{'code': 'fc992745150d95544fec68b9c6e89b5c3bc44b15', 'message': 'Annotate Cache with @CompatibleWith\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=175870941\n'}"
982,"{'code': '0ad9c44108653a1ac277bcf33b95dde30e689300', 'message': 'Graduate Verify and VerifyException from Beta as requested here:\nhttps://github.com/google/guava/issues/2409\n\nThese have been essentially stable for 3.5 years.\n\nRELNOTES=`Verify` and `VerifyException` are no longer `@Beta`\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=175704709\n'}"
983,"{'code': '086f67c913052c885a9aea4c6bff71e9ca818a42', 'message': 'Refactor file tree children logic to separate method just like in MoreFiles.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=175700154\n'}"
984,"{'code': '6220cea0da20a763c7806ee9fb3f21dd4a145863', 'message': 'Update docs that refer to the removed `suspensions` field.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=175667529\n'}"
985,"{'code': '4f794799aa981eba0000b54004257c0f4fa78b88', 'message': 'Claim that ImmutableCollection classes should still be preferred over Java 9 factories like `Set.of`.\nhttps://github.com/google/guava/issues/2969\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=175583855\n'}"
986,"{'code': 'af7514acdbff34722b47938fcea41cbe9a5cf0ec', 'message': 'Roll forward.\n\n*** Original change description ***\n\nAdd MoreFiles.fileTraverser().\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=175582408\n'}"
987,"{'code': 'f6cfba80dfee508b89bcee08669c49ff964b8490', 'message': 'Roll forward.\n\n*** Original change description ***\n\nAdd Files.fileTraverser().\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=175564642\n'}"
988,"{'code': 'b74154f042b9ea7eb28844d8d8fe7a9bb6520dfb', 'message': ""Make package-list files available to the android backport, too.\n\nThis fixes the errors created by CL 173688451.\n\nIt's presumably possible to do this without duplicating the files, but... eh.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=175331982\n""}"
989,"{'code': '692446a3031289a37db2d57b6eb77d95e2ae93bf', 'message': 'Correct gender off-by-one error. :)\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=175252841\n'}"
990,"{'code': '60bb6a87972d7caf8d987700249e34f24286fcde', 'message': ""Don't release guava-tests to Maven Central\n\nNo one should be depending on our tests (except from our own GWT tests).\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=175197426\n""}"
991,"{'code': '13a6e364fbb35fc518580059a08a6dd2846c153b', 'message': ""Don't construct thousands of strings.\n\nTest timings aren't 100% consistent, even when I run the Maven tests locally (rather than the internal tests in some random cluster), so don't take this as definite truth, but I'm seeing some apparent improvements from this CL, even after my earlier CL to decrease the iteration count. Here are the numbers for all tests to take >=10 seconds:\n\nBefore:\n00:11 testCorrectOrdering_smallHeapsPollFirst\n00:11 testCorrectOrdering_smallHeapsPollLast\n00:16 testHeapIntact\n00:17 testRandomAddsAndRemoves_duplicateElements\n00:19 testRemoveAt\n00:25 testRandomAddsAndRemoves\n00:48 testCorrectOrdering_mediumHeapsPollFirst\n00:52 testCorrectOrdering_mediumHeapsPollLast\n02:02 testCorrectOrdering_randomAccess\n\nAfter:\n00:08 testCorrectOrdering_smallHeapsPollFirst\n00:08 testCorrectOrdering_smallHeapsPollLast\n00:15 testHeapIntact\n00:17 testRandomAddsAndRemoves_duplicateElements\n00:18 testRemoveAt\n00:27 testRandomAddsAndRemoves\n00:46 testCorrectOrdering_mediumHeapsPollLast\n00:50 testCorrectOrdering_mediumHeapsPollFirst\n01:14 testCorrectOrdering_randomAccess\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=175152127\n""}"
992,"{'code': 'ee9ac70a9296645b3f883773eb950961bb12f0d0', 'message': ""Reduce iterations for MinMaxPriorityQueueTest under GWT.\n\nI had a bunch of theories as to why these tests were slow (string construction, java.util.Random, collection construction). They are probably part of the story -- especially string construction, which I might still submit a CL to reduce -- but fundamentally, I think the slow thing is our many calls to isIntact(). Let's not make so many. Likely the non-GWT tests would catch any problems here, anyway, and we'll still run the tests under GWT, albeit with fewer iterations, in case we have an obvious bug there.\n\nThis is a clear win internally: All MinMaxPriorityQueueTest methods are now under 10 seconds, and I'd previously seen ~6 over that mark, including 1 around a minute and 2 around 30 seconds. I'll get some external numbers next.\n\nat head, top 14 MinMaxPriorityQueueTest tests:\n00:04 com.google.common.collect.MinMaxPriorityQueueTest_gwt|testExhaustive_pollAndPush\n00:06 com.google.common.collect.MinMaxPriorityQueueTest_gwt|testIteratorTester\n00:06 com.google.common.collect.MinMaxPriorityQueueTest_gwt|testIteratorTesterLarger\n00:10 com.google.common.collect.MinMaxPriorityQueueTest_gwt|testCorrectOrdering_smallHeapsPollLast\n00:11 com.google.common.collect.MinMaxPriorityQueueTest_gwt|testCorrectOrdering_smallHeapsPollFirst\n00:15 com.google.common.collect.MinMaxPriorityQueueTest_gwt|testHeapIntact\n00:16 com.google.common.collect.MinMaxPriorityQueueTest_gwt|testRandomRemoves\n02:51 com.google.common.collect.MinMaxPriorityQueueTest_gwt|testRandomAddsAndRemoves_duplicateElements\n03:00 com.google.common.collect.MinMaxPriorityQueueTest_gwt|testRemoveAt\n04:13 com.google.common.collect.MinMaxPriorityQueueTest_gwt|testRandomAddsAndRemoves\n07:28 com.google.common.collect.MinMaxPriorityQueueTest_gwt|testCorrectOrdering_mediumHeapsPollFirst\n07:31 com.google.common.collect.MinMaxPriorityQueueTest_gwt|testCorrectOrdering_mediumHeapsPollLast\n16:31 com.google.common.collect.MinMaxPriorityQueueTest_gwt|testRemoveAt_exhaustive\n19:19 com.google.common.collect.MinMaxPriorityQueueTest_gwt|testCorrectOrdering_randomAccess\n\nwith this CL, top 14 MinMaxPriorityQueueTest tests:\n00:01 com.google.common.collect.MinMaxPriorityQueueTest_gwt|testCreation_maximumSize_withContents\n00:01 com.google.common.collect.MinMaxPriorityQueueTest_gwt|testRemoveAt_exhaustive\n00:02 com.google.common.collect.MinMaxPriorityQueueTest_gwt|testRandomRemoves\n00:03 com.google.common.collect.MinMaxPriorityQueueTest_gwt|testExhaustive_pollAndPush\n00:06 com.google.common.collect.MinMaxPriorityQueueTest_gwt|testIteratorTester\n00:06 com.google.common.collect.MinMaxPriorityQueueTest_gwt|testIteratorTesterLarger\n00:11 com.google.common.collect.MinMaxPriorityQueueTest_gwt|testCorrectOrdering_smallHeapsPollFirst\n00:11 com.google.common.collect.MinMaxPriorityQueueTest_gwt|testCorrectOrdering_smallHeapsPollLast\n00:16 com.google.common.collect.MinMaxPriorityQueueTest_gwt|testHeapIntact\n00:17 com.google.common.collect.MinMaxPriorityQueueTest_gwt|testRandomAddsAndRemoves_duplicateElements\n00:19 com.google.common.collect.MinMaxPriorityQueueTest_gwt|testRemoveAt\n00:25 com.google.common.collect.MinMaxPriorityQueueTest_gwt|testRandomAddsAndRemoves\n00:48 com.google.common.collect.MinMaxPriorityQueueTest_gwt|testCorrectOrdering_mediumHeapsPollFirst\n00:52 com.google.common.collect.MinMaxPriorityQueueTest_gwt|testCorrectOrdering_mediumHeapsPollLast\n02:02 com.google.common.collect.MinMaxPriorityQueueTest_gwt|testCorrectOrdering_randomAccess\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=175041179\n""}"
993,"{'code': '3ccb1303de7949c003c3939871a35f8992314e61', 'message': 'Prepare for release 23.4.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=175016465\n'}"
994,"{'code': '9dd731d6879b5e7888133424ed8a9092d93549c9', 'message': 'Automated g4 rollback of changelist 174856751.\n\n*** Reason for rollback ***\n\nBreakage.\n\n[]\n\n*** Original change description ***\n\nAdd Files.fileTraverser().\n\n[]\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=174874052\n'}"
995,"{'code': '1dee5c1bb5dcfec9ea9c7703262638fda07a7e16', 'message': 'Automated g4 rollback of changelist 174865821.\n\n*** Reason for rollback ***\n\nBreakage.\n\n[]\n\n*** Original change description ***\n\nAdd MoreFiles.fileTraverser().\n\n[]\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=174868235\n'}"
996,"{'code': '90ca5ee51618adc6d0c1aabf3f1f8a576a4e4ec2', 'message': 'Add MoreFiles.fileTraverser().\n\n[]\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=174865821\n'}"
997,"{'code': 'a034f5ca1073f9ae4fffc20519b43eb20601eedd', 'message': 'Add Files.fileTraverser().\n\n[]\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=174856751\n'}"
998,"{'code': 'e07a618c27b1a40e9f2eb07ae1b053ea0dcbd13c', 'message': ""Remove no-op check.\n\nThe only way for the current port to be equal to defaultPort is if it's a valid port. That's already covered by the hasPort() check.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=174737802\n""}"
999,"{'code': '1f40cf6380357340b2fd786ff79debf42555676a', 'message': 'Support for empty ArrayTable.\n\nI re-wrote the documentation as best as I could.\n\nI may add support for 0×N in a follow up.\n\n[]\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=174703945\n'}"
1000,"{'code': '7399c2b1aac134dab7966bd889dc0f5e75e89e10', 'message': 'Fix range typo in comments of subRangeMap.\n\nRELNOTES=Fix range typo in comments of subRangeMap.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=174545736\n'}"
1001,"{'code': 'a26b9aad7fef9a9547a654dfa2a84aeacf433fb1', 'message': 'Make all ""Tester"" classes *end* with ""Tester,"" and simplify our exclusions accordingly.\n\n(We might be able to fully switch to glob-based .java includes/excludes now, rather than regex-based .class includes/excludes, but .class makes more sense, since Maven is really looking for classes, not source files, and I don\'t really feel like running the tests yet more times to make sure that I didn\'t accidentally exclude something new.)\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=174501688\n'}"
1002,"{'code': '3cc6ea4f51413794f6e24e693676dbf57b307520', 'message': 'Run nested classes for real this time.\n\nI had thought that CL 157867713 accomplished this, but it didn\'t. My CL description there says that I tried both an <exclude> approach and a %regex approach, and only %regex worked. But I just reran tests before and after that CL (with both Maven 3.5.0 and Maven 3.1.1), and the CL makes no difference in the number of tests run, and in particular it doesn\'t run nested tests.\n\nMy theory is:\n- I inserted a fail() call into a *specific* test and looked for the failure, rather than looking at the total number of tests. That still isn\'t a complete explanation, of course, because that failure should have happened in both cases or in neither. So probably also...\n- I had both <exclude> and a *different* %regex value present at one point, and *that* was enough to run this particular nested test.\n- Then I removed <exclude>, I assume because I got confused about what I was testing.\n- I also removed the fail() call.\n- Finally, I changed the %regex value to avoid running AbstractPackageSanityTests and other classes that don\'t end in ""Test."" If I had still been running nested classes at this point, still had the fail() call present, and still been looking for the failure, I would have found that it was no longer running.\n\n(Update: Alternative simpler theory: The test I inserted the fail() call in was a FooTest class nested inside a BarTests class whose suite() method adds FooTest. This test would not have run originally (because ""BarTests"" doesn\'t match ""**/*Test.java"" and the FooTest class is nested and thus excluded). But it would have run during my initial testing of the new CL because I originally included *Tests as well as *Test. But then I removed the *Tests part because I didn\'t see any top-level classes of that name other than the problematic PackageSanityTests classes. At that point, I didn\'t retest the original failure. Unfortunately, my .bash_history cuts off right around the time of the original CL (but that\'s another story... :)).)\n\nAs best I can tell:\n\n- The old ""**/*Test.java"" *does* run some nested test classes *if* I add <excludes>. Even though Maven purports to accept the name of a .java file, it appears to be internally turning it into a class name, so it can match nested classes that don\'t have a top-level source file of their own.\n- But it doesn\'t run *all* nested tests, since some of their names don\'t fit the ""FooTest"" pattern. Specifically, it runs the same set of tests as the existing %regex filter.\n\nSo it seems that we don\'t need %regex at all. But there\'s a catch: Maven now tries to run various nested classes that aren\'t supposed to be run as tests. And the easiest way to get the correct set of classes is to use regex after all.\n\nI haven\'t spent a ton of time trying to find the absolute most correct set of tests, but the filters in this CL should be pretty close. The filters include everything, whether a top-level class or nested class, with a new documented exclusions.\n\nguava-tests:\nbefore: Tests run: 833248, Failures: 0, Errors: 0, Skipped: 0\nafter: Tests run: 837060, Failures: 0, Errors: 0, Skipped: 0\n\nguava-testlib:\nbefore: Tests run: 118427, Failures: 0, Errors: 0, Skipped: 0\nafter: Tests run: 850859, Failures: 0, Errors: 0, Skipped: 0 [mostly from running OpenJdk6*Tests (OK, those names are misnomers now, but whatever :))]\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=174501246\n'}"
1003,"{'code': '4dc9df884afb50660f7f13905e7ae99465e5f822', 'message': ""Remove redirectTestOutputToFile from guava-testlib configuration.\n\nWe already removed it from guava-tests when moving it to the parent pom (CL 158738701), but I missed that we'd added it here (CL 92277616) after we'd added it to guava-tests (CL 84561967).\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=174497867\n""}"
1004,"{'code': '2715db783a5caf5210f7703f68a485a96132e3f2', 'message': 'Don\'t issue a warning for the lack of srcs in the ""main"" guava-tests jar.\n\nIt appears that I need up update maven-jar-plugin to access this new option.\n\nBefore:\n[WARNING] JAR will be empty - no content was marked for inclusion!\n\nAfter:\n[INFO] Skipping packaging of the jar\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=174471751\n'}"
1005,"{'code': 'a8a4a18bd6c6d187126085f527abfac9a55b7edf', 'message': ""Wait longer for the interrupt to happen.\n\nEvidently our current wait wasn't long enough for at least one Travis run:\nhttps://travis-ci.org/google/guava/jobs/296430665\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=174385968\n""}"
1006,"{'code': '0c434ff088d811e34064c6a0720d45962492f090', 'message': 'Optimize ImmutableCollection.Builder.addAll(ImmutableCollection) to use System.arraycopy when possible.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=174373581\n'}"
1007,"{'code': '2941d8428a2969d0a3e7c90bb072cce6cbd14300', 'message': 'Actually export print_surefire_reports.sh.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=174366533\n'}"
1008,"{'code': 'c0557dfb7daf57a3073535d6ce55f6556bf7df4c', 'message': ""Run tests in a deterministic order.\n\nWe just had a failure that depends on test execution order. It wasn't too hard to figure out (and would have been even easier with the output that I'm adding in CL 174361258), but determinism is a good thing that may help us in the future.\n\n(It *might* also bring us closer to the Bazel test-runner behavior, but I haven't actually checked. And anyway, we shard some of our Bazel tests, so even if both systems now use the samer order, they might be executing different subsets of tests, so they still might not show the same errors.)\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=174365332\n""}"
1009,"{'code': '946afb87c903ce73708c9d11075aa7df78cdae0f', 'message': 'Print the actual output of failed tests.\n\nLuckily, last time I was able to guess at the cause specifically because it was an ""error"" and not a ""failure.""\nAnd typically we\'d be able to reproduce the failure by running locally, though I\'m not sure if that\'s the case here because it depends on test ordering... which is currently dependent on the filesytem\'s order of files, but I\'ll deal with that in a separate CL.\n\nThis appears to be the best solution: https://stackoverflow.com/a/19685036/28465\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=174362932\n'}"
1010,"{'code': 'f1b22619682351923e1d34481e6efe499f41745f', 'message': 'Clear the interrupt bit at the end of the test.\n\nThis fixes the failure in https://travis-ci.org/google/guava/jobs/296270564, in which get() was throwing InterruptedException.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=174358932\n'}"
1011,"{'code': '79e8351d357383e3b1f85f029883970fac601c46', 'message': 'Make a small change to README.md to make it simpler to auto-update.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=174357681\n'}"
1012,"{'code': '40564c7415ab5fbd2dc89527d38493bc0bd2bf86', 'message': '[guava concurrent] Upstreamed a modified form of the modified interruption behaviour from a fork of SerializingExecutor. Documented and tested the behaviour thoroughly.\n\nRELNOTES=Adjusted the interruption behaviour of MoreExecutors.sequentialExecutor() to run tasks without a Thread interrupt marked (previously, interrupts leaked between tasks). If the Thread was interrupted when the Executor received it or during execution of its tasks, the thread will be re-interrupted before being yielded. Expanded the documentation of MoreExecutors.sequentialExecutor() to cover interruption and rejected execution behaviour in detail.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=174227926\n'}"
1013,"{'code': 'd31b6ce371d5aed395c86be7e1654061b3f0b45b', 'message': 'Remove @GwtCompatible annotations from classes in the hash\npackage, which have no corresponding .gwt.xml file.\n\nFixes #2983\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=174196722\n'}"
1014,"{'code': 'f2ecd139a4dd5fb085208d067509778d7ba1f700', 'message': 'Add private constructor to Traverser.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=174054439\n'}"
1015,"{'code': 'ac985ef9cd1f60c4fdcfcb2cd929461cd46e714e', 'message': ""In Java 7 branch, don't bother using Iterators.forArray in RegularImmutable{List,Set}.  The default ImmutableList.listIterator implementation amounts to the same thing, an AbstractIndexedListIterator delegating to the array.\n\nEffects on ImmutableSetProGuard:\n22598 bytes => 20871 bytes\n17 classes => 15 classes\n147 methods => 144 methods\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=173922422\n""}"
1016,"{'code': '3106b4ef159878972100ca5028dc3ab69fac6971', 'message': 'Fix links to JSR305, and start linking to JDK 9.\n\nThe main problem with the JSR305 links is that the JDK -link argument was ""claiming"" the javax.annotations package. This was happening for 2 reasons:\n- <detectJavaApiLink> defaults to true, so Maven adds its own -link (or -linkoffline, not sure) for the JDK. So I unset it.\n- We manually specified a -link argument, and Maven\'s command-line order puts -link before -linkoffline (which, oh, we\'re now using -- see below). So I made the JDK a -linkoffline argument, too, which is still possible when we\'re pulling the package-list from online.\n\nThere\'s an additional problem, which is that Javadoc (or Maven? I forget) tries to download http://static.javadoc.io/com.google.code.findbugs/jsr305/3.0.1/, which gives an access denied error, even though it needs only the package-list file in that directory, which downloads fine. As a fix, make our own local copy of that package-info file. I\'ve also done that for j2objc-annotations, though currently none of its annotations are @Documented, so it\'s not doing us much good yet.\n\nThen, in the process of switching to a manual -link for the JDK, I lost JDK links. It turns out that Javadoc doesn\'t like the http links to the Oracle site, even though it\'s fine with http links from other sites. I switched to https (and did the same for the other projects while I was there), and I posted this on https://stackoverflow.com/q/29867384/28465#comment80906399_29867384 to hopefully help anyone else in this situation. (I\'ll also try to ask our Java platform team about fixing the javadoc man page.)\n\nConveniently, the switch to a manual -link also lets us choose which version of the JDK to link to. It seems like Java 9 makes the most sense...? It\'s true that we promise compatibility with Java 8, but I think the normal thing would be to link to the newest version. I see in particular that we linked to Java 7 from the backport. That\'s defensible, but it\'s a bit weird: The primary target for the backport is Android, and we target a ""Java-6-like"" version of the Android SDK. The only ""Java-7-like"" thing we do is use language features like the diamond operator. The Java 7 link does make sense for actual Java 7 users, but I still think we\'re likely better off linking to JDK 9 Javadoc and letting users look at @since when they want. This should also help in cases in which we want to link to a newer type along the lines of ""If you can use java.util.function.Function, do so.""\n\n(Oh, and while I was there, I added a comment to explain why we *also* need JDK sources, as I\'d forgotten.)\n\nFixes https://github.com/google/guava/issues/2965\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=173688451\n'}"
1017,"{'code': '2909a996047e575cdac02ea1c06a93a9419271cf', 'message': ""Add @since tags to some nested types.\n\nI don't know if I got them all, but this is probably at least a majority.\n\nTODO(cpovirk): Consider whether to redundantly put @Beta on nested types. The Beta checker consults enclosing types automatically, but it might be nice to have the info directly in rendered Javadoc.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=173600454\n""}"
1018,"{'code': '153ca2f80943957490b2b073cfc1900c2742d326', 'message': 'Update readme to show new current version 23.3.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=173589977\n'}"
1019,"{'code': '46c31db3c79e58225a663be62b3d115ce2378345', 'message': ""Upgrade GWT version to 2.8.2, plus:\n\nAutomated g4 rollback of changelist 173434289.\n\n*** Reason for rollback ***\n\nThe bug isn't in HtmlUnit; it's in the old version of GWT (2.8.0) we were running against externally.\n\n*** Original change description ***\n\nDetect HtmlUnit's broken sorting, and skip our tests that depend on proper sorting, at least when running our GWT tests in the open-source build.\n\n***\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=173560372\n""}"
1020,"{'code': '19b4d977a9b057c9fa4c3334db0796aeeef8f386', 'message': 'Add Referrer-Policy to HTTP Headers.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=173526011\n'}"
1021,"{'code': '570943f5425971955de678e772699de05eb96c63', 'message': 'Set all @since NEXT to @since 23.3.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=173458674\n'}"
1022,"{'code': '0c8ea0fedf357fd8b6c578f9a4e652952bbd1fbf', 'message': ""Detect HtmlUnit's broken sorting, and skip our tests that depend on proper sorting, at least when running our GWT tests in the open-source build.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=173434289\n""}"
1023,"{'code': '3d90141108935eb7580ddc3e586c5960cc9c68c7', 'message': 'Avoid using WeakSafeReadWriteLock when not using weak references\n\nThis avoids needing to create a wrapper object every time we attain the lock.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=173310332\n'}"
1024,"{'code': 'b72fe8611c3ed4b2782ca79dec170efe5d1fbd0e', 'message': 'Deprecate [Binary]TreeTraverser.\n\nRELNOTES=Deprecated TreeTraverser and BinaryTreeTraverser. Please use com.google.common.graph.Traverser instead.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=173254759\n'}"
1025,"{'code': '384a93b10b52da52dc6ce3608ce80ed28dda7c34', 'message': 'Use whichever version of nextDown is available.\n\n(followup to CL 158434703 to make the Android tests runnable under Java 9)\n\n(part of https://github.com/google/guava/issues/2571)\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=172804202\n'}"
1026,"{'code': 'e84643cad0ebcfa85ee401e0350b8e05a0468e4d', 'message': 'Fix minor spelling errors in tests.\n\nFixes #2973\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=172766537\n'}"
1027,"{'code': '1c760101a7fcd8798eb0c6ad3c277ff190bcb22f', 'message': 'RELNOTES=Introduce MoreExecutors.newSequentialExecutor, the new name of sequentialExecutor.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=172662818\n'}"
1028,"{'code': '40df21bf55c45ca190ac65ed58641b54ef454ef1', 'message': 'Add the notion of RegistrySuffix to InternetDomainName.\n\nRELNOTES=`net`: Added methods for dealing with registry suffixes to `InternetDomainName`\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=172524387\n'}"
1029,"{'code': '01d18f2c3db799d144cc8e3308da3fb2ade19417', 'message': 'Using Object instead of a specific type irritates some thread safety tests.  Fix that.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=172504355\n'}"
1030,"{'code': '2f6370343200faec3de904a5cf2e39345acb33e7', 'message': 'Add test for a graph with a single root.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=172477925\n'}"
1031,"{'code': '50b0e455510e599e418c18ccd65a4b53f9dc3b50', 'message': 'Traverser: Throw IAE if startNode is not part of the graph and add tests for empty graph case and disjoint trees (forest) case.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=172443426\n'}"
1032,"{'code': 'da90c7743b5085e846287f4bdacb9711384b6c39', 'message': ""Strip the public from ListenerCallQueue.Event in open source.  It's not actually visible, anyway.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=172361815\n""}"
1033,"{'code': '957c1a5455508120d224f6d0d8f3bf8afa3630f0', 'message': 'Fix Striped.lazyWeakReadWriteLock so that holding on to just the read or just the write lock will not allow the ReadWriteLock to be garbage collected, which many users find surprising.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=172355708\n'}"
1034,"{'code': '0ed66d89488c7cdee558aa82b4422993e7bd2fa9', 'message': 'Update hasPublicSuffix javadoc\n\n""google"" is a public suffix, and ""google.foo"" is under public suffix ""foo"". Therefore hasPublicSuffix() should have returned true for both of them. In fact both TLDs (.google and .foo) are owned by Google Registry, i. e. us!\n\nI tested calling InternetDomainName.from(""google"").hasPublicSuffix(), which returns true as expected. Same goes for ""google.foo"".\n\nI suspect this javadoc has not been updated after the last round of gTLD expansion. This method really should only return false for domains that are under nonexistent TLDs, like ""google.invalid"", or fake TLDs themselves, like ""invalid"" (see https://en.wikipedia.org/wiki/.invalid).\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=171993370\n'}"
1035,"{'code': 'a3e680ed62b116fd7b3f521b61efa85290c63c7e', 'message': 'Update AtomicDouble in Java 7 to use AtomicLong directly instead of AtomicLongFieldUpdater.  This is a relatively simple way of protecting against bugs like the Samsung bug, and clm@ and I agreed that the simplification over what e.g. AbstractFuture has had to do was worth the extra allocation.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=171989893\n'}"
1036,"{'code': '539bc1f03080d6fddfce43763468f28f5dacae56', 'message': 'Update latest release to 23.2.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=171972306\n'}"
1037,"{'code': 'e9d8295062aeb67444c44666588ff8831424a80b', 'message': 'Update hardcoded digit() and invisible() from Unicode 6.3 to Unicode 9.\n\nRELNOTES=Update hardcoded CharMatcher.digit() and invisible() from Unicode 6.3 to Unicode 9.\n\n[]\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=171892364\n'}"
1038,"{'code': '964df6b105ccd7f5bccc5462d16a671af0d8e09e', 'message': 'Remove unnecessary volatile; this boolean value is only relevant if the executor runs the provided runnable inline, which means that the write will always be visible to the read in the catch() statement.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=171882510\n'}"
1039,"{'code': '7df1ae57b4015ec4e39a3d050eeb6978255df81d', 'message': ""Make the copying done for guava-gwt not verbose.\n\nThis is the only thing I haven't been able to suppress by using -q or a flag to suppress output for specific plugins. It might be there's some flag for the antrun plugin that could be used in some way to make this not verbose, but I'm not sure what (and to me it doesn't seem like there's much need to see this output anyway).\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=171879805\n""}"
1040,"{'code': 'b6901ea356dee240f15d5be6fd0b195d212fdc35', 'message': 'Update deprecation messages for the CharMatcher constants to match the new deprecation messages on the factory methods while still suggesting that the factory methods be used rather than the constants if needed.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=171869554\n'}"
1041,"{'code': '94116b064ca2383d12eb3c23fe54a2bf1fc39067', 'message': ""Don't log until static state is fully set up. This prevents a (hypothetical, to my knowledge) bug where a device exhibiting the samsung reflection bug would fail to fall back if an installed logger called a Futures method inline.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=171857899\n""}"
1042,"{'code': '6c5c9a543ed9c04b853d78d0382068124ba21880', 'message': 'Document that negate() @Overrides under Java 8 but not under Java 7.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=171832549\n'}"
1043,"{'code': '5c2c138547560763d050cf5535a1b94fb8577dda', 'message': 'Deprecate matchers which cannot work as expected because the API does not support supplementary code points. Clarify some API docs. Point to ICU4J for an actual Unicode library.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=171821078\n'}"
1044,"{'code': '87439646d6f005a4686dfc68600e894a1137a0b9', 'message': 'Fix links.\n\nThe targets are manual <a name> anchors, not methods.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=171819037\n'}"
1045,"{'code': '361eba8e4078a4c80f9be0c9194a7e3c0473aa6d', 'message': ""ValueGraphTest.java: add a few checks to make sure that we're properly exercising both null and non-null default values.\n\nThis addresses the most recent suggestion in GitHub issue #2924.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=171818169\n""}"
1046,"{'code': '1f697f51921ec3cf42fb8a37cc148e744bff20ca', 'message': 'Automated g4 rollback of changelist 163355688.\n\n*** Reason for rollback ***\n\nMaven sees the JRE version as the newest now:\nhttps://maven-badges.herokuapp.com/maven-central/com.google.guava/guava/badge.svg\n\n*** Original change description ***\n\nRemove Maven version badge from README.\n\n***\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=171717363\n'}"
1047,"{'code': '6641f279b1046297cf18d38e2aa44cca93d75042', 'message': ""Expand BiMapTestSuiteBuilder's tests for setValue calls on entries (which get run on both forward and backward BiMaps).\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=171716221\n""}"
1048,"{'code': '130bead827402e841282eaf8f197c6c4ce64ec4c', 'message': 'Expand BiMap test suite for forcePut operation, and fix a newly revealed bug in the HashBiMap status quo.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=171699933\n'}"
1049,"{'code': '9bcedd8f5bd2354d133edcb3e058b8f0d4f28e8f', 'message': 'Fix bug where ImmutableSortedMap could accept a null key/value pair.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=171692711\n'}"
1050,"{'code': '54164e74093b8beaa203c844f68e778a7df3a637', 'message': ""Update Public Suffix data.\n\nThe copy is updated whenever Chrome's copy is updated, which is\ntypically every 6 weeks. Star the following to watch Chrome's updates:\n\nhttps://bugs.chromium.org/p/chromium/issues/detail?id=610495\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=171689826\n""}"
1051,"{'code': '9a96b6a9195cbad137bce618104eea5c4217c0a7', 'message': 'Implement Traverser.forTree().depthFirst*().\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=171687201\n'}"
1052,"{'code': 'fa3239443902d9c06d2ac64f05fa19ef7f8a60c9', 'message': 'Implement Traverser.forTree().breadthFirst().\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=171648476\n'}"
1053,"{'code': '3dc87b992dc4d3db9ba32f10e575994ab8a8f475', 'message': 'Rollback [] for AtomicDouble(Array) that added jdk5 support.\n\nFixes https://github.com/google/guava/issues/1996\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=171547765\n'}"
1054,"{'code': 'f2be0be06ef49dee7c5dfcb3a0231c5ecaf5b621', 'message': 'Add JPMS module name\n\nCloses https://github.com/google/guava/pull/2961\nFixes https://github.com/google/guava/issues/2920\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=171539196\n'}"
1055,"{'code': 'da978f40ce0ce13f19dc45023883964d219e001f', 'message': 'Make sure that local task reference is retained in objc\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=171467091\n'}"
1056,"{'code': '2927518ac86e8ed1d09038fb2b03c86c894ea5ca', 'message': 'Handle InheritableThreadLocals correctly on Java 9.\n\nThe internal Finalizer class is used by FinalizableReferenceQueue. In order to avoid holding a reference to the ClassLoader that loaded the class, it is necessary to avoid inheriting any ThreadLocals in the thread running the Finalizer code. Previously, we did this with a nasty hack accessing a private field in Thread. Although that field still exists in Java 9, private accesses like these are not allowed by default. This particularly access is also not needed on Java 9, since there is now a Thread constructor with a boolean parameter that says whether to inherit ThreadLocals. So we use that constructor if it is present, in preference to the field access.\n\nFixes https://github.com/google/guava/issues/2723.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=171212577\n'}"
1057,"{'code': '918c9e98f3d06e815507c31764e69c38ad2289ed', 'message': 'All javadoc examples now use the same example graph (also matches the one in the unit test).\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=171154720\n'}"
1058,"{'code': 'c94822bdfde0a43df9f576df86e5880d1f26fe26', 'message': 'Documentation improvement: Clarify disambiguities around post-order/pre-order.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=171152967\n'}"
1059,"{'code': 'a8f4ebc429d01150d3e35980373cb8c9c123aeaa', 'message': 'ValueGraph: fix implementation of edgeValueOrDefault().\nAlso fixed tests to guard against similar future regressions.\n\n(This fixes a regression that was introduced when we temporarily replaced this method with edgeValueOrNull() ([] and then failed to restore the original semantics when we restored the original method ([]  Oops.)\n\nRef: GitHub issue #2924\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=171145586\n'}"
1060,"{'code': '11d3683ddba029aad2c9da7769c528cbe99d6fd3', 'message': 'Update README to refer to HEAD-jre/android-SNAPSHOT for the snapshot versions.\n\nAlso update the URLs for snapshot Javadoc and JDiff.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=170914305\n'}"
1061,"{'code': '378bb20dcd5e9e84d218348f9bfb166fc2b5d6b4', 'message': 'Update the farmHashFingerprint64() javadoc to specify how FarmHash\'s numeric fingerprint is encoded by HashCode#asBytes().\n\nThe HashFunction interface demands that an implementation output bytes [1]. But FarmHash\'s Fingerprint64() is defined (by its C++ reference implementation) as returning a 64 bit unsigned number and farmHashFingerprint64() doesn\'t specify how this number is encoded by HashCode#asBytes(). This change will assure users that HashCode#asLong() from Guava\'s implementation of FarmHash will yield the same value as would be returned by farmhash::Fingerprint64() on the same input. The current ""byte-wise identical to C++"" language isn\'t helpful because again, C++ FarmHash returns a uint64_t not bytes and the C++ language doesn\'t specify how this value is encoded in memory.\n\nNo code changes are needed because the unit tests already compare the output of #asLong() with golden values.\n\n[1] The HashCode abstraction is nice but #asLong() and #asInt() are both are defined in terms of #asBytes()\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=170879437\n'}"
1062,"{'code': 'ca438f5a1f69d37e39f506cbdbc09fdb1e569838', 'message': 'Implement Traverser.forGraph().depthFirst*().\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=170856993\n'}"
1063,"{'code': 'fb763eea9e4abcc47391baa5c9d909f4d520c1f6', 'message': 'Update ""current release"" to 23.1. Remove API diffs that are available from the release page.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=170739806\n'}"
1064,"{'code': 'ec9ac201975685e6533a1788e5e8bbefdd9cbc30', 'message': 'Remove removal dates for non-@Beta deprecations.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=170507937\n'}"
1065,"{'code': '3a3e495603803fa5ef616cb2aa119327ec8e2560', 'message': ""Document that we're no longer removing stable APIs.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=170502671\n""}"
1066,"{'code': '9b61b0f4e64f58283656d994cd68d6db7cd9bd55', 'message': 'For clarity, re-apply @Beta to the CharMatcher constants.\n\nWe deprecated the CharMatcher constants back when they were @Beta. Then we removed @Beta from the class. Because these methods were never present as non-@Deprecated, non-@Beta APIs, and because they are expensive to initialize on Android, we\'ll still remove them.\n\nSince we\'re removing them, it makes sense to put our ""We might remove this"" annotation them. Doing so should make things clearer to humans, and it should allow tools to identify usages of these APIs to warn about possible breakages.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=170502670\n'}"
1067,"{'code': '07eed063f9dd2b6b6b121f76d9656f8e61fb61c7', 'message': 'Remove CountDownLatch emulation\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=170466397\n'}"
1068,"{'code': 'e1226062230b160df91d751c7ab61fdc68ecedd5', 'message': 'Fix Escaper.java comment typo.\n\nFixes https://github.com/google/guava/pull/2955\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=170426933\n'}"
1069,"{'code': '71f8c47ff2acb1d5359c350d8a872016a3fc5e19', 'message': '[guava concurrent] Removed the now-unused suspend() and resume() methods from SequentialExecutor. Removed the special-case visibility. Marked SequentialExecutor final. Removed the now-unused SerializingExecutor migration interface. Updated Javadoc to remove references to the now-gone methods.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=170383728\n'}"
1070,"{'code': '984b19d5244406e22a537cb90b7cf40b7cd787b0', 'message': 'Minor noop updates to Future and TimeUnit in preparation of moving.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=170376409\n'}"
1071,"{'code': '6fba8d15ac48632e259d6b4851615e081e341b6e', 'message': 'We test on Ice Cream Sandwich now, not Gingerbread.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=170348376\n'}"
1072,"{'code': 'bc27d8a03f5400c08ce627df49a64715634775c5', 'message': 'Update Verify.java @since NEXT tags to 23.1.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=170346041\n'}"
1073,"{'code': '6d8d9d97f73cb5663f794edd7aaa1c7ede725203', 'message': '[guava concurrent] Updated a comment in ListenerCallQueue to point at SequentialExecutor instead of the deprecated SerializingExecutor wrapper interface.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=170335851\n'}"
1074,"{'code': '50752554b24b5d7f8ee4535435d2330a09de7c5c', 'message': '[guava concurrent] Removed the executeFirst() method from SequentialExecutor, and its test case. Switched the internal representation of the task queue back to Queue from Deque.\n\nThe method was never public, and is no longer used in the depot.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=170244464\n'}"
1075,"{'code': '157f1d2af826d0c558c7772d2698fbbaec28b0b1', 'message': 'Update set_version.sh to handle new versioning scheme and ignore snapshot versions since those are no longer chaning.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=170242268\n'}"
1076,"{'code': '33f372cba88cd687c20874d392f51bfe1069e3ae', 'message': 'Fix some random Error Prone warnings.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=170241825\n'}"
1077,"{'code': 'e3b8c0b6f07c1017e80d86758191d6898517a546', 'message': 'Update @since tags to @since 23.1.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=170234714\n'}"
1078,"{'code': '956f84398cf1e5f6b536590ca861d4a9d0210258', 'message': 'Update Preconditions overloads that were added in 20.0 to have @since 20.0 and new Verify overloads to have @since NEXT.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=170230384\n'}"
1079,"{'code': 'e4b10774c57124ba7fc9d0b6ae047e6312cdd974', 'message': 'Change Futures.dereference removal from Guava 25.0 to January 2018.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=170218859\n'}"
1080,"{'code': '82fb7f70ffc4474d9d08fc301af02ca979a253e8', 'message': 'Change ""@since 24.0"" to ""@since NEXT"".\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=170113877\n'}"
1081,"{'code': '3794eb819ccbec40229cd7df4140db80ead227e4', 'message': 'Change version number in pom files from 24.0 to HEAD(-jre/android-SNAPSHOT).\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=170103675\n'}"
1082,"{'code': '6a297bd47bcd0494b300f52352dac570f49fec37', 'message': 'Fixed a typo in the Predicates class documentation.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=170083413\n'}"
1083,"{'code': 'b458e6fb63d281f778ccb09e534707b3ab8cb190', 'message': 'Slightly bump the fpp to prevent OOM under JDK9.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=170065907\n'}"
1084,"{'code': '3fb7f1b80a39bf4557a87a20b95b2f5bca2d4bd5', 'message': 'Fix Guava version number re. BloomFilter thread safety.\n\nFixes https://github.com/google/guava/issues/2949\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=170060213\n'}"
1085,"{'code': 'e2a4a28427011c05702cf2c1568c5067baed5337', 'message': 'Make common.collect spliterators backed by an int-indexed function correctly splittable.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=169941103\n'}"
1086,"{'code': 'c95fc106ff08d0652b5d661cab9a73f38697eccc', 'message': 'Throwables#lazyStackTrace unsupported on IBM JDK 6\n\nFix addresses a problem occurred on IBM JDK 6. To ensure\nthat we can call underlying method, Throwables#getSizeMethod,\nto get  stack size, first a smoke test  with dummy exception.\nOnce method executed with success, it is safe to return it for\nfurther usage.\n\nFixes #2947\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=169910803\n'}"
1087,"{'code': '76c3823ece47fe170d83c963d7d445c7f87462eb', 'message': 'common.graph: fix formatting error in Graph/ValueGraph/Network Javadoc.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=169869396\n'}"
1088,"{'code': '8b4267b28dc8e2be748f03f07005ac45ab9b3223', 'message': 'Implement Traverser.forGraph().breadhFirst().\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=169699092\n'}"
1089,"{'code': '36d362ade4d4cc3ca59048af4494ec226003a52a', 'message': 'Traverser.java: tweak the forGraph() and forTree() documentation to make memory use a bit more clear.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=169556295\n'}"
1090,"{'code': 'ac573800bccecbb72f509d9024acccf48ccb6f4f', 'message': 'Revert parts of CL 33393713 that changed Splitter.on("","") tests to redundant Splitter.on(\',\') tests.\nUse COMMA_SPLITTER in more remaining Splitter.on(\',\') tests.\n\nFixes https://github.com/google/guava/pull/2946\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=169545037\n'}"
1091,"{'code': '946151d87b7999c614a7ceeb5536047193487f58', 'message': 'Fix space complexity in forTree() documentation.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=169403578\n'}"
1092,"{'code': '631696beffc2f8f216b3fb0da32605c472935504', 'message': 'Add the same overloads that Preconditions has in Verify.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=169291293\n'}"
1093,"{'code': '27b0d3840b057814b403fa8b194bad5914b166a4', 'message': 'Make propagateCancellation helpers @GoogleInternal.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=169280037\n'}"
1094,"{'code': 'fe71fdc1eb0efe8e53c43a5b6f8357e307b2b4a8', 'message': 'Add sortDescending methods in common.primitives.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=169267470\n'}"
1095,"{'code': '52047f9d898bbb4bfb4e2c8b63c63be51be28c45', 'message': 'Add @GoogleInternal propagateCancellation to Futures.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=169256636\n'}"
1096,"{'code': 'bf6141998e60ab1e434db8e4bf4fdc517917407e', 'message': 'Fix documentation for checkArgument and checkState\n\nBoth claim\n\n@throws NullPointerException if the check fails and either {@code\nerrorMessageTemplate} or {@code errorMessageArgs} is null (don\'t let this\nhappen)\n\nbut this doesn\'t actually happen - the message is created using\nPrecondition.format that handles null values without throwing.\n\nThis is more of a concern for the ""don\'t let Args be null"" because having\npotential null args is in fact a legitimate usecase.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=169252415\n'}"
1097,"{'code': '1202bb2f3663d052e97d62340e1cf445a817efc2', 'message': 'Merge pull request #2942 from google/sync-master-2017/09/18\n\nMoe sync'}"
1098,"{'code': '1ed39372ad8a3ce24b97679d41e61f401d854816', 'message': 'Propagate close for to the inputs of Streams.zip and Streams.mapWithIndex\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=169073180\n'}"
1099,"{'code': '3e89ed8f86d5ff10fef1637ed808c36a873676e3', 'message': 'Add sorting methods for the unsigned primitives in common.primitives.\n\nRELNOTES=Add `Unsigned{Bytes,Ints,Longs}.sort`\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=168878007\n'}"
1100,"{'code': '6cdb8e527d89c2e5c1b338fabbbe82aad31b8d37', 'message': 'Add reverse methods to all primitive arrays in common.primitives.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=168873513\n'}"
1101,"{'code': '3a053c298ce800315a92365fbc8f62a08babc09d', 'message': 'Clarify some docs on Ordering+Comparators\n\nFixes https://github.com/google/guava/issues/2744\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=168709191\n'}"
1102,"{'code': '54868978f04f1903e6e1ec70c9766752cf9450d4', 'message': 'Add Traverser API without implementation.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=168700059\n'}"
1103,"{'code': 'db2e7fe9adcbf44e4964a26be9f3d7b52a52ca21', 'message': 'Fix tests that assume Class.getClassLoader() returns a URLClassLoader so that they can call getURLs() to instead parse the ""java.class.path"" system property.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=168584444\n'}"
1104,"{'code': '63898e263ddcdae00fc760fdaf97d90c8a656608', 'message': 'Make ClassPath search the contents of the ""java.class.path"" system property for the system class loader in Java 9.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=168478543\n'}"
1105,"{'code': 'a49e1d0fca1b37df1dd3bd32289c97c3fb6f684a', 'message': 'Add note about nodes being valid Map keys to PredecessorsFunction and SuccessorsFunction.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=168384390\n'}"
1106,"{'code': 'bfcb6683c15a97e9121ab5a6714f7922a720f048', 'message': 'The documentation of PredecessorsFunction and SuccessorsFunction now makes it clear that null nodes are forbidden.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=168363735\n'}"
1107,"{'code': '68db9c6ac5c87c39846f4c690f662e52946b93d7', 'message': 'Fix edge case in EnumMultiset.remove\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=168298209\n'}"
1108,"{'code': '6f630e9bd3b386720c5971812f23f5c3535841b4', 'message': 'Add @CanIgnoreReturnValue to EnumMultiset#add\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=168270965\n'}"
1109,"{'code': 'b89a6586f5da3a943e4b412bd61cc6bc199f451f', 'message': 'Rewrite EnumMultiset to be directly backed by an E[] and an int[], avoiding allocation of boxing objects.\n\nIt turns out that copying the enum constants array allocates less, requires less code, and avoids boxing overhead.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=168250122\n'}"
1110,"{'code': '6afde5c3fdcf7aeabde433255d91e76d1da40043', 'message': ""Fix parameter comments that don't match the formal parameter name\n\n[]\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=168222299\n""}"
1111,"{'code': '221b465d6472d9d95f7820ac8f8ca3bdac14ae5d', 'message': 'Migrate Executor-less Futures callback methods to the ones with an Executor, while applying MoreExecutors.directExecutor() for identical behavior.\n\nFor more information, see []\n[]\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=168196211\n'}"
1112,"{'code': '0725dbcf74a6226ae0c173aed70c098e3293e02b', 'message': 'MOE strip the ""public"" from SortedLists\' member enums.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=167911908\n'}"
1113,"{'code': '0b9f32ae3c38c9edb41ac8fa7cf240d5c83d3d97', 'message': 'Remove @CanIgnoreReturnValue from Listening*ExecutorService.\nUsers should do something with the returned Futures, if only log failures.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=167801778\n'}"
1114,"{'code': '61d2a6faec8b27d021b9f37f7dfb6655ae060fad', 'message': 'Set version numbers to 24.0-jre-SNAPSHOT.\n\nThis makes Maven consider 24.0-jre to be ""newer"" than 24.0-android.\nThat\'s preferable, as discussed in https://github.com/google/guava/issues/2914, https://github.com/google/guava/issues/2839, and https://docs.google.com/document/d/1NYGbfz56C0Oh4IGymXjeQUVK4FcRiqDbpc4vGLnDMrY/edit#\n\nRELNOTES: To upgrade to Guava 24.0, change your version numbers to ""24.0-jre."" (Or, if are writing an Android app or Android-compatible library, use ""24.0-android."")\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=167799453\n'}"
1115,"{'code': 'ffc3e679f785cf6780c2bf96bdfdcbde41cec87b', 'message': 'Remove redundant calls to NullPointerTester#setDefault\n\n[]\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=167536897\n'}"
1116,"{'code': '82092f975dafb3964f4d4e01354adc974a1b72d8', 'message': ""[guava concurrent] Renamed SerializingExecutor to SequentialExecutor. Turned SerializingExecutor into a proxy to SequentialExecutor so two Components classes that directly use it have a chance to catch up.\n\nComponents CL to change Components usages should be independent.\n\nRELNOTES: Renamed Guava's SerializingExecutor to SequentialExecutor to match the new MoreExecutors.sequentialExecutor() method.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=167299423\n""}"
1117,"{'code': 'adf10c673d2a4c3b22d17f695fa3316966d76984', 'message': 'Streams.concat: Propagate close to sources streams\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=167296331\n'}"
1118,"{'code': 'da36449da37d67a52ad4dc99644a1c3ad1720625', 'message': 'fix typo\n\nFixes #2927\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=167272653\n'}"
1119,"{'code': 'd1dbf6036e22700411f04e478e974cef428283ec', 'message': 'Add java.util.Optional and its derivatives (OptionalInt, OptionalLong, OptionalDouble) to ArbitraryInstances and FreshValueGenerator.\n\n[]\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=167165795\n'}"
1120,"{'code': '6247a70229b36fcc56af402d3657f71afc481069', 'message': ""Update Guava's dependency on Truth to 0.35.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=166834737\n""}"
1121,"{'code': '3a1a7b25807f94d28367d4dceabbb4b8ec54082b', 'message': 'Javadoc update when delegate throws exception.\n\nFixes #2916\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=166719697\n'}"
1122,"{'code': 'c2c98c55c6bec6477bf2b5a9e82f9cb08c0c962c', 'message': 'Update Public Suffix list.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=166092121\n'}"
1123,"{'code': '9bf42862f877a0ed8234bd484aa0089a3773ccd4', 'message': 'ImmediateFuture.toString() implementation to provide the returned value or exception.\nProvides for all ImmediateFutures implementation the same syntax that AbstractFuture uses.\n\nIt\'s especially convenient during debugging of mocked asynchronous gRPC services.\n\nFixes bug in AbstractFuture#toString in GWT that caused wrong representation:\n""Class$S413@205[status=SUCCESS, result=[FAILURE, cause=[Class$S6]]"" due to ongoing\nbuilder being already called when getDone() throws exception.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=165925433\n'}"
1124,"{'code': 'c2db40a99121238db368f6bfaabe2b81b615e927', 'message': 'Specifically instruct people who are calling dereference(transform(...)) to call transformAsync(...).\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=165749798\n'}"
1125,"{'code': '89fb0654edc987741441c5329fee606a4a2a9224', 'message': '[guava concurrent] Added MoreExecutors.sequentialExecutor(), and its documentation.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=165747869\n'}"
1126,"{'code': 'f438db66650063f9faa91c592054873c8392e512', 'message': 'Use diamond for collect tests.\n\n[]\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=165711604\n'}"
1127,"{'code': '16f262fbde011c89d770472540c33bdb4588371b', 'message': ""Use diamond operator for all test targets except 'collect'\n\n[]\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=165710863\n""}"
1128,"{'code': 'd8bf23b9d0f51d29bf7d75f10e93dd5fa3a8f351', 'message': ""Remove a dangling closing bracket from Javadoc\n\nThere's a dangling closing curly bracket in the Javadoc example of\nMoreObjects.toStringHelper(). Remove that in the main and the android\n\nFixes #2917\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=165704738\n""}"
1129,"{'code': 'c428cbb42f767451d973a0b543112aa992ce9ad2', 'message': 'catch (SomeException e) {\n  // Expected\n}\n\n=>\n\ncatch (SomeException expected) {\n}\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=165703702\n'}"
1130,"{'code': '0f664c613a3ab9f4a302f7891157c89579830e6a', 'message': ""Store the CancellationException.class (as we do in other tests), not the cause of the CancellationException.\n\nThe cause is null nowadays, so we were presumably never taking the if() branch at line 467.\nThat meant that we weren't actually checking isCancelled().\nA comment also suggests that we could theoretically have seen test failures because it was possible for setFuture to also succeed, but I don't think we've seen that in practice. I have spent 0 seconds thinking about whether there's anything deeper to ponder here.\n\n(I noticed this while migrating to multicatch. This CL also adopts multicatch in one place where it does make sense.)\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=165647160\n""}"
1131,"{'code': '97f1b638e22d0a31fbe19221d78ca7a7ba2b68d2', 'message': 'Multicatch!\n\nThis should be fine for Android, even old versions, as I understand it, since dex is smart enough to turn it into something that works with any version.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=165645769\n'}"
1132,"{'code': '82ae659392d5a3f2ecd8ef478e73319e86fed5dd', 'message': ""Use given throwable as the cause for the IAE that's thrown during loop\ndetection.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=165643812\n""}"
1133,"{'code': '2eed29bd6a913e72c3eeae173b84948b0e3d2353', 'message': ""On second thought, back out a few diamond operators in the mainline when they don't also work with Java 7 type inference.\nThis minimizes diffs between the branches.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=165608703\n""}"
1134,"{'code': '8cdd8c718cceb67bd94c83fe60544ff46f9f4460', 'message': 'Use diamond operator for rest.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=165581940\n'}"
1135,"{'code': '2da8a91a3702c6a318aaaeaa1f7164856a480d17', 'message': 'Use diamond operator in base+cache+concurrent.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=165453531\n'}"
1136,"{'code': '0c81386a239370c073572212079efc727c911d0b', 'message': 'Use diamond operator in collect\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=165450412\n'}"
1137,"{'code': 'd46ffd3d0e289c6fb1be3e820f57679615675f48', 'message': ""Update Guava's JUnit dependencies to 4.11 (the version in [])\n\n[]\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=165313267\n""}"
1138,"{'code': 'd21e3b97f1ea4e43d7b0467ad109011780dd988c', 'message': ""Fix @since tags for collectors that didn't make 23.0.\n\n(pointed out in https://github.com/google/guava/issues/2750#issuecomment-321129730)\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=165311302\n""}"
1139,"{'code': 'd7501abccbd666a8db4dff77fa110c801a094c75', 'message': 'Add ImmutableSet.builderForExpectedSize.  Currently, the implementation is that if and only if a size is specified up front, the builder starts generating the hash table online and deduping elements.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=165233245\n'}"
1140,"{'code': 'a3da73204a12c81331e5dc21bfcf709e0a4a9b07', 'message': 'Fixes #2905\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=165000871\n'}"
1141,"{'code': '7e4b3875c63758b1a91bb3a82d7240f414e8ae49', 'message': 'Polishing\n\nFixes #2903\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=164986539\n'}"
1142,"{'code': 'c412a2a1dcef61402c54a8094a39c042e6b2b1d6', 'message': 'Fix javadoc link by including package name.\n\nFixes #2904\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=164983301\n'}"
1143,"{'code': '8158909d7bda9f98a4576f89eb5fd88cb12c2bd6', 'message': 'Add Immutable{Map,BiMap}.builderWithExpectedSize API.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=164881633\n'}"
1144,"{'code': '44eb16b1bc5ce5928675b6e34cd521d861ff0696', 'message': ""Test that a failed/cancelled input doesn't cause us to cancel other inputs.\n(It's debatable whether that's the long-term behavior we want, but we should at least document that current behavior properly.)\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=164874228\n""}"
1145,"{'code': '7928bbe079303c54373453353c9ef2cd7de9365e', 'message': 'Add ImmutableList.builderWithExpectedSize API.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=164872795\n'}"
1146,"{'code': '9e964b3326b56e35f459d843b48a7ced88091b6f', 'message': ""common.graph: remove j2cl annotations, as no one's using it from j2cl, it has no immediate prospective users, and it doesn't support Network-related capabilities anyway.\n\nBonus cleanup: remove TODOs for adding documentation, as the indicated bug has been closed.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=164867192\n""}"
1147,"{'code': 'fd6b6e1cbdec0bff0753ac0d5cb82740d00c5ea8', 'message': 'In ImmutableCollection.ArrayBasedBuilder, keep a forceCopy flag to allow builder types to force a copy even if the entire array has not been used.\n\nThis syncs the java7 implementation to the current implementation.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=164788429\n'}"
1148,"{'code': '6290373588ef914111f0896b8d0c86a15b7f0f6b', 'message': 'Fix typo in AbstractService log message.\n\nFixes #2894\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=164616826\n'}"
1149,"{'code': 'ec242d7d1ff8dd68dfd4355b4089267e4aaedef7', 'message': 'Ignore the lazyStackTraceIsLazy test on Java 9, for now.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=164604079\n'}"
1150,"{'code': 'ecdcdf03ae7fb502b766e6d44a2f3d1ce64f429d', 'message': 'Fix broken Javadoc link in UnsignedLongs.toString(long)\n\nFixes #2895\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=164593709\n'}"
1151,"{'code': '6388c64e93228d99d8af872f6e2c3740dda19b4e', 'message': ""Suppress tests broken by CL 164180554's emulator upgrade to API level 15.\n\nIt seems like that particular version of Android might not GC as aggressively (perhaps specifically for variables in the current method that have been nulled out, perhaps specifically when GC isn't strictly required -- I don't know).\nThe tests pass under the newest emulator, though, so I don't think there's a bug for us to report. Hopefully it's just a quirk of GC and not some strange way that some versions of Android are actually retaining a reference (not that we could necessarily do anything about it, anyway).\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=164593083\n""}"
1152,"{'code': 'd37fe31537e6362cd99239e0f8f6d3ae596f2db0', 'message': 'Update Guava README for 23.0 and update snapshot versions.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=164477814\n'}"
1153,"{'code': 'a8373f17c4ea0b2ad87b7bad71f9a2b27c2c28a1', 'message': 'Catch NoClassDefFoundError and generic Error, the types thrown by JVM8 and by modern versions of Android.\n\nFixes https://github.com/google/guava/issues/2888\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=164271678\n'}"
1154,"{'code': '4740f24c9aa35cc6c71aa7359018432853e5e7ee', 'message': 'Avoid dependency on CharMatcher in BaseEncoding.\n\nEffects on BaseEncodingProGuard:\n82416 bytes => 69250 bytes\n33 classes => 16 classes\n198 methods => 136 methods\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=164041197\n'}"
1155,"{'code': '106e7ee5433dad1d66a6b93aeb0e13e137900464', 'message': 'Update removal data for dereference().\n\nIts deprecation CL came just after the 23.0-rc1 cutoff.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=164024314\n'}"
1156,"{'code': '14c0d5f37ce76a081dbd1863e4f1d33f8f61cb52', 'message': 'Minor fix in comment.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=163918392\n'}"
1157,"{'code': 'a4c537ad34b241ba01fd9b0c9326bbcd71e2b60a', 'message': 'Change CacheBuilder constructor modifier to private, and\nrewrite corresponding tests\n\nFixes #2883\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=163868156\n'}"
1158,"{'code': '59dbb4532455eb9a9428025120d926268d48ef01', 'message': 'Shuffling from internal-only change.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=163850602\n'}"
1159,"{'code': '74f5ccae9f8875ee063065534e1bccf90458652b', 'message': 'Make ListenableScheduledFuture GwtCompatible.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=163737479\n'}"
1160,"{'code': '8f203c48cbbfe47569d8101a12a8fc9384e09674', 'message': 'Avoid importing ImmutableList from Ordering.\n\nEffects on OrderingProGuard ([]79684 bytes => 64945 bytes\n28 classes => 15 classes\n215 methods => 124 methods\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=163721091\n'}"
1161,"{'code': '719f2c581f4f09f55c2121c6ac469c7f4314ceab', 'message': 'Add collectors for ImmutableRangeSet and ImmutableRangeMap.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=163522365\n'}"
1162,"{'code': '2c8e33543f4df90af29186215159b721b59696db', 'message': 'Add notes about Java8 to UnsignedBytes, UnsignedInts, and UnsignedLongs.\n\nFixes https://github.com/google/guava/issues/2817\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=163467425\n'}"
1163,"{'code': '2d4c517de9f12ba4dd2d9f720e700d7c835ecc4c', 'message': 'Remove Maven version badge from README.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=163355688\n'}"
1164,"{'code': '40e4be42409251b80efecb7ced96fbce8b4af90d', 'message': 'Mention 23.0-rc1 in Guava README.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=163219156\n'}"
1165,"{'code': '934e3840945d3b866f80c28135a0369cb32d7163', 'message': 'Use diamond operator.\n\nFixes #2875\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=163205176\n'}"
1166,"{'code': 'f885eec20a909645c6edfef412bf39a8ec4c30b4', 'message': 'Take advantage of suppressed exceptions in ServiceManager now that Guava is on Java 8.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=162991053\n'}"
1167,"{'code': '0eebe158820481f09a9405569c44423cd0b84e0f', 'message': 'Remove some methods that are scheduled for removal in 23.0, along with one that was apparently scheduled for removal in 21.0.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=162962688\n'}"
1168,"{'code': '04d8a7ebd85a88837f840a5c16a5085609e065d9', 'message': ""Fix an interruption bug from CL 162649353, but do so in a way that doesn't reintroduce yet another bug that that CL fixed.\n\nSpecifically, go back to setting the runner thread before checking isDone() (so that we can't end up with a task that was cancel(true)ed but runs without being interrupted).\n\nBut also, if aborting because isDone(), spin until we've received the interrupt, just as we do during normal completion (so that we don't end up interrupting the thread after the task is done).\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=162941603\n""}"
1169,"{'code': '2ed2c6fab7dd31e9bc86701d202ccbf364c1e661', 'message': 'Warn a little more about weakKeys resulting in == key comparisons, even in the asMap view.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=162780454\n'}"
1170,"{'code': '73e17314732faf33224987fc37df9c3860296888', 'message': 'Fix a bug in AbstractFuture.setFuture\n\nIf the future being assigned was cancelled then there could be slightly different behavior based on whether or not the wasInterrupted bit is set and whether or not it was a TrustedFuture.  The fix is to never propagate the wasInterrupted bit from setFuture.\n\nThis also fixes the potentially confusing behavior where wasInterrupted could be true but interruptTask() would never be called.\n\nFor all these reasons, it remains the case that setFuture can never cause interruptTask to be invoked.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=162767529\n'}"
1171,"{'code': '6d764735d00ca9782b4bbbac777b8709f8a0aa9c', 'message': 'Super-minor cleanup to AggregateFuture\n\naccess the wasInterrupted local instead of calling the method again\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=162687910\n'}"
1172,"{'code': '384deaf4b7a632a9d28bf2b309ce137feacdad4b', 'message': 'Plug ImmutableIntArray in Ints, etc.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=162665962\n'}"
1173,"{'code': 'a732620a1475039df983f20dc4111f2cb0a51ce3', 'message': 'Forgot to specify equals().\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=162665061\n'}"
1174,"{'code': 'f89c0039a925d681cd7f4990e9a86bbe0179aeca', 'message': 'Add @ForOverride to AbstractFuture.afterDone now that https://github.com/google/error-prone/issues/342 is fixed.\n\n[]\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=162662199\n'}"
1175,"{'code': 'cf1478062f646ec0d7e1d96f8ab52e7194b50ce8', 'message': ""Fix interruption leak in submitAsync and whenAllComplete().callAsync().\n\nThere are two bugs in the handling of TrustedListenableFutureTask:\n\n1. Returning an future that was cancelled with interruption calls setFuture(), which then calls interruptTask() on the output future - this then calls InterruptibleTask.interruptTask(), which happily interrupts the thread that directExecutor.execute() was called on.\n\n2. The thread that InterruptibleTask runs on is referenced forever, and CombinedFuture nulls out its reference to InterruptibleTask in afterDone() - which is called after interruptTask. This means that if the setFuture() path is taken, then cancel(true) is called, the thread that called the callable will be interrupted, even after InterruptTask.run() has returned.\n\nIf we've ever seen spurious InterruptedExceptions in production, this could be a cause - whenAllComplete().callAsync(callable, executor).cancel(true) can interrupt whatever thread callable was called on, even long after call() returns. If that thread is part of a pool (which it probably always would be), then this would interrupt whatever unlucky task happened to be running on that pool thread later.\n\nThis CL adds earlier nulling out of the InterruptibleTask in TrustedListenableFutureTask, as well as makes InterruptibleTask robust to having interruptTask called after runInterruptibly has returned. To avoid tasks interrupting themselves when they call setFuture of an interrupted and cancelled future, a new method allows subclasses to end the interruption window early - this should also somewhat reduce the race of directExecutor() listeners being interrupted.\n\nAdditionally, by splitting CombinedFuture.setValue() into 2 methods, this CL fixes the equivalent of https://github.com/google/guava/issues/2254 for Futures.whenAllSucceed/whenAllComplete.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=162649353\n""}"
1176,"{'code': '71703b40b42c96dd1fef03a760e2e648db11f792', 'message': 'Use specialized spliterators for Primitives.asList utilities.  Addresses https://github.com/google/guava/issues/2874 .\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=162417940\n'}"
1177,"{'code': 'f6af85997cf46e040edfbbe8f9d1b4038435d5e6', 'message': ""Rollforward [] which was rolled back in [] because it\ncaused some tests using appengine to fail with IOExceptions when calling\nFileInputStream.available().  The workaround in the rollforward is to not call\nthe method.  The one case where we were calling it we had actually already\ncalled a similar method, so trying again doesn't seem valuable anyway.\n\n*** Original change description ***\n\nImplement ByteSource.asCharSource(charset).read() using the decoding string\nconstructor instead of streaming the contents into a StringBuilder.\n\nthis allows us to avoid a number of copies that are currently happening for\neach character (1. into a temporary CharBuffer, 2. into a StringBuilder, 3 into\nthe String char[]) and replace it with simply whatever is required by\nByteSource.read() and the String(byte[], charset) constructor.  For certain\nByteSource implementations (like FileByteSource) ByteSource.read() can often\npresize the byte[] correctly and the string constructor can also do some things\nto guess at the correct array sizes and avoid copies in the common case.\n\nBenchmarks have shown that this should improve the speed of Files.toString\nsignificantly.\n\n***\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=162275181\n""}"
1178,"{'code': '551343910c2974abf0e81d7728d975c6164f26b3', 'message': 'Automated g4 rollback of changelist 162220754.\n\n*** Reason for rollback ***\n\napp-engine has a buggy implementation of FileInputStream.available() which is throwing IOException\n\n*** Original change description ***\n\nImplement ByteSource.asCharSource(charset).read() using the decoding string constructor instead of streaming the contents into a StringBuilder.\n\nthis allows us to avoid a number of copies that are currently happening for each character (1. into a temporary CharBuffer, 2. into a StringBuilder, 3 into the String char[]) and replace it with simply whatever is required by ByteSource.read() and the String(byte[], charset) constructor.  For certain ByteSource implementations (like FileByteSource) Byte...\n\n***\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=162245286\n'}"
1179,"{'code': '73a1a498cf735d10457335c97a780f0e9a17c0a1', 'message': 'Add deprecation notice to Futures.dereference\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=162231445\n'}"
1180,"{'code': 'ee12894c9d9c6b057efd3465391ab0f779b8af94', 'message': 'Implement ByteSource.asCharSource(charset).read() using the decoding string constructor instead of streaming the contents into a StringBuilder.\n\nthis allows us to avoid a number of copies that are currently happening for each character (1. into a temporary CharBuffer, 2. into a StringBuilder, 3 into the String char[]) and replace it with simply whatever is required by ByteSource.read() and the String(byte[], charset) constructor.  For certain ByteSource implementations (like FileByteSource) ByteSource.read() can often presize the byte[] correctly and the string constructor can also do some things to guess at the correct array sizes and avoid copies in the common case.\n\nBenchmarks have shown that this should improve the speed of Files.toString significantly.\n\nfurther work should also be done for the normal CharSource.read implementation.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=162220754\n'}"
1181,"{'code': '71b5b85e1d219b706702356108fe1a9b2fbb15c1', 'message': 'Add submitAsync and scheduleAsync methods, to ease the deprecation of Futures.dereference\n\n[]\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=162004818\n'}"
1182,"{'code': 'b6c86db89a9cb828a47ca893f7a958c6a4f378b6', 'message': 'Short-circuit null check in Throwables#lazyStackTraceIsLazy\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=161998907\n'}"
1183,"{'code': 'dd78480631626802e22edc4d6d12fc869288e954', 'message': 'Update Public Suffix List.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=161899116\n'}"
1184,"{'code': '1d7f652e1866fbd9bfce7f20a9ba124638a4367a', 'message': 'Add @SafeVarargs to Predicates.and(Predicate<? super T>...).\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=161877904\n'}"
1185,"{'code': '68c8619d8ccd8811dd5408b828b7e3a45f07f21d', 'message': 'Shutdown the original executor in getExitingScheduledExecutorService.\n\nThe shutdown hook thread names itself after the executor, presumably to aid in debugging.  If the original executor does NOT shutdown quickly, looking at the thread dump shows an executor never created by application code.\n\nInstead, give up a little of the wrapping safety of unconfigurableScheduledExecutorService  to make debugging easier.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=161869256\n'}"
1186,"{'code': 'a2c7f54378dc2585f8524f59d71e56353ac0a1ba', 'message': 'Optimize CharStreams.copy to take advantage of known Readable/Appendable types.\n\nThe most common Readable is a Reader which has good support for reading char arrays, the most common Appendable is either a StringBuilder or a Writer, both of which have good support for writing char arrays.  Furthermore the default implementation of Reader.read(CharBuffer)  is less than ideal (copies the characters an extra time) and the default implementation of StringBuilder.append(CharBuffer) calls charAt() on every character (instead of trying to access the underlying array()) which incurs lots of bounds checks.  Similarly Writer.append(CharBufffer) calls toString() on the CharBuffer which incurs an extra copy.  So depending on the combination of types involved we may copy the bytes 4 times instead of 2.\n\nBy adding specialized implementations we can avoid this overhead most of the time and deal with simple char arrays for our temporary buffers.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=161868537\n'}"
1187,"{'code': '4a6ce819542d5fe440bd5d13956bb4e46084325c', 'message': 'common.graph: create (package-protected) ForwardingValueGraph and ForwardingNetwork classes, and use those (and ForwardingGraph) to simplify the implementation of the Transposed* inner classes in Graphs.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=161856111\n'}"
1188,"{'code': 'd6c6d253d22bf80ce5420c9d2aba59af9263d8ef', 'message': 'Optimize CharSource.wrap(CharSequence) for when the CharSequence is a String\n\nStringReader should be faster than CharSequenceReader in this case since it can\nuse the String.getChars() method.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=161843629\n'}"
1189,"{'code': '2453d95687e56cdc84af127a4c722f853e269618', 'message': 'ValueGraph.java: remove bogus @since 23.0 on edgeValueOrDefault.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=161824124\n'}"
1190,"{'code': '66b3e26aadf5ec82808a0965b2a894addb0970e9', 'message': 'ValueGraph.java: restore edgeValueOrNull() to edgeValueOrDefault().\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=161738013\n'}"
1191,"{'code': 'fc3d9d75f3c991deff0e81317e21ac5ac588643d', 'message': 'Switch to using AtomicReference, since only one field needs CAS.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=161675875\n'}"
1192,"{'code': '9af3558717f000154e8c623a6b3dbb0655698ba6', 'message': 'Make RateLimiter.create parameter order consistent.\n\nFixes #2869\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=161668959\n'}"
1193,"{'code': 'a0a62ac531ad052c8f7ca6e979d6f0759e5e2e60', 'message': 'Fix >100 violation in ImmutableMap doc update.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=161564762\n'}"
1194,"{'code': '8ad3a8a2e34b0678765fdb527f6a1813b223341f', 'message': 'Add @since 23.0 to new (or with new return type) edgeValue methods in ValueGraph.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=161545836\n'}"
1195,"{'code': '247a0bb83d37d4ae67f307ea2872780d8b8bd1f1', 'message': ""Don't include the toString() of the future if it completes while the timeout expires.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=161523026\n""}"
1196,"{'code': '85765fb568e60631e06b315237d2f10ceffb89ea', 'message': 'Add @SafeVarargs to Predicates.or(Predicate<? super T>...).\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=161477333\n'}"
1197,"{'code': 'bae9a59c562acacd1be81c4421fb2c96b6efcc18', 'message': ""Make documentation on iteration order more explicit.\n\nImmutableCollection specified that each construction pathway would specify how it does ordering, but we didn't really follow through on that.  Now, we\n\n- add more explicit documentation to the main construction pathways for the main immutable collections\n- specify in ImmutableCollection that it's usually insertion order\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=161237788\n""}"
1198,"{'code': '0f6096df9105ecbbb2d32017eae8fd63562ab298', 'message': ""ValueGraph.edgeValue*: change from\n* V edgeValue(), V edgeValueOrDefault()\nto\n* Optional<V> edgeValue(), V edgeValueOrNull()\n\nFixed Graphs.inducedSubgraph() implementations so that it appropriately specifies the # of nodes in the induced subgraph as being the size of the supplied node Iterable.\n\nFixed MoreGraphs.inducedSubgraph() implementations so that the filtered nodes are being returned as Lists rather than Iterators, so that calculating their size doesn't exhaust the Iterator.\n\nFixed the graph *Builder from() methods so that they are all uniformly enforcing types (this was causing MOE problems in conjunction with the expectedNodes() call.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=161235517\n""}"
1199,"{'code': '826bda60d3c84c8142da6f0e8576c68540d51891', 'message': 'Throw IllegalArgumentException if a loop in the causal chain is detected in Throwables.getCausalChain() and Throwables.getRootCause().\n\nFixes https://github.com/google/guava/issues/2866\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=161233381\n'}"
1200,"{'code': '31e08d06683a65c85dd9f1b743599494e2c2be5c', 'message': ""Prepare common.graph for GWT/j2cl usage.\n\n1. Had to replace String.format() uses, because it's not supported for j2cl.\n2. Had to mark Network-related code as @GwtIncompatible because of uses of\n   java.lang.ref.SoftReference, which j2cl cannot support.\n\nNeeded as a step toward using common.graph in JSCompiler.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=161208004\n""}"
1201,"{'code': '3af4c3f4cb7a60a059e6714ab516bbf3b6e69117', 'message': ""Fix some more broken {@link} comments.\n\n(I didn't check that every referenced method exists, but this should be better than the status quo.)\n\nMethodology:\nreplace_string '(\\100link(?:plain)? )([a-z][^\\n.(}]*[(}])' '$1#$2'\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=161135720\n""}"
1202,"{'code': '2164075634b195a9ff72a577c78478b827fe6dd3', 'message': 'Fix broken {@link} comment in AbstractFuture.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=161128242\n'}"
1203,"{'code': 'bcb3d6528966b1fb33fdcfd51c2ef16b190cb611', 'message': 'Remove static map allocation and map lookup in base.Defaults.\n\nFixes https://github.com/google/guava/issues/2709\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=161114331\n'}"
1204,"{'code': 'd333cc92360b9afc92787fe964566a6ba9fc0d20', 'message': 'Update code.google.com link to github in Murmur3Hash32Test\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=161087101\n'}"
1205,"{'code': '9feba7c949ef9fd2092c05c29dcbe0ddba7a7cf5', 'message': 'Add an Automatic-Module-Name manifest entry.\n\nFixes #2846\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=161084009\n'}"
1206,"{'code': '4d81347ebea1e51705a620d1c57d0c9bca9cab31', 'message': 'Add @since for pendingToString().\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=161082171\n'}"
1207,"{'code': 'c1018f57bde175a1504b6f954644456d6bf6ff1e', 'message': 'Add cross-references to sibling Preconditions and Verify methods, to aid discoverability.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=161036542\n'}"
1208,"{'code': '654a2bb847f80eb08bc47e6fbf021fd099ba0ac4', 'message': 'Open up pendingToString()\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=161027032\n'}"
1209,"{'code': 'f8d905771028396cd88c7a40af3712df047a5e4a', 'message': 'Add simple `closed` and `closedOpen` ContiguousSet factories for int and long.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=160847399\n'}"
1210,"{'code': 'a6d5c57f397cb79da071311efb333e9909d3bb05', 'message': 'Remove unnecessary from() calls for things that are already FluentIterables\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=160622367\n'}"
1211,"{'code': 'b8f00a8b52efc6d382d87be3a1c7b506fb537f7f', 'message': 'Fix AbstractFuture.toString()\'s message on futures that failed. Expanded unit tests to match the expected strings more completely.\n\nBefore this change ""SUCCESS, result=["" would be erroneously included in the output.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=160576932\n'}"
1212,"{'code': '49e145257d6dfb36ca1dd17a144d81c635504b9e', 'message': 'hasEdge(): rename to hasEdgeConnecting(), remove @GoogleInternal annotation, and add to Network as well.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=160455853\n'}"
1213,"{'code': 'c14cd014c494386f669f3bb26c8d4a6ea3af6e67', 'message': 'Remove extra punctuation in single-sentence @return\n\nAs per []\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=160398233\n'}"
1214,"{'code': 'c7e4e8c7cb06a15c657b9502024bbbe679465e68', 'message': ""Propagate CL 160170507's doc changes to the java7 branch.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=160186624\n""}"
1215,"{'code': '2daf6f6d1668b44d0d489b936db50ecf2b358160', 'message': 'Add BloomFilter collector, now that common.hash is forked.  Finishes off https://github.com/google/guava/issues/2810.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=160170507\n'}"
1216,"{'code': 'df3d140681a84b088db3f0602de7dd612b336240', 'message': 'Fix Javadoc missing ""code"" typos.\n\nSpecifically, fix up occurrences of /{@[A-Za-bd-hjkm-uw-z]/\n\nThanks to https://github.com/google/guava/commit/a3e5514784cfe739f9e3b28bb24bdb0e24711a9c#commitcomment-22758348\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=160161267\n'}"
1217,"{'code': '98fc407531ef6588e6e81c8737107e84abe5f29b', 'message': ""AbstractNetwork: add a functionally correct (if not super-efficient) implementation of edgesConnecting(), because it's easy to do wrong.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=160155863\n""}"
1218,"{'code': '440c639c017c6d1ea6ce303554e6a0cd52c271bd', 'message': 'Prepare for Java-8-specific changes to common.hash.\n\nThis happens to touch the executable bit of our files externally.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=160139425\n'}"
1219,"{'code': '05ee9c9bb43cf0c509a94247d57dba128ebe1163', 'message': 'Only get values from Map in Maps.immutableEnumMap once.  Fixes https://github.com/google/guava/issues/2854 .\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=159973292\n'}"
1220,"{'code': 'c6812506b7c92a67fa6aa6b85df5cb2d04156e30', 'message': ""Update Guava to depend on Truth 0.34.\n\nThere's no immediate need, but I figure I might as well so that future users don't get confused when they try to use MultimapSubject.containsExactly() or something.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=159965728\n""}"
1221,"{'code': 'a3e5514784cfe739f9e3b28bb24bdb0e24711a9c', 'message': 'Fix doc which was incorrect in the null case, and add a few words about a behavior some users have been depending on (that it intercepts NPE and CCE).\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=159867183\n'}"
1222,"{'code': 'a1027f367b9387994e8c3327127fe68b542fa459', 'message': 'common.graph tests: unify some duplicate constructs (enums, methods, constants) and put them in TestUtil.java.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=159856272\n'}"
1223,"{'code': '240a807d3d1cbcad99481ede9530af0cdfadf47c', 'message': 'Network.java: fork edgeConnecting() for java7/Android:\n* current/.../Network.java now provides\n  java.util.Optional<E> edgeConnecting(N, N)\n  E edgeConnectingOrNull(N, N)\n* java7/.../Network.java now provides\n  E edgeConnectingOrNull(N, N)\n\nNeither current/ nor java7/ use common.base.Optional in external APIs any more.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=159748595\n'}"
1224,"{'code': '3561a940b6f7523be5ec69080a939dd0912f04b5', 'message': 'Fix typo in FluentIterable#stream javadoc\n\nFixes #2849\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=159695686\n'}"
1225,"{'code': '6a932bfef2e0e199c71537301c42c2bb6c1561ad', 'message': 'Stop claiming that Guava has only one dependency.\n\nFixes https://github.com/google/guava/issues/2855\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=159573711\n'}"
1226,"{'code': 'ecd2e52e45d2d8cc6c512bd66a4b6748e69c4669', 'message': ""Prepare common.graph for Java-8-specific changes.\n\nIt so happens that this makes a bunch of files no longer executable. They shouldn't have been in the first place, so that's good. It's not clear that we'll fix up our tools to stop making the rest of the files executable anytime soon, though.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=159462625\n""}"
1227,"{'code': '32011a8047f56ec0b9205294518d018e2a106f0e', 'message': 'Marginally improve what Maven prints for javac errors (by upgrading maven-compiler-plugin).\n\nBefore:\n[ERROR] /home/cpovirk/clients/guava-black/guava/guava/src/com/google/common/reflect/Types.java:[607,7] error: cannot find symbol\n\nAfter:\n[ERROR] /home/cpovirk/clients/guava-black/guava/guava/src/com/google/common/reflect/Types.java:[607,8] cannot find symbol\n  symbol: class Overridez\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=159271532\n'}"
1228,"{'code': 'a0f26cc0ea343ce1d88d521f8b9ded3c677da032', 'message': 'Output ""java.util.Map.Entry"" under Java 9, as the JDK does.\nUnder previous JDKs, we continue to output ""java.util.Map.java.util.Map.Entry,"" just as those JDKs do.\n\n(part of https://github.com/google/guava/issues/2571)\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=159237707\n'}"
1229,"{'code': '8f22dbc8ea0c1abdf044846057f6df8201ee9961', 'message': ""Don't fail tests just because we can't securely delete recursively.\n\nI guess that the principled thing here would be for us to delete the individual files and directories manually, but that sounds like more effort than is really worthwhile.\n\nFixes https://github.com/google/guava/issues/2845\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=159220065\n""}"
1230,"{'code': 'd9d6e7b27c114b7b2541f91c450121d27325d6a7', 'message': 'Optimize murmur3_32 hashString(CharSequence, UTF_8) to unroll the Utf8 directly into the hasher rather than converting it to a byte array.\n\nBenchmark results: Pure ASCII took 83% as much time, ""rare exotic"" text took 43% as much time (!), and everything in between took an in-between amount of time.  Unnecessary garbage was reduced to zero.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=158984049\n'}"
1231,"{'code': 'c03373ba4d757904e3300d857464b459e7ce25f2', 'message': 'MutableGraph.java: fix Javadoc link.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=158972072\n'}"
1232,"{'code': 'aa5656a140f3d8073ee5422e3e25576041dab39f', 'message': 'Expand common.hash ByteBuffer support, adding a default AbstractHasher hashBytes implementation and expanding HashTestUtils to test more about the hashing of ByteBuffers.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=158901523\n'}"
1233,"{'code': '0ef619507ded5f35d9a974c817403586dee5af6f', 'message': 'Change implementation of Byte/CharSource.isEmpty to avoid opening a stream when the size of the source is known to be >0.\n\nFixes https://github.com/google/guava/issues/2843.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=158854512\n'}"
1234,"{'code': '941932c2c4a10a11df6453ec7bc78f55e12617ce', 'message': 'Test Android code on Travis with two different environments to hopefully avoid timeouts\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=158852632\n'}"
1235,"{'code': '729592303fde5f9ce2a7ec2aaeb558c62601a64b', 'message': 'Have ImmutableMap go back to using a specialized singleton implementation for size = 1 maps.\n\nBazel has made a pretty convincing argument that so many real usages of immutable collections have size = 1 that the tradeoff is worth it.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=158849972\n'}"
1236,"{'code': '304c634d977127085b49f174fd1aafefd09b2bf5', 'message': 'Add toString() to some Future subclasses.\n\nI opted for CANCELLED rather than CANCELED to match isCancelled().\n\nExample toString:\ncom.google.common.util.concurrent.AbstractFutureTest$11@1ae369b7[status=PENDING, info=[setFuture=[com.google.common.util.concurrent.AbstractFutureTest$10@6fffcba5[status=PENDING, info=[cause=[Someday...]]]]]]\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=158789362\n'}"
1237,"{'code': 'd8de12dfdb6b6beeec13e8341ea5e85e40201e7f', 'message': 'Abstract common.graph classes: add Javadoc warnings that methods implemented in these classes should not be overridden without cause.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=158777768\n'}"
1238,"{'code': '8311be9b7353b9580649559a5f3ee699672e3085', 'message': 'Recognize Java-9-style version strings.\n\n(part of https://github.com/google/guava/issues/2571)\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=158747678\n'}"
1239,"{'code': 'f7c641de871e80ba27ac3bce72d8ed0b095e6949', 'message': ""Use a newer version of Mockito, as necessary for Java 9.\n\nApparently 2.8.40 is out, but currently we're internally upgrading to 2.7.19, so that seems like the safest thing to target. (But I'm sure we'll get to 2.8.40 or later eventually, so maybe I'm wasting time bothering with 2.7.19....)\n\n(part of https://github.com/google/guava/issues/2571)\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=158745717\n""}"
1240,"{'code': 'd87949ab9d95fdd486080151a66fbf0c2373b981', 'message': ""Move all surefire configuration to the parent pom.\n\n(I got confused when I added an argLine in the parent pom (as part of Java 9 testing) and found it had no effect, apparently because it's overwritten in the child.)\n\n(part of https://github.com/google/guava/issues/2571)\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=158738701\n""}"
1241,"{'code': '94a96d1ec0c0167a4c5b9350f125429fed3d1d4c', 'message': 'Mark Immutable(Int|Long|Double)Array with the errorprone @Immutable annotation\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=158732518\n'}"
1242,"{'code': '16f42af9e1f1ae37ef4ed52c1f0d705aebaf8194', 'message': ""Don't expect java.ext.dirs under Java 9.\n\n(part of https://github.com/google/guava/issues/2571)\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=158545119\n""}"
1243,"{'code': '9121020b37bf975122e0f8fc710a1c981297b6ad', 'message': 'Skip static methods, like the forthcoming Set.of.\n\n(part of https://github.com/google/guava/issues/2571)\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=158475485\n'}"
1244,"{'code': 'ad013e848b4c8ef3b85746df69282ff6343b9d7d', 'message': 'Adding ByteBuffer support to Hashing APIs. Rollforward now that broken user is fixed.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=158447108\n'}"
1245,"{'code': '46b73bb6c40aaf319aac43ead838628ad4b59de1', 'message': ""Under Java 8, use Math.nextDown instead of FpUtils.nextDown.\n\nFpUtils is going away in Java 9.\nWe'd use Math under Java 7, too, but it's not present until Java 8.\n\n(part of https://github.com/google/guava/issues/2571)\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=158434703\n""}"
1246,"{'code': '2d30d5eda0f37e9c0b2dec21f19837b8d41f2699', 'message': 'Update Javadoc plugin to a version that understands the Java 9 version scheme:\nhttps://issues.apache.org/jira/browse/MJAVADOC-442\n\n(part of https://github.com/google/guava/issues/2571)\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=158429834\n'}"
1247,"{'code': 'fffd2b1f67d158c7b4052123c5032b0ba54a910d', 'message': 'Add @ReflectionSupport to AggregateFutureState, AtomicDouble and InterruptibleTask.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=158270892\n'}"
1248,"{'code': '69804d7f9f7acd0a92cb73311252df2bc58e8cf7', 'message': 'Automated g4 rollback of changelist 158168944.\n\n*** Reason for rollback ***\n\nNeed to fix some code that relied on the undefined behavior of calling put*() after hash().\n\n*** Original change description ***\n\nAdding ByteBuffer support to Hashing APIs.\n\n***\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=158210614\n'}"
1249,"{'code': 'c602af0409089b10a35038581ee011236eb44529', 'message': 'Adding ByteBuffer support to Hashing APIs.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=158168944\n'}"
1250,"{'code': 'b52953f7fd4425e6998d32d22fc0ee4529ce8402', 'message': ""Resurrect SingletonImmutableList on server side only.\n\nBazel has apparently measured that in their applications, ~50% of ImmutableLists have size 1.  This is significant enough that it's probably worth resurrecting the optimization to have a specialized implementation that just wraps the one element.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=158164804\n""}"
1251,"{'code': '4e41d621c3f413eb31da2d31b6c9d9713cd851f6', 'message': 'Propagate cancellation for Futures.inCompletionOrder\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=158154825\n'}"
1252,"{'code': 'd62fb4b351eb4c074e5d207519d6e9891a67f971', 'message': 'Disable some tests externally until GWT releases a version with the problematic bug fixed.\n\nThe tests work fine in non-GWT mode, but we don\'t have a trivial way to say ""run this everywhere except externally under GWT,"" so I\'m just stripping them entirely.\n(In particular, I don\'t think ""// MOE:insert @GwtIncompatible"" works because we would stil generate a StreamsTest_gwt that refers to the removed methods, so it would fail to compile.)\nThis ensures that we still run them internally in both modes, which seems more important than running them internally+externally but never under GWT (as @GwtIncompatible would do).\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=158046739\n'}"
1253,"{'code': '4867ca09bc6e65b298688899d259e033e2c8cdcd', 'message': ""Reduce sizes of exhaustive/random MinMaxPriorityQueue tests; they're taking way too long.\n\ntestHeapIntact and testExhaustive_pollAndPush each seem to take on the order of a minute and a half on Android, before this CL.  After, they take ~1 sec.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=157872566\n""}"
1254,"{'code': 'b366b2fb1840d4df542a69a8021a2e5498f7eec2', 'message': 'Fixes incorrectly-ordered arguments to calls to assertEquals\n([]\nThis change has been automatically generated by an Error Prone check that\ndetects incorrect argument ordering on calls to assertEquals-style methods. See\n[]\n\n[]\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=157871496\n'}"
1255,"{'code': '6d8771908c8eb77f8478fb772fcad090a902884f', 'message': 'Run nested classes in the open-source build.\n\nEvidently Maven looks only at top-level classes by default -- perhaps by scanning for .java files and then looking for the corresponding top-level classes?\nhttp://maven.apache.org/surefire/maven-surefire-plugin/test-mojo.html#includes\n\nI\'d found a suggestion here that I might just need to override the default excludes:\nhttps://confluence.atlassian.com/clover/using-clover-with-maven-+-surefire-test-+-inner-test-classes-285840787.html\nBut I couldn\'t find a way to get that to work -- which makes sense in light of the .java point above. I\'m guessing that the linked page is not actually trying to explain exactly how Maven skips nested classes, only that it does so at all.\n\nThe syntax is documented here:\nhttp://maven.apache.org/surefire/maven-surefire-plugin/examples/inclusion-exclusion.html#Regular_Expression_Support\n\nThe regex here should match everything that the old default did, and it now pulls in nested classes, too, since it operates on .class files, as documented in the previous link. For the old default, see:\nhttp://maven.apache.org/surefire/maven-surefire-plugin/test-mojo.html#includes\n(The old default also includes Test* and *TestCase, but those don\'t appear to match any new test classes for us, so I didn\'t bother complicating the regex for them.)\n\nCorrection: *Our* old value was ""**/*Test.java,"" since we set that manually.\nThat dates back to CL 41635188.\nI\'m not sure why I thought that was the default at the time, but evidently the Maven docs of the day were just plain wrong, claiming that the defaults include only ""IT"" classes:\nhttps://web.archive.org/web/20130102062549/http://maven.apache.org/surefire/maven-surefire-plugin/test-mojo.html#includes\nAnyway, we were already omitting *Tests.java.\nI initially planned to include *Tests.java, but then I discovered that this includes PackageSanityTests classes.\nI *thought* I had seen all tests run successfully anyway, but now I\'m seeing failures[*], so I\'ve gone back to omitting PackageSanityTests classes.\n(And ""*Tests.java"" doesn\'t match any tests other than PackageSanityTests classes.)\n\nContinuing to omit PackageSanityTests is reasonable enough, at least in the short term:\n\n- (minor) We sometimes want to run it in a different VM. That said, that problem is solvable in other ways, and we already elected to be lazy and skip it entirely: https://github.com/google/guava/commit/cc2b970f45d28a9258dbd9c01fda97a4ba293c20 (Of course it turns out that we were skipping it entirely already. And in fact, that commit didn\'t intentionally remove PackageSanityTests; it just changed our build macros to reflect in the open-source build something that was already happening internally -- that PackageSanityTests wasn\'t part of our main test target (though it is run in a separate test target). The commit\'s actual purpose was to avoid publishing some unrelated files.)\n\n- We probably don\'t really want to run against benchmark classes. At best, doing so seems wasteful. And worse, it\'s causing failures. Likely AbstractPackageSanityTests should be configured to skip benchmarks, just as it today skips tests. But I\'d rather save that for yet another CL.\n\nThe bottom line here might be that this is another reason to move from Maven to Bazel (at least assuming that Bazel\'s test runner is equivalent to our internal one). cc=ronshapiro :)\n\n[*]\njava.lang.NoClassDefFoundError: com/google/common/util/concurrent/FutureFallback\n\tat java.lang.Class.getDeclaredConstructors0(Native Method)\n\tat java.lang.Class.privateGetDeclaredConstructors(Class.java:2673)\n\tat java.lang.Class.getDeclaredConstructors(Class.java:2022)\n\tat com.google.inject.spi.InjectionPoint.forConstructorOf(InjectionPoint.java:243)\n\tat com.google.inject.internal.ConstructorBindingImpl.create(ConstructorBindingImpl.java:96)\n\tat com.google.inject.internal.InjectorImpl.createUninitializedBinding(InjectorImpl.java:629)\n\tat com.google.inject.internal.InjectorImpl.createJustInTimeBinding(InjectorImpl.java:845)\n\tat com.google.inject.internal.InjectorImpl.createJustInTimeBindingRecursive(InjectorImpl.java:772)\n\tat com.google.inject.internal.InjectorImpl.createJustInTimeBindingRecursive(InjectorImpl.java:761)\n\tat com.google.inject.internal.InjectorImpl.getJustInTimeBinding(InjectorImpl.java:256)\n\tat com.google.inject.internal.InjectorImpl.getBindingOrThrow(InjectorImpl.java:205)\n\tat com.google.inject.internal.InjectorImpl.getInternalFactory(InjectorImpl.java:853)\n\tat com.google.inject.internal.FactoryProxy.notify(FactoryProxy.java:46)\n\tat com.google.inject.internal.ProcessedBindingData.runCreationListeners(ProcessedBindingData.java:50)\n\tat com.google.inject.internal.InternalInjectorCreator.initializeStatically(InternalInjectorCreator.java:133)\n\tat com.google.inject.internal.InternalInjectorCreator.build(InternalInjectorCreator.java:106)\n\tat com.google.inject.internal.InjectorImpl.createChildInjector(InjectorImpl.java:217)\n\tat com.google.inject.internal.InjectorImpl.createChildInjector(InjectorImpl.java:224)\n\tat com.google.caliper.runner.CaliperMain.exitlessMain(CaliperMain.java:120)\n\tat com.google.caliper.runner.CaliperMain.main(CaliperMain.java:81)\n\tat com.google.caliper.runner.CaliperMain.main(CaliperMain.java:69)\n\tat com.google.common.base.WhitespaceMatcherBenchmark.main(WhitespaceMatcherBenchmark.java:56)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat com.google.common.reflect.Invokable$MethodInvokable.invokeInternal(Invokable.java:197)\n\tat com.google.common.reflect.Invokable.invoke(Invokable.java:100)\n\tat com.google.common.testing.NullPointerTester.testParameter(NullPointerTester.java:349)\n\tat com.google.common.testing.NullPointerTester.testMethodParameter(NullPointerTester.java:220)\n\tat com.google.common.testing.NullPointerTester.testMethod(NullPointerTester.java:188)\n\tat com.google.common.testing.NullPointerTester.testStaticMethods(NullPointerTester.java:134)\n\tat com.google.common.testing.ClassSanityTester.doTestNulls(ClassSanityTester.java:197)\n\tat com.google.common.testing.AbstractPackageSanityTests.testNulls(AbstractPackageSanityTests.java:231)\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=157867713\n'}"
1256,"{'code': 'b4fc54a63768fc5a85935e38fe2694b0563aba81', 'message': 'In 4 files, manually include a TestCase in its own suite().\nThis lets the open-source build run those tests.\n\nDetails: Our internal test runner, given a TestCase with a suite() method, always runs the TestCase in addition to the suite(), even if the suite() doesn\'t include it.\nThe external Maven test runner, by contrast, skips the TestCase itself unless the suite() includes it.\nThat\'s led us to add the suite manually: https://github.com/google/guava/blob/fac8339c87815fb7deca0cf01d61a5146355723f/guava-tests/test/com/google/common/collect/SetsTest.java#L116\nBut we missed it in a few recent cases.\n\nI noticed one of these cases when I ran the open-source GWT tests and they failed (because we\'re using an old Truth version externally, which I\'m also fixing).\nThis raised the question of why the non-GWT tests weren\'t failing in the same way, and the answer is that this suite() business was skipping them.\nI identified other affected tests with:\n\n$ grep -rl \'^  public static Test suite[(][)]\' */test/ > /tmp/files\n$ grep \'^  public void test\' -l $(for F in `cat /tmp/files`; do BASE=$(basename $F .java); grep ""addTestSuite($BASE.class)"" -L $F; done)\n\nNote that, with this solution, we run the tests *twice* internally.\nThis is unfortunate but probably livable.\nAn alternative that we\'ve employed is to move the tests into a nested class, which we then don\'t need to add to the suite:\nhttps://github.com/google/guava/blob/fac8339c87815fb7deca0cf01d61a5146355723f/guava-tests/test/com/google/common/collect/ImmutableListTest.java#L127\nThat way, we run the test only once internally.\nThe downside is that we don\'t run it externally at all :(\nI should fix the external problem for the existing tests, but that\'s a problem for another CL (CL 157852006, pending).\n\nAnother alternative is to move all our suites out of the main test files.\nThis is possibly a good idea, anyway, as it\'s a prerequisite for running the suites under GWT and Android, which would have caught problems like []But again, one thing at a time...\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=157861023\n'}"
1257,"{'code': '7d05fe59887ed05c1a254daa161cfc088e90ee55', 'message': 'Upgrade Truth to 0.33.\n\nThis fixes some GWT failures (and, once I submit CL 157827695, non-GWT failures) that result from calling assertThat(doubleArray).isEqualTo(...), which was forbidden under 0.31.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=157860829\n'}"
1258,"{'code': 'bfac9e503fb5d48aec2ad1b309b505b3931269ad', 'message': 'Increase timeout.\n\nI just tried running the GWT tests because I expected them to fail from []They unexpectedly passed because ""[WARNING] Forked JVM has been killed on time-out after 21600 seconds"" is non-fatal :(\n\nWith this change, the expected tests fail (as do some others, for reasons that I\'ll address in other CLs).\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=157829988\n'}"
1259,"{'code': '6b9f45d390961fc72aef5362b57b89e396cf8761', 'message': 'Update Public Suffix List.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=157798760\n'}"
1260,"{'code': 'fac8339c87815fb7deca0cf01d61a5146355723f', 'message': 'PredecessorsFunction, SuccessorsFunction: remove @GoogleInternal annotation, now that we\'ve resolved the ""what type should the method return?"" question.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=157642605\n'}"
1261,"{'code': 'c92e1c749c18f08c17feaf273bdcfeb3d1053ca0', 'message': 'Reorganize abstract HashFunction and Hasher implementations to simplify common.hash and potentially prepare for exposing these skeletal implementations.\n\nEffects on HashingProGuard:\n81130 bytes => 80229 bytes\n42 classes => 40 classes\n193 methods => 193 methods\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=157618945\n'}"
1262,"{'code': '6fed8d453d66a3a80aabb00baa7500087ad4e6e3', 'message': 'Fix @since tag.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=157618843\n'}"
1263,"{'code': 'dd0135801d003f34f6bfd1503a09e69e3b7090b9', 'message': 'Fixes incorrectly-ordered arguments to method calls ([]\n\nThis change has been automatically generated by an Error Prone check that\ndetects incorrect argument ordering on calls to assertEquals-style methods. See\n[]\n\n[]\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=157502059\n'}"
1264,"{'code': '107f311e182d4b8298a10093ae4c5c6bc02641ec', 'message': ""FluentFuture.\n\nThis includes making AbstractFuture and immediate*Future be a FluentFuture (though we don't change the return type of immediate*Future to expose this).\n\nAPI Review docs: []\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=157499710\n""}"
1265,"{'code': '2bfed8709b80a4bf52f07e9def492a783caa51ff', 'message': ""Delete com.google.math.Sample.\n\nThis CL also migrates the last usage of it to Stats — it so happens that the last usage is in a subpackage of math, so I think it's okay to do it at the same time (especially as it's a safe local change that only affects unit tests).\n\nIt also removes a couple of references in the javadoc for the Quantiles benchmark algorithms class (which probably shouldn't have been in the open source version anyway, oops). They don't really add value now.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=157461412\n""}"
1266,"{'code': 'f064c13c15d67373666307f6beb3ae842d9813e3', 'message': 'Avoid garbage allocation in simple hashBytes calls with Murmur3.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=157146977\n'}"
1267,"{'code': '312aeb938bd35b5b7c8930e19ff5d1ca38e49424', 'message': 'Added some Unit Tests\n\nFixes #2825\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=157145435\n'}"
1268,"{'code': '303fc3f3a623a7278ff11e114fa935200ff7080f', 'message': 'Eliminate most holder classes from c.g.c.hash.Hashing, but still keep those constants lazily generated -- e.g. moving the static constant to its own implementation class.\n\nEffects on HashingProGuard:\n85448 bytes => 81130 bytes\n51 classes => 42 classes\n197 methods => 193 methods\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=157142790\n'}"
1269,"{'code': 'ae98be88f1ec366a911c19e7aafa1a0704e28422', 'message': 'Start adding testing for ProGuard and allocation testing for common.hash.\n\nInitial HashingProGuard measurements:\n85448 bytes\n51 classes\n197 methods\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=157137394\n'}"
1270,"{'code': 'a419bfe81a95f2e7bb01d33f74ecaa98e03394f3', 'message': 'Change toMultiset() to accept ...Function<? super T, ...>.\n\nSee https://github.com/google/guava/issues/2696#issuecomment-303642729\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=157118306\n'}"
1271,"{'code': '16cb7b6ea7443cff86a2d097646f6eec470c2aba', 'message': 'Update SNAPSHOT versions in README.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=157114045\n'}"
1272,"{'code': '26970483185d6d62bbed3f048a9e12e3b6c80c2a', 'message': 'Fixes incorrectly-ordered arguments to calls to assertEquals\n([]\nThis change has been automatically generated by an Error Prone check that\ndetects incorrect argument ordering on calls to assertEquals-style methods. See\n[]\n\n[]\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=157061178\n'}"
1273,"{'code': 'a35860eadb4400f069e306ccd76f1a19ecfb3ba1', 'message': 'common.graph classes: clean up documentation, change Object references to generic type indicators where possible in the internal implementation classes (this was already done for the public APIs).\n\nRename internal ""oppositeNode"" to ""adjacentNode"" for consistency with the external API.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=157050755\n'}"
1274,"{'code': '511730968ce8b82708c61e74e9c2c2bdaec51d57', 'message': 'Move UnsignedLongs static constants to a static class, to allow other UnsignedLongs methods to get inlined.\n\nEffects on IntMathProGuard:\n55843 bytes => 55068 bytes\n8 classes => 7 classes\n51 methods => 50 methods\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=157039263\n'}"
1275,"{'code': '2a6752bf39338d3d861cec436bce9e7600f57385', 'message': 'Make initialization of Longs.asciiDigits lazy so ProGuard can eliminate Longs entirely from its users.\n\nEffects on IntMathProGuard:\n56435 bytes => 55843 bytes\n9 classes => 8 classes\n53 methods => 51 methods\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=157027975\n'}"
1276,"{'code': '349c6e0167614635908f20acd67cf07bedff2fd3', 'message': ""Start measuring DoubleMath's ProGuard retention, and optimize it by inlining some things: LongMath.isPowerOfTwo, and DoubleUtils.ONE_BITS.\n\nEffects on DoubleMathProGuard:\n50619 bytes => 48800 bytes\n5 classes => 3 classes\n24 methods => 19 methods\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=157025614\n""}"
1277,"{'code': '6b203dc664cc5359b02bde1abb86efdb1c1ead53', 'message': ""Update guava-gwt version to 23.0-SNAPSHOT; missed this last time since it isn't under current.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=157008161\n""}"
1278,"{'code': 'a52c22b1ca567fd4184f5438ff0ff0d00621cecf', 'message': 'Apply \'@ForOverride\' to Converter.doForward & Converter.doBackward\n\nPending todo: clean up usage from method reference (""::doForward"" & ""::doBackward"")\n\nTODO(jijiang): address TODO after CL submitted\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=156992728\n'}"
1279,"{'code': 'fce5e62628a1eb3eab4dfdb7b6f2ce7fa3567557', 'message': 'Just admit that newConcurrentMap returns and will always return a ConcurrentHashMap.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=156925490\n'}"
1280,"{'code': 'a8e515863adcb5de5d698e0a4fc1382fa2afbc4a', 'message': 'Reduce allocation in Iterators.concat.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=156923366\n'}"
1281,"{'code': '0d8ebd19d6463d1bf8db2ba497ea3a5f6573cef9', 'message': ""Avoid reallocating a new unmodifiableSortedSet wrapper on every operation on Sets.unmodifiableNavigableSet.\n\n(While we're there: in the Java 8 version, forward the default methods correctly, since ForwardingSortedSet deliberately doesn't forward them.)\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=156918009\n""}"
1282,"{'code': 'f816d1a0ebef9c590aca70bf9b6a642f02528bcb', 'message': 'Update Guava versions to 23.0-SNAPSHOT.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=156901136\n'}"
1283,"{'code': '4d0e0af4b495249cd1c25a30c5024d215b003093', 'message': 'Update main readme to describe the main and Android flavors of Guava, and how to depend on them.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=156863289\n'}"
1284,"{'code': '759ed127385c9d83354b9758fcb8db7c8a79175f', 'message': 'Inline some filtering logic, etc. into Sets views to reduce code retention and allocation of Predicate objects.\n\nEffects on SetsProGuard:\n173261 bytes => 170929 bytes\n107 classes => 106 classes\n915 methods => 899 methods\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=156803771\n'}"
1285,"{'code': 'aafc7d686304e3b0b0cecdf4182adc7402c57be3', 'message': ""Reduce the number of different ranges TreeRangeMap attempts to test with; these were taking exorbitant amounts of time in Android tests.\n\n(See e.g. [] where testPutAll took over two minutes, and that wasn't the only TreeRangeMap method that took multiple minutes.\n\nAfter this change, putAll takes 8 seconds.  []\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=156761836\n""}"
1286,"{'code': '8297ad4522220c069d4a28a489a0c31d0c577a5e', 'message': 'Run StreamsTest and ComparatorsTest under GWT.\n\nThis would have caught b/38304985 and also catches new b/38490623.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=156761057\n'}"
1287,"{'code': 'bc996973fe6ce1ecb67803aa1ff5bdf5df59d182', 'message': 'common.graph classes: mark types and methods as @GoogleInternal that are not yet ready for release in Guava 22.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=156749408\n'}"
1288,"{'code': '58fa7011ce024c0c904d4e0dd6cba78fcd08975d', 'message': 'Add tests for Lists.lastIndexOfImpl (Also removed one warning from ListsTest).\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=156569812\n'}"
1289,"{'code': '4068f7b94c63ffd1d81636be79c42542876c8fd6', 'message': ""Roll forward of [] going back to exactly the original semantics while we're at it.\n\n*** Reason for rollback ***\n\nFixed the targets that were really broken deep down, but we also reverted the slight semantics change that exposed the issues.  I think the changed semantics were fine, but I don't think it's important enough to make a fuss.\n\nNew effects on IterablesProGuard:\n95045 bytes => 94834 bytes\n53 classes => 52 classes\n265 methods => 263 methods\n\nAdditionally, added IterablesAllocationTest, which measures the actual effects of this optimization.\n\nWalking concat(collection1, collection2) changed from requiring 13 allocations to requiring 8.\nWalking concat(concat(c1, c2), concat(c3, c4)) changed from requiring 41 allocations to requiring 22.\n\n*** Original change description ***\n\nAutomated g4 rollback of changelist 156329581.\n\n*** Reason for rollback ***\n\nBroke some tests.  (I think they're doing something that should've failed and this just revealed the error, but I'm still attempting to discern what really happened.)\n\n*** Original change description ***\n\nSimplify Iterators.concat and optimize it for minimizing allocations, while preserving the smart behavior for nested Iterators.concats.\n\nEffects on IterablesProGuard:\n97559 bytes => 95471 bytes\n57 classes => 54 class...\n\n***\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=156493253\n""}"
1290,"{'code': 'cc2b970f45d28a9258dbd9c01fda97a4ba293c20', 'message': ""Omit PackageSanityTests from open-source Guava.\n\nIt shouldn't be run in the same JVM as other tests because some of its method call set the interrupt bit.\n(Alternatively, we could run those tests in a separate thread, but it hasn't seemed worth bothering.)\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=156485709\n""}"
1291,"{'code': '20472b631602847af5d2797d9b991d4deae5e86d', 'message': ""Automated g4 rollback of changelist 156329581.\n\n*** Reason for rollback ***\n\nBroke some tests.  (I think they're doing something that should've failed and this just revealed the error, but I'm still attempting to discern what really happened.)\n\n*** Original change description ***\n\nSimplify Iterators.concat and optimize it for minimizing allocations, while preserving the smart behavior for nested Iterators.concats.\n\nEffects on IterablesProGuard:\n97559 bytes => 95471 bytes\n57 classes => 54 classes\n277 methods => 266 methods\n\nEffects on IteratorsProGuard:\n76937 bytes => 75212 bytes\n35 classes => 32 classes\n175 methods => 170 methods\n\n***\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=156342594\n""}"
1292,"{'code': 'eb3d015d84cd0bb9804335b3832b63005406dbff', 'message': 'Reduce allocations in filtered views of {Sorted,Navigable}Set.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=156338232\n'}"
1293,"{'code': '54087fa7ccc66021f11e3d1bf478f44542ad9856', 'message': 'Simplify Iterators.concat and optimize it for minimizing allocations, while preserving the smart behavior for nested Iterators.concats.\n\nEffects on IterablesProGuard:\n97559 bytes => 95471 bytes\n57 classes => 54 classes\n277 methods => 266 methods\n\nEffects on IteratorsProGuard:\n76937 bytes => 75212 bytes\n35 classes => 32 classes\n175 methods => 170 methods\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=156329581\n'}"
1294,"{'code': 'abf316f72678d722f0f31b45e7b75cc7209d20e8', 'message': 'Avoid having a static Joiner constant in Predicates.  This typically eliminates both Joiner and the Predicates class itself, which was prevented from being optimized away by the presence of the static constant.\n\nEffects on Collections2ProGuard:\n85910 bytes => 84265 bytes\n36 classes => 34 classes\n199 methods => 194 methods\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=156325587\n'}"
1295,"{'code': '78dab8037a51b63e0e0a92ac0c4a427591d97219', 'message': 'Stick to IntMath in Collections2.orderedPermutations.size.\n\nEffects on Collections2ProGuard:\n89279 bytes => 85910 bytes\n38 classes => 36 classes\n202 methods => 199 methods\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=156321417\n'}"
1296,"{'code': 'f8c04290c9cfe7599b9c33f045ccafbbd9b501b0', 'message': ""Correct a slightly inaccurate claim in the javadoc of the equals() methods on Stats and PairedStats. If strictfp is not in force, we can't actually guarantee getting equal statistics even for the same values in the same order.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=156289223\n""}"
1297,"{'code': 'e94dd5ae1fc35480ebd99af201d2d46a671a8e4e', 'message': 'Avoid allocation and references to Predicates where possible in Collections2.\n\nEffects on Collections2ProGuard:\n91872 bytes => 89279 bytes\n40 classes => 38 classes\n216 methods => 202 methods\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=156243603\n'}"
1298,"{'code': 'e361b664359de989a2390e5ccb2efed420882e9a', 'message': 'Use ImmutableList.sortedCopyOf instead of Ordering.immutableSortedCopy.\n\nEffects on Collections2ProGuard:\n92924 bytes => 91872 bytes\n41 classes => 40 classes\n221 methods => 216 methods\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=156237339\n'}"
1299,"{'code': 'c7344737d6311d81c213aaef58e5536ecc57c252', 'message': ""Don't build a full Multiset in the Java 7 branch of Collections2.isPermutation, just using the underlying hash table structure.\n\nEffects on Collections2ProGuard:\n108614 bytes => 92924 bytes\n54 classes => 41 classes\n350 methods => 221 methods\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=156230331\n""}"
1300,"{'code': '19c39725be34efafa59edf6238713e97f6565eb1', 'message': 'Explain/advertise CacheLoader.from() better.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=155904679\n'}"
1301,"{'code': '7d463d975988a5aa1ffe4f7c76527e6968bda378', 'message': 'Remove some misleading interruption docs:\n- Our interruption behavior doesn\'t fully match the JDK. My point in CL 23833126 was that both AbstractFuture and the JDK implementations throw if the thread was interrupted *before* the get() call as well as during. But:\n  - We differ from the JDK in a different area: We throw InterruptedException even if the get() call wouldn\'t have had to wait. (We see this as a feature: Since the task is apparently cancelled anyway, we might as well take this opportunity to abort.)\n  - My phrasing may be equally misleading in the other direction: It may suggest that get() throws if the thread was *ever* interrupted in the past. More generally, by changing the phrasing at all, I may be suggesting a change in behavior where none exists.\n- InterruptedException support is probably in some sense ""optional,"" but there\'s no reason to call it out as specifically optional for AbstractFuture.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=155865732\n'}"
1302,"{'code': '24c728189bf1546920e37cffad7c13e15712f380', 'message': ""Merge some classes in Iterables that don't really need to be split.\n\nEffects on IterablesProGuard:\n94711 bytes => 92873 bytes\n57 classes => 54 classes\n277 methods => 268 methods\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=155648417\n""}"
1303,"{'code': '5b8b71c1375b2222736b3f58528df99180ec8a1d', 'message': 'Fix link to whitespace comparison doc.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=155643809\n'}"
1304,"{'code': '2ae174e13d795cf61169eba8b843eda8aed94282', 'message': ""Pull LOWER_BOUND_FN and UPPER_BOUND_FN into their own classes, instead of having them be static constants in Range itself.  They aren't actually used in Range itself, just in other APIs using Range.\n\nEffects on RangeProGuard:\n59099 bytes => 58681 bytes\n13 classes => 12 classes\n112 methods => 110 methods\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=155566243\n""}"
1305,"{'code': 'd5c4ea28bffb87f89b69588ab4d86e7d2b23ef88', 'message': 'Avoid generating separate classes for the two BoundType enum instances.\n\nEffects on RangeProGuard:\n59989 bytes => 59099 bytes\n15 classes => 13 classes\n114 methods => 112 methods\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=155549621\n'}"
1306,"{'code': 'f5383c763766d91b20af835efc09974c283fc408', 'message': 'Avoid referencing ContiguousSet directly in Range, instead just using SortedSet.  This actually constitutes a general optimization, since we make it O(1) for all SortedSets and not just ContiguousSets, but it also makes a big difference to ProGuard:\n\n91546 bytes => 59989 bytes\n42 classes => 15 classes\n328 methods => 114 methods\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=155545589\n'}"
1307,"{'code': 'e4263fc33637608bf4055fbe3e06bffc877cec5b', 'message': 'Manual fix-ups before we google-java-format.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=155501761\n'}"
1308,"{'code': '7b2c5ccbf7b1c8c6715a6c5aa9aded6420205d83', 'message': 'Fix buggy advice.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=155427010\n'}"
1309,"{'code': '69f2d98a2a5bd8a9d77c618cc5a10efa4f97d98f', 'message': 'Added tests for Lists.IndexOfImpl\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=155423645\n'}"
1310,"{'code': 'a2c6fc17b66424fa2c545531b52f13c3a0afa9ab', 'message': 'Reduce use of Predicates in Maps.filter variants.\n\nEffects on MapsProGuard:\n218054 bytes => 217126 bytes\n170 classes => 164 classes\n1300 methods => 1276 methods\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=155421460\n'}"
1311,"{'code': 'e68c0e674b22b9d49d402e0151aa15e8c645bd4b', 'message': 'EnumCountHashMap is an implementation detail, not a public type.\n\n(Hopefully cherrypickable into 22.0, since I saw this in the API diffs.)\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=155396203\n'}"
1312,"{'code': '961061a1de6331881343342d50381b5805918e4d', 'message': 'Correcting a JavaDoc in Immutable Primitive arrays.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=155256441\n'}"
1313,"{'code': '8e7ff6a20794497109bcdae369c15d81d35dc3e7', 'message': 'Implementation of Sets.combinations(Set, int), approved by []\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=155231438\n'}"
1314,"{'code': '071fcf6e47ae00b76b541c7ae2e253eb2fae09d3', 'message': 'new MapMaker().makeMap() just returns a ConcurrentHashMap.  Inline that logic into Maps.newConcurrentMap().\n\nEffects on MapsProGuard:\n262307 bytes => 218054 bytes\n211 classes => 170 classes\n1532 methods => 1300 methods\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=155228371\n'}"
1315,"{'code': '86c69d974db94391675e8d1e8d6edb87f89343ad', 'message': 'Migrate Executor-less Futures callback methods to the ones with an Executor, while applying MoreExecutors.directExecutor() for identical behavior.\n\nFor more information, see []\n[]\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=155174706\n'}"
1316,"{'code': '9349ca6c6d6f9396692aba1f5e3576a6e68f2feb', 'message': 'asList() views are serializable.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=155126187\n'}"
1317,"{'code': '76245f6337f3b695357319699b07d44164768794', 'message': 'Some simple changes to Iterators to reduce ProGuard retention and allocation.\n\nEffects on ProGuard retention:\n79026 bytes => 75115 bytes\n41 classes => 35 classes\n196 methods => 175 methods\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=155124112\n'}"
1318,"{'code': '51310fb7ce3749f38165664966cd883395b643a7', 'message': 'Fix https://github.com/google/guava/issues/2804 issues with nested Iterators.concats on partially advanced iterators.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=155111980\n'}"
1319,"{'code': 'fb98ccb2140750a66050fc86e3b19e58a0af12b3', 'message': 'Make toImmutableList() and toImmutableSet() collectors singletons.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=155071697\n'}"
1320,"{'code': '1904b1a8034f208ea18cf849d36315e4ef0a1146', 'message': 'Added test for addAllImpl.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=154976838\n'}"
1321,"{'code': '108b8309fae3dc7794d528b9e2c6bafd6a6be726', 'message': 'Rewrite ImmutableSortedMultiset.Builder on Android to avoid using TreeMultiset, which allocates a ton of objects and also uses a ton of code.\n\nThe strategy we use is a little modified from how we changed ImmutableSortedMap: on every expansion, we sort and deduplicate the elements that have been added to the builder.\n\n(modest reduction in bytes allocated, significant reduction in objects allocated, significant constant factor increase)\n\nEffects on ImmutableSortedMultisetProGuard:\n142818 bytes => 110301 bytes\n86 classes => 58 classes\n702 methods => 498 methods\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=154893300\n'}"
1322,"{'code': '6092a4a8b1087f92d0c3169b9e96d53c54ca95c4', 'message': 'Make BloomFilter concurrent.\n\nOriginal pull request by Val Markovic at https://github.com/google/guava/pull/2761\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=154881019\n'}"
1323,"{'code': '8f7bbd4c73f72b504d79c9c7fc5cb75396483de1', 'message': 'ImmutableDoubleArray\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=154872857\n'}"
1324,"{'code': '36f003175073e645d0cf5f8467778ab63879c304', 'message': ""Partial rollback of changelist 151480429.\n\n*** Reason for rollback ***\n\nI've fixed our GWT test generator (CL 154831023), so it no longer chokes on these tests.\n\n*** Original change description ***\n\nPartial rollback of changelist 150805495.\n\nSpecifically, I'm rolling back only the server/java8 changes.\n\n*** Reason for rollback ***\n\nNeed to investigate Bazel heap regression.\n\n*** Original change description ***\n\nDo not copy in Immutable{List,Set,SortedSet} construction.\n\nWe're still avoiding the potential for a memory leak with the forceCopy part, but we want to avoid the garbage created by slicing the array down to exactly the right size.\n\nWe don't ever copy in ImmutableList, since we can o...\n\n***\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=154857178\n""}"
1325,"{'code': 'df13a6a748528dcd01f0a943bd44baffba90a4a3', 'message': ""Make it clearer that Cut doesn't implement equals without hashCode\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=154785879\n""}"
1326,"{'code': '870046dfd34b9d2d2c944015ffce5c7e7e3406ba', 'message': 'Remove HostAndPort.getHostText() (scheduled for removal in 22.0).\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=154734786\n'}"
1327,"{'code': 'b7cec214a7aa9efb7a989f9e509b4ae21dd328f4', 'message': 'Fix ImmutableLongArray.hashCode()\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=154726612\n'}"
1328,"{'code': 'f92fbe4e0eeacbfc1eb947acab04760f9adeb7f5', 'message': 'Add a script for setting the version for guava and guava-android.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=154560774\n'}"
1329,"{'code': 'f35bb61b508e7976994da1f91786340b4923cb8e', 'message': 'Fix deploy_snapshot for android snapshots\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=154542742\n'}"
1330,"{'code': 'c6f1fab908370b689249709bbfdd34985e7563d6', 'message': ""Run mvn on the android branch without running `cd`, so that we don't mess up base the directory\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=154453557\n""}"
1331,"{'code': 'cd8fb02a9c762707e5b7bbc22507dc8569efe430', 'message': ""Provide specializations of MapMakerInternalMap's internal data structures, notably InternalEntry, for the case where the value type is a singleton. This is Interners's exact use case.\n\nThis CL is a pure refactor that results in a strict memory win. No public apis are changed.\n\nI am very happy that my design made this refactor very easy :)\n\nThere are the following Interners use cases:\n- Interners#newStrongInterner\n- Interners#newWeakInterner\nand the following relevant jvm flags:\n- -XX:+UseCompressedOops\n- -XX:-UseCompressedOops\n\nOf the four combinations of interner type and pointer size, the most important use case is probably Interners#newWeakInterner, since users tend to put lots of stuff in weak interners. On a 64-bit jvm with +UseCompressedOops, there's actually no win because of the way the current object alignment for WeakKeyStrongValueEntry works out. However, the current object alignment works out unfavorably on a jvm with -UseCompressedOops, and so this CL gives a sizeable win there.\n\nThe CL also gives very large savings for Interners#newStrongInterner, but I reckon that use case isn't too important.\n\nSummary of results:\n-------------------\nStrongInternerImpl w/ +UseCompressedOops --> 19.8% savings\nWeakInternerImpl w/ +UseCompressedOops --> 0.00016% savings\nStrongInternerImpl w/ -UseCompressedOops --> 12.3% savings\nWeakInternerImpl w/ -UseCompressedOops --> 9.0%% savings\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=154450505\n""}"
1332,"{'code': 'c3fe1be6005c7cff988d0b964876c1db967fac5b', 'message': 'Test the android branch (in TAP for [], and Travis for Github)\n\nIn the process, fix and simplify the javadoc configuration. I mistakenly removed some of it in the Android branch when I worked the poms, thinking that what was for jdk8 was really jdk7+\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=154444654\n'}"
1333,"{'code': 'c3219bd56ce239f215ff9f05d27fc6250f6d6efb', 'message': 'Assorted javadoc fixes in com.google.common\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=154343275\n'}"
1334,"{'code': 'd8d21a3ae0f67aed0a9363a6e87ea116874150bc', 'message': 'Link java7 branch javadocs to javase/7, not 8\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=154329415\n'}"
1335,"{'code': '8f4b4943fe130f0538247b77b0e2125ad40f90f7', 'message': ""Move poms to the proper directory.\nMOE got confused because it ran against Ron's CL but with a config file from before Ron's CL.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=154302373\n""}"
1336,"{'code': 'f19c9f1a74ec2fbdd5efa4e3e6b249c8667a4164', 'message': 'Add pom.xml files for Guava-Android\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=154302373\n'}"
1337,"{'code': 'a35f9ec4931326f9f6ab173c60d15e7e4ffb4425', 'message': 'Move ClassInSubpackage... actually into a subpackage. This looks to have not been moved correctly when forking common.reflect\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=154299216\n'}"
1338,"{'code': '36150b3ac22811ebaabf51ee76d32b3d2427fb05', 'message': 'Make Immutable*ArrayTests have javac7-compatible generics.\n\nThis was done to ImmutableIntArrayTest in [] but that was interleaved with the creation of ImmutableLongArray.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=154296466\n'}"
1339,"{'code': 'c198afe6dd2938ab972c78fc506c9282592061ea', 'message': ""Fork common.reflect and remove a few tests from the java7 branch that don't work on Android\n\nSee discussion in []\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=154222595\n""}"
1340,"{'code': '67cbc789e9cd523c38a75eda917fe7b6e42518f8', 'message': 'Make some changes to generics so the Android branch can compile externally with -source 7 -target 7\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=154211832\n'}"
1341,"{'code': '38e537e6ed6e9e9a1908a68300c7d18327bc5bc5', 'message': 'ImmutableLongArray. Regenerated the int-based classes using it as the model.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=154059885\n'}"
1342,"{'code': '03f68e64d2b5ae4b30b9376a2643a9ee56fd2e1b', 'message': ""Don't release SourceSinkFactories that are java7-specific (i.e. use java.nio)\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=154055354\n""}"
1343,"{'code': '813e0366fa399531035b8359f70da61cc8b499c3', 'message': ""Make some generics explicit that the maven-compiler-plugin can't figure our when compiling for Java 7\n\nEach change was reflected in the mainline, or has already deviated from the mainline, so this shouldn't incur any additional forking costs.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=154053375\n""}"
1344,"{'code': '8ed1aec5cdfe3f88e94ec9a03707d56dd9ac3b2f', 'message': 'Remove stale comment about Java 8 APIs.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=154051124\n'}"
1345,"{'code': 'e8055622b25682f53ff9ca3b2c89a3fcfe9c6c45', 'message': 'Add missing common.primitives to Guava for Android.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=153841285\n'}"
1346,"{'code': 'c2933b6954dda50676cfbe6eed7acc4230e6b6e4', 'message': 'Add ""X-DNS-Prefetch-Control"" header.\n\nDocumentation:\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-DNS-Prefetch-Control\nhttp://dev.chromium.org/developers/design-documents/dns-prefetching#TOC-DNS-Prefetch-Control\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=153835731\n'}"
1347,"{'code': '9b94fb3965c6869b0ac47420958a4bbae0b2d54c', 'message': 'Begin exporting sources of Guava for Android.\n\npom.xml files to come.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=153757913\n'}"
1348,"{'code': 'a952dac581d7c9207a5b0fa1ff28c6eb81f9c2c9', 'message': 'Fix typo in Javadoc link.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=153581577\n'}"
1349,"{'code': 'f1d9dd1eac94f43cebefed73d695ca5c3dc9ca48', 'message': ""Document that we don't forward calls to default methods, Multimap edition.\n(followup to CL 124370400 now that Multimap has a default method)\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=153481169\n""}"
1350,"{'code': '0fc2c0c91ca6651f46ab5daf469f9efabf8ea895', 'message': 'Update misleading comment in RegularImmutableList; it is used even for lists\nwith 1 item now that SingletonImmutableList has been removed.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=153458644\n'}"
1351,"{'code': 'cbe841c3f8cffd18cea980d2745867521393dd44', 'message': 'Test coverage for equals(). With this, coverage for the file looks good enough to me.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=153379567\n'}"
1352,"{'code': 'af7ab7e1be1a87cbfb739be64799d8a11adcbbca', 'message': 'Remove docs that specify which equals() element we return.\n\nFixes https://github.com/google/guava/pull/2052\n(only 2 years later!)\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=153209013\n'}"
1353,"{'code': 'ede4f49324d2e27f0938d6800df81d2dbd48943d', 'message': ""Internal @AndroidIncompatible docs:\n- It's not for prod APIs.\n- It works through a special MOE config.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=153202986\n""}"
1354,"{'code': 'e7490fa9553356850b8cee77b1b5510780c2ce61', 'message': 'For APIs that require Java 7, strip them from Guava-Android entirely, not just from our internal copy of Guava-Android.\nThis prevents a third-party library from using them, only to fail when used with our internal Guava-Android.\n\nTo accomplish that, we use @GoogleInternal instead of @AndroidIncompatible, but we use it only on the Java 7 branch.\n\nFor context, see my belated comment on CL 138100073.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=153200690\n'}"
1355,"{'code': '10fe7b6743921e1ee1415f178ddf30f0365a436c', 'message': 'Skip GWT tests by default.\n\nThe fact that they ""hang"" (i.e., take ~8 hours) confused the reporter of http://stackoverflow.com/q/43040327/28465, and I suspect he\'s not the first.\nPlus, I mean, who wants to wait 8 hours? :)\nI\'ve updated our release docs to explicitly turn on GWT tests during the main test command.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=153193781\n'}"
1356,"{'code': 'fc77a95208d850878fa978f4df768e7b2cdf7c1a', 'message': 'Remove ""nullness"" suppressions added in CL 152864813.\nThey are only necessary when running the Checker Framework, and we don\'t.\n(And they won\'t be necessary for the Checker Framework, either, after its\' upgraded.)\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=153184952\n'}"
1357,"{'code': 'ce9b72aca77e144ddc7caa2284a7805775d1b9ac', 'message': 'ImmutableIntArray.asList().stream() is now ""efficiently splittable"".\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=152991064\n'}"
1358,"{'code': '84a14ed75656d1ff932a1192ad050fe9e12e6450', 'message': 'Add Java8-specific methods: copyOf(Stream), Builder.addAll(Stream), stream(), forEach(IntConsumer). (w/lowasser)\n\n[]\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=152986681\n'}"
1359,"{'code': '01bf8d29a279759a576fd86682f83ccce11657db', 'message': 'ImmutableIntArray is serializable.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=152969076\n'}"
1360,"{'code': '5f44518fd1709be2b4145b759a488712850e5106', 'message': 'Advertise Comparators.least/greatest collectors from TopKSelector.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=152967871\n'}"
1361,"{'code': '1a6f679f075a3b6fc84298be8d9fadefe3d00e52', 'message': 'First round of adding tests for the Lists.*Impl package-private methods.\n\nThis is checking that the overall structure is reasonable; if so, tests for the other methods will be added.\n\nI also included some minor cleanups in Lists.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=152960063\n'}"
1362,"{'code': '62d3295e4a39274aaae0dd2e4a13430c72ec534a', 'message': 'Implement ancient TODO to use EqualsTester. Use reserialize() with it to prove that absent() still equals itself after a round-trip.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=152890149\n'}"
1363,"{'code': '4754abf0e349b59f82f8bc959c99808a04f5c432', 'message': 'Assign otherwise ignored Future return values to local variables. This change is part of [] which will eventually make it an error to ignore the return value of methods that return Future.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=152864813\n'}"
1364,"{'code': '667a0d0a722edd410c4b900637e211ebae18cc59', 'message': 'Reformatting.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=152863915\n'}"
1365,"{'code': '5dee802e8f416d5c5d8bec9a1ea350d33d6698aa', 'message': ""minor enhancements to serializingexecutor\n\n* only acquire/release the lock once per call to execute (inline the top half\n  of startQueueWorker into callers). the bytecode of startQueueWorker is long\n  enough that it probably doesn't get inlined and thus things like hotspot lock\n  coarsening probably aren't trigerring.\n* only allocate the queue worker once, and repurpose it for the lock\n\nThis leads to a small bit of redundancy in execute/executeFirst/suspend, however, due to the needed control flow in the caller, i am not sure if it is very avoidable.  Also, it does allow us to avoid some redundant checks (e.g. no need to check queue size if we just added an item)\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=152848537\n""}"
1366,"{'code': '7a68b7bf103b6cd83e60b0d444c63d1a4e6a1479', 'message': 'Replace constants (static final CONSTANT_CASE) declaration type which use the general collection interface (e.g. List) with an immutable type (e.g. ImmutableList).\n\nFor constant field declarations, you should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List). This communicates to your callers important semantic guarantees.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=152750256\n'}"
1367,"{'code': '55ea7068c374058ddc6a956957297cd1a881c759', 'message': 'Make smear() produce accurate results under GWT, hopefully.\nThis appears to solve the problem reported in HashMultiset under GWT.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=152710159\n'}"
1368,"{'code': '36388ab2659702401a1bef554d102906a158171e', 'message': 'Remove Spliterator characteristic SIZED after a trySplit operation in CollectSpliterators.flatMap.\n\nFixes https://github.com/google/guava/issues/2781\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=152710038\n'}"
1369,"{'code': '6a6d365a66fdb4cc7971fa0471593fef9a234be3', 'message': 'Update Public Suffix List.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=152694884\n'}"
1370,"{'code': 'cf65da75d56898a4961ccc02b2fc50a7fbafa3d8', 'message': 'Harmonize NPE @throws clauses on FluentIterable.toXX() methods and friends\n\nI noticed that toSet() and toList() each lacked an @throws NullPointerException for the case where an element of the FluentIterable is null; this seems like an omission given that their sorted cousins have the @throws, as do the various other toXX() methods that return an ImmutableXX as well as index() and uniqueIndex() which are similar in spirit.\n\nI also standardized toMap(), index(), and uniqueIndex() to each use the same format for listing the reasons they can throw NPE (null element, or null function result).  Note that these can also throw NPE on a null parameter to the method, but that is not documented per convention since the package has @ParametersAreNonnullByDefault.\n\nFinally, I updated Multimaps.index() and Ordering.immutableSortedCopy() to adopt this convention as well (since they\'re passed through to by the FluentIterable methods), and I tidied up some wording choices (e.g. consistently using ""{@code null}"", and using ""element of this iterable"" instead of just ""element"" when the method takes parameters).\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=152552349\n'}"
1371,"{'code': 'd881d014cd5fc4bc46790836b9febd3ba438079b', 'message': 'Implement CharSink.writeLines(Stream[, String]).\n\n[]\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=152418428\n'}"
1372,"{'code': '2552f2668e11aa517b85b64ccca5f1d4507fc622', 'message': 'Updated the main interfaces javadoc snippet to reflect the new interfaces {Successor,Predecessor}Graph.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=152356712\n'}"
1373,"{'code': '8420f1bb483a5a0e42cc6b32eb86f6b8f2a820ed', 'message': ""Eliminate references to ImmutableAsList in ImmutableMultiset.\n\nImmutableMultiset, for once, doesn't have a specialized asList(), so this does the right thing on both server side and Android: on Java 7, it returns a normal ImmutableList, on server-side it returns an ImmutableList whose contains() method delegates to the backing ImmutableMultiset.\n\nEffects on ImmutableMultisetProGuard ([]\n80423 bytes => 78313 bytes\n34 classes => 31 classes\n257 methods => 240 methods\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=152304598\n""}"
1374,"{'code': '0ed25bcc1394b767475a88e7be989aee84ff12d7', 'message': 'isFinite: use `&&` to avoid a ShortCircuitBoolean warning; if there really is benefit to `&` that could be benchmarked/justified in the future.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=152292580\n'}"
1375,"{'code': '170610e8f19a6f52c1b44fea4ad65fa6d3228aa1', 'message': 'BloomFilter.approximateElementCount(): rename from its temporary name,\npursuant to API Review.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=152264799\n'}"
1376,"{'code': '203b3e338e1941cfee5df5a431cd82e44d2c1a66', 'message': 'Replace constants (static final CONSTANT_CASE) declaration type which use the general collection interface (e.g. List) with an immutable type (e.g. ImmutableList).\n\nFor constant field declarations, you should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List). This communicates to your callers important semantic guarantees.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=152256148\n'}"
1377,"{'code': 'f4d6360c0741d939037b05146627616419451e0c', 'message': 'Replace constants (static final CONSTANT_CASE) declaration type which use the general collection interface (e.g. List) with an immutable type (e.g. ImmutableList).\n\nFor constant field declarations, you should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List). This communicates to your callers important semantic guarantees.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=152247926\n'}"
1378,"{'code': '4ffdee5fc692bf7b5ab8c95269e3aeec1c806eec', 'message': 'Fix for Android crash caused by mis-aligned call of Unsafe.getLong on a 4-byte aligned field offset.\n\nAny use of Unsafe to read java arrays of ""another type"" is dangerous\nand unsupported (by Unsafe), so fall back to safe java more\nconservatively, unless we are running 64-bit java with 8-byte aligned\nbyte array offset.  This leaves the Big Java Server optimizations in place.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=152215885\n'}"
1379,"{'code': 'bf7bc4923a8b66873e77a98706a8ef14488eaafa', 'message': ""Automated g4 rollback of changelist 151734490.\n\n*** Reason for rollback ***\n\nRoll forward, since we've concluded this is not the culprit.\n\n*** Original change description ***\n\nAutomated g4 rollback of changelist 151172294.\n\n*** Reason for rollback ***\n\nSuspected cause of b/36638818.\n\n*** Original change description ***\n\nRewrite ImmutableMultiset on Java 7 in terms of the guts of HashMultiset, taking ruthless advantage of its property that it retains insertion order in the absence of removals.\n\nThis avoids reimplementing yet another hash table, saves some memory -- not as much as an open-addressed table would've, but some, and still keeps us to O(1) total objects --...\n\n***\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=152060057\n""}"
1380,"{'code': '62156ea9c16daf4e885cdeb99be1a021acdace63', 'message': 'Test ImmutableIntArray under GWT.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=152035299\n'}"
1381,"{'code': '9fad64c2874ab1aa21d3ecad54f19ae4a25f27fd', 'message': 'Change switch() to if().\n(followup to CL 151849104)\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=151865662\n'}"
1382,"{'code': '978fbc178cb0b6b12543f878689744ed542781da', 'message': 'Remove the singleton list optimization from ImmutableList.sublist\n\nsince SingletonImmutableList no longer exists there is no benefit and this will\ncause singleton sublists to consume more memory than non singleton sublists\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=151861509\n'}"
1383,"{'code': '6225be0aa01da6aa1391837690279f5af5fd0ea9', 'message': 'Make ImmutableIntArray @GwtCompatible\n\n * changed one int[].clone() into Arrays.copyOf(int[])\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=151853310\n'}"
1384,"{'code': '1fc328e3e43a56f43b2bab25fbaf4d9908a9a8aa', 'message': 'Fixed bugs in test in that 1 >> x - 1 is actually 1 >> (x - 1).\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=151850976\n'}"
1385,"{'code': '99d61226b6da2f50d3b5b2c80434b6f93a82899e', 'message': ""Automated g4 rollback of changelist 151172294.\n\n*** Reason for rollback ***\n\nSuspected cause of b/36638818.\n\n*** Original change description ***\n\nRewrite ImmutableMultiset on Java 7 in terms of the guts of HashMultiset, taking ruthless advantage of its property that it retains insertion order in the absence of removals.\n\nThis avoids reimplementing yet another hash table, saves some memory -- not as much as an open-addressed table would've, but some, and still keeps us to O(1) total objects -- and saves us some code.  Of course, we've still got lots of code size reduction work to do on HashMultiset, now, but even so this still represents...\n\n***\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=151734490\n""}"
1386,"{'code': 'a542db65cada2cf0de00102bca24d8f55c76d427', 'message': 'Add @since and a comment.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=151611541\n'}"
1387,"{'code': '206a5acd76e8816ca54f4e8dc787e53ed8bfebf4', 'message': 'Methods that take an edge as parameter now take type E instead of Object.\n\n[]\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=151584791\n'}"
1388,"{'code': 'de8d63f55ce4db93b33025aa4ac6a5823c8c3e57', 'message': 'Methods that take a node as parameter now take type N instead of Object.\n\n[]\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=151580804\n'}"
1389,"{'code': '5090ad5976b8d1641511a62d91cc43716f02e808', 'message': 'ImmutableIntArray initial version.\n\nNext steps:\n- serializable\n- gwt, android\n- add java8-specific methods\n- adopt\n- clone to Immutable{Long,Double}Array after it seems to stabilize\n\n[]\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=151519883\n'}"
1390,"{'code': '557649df91e5f8bab4d5f39d56c81bd47e134b06', 'message': ""Partial rollback of changelist 150805495.\n\nSpecifically, I'm rolling back only the server/java8 changes.\n\n*** Reason for rollback ***\n\nNeed to investigate Bazel heap regression.\n\n*** Original change description ***\n\nDo not copy in Immutable{List,Set,SortedSet} construction.\n\nWe're still avoiding the potential for a memory leak with the forceCopy part, but we want to avoid the garbage created by slicing the array down to exactly the right size.\n\nWe don't ever copy in ImmutableList, since we can only be too big by a factor of 3/2.  In Immutable{Set,SortedSet}, we copy if, after deduplication, the number of unique elements is < array.length / 2.  (And we rebuild the hash table in IS if it's more than twice as...\n\n***\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=151480429\n""}"
1391,"{'code': '6d32720dc75e120cca5d4f67d2a5f98db696d929', 'message': 'Eliminate the static Ordering constant in Multisets, moving it into its own class, to avoid the various problems with static initialization.\n\nEffects on ImmutableMultisetProGuard ([]\n86386 bytes => 84832 bytes\n39 classes => 37 classes\n284 methods => 277 methods\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=151478858\n'}"
1392,"{'code': 'e5dd39714cc9b0042aa4d1f1ffed61d3e3b3e3ae', 'message': ""Avoid referencing any Ordering methods except natural() in ImmutableSortedSet.\n\nThis is a behavior change, but kevinb@ and I agreed that this shouldn't really be detectable -- the handful of users of SortedSet.comparator() don't seem likely to actually do much introspecting on the comparator, and the comparator is equivalent, just no longer an Ordering.\n\nEffects on ImmutableSortedSetProGuard:\n81478 bytes => 78328 bytes\n32 classes => 29 classes\n307 methods => 287 methods\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=151474930\n""}"
1393,"{'code': '06bf86aa5c00511eb745cb450222054cc4b86e36', 'message': 'Renamed {Successor,Predecessor}Graph to {Successors,Predecessors}Function.\n\n[]\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=151421328\n'}"
1394,"{'code': '09f2c448fbd738fd4bfd5b1015dafe2f187be835', 'message': 'Added more memory benchmarks for collections.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=151394873\n'}"
1395,"{'code': '8f1a088475b51f03b9f28617893510cc74b82b49', 'message': '(w/lowasser) Streams.forEachPair()\n\n[]\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=151386365\n'}"
1396,"{'code': 'f24328a521b3c4fce0cdb854f9d7d36c03a673cf', 'message': 'Add test in MultisetForEachEntryTester to test multiple copies of a single element.\n\nFollow-up to []\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=151364503\n'}"
1397,"{'code': '8494fa9143fa219bd7acb4fdef1a133a6ba84e69', 'message': 'Close <ul> element.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=151362187\n'}"
1398,"{'code': 'f1e86cd6472719de2cf8f9e0f16632e268467ec7', 'message': 'Inline containment logic in Iterators.removeAll, allowing ImmutableMultiset to avoid retaining Predicates.\n\nEffects on ImmutableMultisetProGuard ([]\n104688 bytes => 102704 bytes\n56 classes => 53 classes\n427 methods => 418 methods\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=151351199\n'}"
1399,"{'code': 'd7f2dddae1f04e5040faca34819cb5d1c700d48f', 'message': 'Add BloomFilter.approximateCount().\n\nFixes #2755\n\n[]\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=151333352\n'}"
1400,"{'code': '82cf44994fa37cd79d0f2c3a7de3038df5b51843', 'message': ""Apply '@ForOverride' to AbstractService.doStart & AbstractService.doStop\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=151328608\n""}"
1401,"{'code': '72da1ce15303d395d4e6f659e4ceef41c3dcf935', 'message': 'Deprecate Executor-less Futures methods upon incoming migration completion to the ones with a MoreExecutors.directExecutor(), discouraging internal use, while keeping the open-source version in Guava intact. They and scheduled to be deleted in April 2018.\n\nFor more information, see []\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=151237280\n'}"
1402,"{'code': '15ba0ea3f295a2fe322ceebaccba347ae0fe3f21', 'message': ""Rewrite ImmutableMultiset on Java 7 in terms of the guts of HashMultiset, taking ruthless advantage of its property that it retains insertion order in the absence of removals.\n\nThis avoids reimplementing yet another hash table, saves some memory -- not as much as an open-addressed table would've, but some, and still keeps us to O(1) total objects -- and saves us some code.  Of course, we've still got lots of code size reduction work to do on HashMultiset, now, but even so this still represents a modest transitive retention reduction for ImmutableMultiset.\n\nEffects on ImmutableMultisetProGuard:\n110419 bytes => 104143 bytes\n64 classes => 56 classes\n456 methods => 426 methods\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=151172294\n""}"
1403,"{'code': 'f3ff0becb73f674290dfe5791a4222da6c59c9d0', 'message': 'Update docs for AbstractFuture subclassers to recommend afterDone().\nAlso, fix a typo in BloomFilter.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=151133593\n'}"
1404,"{'code': 'ffe3412b986325b0d2e7d266ca829d62983e919d', 'message': 'Deprecated the old TimeLimiter.callWithTimeout() method now that its replacements have been fully implemented.\n\n[]\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=151123087\n'}"
1405,"{'code': '948c3d8353ab0b069c63929ca9226922f59f671e', 'message': ""Deprecated SimpleTimeLimiter's constructors and added a static factory method.\n\n[]\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=151072768\n""}"
1406,"{'code': '61110e175fc90fa2e8d675c8de85dff4ed699b07', 'message': 'Fix embarrassing forEachEntry bug in ImmutableSortedMultiset.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=151063670\n'}"
1407,"{'code': 'dbeed4ae4cd45409ef6ad9fa66f203a45250c2f0', 'message': 'Implemented new TimeLimiter methods in SimpleTimeLimiter.\n\n[]\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=151010922\n'}"
1408,"{'code': '85849257e9e7fd27cfa517402c079d268cccd275', 'message': 'make NullPointerTester.isNullable() use @CheckForNull too\n\ni.e., returns true if a parameter is annotated with @Nullable\n*or* @CheckForNull. Both annotations mean ""this can be null"".\n\nFixes #2731\n\n[]\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=151005288\n'}"
1409,"{'code': '4c67c7213f3080cb8ffcee99d006635df224f149', 'message': ""Reorder methods so we (a) aren't splitting overloads anymore and (b) have them in the order: stream starters, stream combiners, stream chainers, and terminal ops.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=150915090\n""}"
1410,"{'code': 'c5225fc88eccd9990e9e0e2c8f7c6f8255015a32', 'message': 'Implemented new TimeLimiter methods in FakeTimeLimiter.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=150902171\n'}"
1411,"{'code': '14978e59e56fc770853c3fe3cecd6b8c4d97997b', 'message': ""Moved TimeLimiter's class-level documentation to newProxy() and replaced it with more general info.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=150894315\n""}"
1412,"{'code': '196f59d7e94532f04cbcbf56b34c8dfcd52626a9', 'message': 'Added TimeLimiter.{call,run}WithTimeout() methods with improved exception behavior and more readable method signature.\n\n[]\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=150889844\n'}"
1413,"{'code': 'af5e29f3fd05df9a05e597380b6922cc9fc15995', 'message': ""Do not copy in Immutable{List,Set,SortedSet} construction.\n\nWe're still avoiding the potential for a memory leak with the forceCopy part, but we want to avoid the garbage created by slicing the array down to exactly the right size.\n\nWe don't ever copy in ImmutableList, since we can only be too big by a factor of 3/2.  In Immutable{Set,SortedSet}, we copy if, after deduplication, the number of unique elements is < array.length / 2.  (And we rebuild the hash table in IS if it's more than twice as big as it should be).\n\nThe memory cost here isn't big, but Android especially doesn't like garbage objects, and garbage isn't super fun on server side either.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=150805495\n""}"
1414,"{'code': 'd4c01969d0ec27928063d94880f001fe6245aa2f', 'message': 'Add @FunctionalInterface to AsyncCallable.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=150771279\n'}"
1415,"{'code': '1ad44a00d1301b610feca0ae80be458a0d0c0392', 'message': 'Removed {Successor,Predecessor}Graph.nodes().\n\nReasons:\n- The new interfaces are functional\n- It will be easier converting existing uses of TreeTraverser and similar classes.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=150682183\n'}"
1416,"{'code': 'c817079ac853763127078dcceed4e65e5a9374ad', 'message': 'Added tests to cover some forEach code in Iterables. (Which means these tests should not be in the Java7 version).\n\nAlso some minor cleanups\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=150666890\n'}"
1417,"{'code': '7bde6040bf36313a5e2567fa0eaf7cefb46d4bdc', 'message': 'Fix LocalCache.compute deadlock issue, also added unittests.\n\nhttps://github.com/google/guava/issues/2743\n\nwe need to hold the lock when calling compute, the rest of the calls\nlike removeEntry need to hold the lock too.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=150363160\n'}"
1418,"{'code': '32c885b3cc561f64dae7efed3d5fee516ad359fa', 'message': 'Preconditions.java: reword the section on Performance to clarify what aspects of performance are actually expected to be an issue in practice.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=150348211\n'}"
1419,"{'code': '2b8af31fb49ecabdbefe66df8b369e1b137d10f2', 'message': 'Fix external bug #2751.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=150327872\n'}"
1420,"{'code': '1d3051de806987f41f69edfd21cb0a8cff0e1dcb', 'message': 'Added a test for copyOf when the collection is an EnumSet.  In the process generalized the abstract classes so that we could call copy of.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=150220273\n'}"
1421,"{'code': 'eb62a02b48b4c55362aba4b98a182887f132397f', 'message': ""Apply '@ForOverride' annotation to Equivalence.doEquivalent & doHash.\n\n[]\n\nhttps://github.com/google/guava/issues/1966\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=150196929\n""}"
1422,"{'code': 'ea7b9e3af6844d4f5a2efe7dc98ee30f88c8cfbb', 'message': 'Added a test that improves test coverage of the nested class MapViewOfValuesAsSingletonSets (via asMultimap).\n\nAlso cleans up ImmutableMap to match Java 7 patterns of constructors (and thus show the test coverage improvements).\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=150104082\n'}"
1423,"{'code': '2848e96221c469b08c7693a18afba72219443f5f', 'message': 'Added missing tests to ImmutableList.sortedCopyOf() (using natural order).\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=149945041\n'}"
1424,"{'code': '0e2a0eede5bf85f3c1f64e5752501eddf9ab7202', 'message': 'Replace constants (static final CONSTANT_CASE) declaration type which use the general collection interface (e.g. List) with an immutable type (e.g. ImmutableList).\n\nFor constant field declarations, you should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List). This communicates to your callers important semantic guarantees.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=149768016\n'}"
1425,"{'code': 'c8765bc9e09df13164a8513efc91141767239eea', 'message': 'Replace constants (static final CONSTANT_CASE) declaration type which use the general collection interface (e.g. List) with an immutable type (e.g. ImmutableList).\n\nFor constant field declarations, you should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List). This communicates to your callers important semantic guarantees.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=149651971\n'}"
1426,"{'code': '31985701e877434941c97891ba732478f0e97258', 'message': ""Make MediaType.charset() a little cheaper.\n\nSince we only care if there are zero or 1 elements we don't need to construct an ImmutableSet at all and so can avoid copying the list.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=149602676\n""}"
1427,"{'code': '1445486132811e9ce175ce463356c659d8e6339d', 'message': 'It was senseless to hold these nifty collectors back from Guava (sorry).\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=149416083\n'}"
1428,"{'code': '296972864f901744a7eb16698ecbbcbfaabf1989', 'message': ""Reimplement inCompletionOrder() (courtesy lukes@).\n(Also, make it available under GWT, but possibly I could have done that without reimplementing?)\n\nThis is likely to be slightly faster than what we had before. In particular, it means that a directExectur() listener for one output Future can't slow the completion of other output Futures (except to the extent that all Futures-based code is likely to be an interconnected graph in which any directExector() listener can slow any other :)).\nIt also means that we complete each output Future in the same thread as the input Future completed. This shouldn't matter to most users, but it could affect people who think they know better than the directExecutor() warnings. (And the resulting improvement to parallelism is one reason for the likely performance improvement noted above, along with the removal of SerializingExecutor's locking.)\nIt might also increase the chances that the output Futures actually complete in the same order as the input Futures (though there will always be the potential for races). Users shouldn't care, but it seems like a nice property to provide to the extent that we can easily enough.\n\nIf nothing else, it removes the last remaining usage of SerializingExecutor from Guava, which may be nice for minimizing dex size for Android.\nThat said, many Android users probably do want SerializingExecutor for their own use. But currently we don't expose ours publicly, so they have their own copy, and they could end up with both ours and theirs -- at least if they use both inCompletionOrder and their own copy, which probably no one does currently. But the long-term solution may be to expose SerializingExecutor publicly, in which case they'd be back to having only one version, and the only people who would benefit would be those who use inCompletionOrder but don't otherwise use SerializingExecutor.\n\n[]\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=149415170\n""}"
1429,"{'code': '3d27caceeb1b90fb868d98e6d690394d3cff339a', 'message': 'Replace constants (static final CONSTANT_CASE) declaration type which use the general collection interface (e.g. List) with an immutable type (e.g. ImmutableList).\n\nFor constant field declarations, you should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List). This communicates to your callers important semantic guarantees.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=149330334\n'}"
1430,"{'code': '663a903b61003342b628eac9494573cab13a1316', 'message': 'Replace constants (static final CONSTANT_CASE) declaration type which use the general collection interface (e.g. List) with an immutable type (e.g. ImmutableList).\n\nFor constant field declarations, you should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List). This communicates to your callers important semantic guarantees.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=149315090\n'}"
1431,"{'code': '8355d07391a07cda264e65718ee6e83678bc0e52', 'message': 'Use the valuesSpliterator() method we added to AbstractTable.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=149314468\n'}"
1432,"{'code': 'ad998b11bdf7c33b730b2248e7438e90b14e39f3', 'message': 'Add CharSource.forEachLine(Consumer).\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=149307373\n'}"
1433,"{'code': '269da6a8236e75eb4221e648bbe7351f84063632', 'message': ""Among the Futures methods that run user callbacks, those that don't take an Executor will be deleted.  This CL migrates them to the counterparts that take MoreExecutors.directExecutor() as such Executor in the parameter list, exactly the way that the old method works.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=149302150\n""}"
1434,"{'code': 'd86487fa294b1efa9f2b08c5569b9fca5efa1445', 'message': 'Replace constants (static final CONSTANT_CASE) declaration type which use the general collection interface (e.g. List) with an immutable type (e.g. ImmutableList).\n\nFor constant field declarations, you should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List). This communicates to your callers important semantic guarantees.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=149297072\n'}"
1435,"{'code': '2162846b059a0aa4729eb6ba9cf6f6a8e73fa9be', 'message': 'Replace constants (static final CONSTANT_CASE) declaration type which use the general collection interface (e.g. List) with an immutable type (e.g. ImmutableList).\n\nFor constant field declarations, you should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List). This communicates to your callers important semantic guarantees.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=149152061\n'}"
1436,"{'code': '5b4cd94406bc2ab1c6a1370e5650c8ee9ee64a70', 'message': ""Fix bad reference to BufferedReader#readLine by adding parens so it doesn't somehow assume it should refer to the package-private version of the method that takes a boolean argument.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=149139876\n""}"
1437,"{'code': 'c7769b29de954b3469fb1d9a25a80cb333fdd0ae', 'message': 'Add CharSource.lines().\n\nAlso make a variety of javadoc tweaks and improvements.\n\nFixes https://github.com/google/guava/issues/2693.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=149122377\n'}"
1438,"{'code': 'f1372238af0da9ba3d3b068fbe244c55a3104b57', 'message': 'Add javadoc of common ways to obtain a non-public-constructable objects.\n\nMapSplitter -> Splitter.withKeyValueSeparator\nCache/LoadingCache -> CacheBuilder\nInterner -> Interners\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=149053355\n'}"
1439,"{'code': '719173f3c3b75f12992635e2cb60d5cffaab7d8f', 'message': 'Add Stopwatch.elapsed() which returns a java.time.Duration\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=149027680\n'}"
1440,"{'code': '4906fbbaeb22559563be02b0e765fda15426baff', 'message': 'google-java-format Stopwatch (and test) to minimize diffs introduced by\n[]\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=149000993\n'}"
1441,"{'code': '2203451442f390f6fb9aeea95a90f790d8a4a061', 'message': 'For constant field declarations, you should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List). This communicates to your callers important semantic guarantees.\n\nThis change replaces constants (static final CONSTNAT_CASE) declaration type which use the general collection interface (e.g. List) with an immutable type (e.g. ImmutableList).\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=148919704\n'}"
1442,"{'code': '53e2de6e9cbb7fe686c3a28180770b884c02d1e3', 'message': 'For constant field declarations, you should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List). This communicates to your callers important semantic guarantees.\n\nThis change replaces constants (static final CONSTNAT_CASE) declaration type which use the general collection interface (e.g. List) with an immutable type (e.g. ImmutableList).\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=148879760\n'}"
1443,"{'code': '379757e3b1c22fef4b19181e404c6abb7ad58d50', 'message': 'Deprecate and better document many hash functions.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=148661971\n'}"
1444,"{'code': '5b1fc2e6dac60e84e8bd59a29e66883a911e7cd3', 'message': 'Update Public Suffix List.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=148458296\n'}"
1445,"{'code': '45a0e3a8df9be0823ac38c668fbd177c4ee63de3', 'message': 'Support an optional label when enqueuing listener events, to make using method references more palatable.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=148397429\n'}"
1446,"{'code': '278019a9d822e2909663fb0455fbb18f195b9929', 'message': 'Inline the logic of Ordering.onKeys() to get from a key comparator to an entry comparator with only one class instead of more.\n\nEffects on ImmutableSortedMapProGuard ([]\n60598 bytes => 57291 bytes\n53 classes => 49 classes\n432 methods => 420 methods\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=148394436\n'}"
1447,"{'code': '01d67d3f7b372279eb7af4469ec82f30c1ef08df', 'message': 'Switch ImmutableSortedMap over to using AbstractMap.SimpleImmutableEntry instead of ImmutableMapEntry.\n\nEffects on ImmutableSortedMapProGuard ([]\n62724 bytes => 60598 bytes\n55 classes => 53 classes\n444 methods => 432 methods\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=148390060\n'}"
1448,"{'code': '327440e01dbe1d7f9f3b09f5866e4e6b19709cb6', 'message': 'Avoid reference to PeekingIterator in RegularImmutableSortedSet.containsAll, inlining that logic instead of pulling in the extra class.\n\nEffects on ImmutableSortedSetProGuard ([]\n40823 bytes => 39358 bytes\n34 classes => 32 classes\n314 methods => 307 methods\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=148374768\n'}"
1449,"{'code': 'e375c341d1a447b02f6ab5f8a3db43e2943e0d00', 'message': 'Annotate some flaky slow tests as @AndroidIncompatible.\n\nThese tests appear to have become flakier around CL 148237028 -- probably mostly because it removed @AndroidIncompatible from one method but perhaps because of the changes in implementations of some of the other methods. (I even wonder if changes to the implementations of some tests are causing other tests to fail, given the number of new failures I saw in unrelated tests in my ""After"" run. Or maybe that\'s just an artifact of small sample size.)\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=148352222\n'}"
1450,"{'code': '9e2592468378e55556e28d643a6437322d35c480', 'message': 'Make ListenerCallQueue functionality available outside the concurrent package internally. Changes:\n- encapsulate list of listeners functionality\n- rename Callback interface to Event and make it lambda-compatible\n- move ""methodName"" to just be toString() on Event, which also defers/avoids unnecessary allocations\n- remove @GuardedBy suppression\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=148347379\n'}"
1451,"{'code': '1aea9748a3e0a73e8b82270c01ccf8bb92264f4c', 'message': ""Make the tests for Quantiles use up-to-date Truth technology. My main motiviation here is to stop using hasValuesWithin, which is going away. While I'm at it, let's start using comparingValuesUsing for the Map assertions to avoid the unpleasant loop, and inline the helpers, which aren't really useful now that we've done that.\n\nI also fixed testPercentiles_index_computeInPlace() which was being slow (about 100s on my machine, and it was annotated as incompatible with android just for slowness) because it was doing a lot of stuff which wasn't really necessary.\n\nI also added a jsr305 dep which blaze complained was missing if I didn't :-/.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=148237028\n""}"
1452,"{'code': '31efcb491afa1b287f21565e71acc4059729403d', 'message': 'ByteProcessor does not operate on lines.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=148235758\n'}"
1453,"{'code': '7c11b8d9220b710d5598b774e22cc774f68f40e7', 'message': 'Make classpath scans over circular symlinks predictable.\n\nFixes #2649\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=148224109\n'}"
1454,"{'code': '8a930bc2d352cb4c8def02d982b795f0ae48a229', 'message': 'Allow Funnel<? super T> for BloomFilter.readFrom()\n\nThis brings readFrom() in line with create() (as well as the protected constructor that readFrom() delegates to) in accepting Funnel<? super T>.  The existing Funnel<T> requirement is needlessly strict, given that a Funnel<T> is a consumer of T so any Funnel<? super T> should be acceptable.\n\nRelaxing this allows, for example, reconstructing a BloomFilter<String> that uses a Funnel<CharSequence> such as Funnels.unencodedCharsFunnel().\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=148122926\n'}"
1455,"{'code': '15c2b776614a2be35668eba77af1bfe5a7cec2fd', 'message': 'Rename Multiset collector parameter names to be consistent with other collector factories.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=148116285\n'}"
1456,"{'code': '7cb2291988f653a27237cfaf8e98e2a27bea2690', 'message': ""Instead of using the SortedLists utility class, go straight to Collections.binarySearch in the implementation of RegularImmutableSortedSet.\n\nSortedLists is a much nicer API, but it carries a decent chunk of code weight that we can lose without a problem, and we don't need its fancier features of dealing with multiple elements comparing as equal -- the point of a SortedSet is that we don't have to worry about those.\n\nEffects on ImmutableSortedSetProGuard ([]\n50271 bytes => 43278 bytes\n44 classes => 34 classes\n360 methods => 334 methods\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=148112233\n""}"
1457,"{'code': 'c0b74877c604d6c8190b03d8470435048650f815', 'message': 'Explain the segmented nature of maximumWeight better.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=148103826\n'}"
1458,"{'code': '5076898002c108516cadc50179856e0bb2815fa4', 'message': 'Fixed signature compatibility issue.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=147899708\n'}"
1459,"{'code': '717ece9ad6c9a3e27987b65efb400e79d671eefc', 'message': ""{*Graph, Network}.java: change documentation of allowsSelfLoops() and allowsParallelEdges() to correct the type of exception that is thrown when one attempts to modify them in a way that the constraint prevents (e.g., adding a self-loop to a graph that doesn't allow them).\n\nTechnically this is a contract change, but in fact the implementations were already throwing IllegalArgumentException, so in practice anyone that was depending on that documentation being accurate (by, say, catching UnsupportedOperationException) was already in trouble, so IMO we should just make this change without trying to worry about backward compatibility; this is just a bug fix.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=147933338\n""}"
1460,"{'code': '891d64ba1835e3aa5f7bf827ebe09b4972c07830', 'message': 'Some rework of Equivalence javadocs. Remove a message that no longer applies there.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=147899167\n'}"
1461,"{'code': '623896f9180bd20c05b8c550f4323038f86803d0', 'message': 'Added SuccessorGraph/PredecessorGraph.\n\nThis CL has no tests because it only adds interfaces without any testable logic.\n\nNext steps:\n- Update the paragraphs starting with ""There are three main interfaces"" (added TODO\'s)\n- Update the wiki\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=147874873\n'}"
1462,"{'code': '5907979766f539d8aa810459bd0194adefd10c95', 'message': 'Suppress @GuardedBy errors.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=147862530\n'}"
1463,"{'code': 'b17fe0d57083d37f87301dd912f9548ec11d305d', 'message': ""Push down definition of ImmutableSortedSet.createDescendingSet to subclasses, so we don't get DescendingImmutableSortedSet unless we actually have an ImmutableSortedSet implementation that uses it.\n\nEffects on ImmutableSortedSetProGuard ([]\n47637 bytes => 46304 bytes\n41 classes => 40 classes\n337 methods => 318 methods\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=147783833\n""}"
1464,"{'code': '6f96135d896e671b14f69c90d6d989f0652da1e6', 'message': 'Fix ""SecretSpecKey"" typo in Hashing javadoc\n\nThe actual JDK class is named SecretKeySpec, not SecretSpecKey.  Arguably this is confusing since it does implement Key, but then again it also implements KeySpec...\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=147632964\n'}"
1465,"{'code': '89a8e3f6757b809ee43e4f7d172ba3b5af9b4c36', 'message': ""Fix cases where GWT sometimes couldn't infer which types are serialized.\nAnd finally revise our (internal-only) tests to catch these problems and the problem fixed by CL 147488537.\n\nAs far as I can tell, our old tests passed only because of a GWT bug.\nThe fixes are mostly to create dummy superclasses with dummy fields, as usual.\nThe exception is ImmutableSortedSet. For some reason, the fix there is to move the existing dummy fields to RegularImmutableSortedSet. My completely wild guess (without investigating at all) is that GWT ignores the ImmutableSortedSet fields because ImmutableSortedSet_CustomFieldSerializer doesn't have the expected methods. This guess makes no sense, especially because GWT appears to be fine with the *Comparator<E>* field on ImmutableSortedSet, just not the E field. Basically nothing makes any sense, but I'm just happy it works now.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=147607863\n""}"
1466,"{'code': '217659fcd585d0512f77c020835f2a56db059ce5', 'message': 'Push down the implementation of createValues() into the subclasses of ImmutableMap.\n\nThe only implementations of ImmutableMap that actually use the ImmutableMapValues class are the handful of views like DenseImmutableTable.rowMap().  Pushing down the implementation of createValues() allows us to avoid getting ImmutableMapValues or its dependencies for users just using ImmutableMap directly.\n\nEffects on ImmutableMapProGuard ([]\n30202 bytes => 27737 bytes\n26 classes => 23 classes\n180 methods => 167 methods\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=147515235\n'}"
1467,"{'code': '63a3a9bb02dedcb4dcda9647ec466f6ac0839ade', 'message': ""Eliminate references to ObjectArrays in the closure of ImmutableSet and ImmutableMap.\n\nProGuard cannot currently eliminate any class that has a static constant that isn't a primitive or String, and ObjectArrays has the EMPTY_ARRAY static constant.  Instead, we'll directly inline empty object array singletons anywhere we need them; Object[0]s will still be singletons, we'll just have different singletons in different places.\n\n[]\nEffects on ImmutableSetProGuard:\n23072 bytes => 22614 bytes\n17 classes => 16 classes\n140 methods => 140 methods (no change)\n\nEffects on ImmutableMapProGuard:\n30589 bytes => 30224 bytes\n27 classes => 26 classes\n180 methods => 180 methods (no change)\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=147491289\n""}"
1468,"{'code': 'ccd010f72a8025e51087a7f85d2be29817a0d29c', 'message': ""Copied from cpovirk's CL 147393681 to submit while cpovirk is OOO.\n\nFix GWT serialization broken by CL 146683890.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=147488537\n""}"
1469,"{'code': 'fbe153c49da10a7a0a96e003017028c15b2814f2', 'message': ""Push down the implementation of ImmutableMap.createKeySet() into its implementations, because ProGuard can't figure out how to eliminate createKeySet even when it's overridden in the only ImmutableMap implementation it knows of.\n\nThis makes there be one and only implementation of key sets retained by ImmutableMap itself, RegularImmutableMap.KeySet.  There is no implementation change to the other map types, we just inline the createKeySet() method to those implementations.\n\nEffects on ImmutableMapProGuard ([]\n32155 bytes => 30612 bytes\n29 classes => 27 classes\n190 methods => 180 methods\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=147408143\n""}"
1470,"{'code': '0fd20594150e5493138e83462b25b81db2507f49', 'message': ""Move the the static constant empty iterator to live in its implementation class, ArrayItr.\n\nThis removes the only static constant field from c.g.c.c.Iterators, which allows ProGuard to eliminate it and move its methods to another common location.  Additionally, if we don't reference emptyIterator() or forArray(...) in future, we'll eliminate ArrayItr too.\n\n[]\nEffects on ImmutableSetProGuard:\n23711 bytes => 23087 bytes\n18 classes => 17 classes\n143 methods => 140 methods\n\nEffects on ImmutableMapProGuard:\n32685 bytes => 32171 bytes\n30 classes => 29 classes\n192 methods => 190 methods\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=147359807\n""}"
1471,"{'code': 'aafccea1e471dd936966182b3e2a1dd03358ef8f', 'message': ""Don't use ImmutableSet.of() for the keySet of ImmutableMap.of().\n\nThe keySet of the empty map will still be a singleton (since the empty map is a singleton and it caches keySet), it'll just be a different singleton from ImmutableSet.of().  This ensures that the only implementation of ImmutableSet retained by usages of ImmutableMap are its own keySet implementations.\n\nEffects on ImmutableMapProGuard ([]38966 bytes => 37886 bytes\n37 classes => 36 classes\n231 methods => 219 methods\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=147078624\n""}"
1472,"{'code': 'f267c4a0c11104099537ace3be89d97b96ebde95', 'message': ""Turn Iterators.emptyModifiableIterator into an enum singleton instead of an anonymous inner class.\n\nProGuard can't eliminate static fields, but it can recognize that the enum isn't referenced except by emptyModifiableIterator and eliminate it from classes that reference other methods in Iterators.\n\nEffects on ImmutableMapProGuard: ([]41126 bytes => 40551 bytes\n40 classes => 39 classes\n247 methods => 243 methods\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=146953456\n""}"
1473,"{'code': '108c4422b3e1d5d272cefe6bc4dd1433c8708c1c', 'message': ""Don't use a Predicate in Iterators.contains.  This saves an embarrassing number of classes.\n\nEffects on ImmutableMapProGuard: ([]46280 bytes => 41212 bytes\n48 classes => 40 classes\n273 methods => 247 methods\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=146929047\n""}"
1474,"{'code': '9f2e28d6ffb74733b397b84ac25139ae3e012c33', 'message': ""Automated g4 rollback of changelist 146841288.\n\n*** Reason for rollback ***\n\nSome people appear to have been depending on specific hashCode behavior?\n\n*** Original change description ***\n\nEliminate SingletonImmutableSet, partially folding it into RegularImmutableSet.\n\nWe skip allocating an all-up hash table for a singleton set, but we share implementation with the hash-based RegularImmutableSet.\n\n[]Effects on ImmutableSetProGuard:\n26650 bytes => 24854 bytes\n21 classes => 19 classes\n165 methods => 149 methods\n\nEffects on ImmutableMapProGuard:\n50050 bytes => 50176 bytes, no other changes.\n(I infer that SingletonImmutableSet wasn'...\n\n***\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=146925879\n""}"
1475,"{'code': '92ff172e173dcf16376e9b429827dfc99dd6354f', 'message': 'Update version guarantee for our tests\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=146917804\n'}"
1476,"{'code': '6be638b6cd854cc8be93210bc173e22d88d74593', 'message': ""Eliminate SingletonImmutableSet, partially folding it into RegularImmutableSet.\n\nWe skip allocating an all-up hash table for a singleton set, but we share implementation with the hash-based RegularImmutableSet.\n\n[]Effects on ImmutableSetProGuard:\n26650 bytes => 24854 bytes\n21 classes => 19 classes\n165 methods => 149 methods\n\nEffects on ImmutableMapProGuard:\n50050 bytes => 50176 bytes, no other changes.\n(I infer that SingletonImmutableSet wasn't actually in the post-ProGuard transitive closure from ImmutableMap and that we just added a little bit of code to a utility method that was.)\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=146841288\n""}"
1477,"{'code': '9a0670aeef95035f5caf3814d0daf16ee60a353a', 'message': 'Eliminate references to Joiner in toString static utilities, inlining the joining logic explicitly.\n\nEffects on ImmutableMapProGuard ([]\n50061 bytes => 46299 bytes\n53 classes => 48 classes\n293 methods => 273 methods\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=146838293\n'}"
1478,"{'code': 'a1a83d407f3f19891b7032e151d945363c441780', 'message': 'Add emptiesFirst/Last to Comparators for easily comparing java.util.Optional\nvalues.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=146801689\n'}"
1479,"{'code': '994a379dc3b787c34afb0c3de65e26bede59bd81', 'message': 'Delete SingletonImmutableList.\n\nWhile SingletonImmutableList allocates one fewer object, this isn\'t worth it on Android.  This has no effect on the MemoryTester bounds for ImmutableList itself.\n\nCurrently we are deleting it in all environments, but if we liked we could delete it only in Android; its deletion does increase the MemoryTester bounds for e.g. ImmutableListMultimap, whose ""sparse"" configuration generates a singleton ImmutableList per key.\n\n[]Effects on ImmutableSetProGuard:\n27697 bytes => 26650\n22 classes => 21 classes\n173 methods => 165 methods\n\nEffects on ImmutableMapProGuard:\n51766 bytes => 50061 bytes\n55 classes => 53 classes\n305 methods => 293 methods\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=146683890\n'}"
1480,"{'code': '484c00a67537285255ac9311e339b0169fc28647', 'message': ""Don't have a special class for Iterators.unmodifiableListIterator(), instead using Iterators.forArray(ObjectArrays.EMPTY_ARRAY).\n\n[]Effects on ImmutableSetProGuard:\n28632 bytes => 27697 bytes\n24 classes => 22 classes\n180 methods => 173 methods\n\nEffects on ImmutableMapProGuard:\n52700 bytes => 51766 bytes\n57 classes => 55 classes\n312 methods => 305 methods\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=146675737\n""}"
1481,"{'code': 'cac2e34369fe1b6b71ef0006e6fc50766fee8147', 'message': ""Have ImmutableMaps for zero and one element use RegularImmutableMap instead of {Empty,Singleton}ImmutableBiMap, avoiding pulling in ImmutableBiMap and all its dependencies.\n\nThe increase in the size of singleton maps does require an increase in the constant overhead in MemoryTester for immutable multimaps and tables, but a constant overhead isn't worth that much concern.  (We might come back to work on these when we start trying to improve multimap and table size, though.)\n\nEffects on ImmutableMapProGuard: ([]59284 bytes => 52710 bytes\n64 classes => 57 classes\n363 methods => 312 methods\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=146528004\n""}"
1482,"{'code': 'aaae2e9a6b9cab0429f4589f89603742f28f6bd0', 'message': 'Optimize ContiguousSet.asList() for the three built-in DiscreteDomains.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=146513267\n'}"
1483,"{'code': '46a324c292a8c2927bc452956d75134b2f084396', 'message': ""Avoid mentioning ImmutableSortedMap in the ImmutableMap implementation.\n\nI'm not sure why ProGuard couldn't strip this out already, but ImmutableSortedMap and several of *its* dependencies were getting retained when ProGuard stripped ImmutableMap, and this fixes it.\n\nEffects on ImmutableMapProGuard: ([]87770 bytes => 59284 bytes\n93 classes => 64 classes\n601 methods => 363 methods\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=146505055\n""}"
1484,"{'code': '612ea8749817abc6137755ca8e8af0b5a1411026', 'message': ""Make RegularImmutableSet extend ImmutableSet directly, not ImmutableSet.Indexed.\n\nThe only side effects are that the iterator is slightly more efficient (less indirection), and importing ImmutableSet by itself doesn't import helpers for ImmutableSet views of other collections.  A minor gain, but they add up.\n\nEffects on ImmutableSetProGuard: ([]31249 bytes => 30128 bytes\n28 classes => 26 classes\n198 methods => 192 methods\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=146473318\n""}"
1485,"{'code': '18309f0adb47de9593b3f189d213e72a526a048c', 'message': ""Avoid mentioning ImmutableSortedSet in the ImmutableSet implementation.\n\nI'm not sure why ProGuard couldn't strip this out already, but ImmutableSortedSet and several of *its* dependencies were getting retained when ProGuard stripped ImmutableSet, and this fixes it.\n\nEffects on ImmutableSetProGuard: ([]37524 bytes => 31249 bytes\n34 classes => 28 classes\n263 methods => 198 methods\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=146427279\n""}"
1486,"{'code': '93e4fb0aaf1c2304589f431c644f4bb7fc9e7363', 'message': 'Added a new tests case that proves RateLimiter works even for very small numbers.\n\nFixes #2594\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=146144129\n'}"
1487,"{'code': '0e29934933f33379de953727171f7ca1ec616a58', 'message': 'Make annotation dependencies non-optional.\n\nFixes https://github.com/google/guava/issues/2721\n\nDiscussion: []\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=146128219\n'}"
1488,"{'code': '7356947cb2caf73d6155255bdcc2906e45e973d6', 'message': ""Deprecate several redundant methods in Files, cross-reference functionality\nadded to JDK's Files class (hence not in Guava's MoreFiles).\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=146069308\n""}"
1489,"{'code': 'bfbeca9d086110432cda723050f37e1fe7a60e1f', 'message': 'Test that all MediaType constants are unique.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=146033356\n'}"
1490,"{'code': '28148e763d5eea95f532df630e8eb87b993935d2', 'message': 'Allow ignoring Constructors in NullPointerTester\n\nFixes #2728\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=146030420\n'}"
1491,"{'code': '7fa9839366d4eeb0e4c942b11f2ba8162ad40481', 'message': ""Among the Futures methods that run user callbacks, those that don't take an Executor will be deleted.  This CL migrates them to the counterparts that take MoreExecutors.directExecutor() as such Executor in the parameter list, exactly the way that the old method works.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=145602579\n""}"
1492,"{'code': '8a991157845af123f701f223c8f2ecc245e82977', 'message': 'Make TearDownStack thread-safe\n\nI encountered an issue with some code that starts several servers in\nthe background (in parallel), adding a TearDown to stop each one after\nthe test is finished. Fixing that issue in the calling code itself\nboils down to basically one of two choices: a. synchronzing my access\nto the tear down stack; or b. restructuring the code so the teardown\nhappens on the main thread. Solution ""a"" is incomplete, as I can\'t\nprotect the access to the stack from code at large (only my code), and\nsolution ""b"" leads to a less-readable, more convuluted code, that\ndelays the registering of the teardown to much after it would\nnaturally go (and lead to incomplete tear downs, if the test were to\nstop before the moment where the tear down is registered).\n\nMaking TearDownStack thread-safe seems like a much better option.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=145446978\n'}"
1493,"{'code': '1ab917eac078a6c9f6cfefee6859855b6037a9b9', 'message': ""Among the Futures methods that run user callbacks, those that don't take an Executor will be deleted.  This CL migrates them to the counterparts that take MoreExecutors.directExecutor() as such Executor in the parameter list, exactly the way that the old method works.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=145349663\n""}"
1494,"{'code': '39a92f259efe0dc73221af42b8f7e5f84b0130f4', 'message': ""Among the Futures methods that run user callbacks, those that don't take an Executor will be deleted.  This CL migrates them to the counterparts that take MoreExecutors.directExecutor() as such Executor in the parameter list, exactly the way that the old method works.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=145333015\n""}"
1495,"{'code': '3def13f60ae4a72e59a8426aab6e3568613fe9e4', 'message': 'Add the method Network.edgeConnecting().\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=145123448\n'}"
1496,"{'code': '829613401de295d6c6be65ff08d67d02cbbdf5ab', 'message': 'Link to https://github.com/google/guava/wiki/Why-we-deprecated-Throwables.propagate\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=145114919\n'}"
1497,"{'code': 'c41557c3563e4b20c0b16680c304f26887b14283', 'message': ""Change NullPointerTester to work for Stream parameters.\n\nThe default-generated proxy for Stream instance will throw ClassCastException if the method/constructor calls collect(), which is common.\n\nThe reason for the exception is that stream.collect() return R, which the proxy has no idea  that is'a List<T>, or ImmutableList<T> or whatever. That type is unknown because of erasure.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=145114911\n""}"
1498,"{'code': '6dfbabda7906ec343bcc2e54e1c34957d90bae68', 'message': 'Support interface static methods and default methods for NullPointerTester.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=145114472\n'}"
1499,"{'code': '7c59e96177901f12491cf25a409956f1649fa42e', 'message': 'Add the methods Graph.hasEdge() and ValueGraph.hasEdge(). Also add some test coverage for ValueGraph.asGraph().\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=145109107\n'}"
1500,"{'code': '26adf8f40095d21904711b9edf94ac258754bce7', 'message': 'Shuffling from internal-only change.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=144996795\n'}"
1501,"{'code': 'e3f9ba6a707b03559910bceffb74244ac9a8db13', 'message': 'Finally add Tables.synchronizedTable, which has seemed to continually fall through the cracks...\n\nFixes https://github.com/google/guava/issues/1297\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=144981241\n'}"
1502,"{'code': 'e616b8ec9612eeb5ad2b616b4809e16ec8a53bc0', 'message': 'Introduce a package-private BaseGraph interface and AbstractBaseGraph class. This allows us to remove a large amount of code duplication. It also gives us a small reduction in constant overhead for Graphs.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=144926159\n'}"
1503,"{'code': 'd0dc9ce896df6299de427063fa69bd348937ef1f', 'message': 'Now that ValueGraph no longer extends Graph, change all the common.graph interfaces to handle equals()/hashCode() ""normally"". Deprecate Graphs.equivalent().\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=144788407\n'}"
1504,"{'code': '6c02e370ae4256ea1ed027c41cc20639ca09a1a5', 'message': 'Make it so ValueGraph no longer extends Graph. Instead, provide a ValueGraph.asGraph() method. In a followup change, this will allow us to handle equals()/hashCode() ""normally"" and delete the Graphs.equivalent() methods.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=144787090\n'}"
1505,"{'code': 'b0b03e7936397e68960383d2086f342f74d1c1bc', 'message': 'Update README for Guava 21.0 final and set snapshot version to 22.0-SNAPSHOT.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=144370430\n'}"
1506,"{'code': '896c51abd32e136621c13d56b6130d0a72f4957a', 'message': 'To fix external bug https://github.com/google/guava/issues/2152.\n\nThis code follows the article emcmanus mentioned:\nhttps://community.oracle.com/blogs/kohsuke/2007/04/25/how-convert-javaneturl-javaiofile\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=144362958\n'}"
1507,"{'code': '65ffec58dcbb7547109896d5d96ae0581dca4cc8', 'message': 'Fix ""Feburary"" typo.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=144227696\n'}"
1508,"{'code': '6df8b3ca1d1d6b2dfe3aff0316079da61937eef9', 'message': 'Expose collectors for Multisets accepting per-element counts\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=144222270\n'}"
1509,"{'code': '6df14d7ccb07d5d61f11849c201345504b5e836a', 'message': 'Deprecate CheckedFuture.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=144206874\n'}"
1510,"{'code': '79f777a7576bcb363b1a5fab8a7ec653f48d4c05', 'message': 'Mention rc2.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=143787902\n'}"
1511,"{'code': 'be87e5ba9046a8f7827df0d8e0ff77e528d7cdee', 'message': ""Annotate AbstractFuture with @DoNotMock.\n\nIdeally we'd annotate ListenableFuture itself, but I don't want to go down the road of fixing or suppressing all existing violations right now.\nI'm doing even AbstractFuture only because it will soon become a subclass of FluentFuture, which we want to be @DoNotMock.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=143777863\n""}"
1512,"{'code': '1554ca732769fc93a4a198eb5764c2e7bcea3f17', 'message': 'Better phrasing of Throwables.getCauseAs() documentation.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=143599868\n'}"
1513,"{'code': '1767cde568042d6cba069cdf13cc0e9ec4fb7ba8', 'message': 'Add @since to RangeMap.putCoalescing().\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=143594298\n'}"
1514,"{'code': '3aadd26e9e7fe6f9dacc782045e9e5207cf3b0a6', 'message': 'Add MoreFiles.equal() - Files/MoreFiles feature parity.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=143587980\n'}"
1515,"{'code': '1efc5ce983c02cfaa2ce3338bdfaa1f583b66128', 'message': 'Add RangeMap.putCoalescing() in order to support coalesced RangeMap entries.\n\nhttps://github.com/google/guava/issues/2665\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=143507326\n'}"
1516,"{'code': '7b53ffdf0d4c7616566cb6953cce15e9247c04c2', 'message': 'Add example anti-pattern to getCauseAs() Javadoc.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=143498116\n'}"
1517,"{'code': 'b710437f4727a57f23fb2b750e13fc89ee8d1012', 'message': 'Apply `assertTrue(obj instanceof Class)` -> `assertThat(obj).isInstanceOf(Class.class)` refactorings to c.g.common.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=143496490\n'}"
1518,"{'code': 'cc596a037d46c65496c04d34e8717f63693c9cf8', 'message': 'Avoid isNotInstanceOf(), which can wrongly succeed under -XdisableClassMetadata.\n\nhttps://github.com/google/truth/issues/198\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=143483705\n'}"
1519,"{'code': '154e9fb53bdecc068b394e3450e00197855e52d1', 'message': 'Mark RemovalListener and Weigher as Java 8 FunctionalInterfaces\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=143461582\n'}"
1520,"{'code': 'd9f088a61c80fa47d09ccf05a8c3608a47c5e4c0', 'message': 'Tweaks from shuffling of internal hash functions.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=143402767\n'}"
1521,"{'code': 'ba6e0cb2e18960c3565b80fa15b493d0c0849e19', 'message': 'Fix javadoc errors reported by IntelliJ IDEA.\n\nFixes #2699\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=143271383\n'}"
1522,"{'code': '4003d1a2d6d6d4edca2c9f6ebf4f0bb629d1fc12', 'message': 'Remove more unused imports.\n\nFixes #2698\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=143270574\n'}"
1523,"{'code': '305a4b97c56ca04d7e487c59b21b148479561117', 'message': 'Remove unused imports.\n\nFixes #2697\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=143186380\n'}"
1524,"{'code': 'd2493a9a7d20d484c508ca293b4bf10bf0cca80e', 'message': ""Release @Immutable annotations in common.graph.\nWe've already released them in other packages.\n\nThis uses some of the previously unused imports that would be removed by #2697.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=143185270\n""}"
1525,"{'code': '717a8f10865223ccb0a7168ccfde1d43d541cd5b', 'message': 'Make Maps.toImmutableEnumMap use j.u.f.Function.\n\nFixes https://github.com/google/guava/issues/2694\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=143120572\n'}"
1526,"{'code': 'f40d687ae2a3501c1eab068638f8ab6b1cf872c0', 'message': 'Update Guava README to mention 21.0-rc1.\n\nAlso update headers to ATX style.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=143120092\n'}"
1527,"{'code': '34891e692832c45bdca08bb4168bea1778d98256', 'message': 'Stop qualifying references to local types.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=143116418\n'}"
1528,"{'code': 'c27d09cd654a684375b361f94506419477dd9b40', 'message': 'Consistently use java.util.function interfaces in arguments to Collector factories (https://github.com/google/guava/issues/2694)\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=143114856\n'}"
1529,"{'code': 'e7936c2c38761c81f78323244e5405e826dc50e6', 'message': 'Add a TODO; inadvertently update some copyright dates.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=143076499\n'}"
1530,"{'code': 'f74b9dec6b2447b4e81b555a8f8fe0c37e427eb4', 'message': 'Add a toString() to the Runnable created by Futures.addCallback.  While not typically exposed to the user, the Runnable may still be seen in logging and/or debugging output.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=143062925\n'}"
1531,"{'code': '424695b378bb2eeb7d147a126aa497e0c196243d', 'message': 'Specify that EvictingQueue is FIFO.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=142690159\n'}"
1532,"{'code': '8dac290de1588c158c3eaea84890776a4986c0a4', 'message': ""Fix occasional hangs.\nAlso, include LinkedBlockingDeque in our public tests, since we've required Java 6 for a long time.\nPlus, use static imports, Stopwatch, and Truth, and reformat.\n\nThe cause of the hang is that sometimes we cancel the producer task before it has even begun to execute. Part of the correct fix is probably to wait longer than 10ms, as martinrb has taught me.... But for the moment, let's at least wait for the task to start before potentially cancelling it.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=142670289\n""}"
1533,"{'code': 'dbc3258d66075a766d1a67ca08b8631d617af681', 'message': ""Implement Throwables.getCauseAs(Throwable, Class), which safely casts a Throwable's cause and ensures that the exception thrown on a bad cast has the original exception as its cause.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=142602139\n""}"
1534,"{'code': '14c08642e4048ffc5151d31728404edc6bf2562e', 'message': 'Add a custom gwt serializer for the Range object\n\nFixes #2687\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=142559536\n'}"
1535,"{'code': '4d025889e59ef9fb8e3886ce51cd021022429142', 'message': 'Fix 2 javadoc typos introduced by []\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=142488570\n'}"
1536,"{'code': '5a4d9bc5cd7bac6be3512d57b53960a34904cff1', 'message': 'Inline two vestigial single-use helper methods.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=142479573\n'}"
1537,"{'code': 'a11c1f923c3094717cc3310b2b71f06f08c35d0f', 'message': 'Update Truth dependency to 0.31 and add truth-java8-extension dependency for guava-gwt tests.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=142186596\n'}"
1538,"{'code': 'd4c3c2da7ecaf514c649b836470b6f7d86009c34', 'message': 'Annotate Table and Multiset with @CompatibleWith\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=142164308\n'}"
1539,"{'code': 'f80757d4de5f187ace24ebeb39939396494a23c8', 'message': 'Improve EqualsTester doc\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=142156023\n'}"
1540,"{'code': '586995d7b6afdb680ef63d58f5b225bb6e09aa25', 'message': 'I think this recommendation will go over better. (It happens to be identical to\nwhat we already had on the java 7 branch.)\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=142039672\n'}"
1541,"{'code': '5087f785bed999500743e2775192ffc17d14bce6', 'message': 'guava-testlib: Cover Collections.synchronizedNavigable{Map,Set}().\n\nThe tests only cover regular Navigable{Map,Set} behavior for the\ncase of wrapping a Tree{Map,Set}. They do not test the fact that\nthe wrapper is synchronized.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=141996774\n'}"
1542,"{'code': 'b2c7384b371115007567704de13821972cd562e5', 'message': 'Add {Sets,Maps}.toImmutableEnum{Set,Map} Collectors.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=141945702\n'}"
1543,"{'code': '770ad744831b14cf051242359181ca51c504c97f', 'message': 'Add a ""constrainToRange"" method to constrain a value to a closed interval.\n\nEquivalent to Boost\'s clamp function [1] and numpy.clip [2].\n\nMath.min(Math.max(x, min), max) is much more difficult to read and error-prone.\n\n[1] http://www.boost.org/doc/libs/1_53_0/boost/algorithm/clamp.hpp\n\n[2] https://docs.scipy.org/doc/numpy/reference/generated/numpy.clip.html\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=141944536\n'}"
1544,"{'code': '52013d5724feda8f07c2c30e9cccb85db037b6ed', 'message': 'Fix typos in UnsignedInts docs\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=141936357\n'}"
1545,"{'code': '6fff60802ed6d8157b6178842ff9d164aa0fe928', 'message': 'Add UnsignedInts.{checked,saturated}Cast.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=141789650\n'}"
1546,"{'code': '3f4aec3dda699482bef2c3669e42561dc3b5957e', 'message': 'Make ImmutableMultiset.elementSet() return ImmutableSet.\n\nFixes https://github.com/google/guava/issues/1050\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=141785980\n'}"
1547,"{'code': '17b120d7ec6fb29abf8f128ce270c0c647661e7b', 'message': 'Remove unneeded JSNI from Objects.equals\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=141768910\n'}"
1548,"{'code': 'fc6515d1314c37227e81324806ffd6fb25b8d597', 'message': 'Warn about upcoming deprecation of Multimap static factory methods.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=141596365\n'}"
1549,"{'code': '5a42baf73ca755366e9aeff5567b2ef70d891852', 'message': 'Add a disclaimer to Files/MoreFiles.getFileExtension that clarifies that it is unable to account for filesystem-specific quirks and instead only uses the information available in the File/Path API.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=141517772\n'}"
1550,"{'code': '67405979835b19d0f1da463a7de005cebd4ff053', 'message': 'Stop scaring Cache.asMap() users away from new Java 8 methods, which Louis made\nwork really well long ago.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=141456649\n'}"
1551,"{'code': 'ff620804b0f6c89c7c168b692b0c98d7110623f4', 'message': 'Update Public Suffix List.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=141369309\n'}"
1552,"{'code': '04a28f4dd88f2c8ad85becb3d375cced2d6c86ad', 'message': 'Add set-arithmetic operations to ImmutableRangeSet, as discussed in\n[]\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=141337779\n'}"
1553,"{'code': '1684cbd29c26cfb6254b8781936a242fd3a3fc2c', 'message': 'Annotate Graph and Network with @CompatibleWith as appropriate.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=141267927\n'}"
1554,"{'code': 'f81aa2d4ebdd92d2594989eabce878b60327e8a4', 'message': 'Annotate Multimap with @CompatibleWith annotations to enforce type-compatibility with keys and values as appropriate.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=141203238\n'}"
1555,"{'code': 'e4981dbeef1b44771c27e9c13d5ee4177b3453c8', 'message': 'Remove non-interface methods from Multimap implementations.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=141187597\n'}"
1556,"{'code': '2a14314eb4a1fd64b5fadbef3a35a7b8fa4d3fce', 'message': 'Remove non-interface methods from TreeBasedTable implementations.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=141187443\n'}"
1557,"{'code': '20dbb7318d6a3da8111ce2299e840d7baded8f66', 'message': 'Add Reflection annotation to j.c.g.common.util.concurrent.AbstractFuture for j2objc compile, in order to strip all other transpiled java reflections.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=141119133\n'}"
1558,"{'code': '15b547abb7015069bb464833a72f433d82b83829', 'message': ""Add toJavaUtil instance method, which is handier and also doesn't have to be\nmarked @Nullable.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=140905873\n""}"
1559,"{'code': '397d2a62c4cdbf37e22b303acc7800b14a3c4534', 'message': 'Fix iteration+removal bug for reference-equal objects\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=140849556\n'}"
1560,"{'code': 'e7e4c5f115ca3edf6d126f3dd2682a54d7305cdb', 'message': 'Adds @RetainedWith to ImmutableSet.asList to prevent the reference cycle from\ncausing leaks in Objective-C.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=140738410\n'}"
1561,"{'code': '526ba0d4b72902cc1d4a2430c57fa56565f60453', 'message': 'Update Public Suffix List.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=140673519\n'}"
1562,"{'code': 'adce8999989d80c80fda3607dac324cbd47681c1', 'message': 'Fail more clearly when escapers run out of buffer space.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=140383461\n'}"
1563,"{'code': '2ef955163b3d43e7849c1929ef4e5d714b93da96', 'message': 'Fix two bugs in MinMaxPriorityQueue (introduced in [] First is a bug in removeAt(int) that sometimes causes the wrong element to be removed. Second is a bug that sometimes causes certain elements to be iterated over more than once if elements were removed during iteration.\n\nReported externally at https://github.com/google/guava/issues/2658\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=140382230\n'}"
1564,"{'code': '16e3f26fd31ced35fa8a71ab2b1091ce9157a90f', 'message': 'Add Booleans.{true,false}First.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=139831226\n'}"
1565,"{'code': 'f67ab864bde63fa6602b5688de0440957ffeaa2e', 'message': 'Remove methods scheduled for deletion in Guava 21.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=139609575\n'}"
1566,"{'code': 'd773e9f04c5b099b52cde43d37d8d9a21ebf0e3d', 'message': 'fix typo\n\n""by"" -> ""be"" (3x)\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=139481101\n'}"
1567,"{'code': '3d81db1ab25f05be167d7a1b6e0fbe7a5d2b236b', 'message': 'Add more docs on the relationship between c.g.c.c view methods and Streams.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=139396264\n'}"
1568,"{'code': '17784aebfdd7c24f5476352361f5e87867a247a4', 'message': 'Add flatteningToMultimap collectors.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=139360343\n'}"
1569,"{'code': 'fb7fb7d39fc523d6f5ddd109250c153effdc776d', 'message': 'Migrate last users of ForwardingTestCase and delete it.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=139349868\n'}"
1570,"{'code': '77a57f215fb6eb5a2c982ac1843299f21deb53d3', 'message': 'Use ForwardingWrapperTest to simplify last round of ForwardingTestCase subclasses.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=139318347\n'}"
1571,"{'code': 'bd3633c4f98b8545c968356c73de18164abe07a2', 'message': 'Use ForwardingWrapperTester to simplify a few more Forwarding*Test.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=139121126\n'}"
1572,"{'code': '0e2a6cb0fd2f5d95f58f63867d6ff2ff36505b8e', 'message': 'Override Multiset.size() to clarify add additional javadocs.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=139078681\n'}"
1573,"{'code': 'e6541799ee6fcae412645075fabb5ea65fd07d49', 'message': 'Suppress warning for modification of immutable collections\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=138927630\n'}"
1574,"{'code': '1e63909061cc0391c2ec91d7ba985fb0be9a75e7', 'message': ""Use GWT's provided Arrays.copyOf and Arrays.copyOfRange where\npossible\n\nFixes #2635\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=138921292\n""}"
1575,"{'code': '98f3b6ae48e3067f0b51e643d52fbb6b503365e8', 'message': 'Document and deprecate mutations on SetView, which already documents its unmodifiability, as suggested by cushon@.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=138920681\n'}"
1576,"{'code': 'e38225a3c2a2c611aefe00dd8a40f8eed97cc2f3', 'message': 'Reflect Navigable* support in GWT in TreeMultimap.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=138910015\n'}"
1577,"{'code': 'cd00291bea68804ec55415ce845cafd983c7bdc3', 'message': 'Use ForwardingWrapperTester in Forwarding*MultimapTest.\n\nForwardingObjectTester is a convenient thin wrapper around ForwardingWrapperTester. But it uses mockito and lives in common/util/concurrent, so not used here.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=138905486\n'}"
1578,"{'code': '6b1046fbe17c1e40f554df906973a57b28d72e42', 'message': 'Include java.lang.Lang from java.util.Util.\nThis is necessary now that our java.util contains classes that use java.lang.InterruptedException.\n\nIn short:\n\nBefore:\n<module>\n <super-source path=""super""/>\n</module>\n\nAfter:\n<module>\n <super-source path=""super""/>\n <inherits name=""java.lang.Lang""/>\n</module>\n\nFixes https://github.com/google/guava/issues/2638\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=138904012\n'}"
1579,"{'code': '9d028d0014840f295c35e1edd85e049d561864a3', 'message': 'Add @Beta to the ImmutableTable collectors.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=138675494\n'}"
1580,"{'code': 'cd9a472e2588ec53109be8a1927cd4cb2af0f0d6', 'message': 'Add mutable Table collector to Tables, including a version with a merge function to match Collectors.toMap and ImmutableMap.toImmutableMap.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=138673160\n'}"
1581,"{'code': '503d6949e44f31c6cd9de77c8385947add8e20b9', 'message': 'Add a value-merging collector for ImmutableTable.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=138670433\n'}"
1582,"{'code': 'c2641e083e31fdbd9c09b33ca6a3546f5f69fe28', 'message': 'Add mapWithIndex overloads mapping IntStream -> Stream, etc.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=138666464\n'}"
1583,"{'code': '0c2cd39185c3dac8a3ae5f3c3289e77e1c2356ff', 'message': 'Improve the Spliterator of Multimap values-for-key collections.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=138553300\n'}"
1584,"{'code': 'a6db51da4bf3c8e521929ae82ab229974c1bc2cb', 'message': 'Make some AbstractMapBasedMultimap helper methods static.  (As part of the process, make Sets.unmodifiableNavigableSet GWT-compatible, as NavigableSet is no longer an issue.)\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=138550340\n'}"
1585,"{'code': '3dcc44d755609ad760ab2d885efb5a0d952e3e48', 'message': 'Fix some typos in guava-[gwt,testlib,tests]/*\n\nFixes #2630\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=138514647\n'}"
1586,"{'code': 'bab5273ad9903ddffd4a748924374246ebb441ec', 'message': ""Automated g4 rollback of changelist 56995761.\n\n*** Reason for rollback ***\n\nUse Preconditions in primitives checkedCast methods, as [] renders the change in [] unnecessary.\n\n*** Original change description ***\n\nDon't use Preconditions.checkArgument in primitives checkedCast methods, as it boxes for what should be a very fast method.\n\n***\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=138467875\n""}"
1587,"{'code': '0c769144624136bddc00c9f1c1f4bfdbd3f4ce31', 'message': 'Warn about overriding Converter.reverse().\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=138458677\n'}"
1588,"{'code': 'a707ddc0e363aad68824b79e288f6b863a1579fd', 'message': ""Update link to GWT docs that died with Google Code.\n\nThe best substitute I've found is a commit diff email.\n\nThe copy of the page carried over from Google Code to Github doesn't include the relevant information, and it didn't come with history:\nhttps://github.com/gwtproject/old_google_code_wiki/commits/master/ResourceOracle.wiki.md\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=138424761\n""}"
1589,"{'code': '59bb189b0b06ddaf28c4df833879a645746ca210', 'message': 'Defer overlap checking in ImmutableRange{Set,Map}.Builder to the build() call, which matches the behavior in ImmutableMap.Builder and allows significantly faster handling of the case where ranges are inserted in predictable order.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=138415685\n'}"
1590,"{'code': '709624fafd1540fc1d8144794fa86fb890f0d303', 'message': ""Go back to Collections.sort() instead of List.sort() to eliminate difference\nbetween forks, since the former just delegates to the latter anyway.\n\nBasically rolls back the part of []that wasn't already\ncorrected.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=138232524\n""}"
1591,"{'code': '90434a14edfbbd2487f1a28b195556f3302e68b2', 'message': 'Note that Guava for Java 8 is coming.\n\nI guess we\'ll update this again -- possibly along with the Github tagline (""...for Java 6+""), editable (only?) straight from the Github UI -- when we actually release 21.0.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=138213797\n'}"
1592,"{'code': '700b11a874766945967f37501ed364ac07632ac5', 'message': 'Open source Comparators.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=138197361\n'}"
1593,"{'code': 'aa06fbd86fd3d0447733202f6a4dc8b3f83ddfb4', 'message': 'Make SloppyTearDown.logger private.\n\nFixes #2624\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=138190467\n'}"
1594,"{'code': '86fb7001aecb8954dd15ee3c64e7172b4a6e512a', 'message': 'Automated g4 rollback of changelist 138114495.\n\n*** Reason for rollback ***\n\nThese type inference errors seem to be fixed by using a newer JDK8 version.\n\n*** Original change description ***\n\nFix JDK8 compilation errors in non-test code.\n\n***\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=138189338\n'}"
1595,"{'code': '10f56d4cf475aaaa9a94d64b0c9e7495c43fcbc0', 'message': ""Continue uploading snapshots now that we're building only with JDK 8.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=138189249\n""}"
1596,"{'code': 'b43760617011dff5424ff301290ce67bca68c891', 'message': 'Remove a redundant statement in TreeRangeMap.remove().\n\nFixes #2167\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=138184740\n'}"
1597,"{'code': 'fd0d6822a449003f5c74ddbf2e0351397f20cdce', 'message': 'Use a newer JDK 8 for travis build\n\nThe travis docker image uses JDK 8u31, which is ancient and has type\ninference bugs that are fixed at head. This change causes it to use\n8u111 instead:\n\nFixes #2625\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=138184449\n'}"
1598,"{'code': '8665e6d9325ed091346081c7a21871d58a9c04be', 'message': 'Fix ForwardingMultimapTest\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=138184166\n'}"
1599,"{'code': 'c34433a6d6062ffb23eb3878355024ae08517495', 'message': 'Fix links to javadoc.io for Maven Javadoc Plugin\n\nFixes #2479\n\nFixes #2628\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=138184010\n'}"
1600,"{'code': 'a70ab0168d75db566d7e974220a0d0b17e514cf8', 'message': 'Simplify some Table implementation details.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=138116540\n'}"
1601,"{'code': '69f8837408af6a4e52c2f2baf0c5e6744e3b9b42', 'message': 'Add Multimaps.toMultimap(keyFunction, valueFunction, multimapSupplier) collector.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=138115283\n'}"
1602,"{'code': '9a3b74501c70289a46fbc09f137990e21bb35423', 'message': 'Fix JDK8 compilation errors in non-test code.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=138114495\n'}"
1603,"{'code': '85eba51dc93caabd074c8e0e7a5ddde8ec8f1108', 'message': 'Change travis config to not try to build on JDK7.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=138107654\n'}"
1604,"{'code': '73e382fa877f80994817a136b0adcc4365ccd904', 'message': ""Release Java 8 changes to Guava.\n\n(Note: This will break the public Guava GWT tests. We'll come back to fix them.)\n\nFixes https://github.com/google/guava/issues/2585, https://github.com/google/guava/issues/2479, https://github.com/google/guava/issues/2029, and probably various other issues :)\n\nAlso relevant: https://github.com/google/guava/issues/2591\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=138100073\n""}"
1605,"{'code': 'd4593835188550859a05537676d01944fa2eab01', 'message': 'Removes unnecessary (and unsafe) @Weak annotation that is causing crashes on\niOS.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=138077107\n'}"
1606,"{'code': 'db72cd2ba6e4e6026f769bda5dc2160e0b54ba41', 'message': 'Fixes a reference cycle between WeakValueEntry instances and their\nWeakValueReference.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=137989327\n'}"
1607,"{'code': '19db9fa37c74be9762ba22b8b6105dcda6b9d9c6', 'message': 'fix warning on eclipse\n\nFixes #2621\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=137977709\n'}"
1608,"{'code': '0bab3764871d492f736d487eb45b7010e8c8f080', 'message': 'Fix typo in comments\n\nFixes #2166\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=137968297\n'}"
1609,"{'code': '3365f88e3bd761ea88a1324b0fbd9628bf261c57', 'message': ""Remove emulated=true.  The class no longer needs to be emulated since there's nothing GwtIncompatible in it.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=137960451\n""}"
1610,"{'code': '0f3f53a1f51495023a8552df6db25ac8ed44ae2e', 'message': 'Add @since for Interners.Builder.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=137843495\n'}"
1611,"{'code': '7108582d5dd3b7ce7e6fce53b9407591bfcea17c', 'message': 'Make Ints.{to,from}ByteArray GWT compatible.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=137840276\n'}"
1612,"{'code': 'c414be307af45d8197f3d8b2db256cb369f948af', 'message': 'Fix some typos in guava/*\n\nFixes #2618\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=137827424\n'}"
1613,"{'code': 'ef386251e5cc485fb72890fff67830340635e44b', 'message': 'Introduce InternerBuilder, which allows tweaking of the concurrency level of the to-be-built Interner.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=137825551\n'}"
1614,"{'code': 'c5231cfd14de78cd50099e095798fba6726cbe9e', 'message': ""fixes serialization errors when serializing a\nRegularImmutableAsList\n\nthe issue occur when ImmutableList is included in gwt's serialization\npolicy and ImmutableSet not and a list created by ImmutableSet.asList\nneeds to be serialized\n\nFixes #2614\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=137724815\n""}"
1615,"{'code': '55524c66de8db4c2e44727b69421c7d0e4f30be0', 'message': 'Fix #1190\n\nBefore this fix, splitting a single character input string with a\nSplitter.onPattern instance created with a zero-width regex pattern,\nwould have caused the input string to be dropped from the output,\nresulting in an empty iterable being returned rather than a single\nelement one.\n\nThis fix ensures that the input passes through untouched.\n\nFor example, whereas before in this code snippet, \'words\' would have\nbeen initialized as an empty iterable...\n\n   String string = ""f"";\n   Iterable<String> words =\n       Splitter.on(Pattern.compile(""\\\\b"")).split(string);\n   // words is empty!\n\nFixes #2615, #2086\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=137723825\n'}"
1616,"{'code': '5367a2d0687ec4c1901f693559cd4d2d14ca65d1', 'message': 'Add ImmutableList.sortedCopyOf.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=137571509\n'}"
1617,"{'code': '40cd7fcba0ab317f106c9a59114964a5a643f6aa', 'message': ""Fix the extra space that shows up in ValueGraph's javadoc summary.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=137559829\n""}"
1618,"{'code': '29c8c65e6e8138b30a45eda1177e4305b7f65499', 'message': 'Fix a couple things in README.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=137558251\n'}"
1619,"{'code': '128b7f932530a1d0772f143b98872d91ee32cc14', 'message': 'Fix link to Release 20\n\nAlso remove the no-longer-needed link to v20-rc1.'}"
1620,"{'code': '93f58c7358fd0c604b58cba7b7dd73b5208af0ef', 'message': 'Update README to point to 20.0 as the latest release and update version numbers to 21.0-SNAPSHOT.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=137552649\n'}"
1621,"{'code': '166af44043222077630027e4a935cb9462de5bd6', 'message': 'Migrate from deprecated Guava APIs to replacements:\n Objects.firstNonNull() -> MoreObjects.firstNonNull()\n Objects.ToStringHelper -> MoreObjects.ToStringHelper\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=137538755\n'}"
1622,"{'code': '9b494fbe1983f7bb49312d307b5da01f954c03d0', 'message': 'Mark Utf8 as emulated, since it has @GwtIncompatible methods.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=137532973\n'}"
1623,"{'code': '5a5a6cf012b5bc4638f75fdf9d975086f0161c12', 'message': ""Make Forwarding[Listenable]Future GwtCompatible.\n\nThey were marked with GwtIncompatible, but I do not think there's any reason to apply such a restriction.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=137515337\n""}"
1624,"{'code': 'd330fc7f880b49e9d45a44e7650d95a6f7afbe23', 'message': 'Make AtomicLongMap serializable.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=137404691\n'}"
1625,"{'code': '673e20eead5344f346357d58ea590dd67b44708f', 'message': 'Fix links to murmurhash3.cpp\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=137404185\n'}"
1626,"{'code': '6b20d80ef7c21dcef3778d43ee54e7a7e9dec881', 'message': 'Start on documenting Iterables to explain the connection to Streams.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=137220845\n'}"
1627,"{'code': '4cdc40b1b583b410ab7c89ebab9dc9c4ca5861e1', 'message': 'Shuffling from internal-only change.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=137207933\n'}"
1628,"{'code': 'e102fa4a86dad34f375e06c8ce0f52ea264588c3', 'message': 'Lint Javadoc for HTML and syntax, and fix errors.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=137191293\n'}"
1629,"{'code': '790362755a65efab7c0133060e6f2bded4d6c9a9', 'message': 'Fix bad Javadoc tags.\n\nFixes #2610\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=137186740\n'}"
1630,"{'code': '3978c76e0d8aa8018266c6f6581a7a3064c37a9f', 'message': 'Update to GWT 2.8.0\n\nFixes #2608\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=137183524\n'}"
1631,"{'code': 'a0d7cb868e63d0504764c9fa329ebe6664369280', 'message': 'Shuffling from internal-only change.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=137176212\n'}"
1632,"{'code': 'f809a6c794bbef61241905e5cda04316a4a694c0', 'message': 'Graph[Builder].java et al.: fix representation of angle brackets in Javadoc.  *sigh*\n\ncgdecker@, we will need to cherrypick this one too for the v20 release.  :(\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=137161301\n'}"
1633,"{'code': '6a3ec685306baefba7e78c0b18cb43771b2ad34d', 'message': 'Move ForwardingBlockingDeque into c.g.c.u.c.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=137071571\n'}"
1634,"{'code': '3637f153e2ed42670583ba07e8dac680f3917f90', 'message': 'Update to GWT 2.8.0-rc3.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=137051387\n'}"
1635,"{'code': 'c91323f873e93f88d9f30b5e503f72a11e1f0486', 'message': 'graphs_explained.md: file being added to facilitate reviewed changes to https://github.com/google/guava/wiki/GraphsExplained.\n\nIncludes updates to the top-level graph type class Javadoc also.\n\nReplaces ""iff"" with ""if"" throughout common.graph, to address GitHub issue #2605.\n\ncgdecker@, this is going to need to be cherrypicked for the final release.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=137047779\n'}"
1636,"{'code': '9b4c062c1a588509d3948fef8170ee400d3b145b', 'message': 'Make Charsets.ISO_8859_1 GwtCompatible.\nAlso run google-java-format over the files.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=136764462\n'}"
1637,"{'code': '95d622574fe3236777c6c9649e1044bd01178122', 'message': 'Add JDK Deque implementations to Queue tests.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=136755080\n'}"
1638,"{'code': '079c5100feb1356c99e0b6642b6b84e7fbccca3a', 'message': 'Stop stripping @LazyInit annotations.\nThe annotation has been released in public Error Prone.\n\n(roll forward of CL 136160211, which was rolled back in CL 136171136 because of a problem fixed in CL 136350404)\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=136589788\n'}"
1639,"{'code': '87eb1b59bc3316c85067d5d9c404c3d6e5b835f0', 'message': 'Update Public Suffix List.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=136425689\n'}"
1640,"{'code': '7970182d52338b1b1517479ee2e007f1c318be23', 'message': ""Prepare for Public Suffic List update, which removes the '!' rule that this file was using.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=136359859\n""}"
1641,"{'code': 'ae80b8af934d280bd739f24959f7468a1ef5c077', 'message': 'Fixes a documentation error regarding the return type/value\n\nFixes #2604, #2599\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=136357364\n'}"
1642,"{'code': '55acb1dc34f07d029d8a73378a981c1f94c92b9e', 'message': 'Shuffling from internal-only change.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=136201585\n'}"
1643,"{'code': 'f30f6b907bb40e7c9d1075205896fe83b5b1bcdb', 'message': 'Optimize allocation in nonCancellationPropagating\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=136179307\n'}"
1644,"{'code': '62ea465e4f0bc0cf79f4cee0cb5cc6a56576de52', 'message': ""Add @SafeVarargs to some methods Lists.\n\nI'm also removing a couple of casts from Ordering<Comparable> to raw Ordering which were causing warnings and didn't seem necessary.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=136176905\n""}"
1645,"{'code': 'd67899df652c8a889c578a53a639d4c399925e2c', 'message': 'Update the Guava tagline on github.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=135846196\n'}"
1646,"{'code': '0915b414d10d0737ac8fbd4819462d8141a09c8d', 'message': 'Allow MemoizingSupplier to release its delegate to the GC where possible.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=135792840\n'}"
1647,"{'code': 'dbf37a8b12159763f7721ea79644de9080d53e99', 'message': 'Add new RangeSet methods accepting Iterable<Range<C>>.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=135723032\n'}"
1648,"{'code': '4f87e773ef3e99c83f224d7f94f961690e073b95', 'message': 'Suppress an intentional type mismatch.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=135710548\n'}"
1649,"{'code': '337f44c1677ae628e4d218ce9260c59a2f518976', 'message': 'As currently defined, the hashcode of every unordered EndpointPair which is a self-loop is zero! This is particularly not good for graphs with many self-loops, such as the transitive closure graph, where every node has an incident self-loop. Change hash to use + instead of ^ (this still preserves the property of symmetry, even with overflow).\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=135539805\n'}"
1650,"{'code': '0d43a8f7cfc8d5f1c7aa363f5191e5d213e08d9b', 'message': 'Bring over some API documentation from []\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=135513835\n'}"
1651,"{'code': 'fe8d349aa0dd8d57d65c2ab26ec42285f60ed879', 'message': 'Remove Iterator tester infrastructure, which has never had any real tests.\n(We do perform IteratorTester-based testing through CollectionIteratorTester and ListListIteratorTester.)\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=135501101\n'}"
1652,"{'code': '536aeaa802fbfe1c53209bc6422976adf5b48ad8', 'message': 'Shuffling from internal-only change.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=135500956\n'}"
1653,"{'code': 'ecabb5e5944271d31a93b0054f548da40a9c01f3', 'message': 'Updated Guava README to mention Guava 20.0-rc1.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=135492007\n'}"
1654,"{'code': 'd495460c48e05e635db1aa604befd534f15c582b', 'message': 'Add @since 20.0 to BaseEncoding.canDecode.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=135482744\n'}"
1655,"{'code': 'b0b302c0853f78df97ba9673082bca191c091fe7', 'message': 'Delete constraints APIs.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=135480846\n'}"
1656,"{'code': '3d7c23f11a8a4541daf7cdf3461af97364b054bc', 'message': 'Rewrite MutableClassToInstanceMap to avoid using ConstrainedMap.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=135408484\n'}"
1657,"{'code': '48daa0a71422bf38fb08f9149df614d411a8192f', 'message': ""Skip GWT tests on Travis.\nThey're just too slow.\n\nFixes https://github.com/google/guava/issues/2568 once and for all, maybe.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=135244971\n""}"
1658,"{'code': 'ce76b8eaf4c623d61ed73c64e4fbb22907cadee4', 'message': 'No need to disable doclint completely. Disabling high-level\nHTML issues should be enough\n\nFixes #2523\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=135244931\n'}"
1659,"{'code': 'c3e538694c8f055cc57e50ac49be091bef58d8bb', 'message': 'usage of American English spelling for ""license""\n\nFixes #2590\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=135244865\n'}"
1660,"{'code': 'ca9c3513be29aa84a054e1c6a322dbbbbc4beda5', 'message': ""Remove stale links from 'Learn about Guava'""}"
1661,"{'code': '3cb09d1e686400d1d70e0280bb13e41535290281', 'message': ""Update removal target for APIs that should be removed in 20.0 but which actually won't be.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=135140462\n""}"
1662,"{'code': 'adc36ab47b87696e794d4cc63760dfb02c1c0365', 'message': 'Update Mockito version to 2.1.0\n\nFixes #2588\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=135139422\n'}"
1663,"{'code': '3e3da1d3dea1081b2134546a973e1e5e7ce90a01', 'message': 'Fix typo in ValueGraphBuilder.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=135057781\n'}"
1664,"{'code': '5c3454a2d87ac27d381653747916b4a369dc6b52', 'message': 'Fix particularly unfortunate typo in ValueGraph javadoc.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=135011464\n'}"
1665,"{'code': '782eac76781420dbecf4aa1031d718eb375c7a96', 'message': 'Migrate users from HostAndPort.getHostText() to HostAndPort.getHost().\nThese methods behave identically, but the former name is deprecated.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=134844363\n'}"
1666,"{'code': 'd70b2b3d9ee90922ee382d2144c51310320af4a6', 'message': 'Implement edgeValue() via edgeValueOrDefault() instead of vice versa. For edgeValue() this is the same efficiency, but makes edgeValueOrDefault() perform fewer hash lookups.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=134820696\n'}"
1667,"{'code': '845a2b5b046ea3de2848f27288864d3d1977ea1e', 'message': 'Remove ancient `@Beta` annotations, making these APIs ""final"".\n(They can still be removed via 2-year deprecation cycle.)\nAlso touched up a bit of javadoc here and there.\n\nHonestly, which exact libraries I chose to debeta in this CL are somewhat\nrandom (though leaning toward older things).\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=134817353\n'}"
1668,"{'code': 'ee94a94f524c1a7a5e916b023449b650b0af33b3', 'message': 'Replace unnecessary StringBuilder calls with String concat\n\n(Roll forward the part of CL 134687034 that was rolled back in CL 134695981. The j2cl bug has been fixed.)\n\nFixes #2582\n\nTested:\n[]\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=134792990\n'}"
1669,"{'code': 'e6f030b4afda2f4ac54a3f36c3d0e8b738772576', 'message': 'Remove CharacterFilter(BitSet) along with CharMatcher.fromBitSet, which was introduced as a temporary helper for the migration.\n(partial rollback of CL 132688558, plus some additional changes)\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=134770507\n'}"
1670,"{'code': '58986e98ddc00501be697faef89c8ac454b94ac5', 'message': 'Apply a handful of automated ""returns @Nullable"" suggestions.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=134770298\n'}"
1671,"{'code': 'be55ffa1284e56bb0a168a144b35b0b394da375d', 'message': '(partial) Automated g4 rollback of changelist 134687034.\n\n*** Reason for rollback ***\n\nj2cl bug?\n[]\n\n*** Original change description ***\n\nReplace unnecessary StringBuilder calls with String concat\n\nFixes #2582\n\n***\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=134695981\n'}"
1672,"{'code': '7dc13685f02c853bd05a8af57bc4c1aae230e630', 'message': 'Remove reference to a deprecated method\n\nFixes #2580\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=134689299\n'}"
1673,"{'code': 'e0fb7507e53e7a641935d2e24bfc687f9f2028da', 'message': 'Remove unused imports\n\nFixes #2583\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=134687038\n'}"
1674,"{'code': '3d8cbb3170deed81ee18db835c8481e0a73b2ffa', 'message': 'Replace unnecessary StringBuilder calls with String concat\n\nFixes #2582\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=134687034\n'}"
1675,"{'code': 'd69c143db45cfa4a5650e78dfbc9aa79233bfd29', 'message': 'Apply IntelliJ-suggested language feature migrations.\n\nAll code which initializes an IOException with a cause exception now uses the appropriate constructor (which was introduced in Java 6), rather than initCause. Since Guava now depends on Java 6, this is a safe change to make.\n\nFixes #2581\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=134684204\n'}"
1676,"{'code': 'a05019e9d933c60395526afa6f657dcdcfb87c68', 'message': 'Remove redundant String.format call\n\nFixes #2584\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=134682786\n'}"
1677,"{'code': '7e751d1fd186317ac1ee1381e069b56ccaa65a48', 'message': 'Change some javadoc to reference node U and V in the context of connectivity (to be consistent with methods on EndpointPair).\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=134464648\n'}"
1678,"{'code': 'b60f02fc3553cf071fd9a4bf9c1e26b7d83c0467', 'message': 'Use an anonymous class for AbstractGraph.edges() This was changed recently ([] because of some planned changes we ended up going a different direction with, so now I think it makes more sense inlined.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=134453666\n'}"
1679,"{'code': '69496f5940ae16ffafe7ab5102dc6fe04937490a', 'message': 'Update Mockito version to 2.1.0-RC.1\n\nFixes #2567\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=134425972\n'}"
1680,"{'code': 'c6a92d7fcc762a200edd1731771db06bab30ea92', 'message': ""Tweak Network.edgesConnecting() javadoc so people don't think it returns a path of edges.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=134419709\n""}"
1681,"{'code': 'ed30c57898385fad5d862414c264244ee35f0e5d', 'message': 'Add paragraph to javadoc for Network.edgesConnecting().\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=134408815\n'}"
1682,"{'code': 'f02ea7e285d73bb13fe02a4a05802b4710fa3d44', 'message': 'Add edgeValueOrDefault() method to ValueGraph interface, and remove Map-returning edgeValues() for now. This CL effectively rolls back []\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=134341213\n'}"
1683,"{'code': 'b1929feeb03a96c2ad420f0965e8f3bda530b365', 'message': ""Assorted cleanup of cancellation:\n- Eliminate our overrides of interruptTask() (other than one in a test of interruptTask()).\n- Make cancel() final under GWT.\n- Simplify a few tests.\n- Add or improve boilerplate comments about visibility of fields.\n\nWe will likely not be able to make cancel() final in general (even if it weren't for our backward-compatiblity guarantees), thanks to certain usages.\nI had hoped that maybe we could in FluentFuture. I suppose that we still could, since we'll offer FluentFuture.from(ListenableFuture), and anyone who needs to override cancel() could override it in the delegate.\n\nhttps://github.com/google/guava/issues/1905\nhttps://github.com/google/guava/issues/2075\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=134216985\n""}"
1684,"{'code': '267fac11a42ad56158ff9f6158a0a8a36223ed86', 'message': 'Javadoc improvement(?) pass to Function/Functions. To be continued.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=134125361\n'}"
1685,"{'code': '11628dd9c1d1cce954a15d46079abbc5e74ceced', 'message': 'Increase more timeouts to reduce test flakiness, as in CL 133260276.\n\n[]\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=134086982\n'}"
1686,"{'code': 'c7e634a022749035909b851557f04ae7f5dd7b35', 'message': 'Increase GWT timeout again.\n\nhttps://travis-ci.org/google/guava/jobs/161959726#L5083\n\nFixes https://github.com/google/guava/issues/2568 again, hopefully.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=134086956\n'}"
1687,"{'code': '0e19548257d527d7ba8ef01cc6c2255377c67467', 'message': ""Fix comment that had gone out of date.\n\nThis used to be true:\n[]\n\nBut it hasn't been for a long time:\n[]\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=134001575\n""}"
1688,"{'code': '2ee096111a29f2d5637b93fafc99bd541faead19', 'message': ""Remove a stray 'the'.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=133962640\n""}"
1689,"{'code': 'e9522d04f7c9ebf4549cd4017b0d9fa520b5a2b4', 'message': 'Fix a typo.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=133909277\n'}"
1690,"{'code': 'b0babb69b05ed4d15cce74635ae96cf8ba78c85f', 'message': 'HostAndPort.java: Deprecate getHostText() in favor of getHost().\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=133907054\n'}"
1691,"{'code': '98fc976258eb6b37adb78528b003e4eb09ea8dae', 'message': 'Update GWT deps to 2.8.0-rc2.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=133854841\n'}"
1692,"{'code': 'c298e2dcfed6c3f42407477b9fc6fc5094d88468', 'message': ""Bump Travis timeout. It's still too low, e.g.,\n\nhttps://travis-ci.org/google/guava/builds/161636738\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=133848972\n""}"
1693,"{'code': 'ff41ff1ee2133b47ab413a28f006c28a1f9ec2ef', 'message': 'If File.exists throws an exception when constructing a ClassPath instance, ignore that entry in the classpath rather than propagating the exception.\n\nFixes https://github.com/google/guava/issues/2390.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=133844760\n'}"
1694,"{'code': '1ef01141f1e62dd157d401e24a152d2b3f5114d9', 'message': ""Put scary doc on hashString and less scary doc on hashUnencodedChars.\n\nI've based the doc on what we currently have in the Hasher class doc.\n\nMotivation:\n[][]\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=133835490\n""}"
1695,"{'code': 'cb3a29fb67936c2bc52b1cfee08cedab62950282', 'message': ""Remove the offset and size fields from RegularImmutableList.\n\nThese seemed to be designed to create a faster sublist(), but our base\nimplementation of sublist seems likely to be quite similar in performance.\nPlus by eliminating these fields we:\n\n* eliminate a preconditions check and extra field reads on each call to  get(int)\n* save 8 bytes for the fields (and maybe more for alignment on some platforms)\n\nThis design seems to be from the very first version of RegularImmutableList and there don't appear to be benchmarks covering ImmutableList.get(),  so this change is somewhat speculative.  I'm curious what your thoughts are.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=133794845\n""}"
1696,"{'code': 'c1b7bf5e39bd7483dc3925a14eb546a89a00ea1e', 'message': ""Use ArrayDeque and PriorityQueue under GWT (where they're newly available), and provide synchronizedQueue, synchronizedDeque, and MinMaxPriorityQueue there.\nThis also lets us delete our manual implementation of TreeTraverser and avoid LinkedList internally.\n\nFixes #2545\n\n(Roll forward CL 131198531, which was rolled back in CL 131218608 because of a GWT bug that has since been fixed.)\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=133714567\n""}"
1697,"{'code': 'f3118bffc136c93f0d85ee929f7262e0b2d700e2', 'message': 'Tell Travis to wait for Maven to finish.\n\nCurrently, it times out:\nhttps://travis-ci.org/google/guava/jobs/161103688\n\nFollowup to CL 133592825, which it turns out effectively converted a silent timeout (https://github.com/google/guava/issues/2568) to a noisy one.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=133612375\n'}"
1698,"{'code': '8025f5489b0cea538ada78f8c6590292d4ae461d', 'message': 'Increase GWT test timeout.\nApparently the GWT Maven plugin considers tests to have succeeded if they time out!\n\nFixes https://github.com/google/guava/issues/2568\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=133592825\n'}"
1699,"{'code': '6ded67ff124f1be4f318dbbeae136d0c995faf37', 'message': 'Small refactor of AbstractGraph.edges() (move to inner class instead of anonymous class).\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=133384196\n'}"
1700,"{'code': '69fe97fdf4a0d8e3e4cdaa392e66e8dc2e08821b', 'message': 'Some cleanup in EndpointPairIterator.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=133383011\n'}"
1701,"{'code': '8c03af3ba66ceca0c99007c6931c16cd82a6eb0b', 'message': 'Delete MapConstraints.notNull()\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=133379674\n'}"
1702,"{'code': '4fed015b8a30a7453b61d4ff3bbf777d6a0b2abe', 'message': 'Remove Constraint stuff from package-info.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=133300878\n'}"
1703,"{'code': 'a01a16a72597d635805b1f28b61c3a4a72cb6e33', 'message': 'Some additional test coverage for undirected graphs + minor cleanup.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=133282385\n'}"
1704,"{'code': '2d9d38c335bc38adc7045c90283f8e4f90048b6e', 'message': 'Create TreeTraverser.using().\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=133270986\n'}"
1705,"{'code': '881a0cc8322d3147ae1c11b8bdf3cc6baed04a77', 'message': 'Delete MapConstraints.constrainedMultimap()\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=133265325\n'}"
1706,"{'code': '7009118a0601ea3a2ff2629d10e47c3138078f55', 'message': ""Make flaky test less likely to flake.\nThe test currently fails if a thread stalls for more than 50s. I've increased that to 9999ms.\n\n[]\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=133260276\n""}"
1707,"{'code': 'e7700e6f78d9594d1ee37d43bf4e0aa1e58b4e7a', 'message': 'Fix another typo in javadoc.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=133213816\n'}"
1708,"{'code': '152bf28cade06c33587779dba1c2f0f88f1db815', 'message': 'Fix typo in javadoc.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=133213802\n'}"
1709,"{'code': 'c462d69329709f72a17a64cb229d15e76e72199c', 'message': 'Fix imports in all Guava packages.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=133190481\n'}"
1710,"{'code': 'a6995adad802a7d21a8223916d8dcfd4209e5998', 'message': 'Delete MapConstraints.constrainedSetMultimap() and constrainedSortedSetMultimap()\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=133180608\n'}"
1711,"{'code': 'db98117f5615aa359d5f34deb39bd57884a91491', 'message': 'Delete MapConstraints.constrainedBiMap()\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=133175256\n'}"
1712,"{'code': 'db5b3f59ba55b87685df20aa8b4dd35a820694cb', 'message': 'Avoid using ""i.e."" in first sentence of javadoc so the javadoc generator doesn\'t prematurely cut off the summary.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=133166740\n'}"
1713,"{'code': 'a0f46c92c5c3ba95e9221da930a5970957af456b', 'message': 'Try to explain the Stream equivalent for filter(Class) a little better.\n(And stop caring about the paltry benefits of `e -> e instanceof Foo` over `Foo.class::isInstance`.)\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=133156773\n'}"
1714,"{'code': 'b319db437eaff28841274bb04d4cfbab7327d744', 'message': 'Update an @link in javadoc.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=133143698\n'}"
1715,"{'code': '6662777b4bbe4bb49f3d044281ea1929af38108d', 'message': 'Optimization of RegularImmutableMap.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=133136645\n'}"
1716,"{'code': '8883cd544ef886ecd6c939363490c67d2d1958ce', 'message': 'RegularImmutableSet extends ImmutableSet.Indexed.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=133133513\n'}"
1717,"{'code': 'c93a083e9d0c61170e3c0c9183d558d78322dcd4', 'message': 'Improve docs on the FluentIterable-Stream connection (part 1).\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=133039225\n'}"
1718,"{'code': '850e58bc7e01ef3ec12e64f4198881b3b772a81a', 'message': 'Add some test coverage for ElementOrder.comparator().\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=133024805\n'}"
1719,"{'code': 'c27c6732c9b690f1ae6c8f3fa53e23cebcbc8c85', 'message': 'Prepare for Java 8.\n\nFallout:\n\n1. This temporarily breaks the j2objc cycle whitelist.\nEventually we will provide different versions of it for Java 8 and pre-Java 8.\n\n2. This incidentally disables pluggable regex support.\nEventually we will turn it back on for Java 8 and leave it off for Android.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=132882204\n'}"
1720,"{'code': 'd90dacbc2f750079624cc95734cd0892a1de9016', 'message': 'Fix typo.\n\nFixes #2564\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=133001763\n'}"
1721,"{'code': '7d8b71c29b5ee1117cf65ac249fff1f809517765', 'message': 'Add another test for Iterables.removeIf.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=132998224\n'}"
1722,"{'code': '201802a2ac0aae761b19ec0ceab7be536aca080d', 'message': 'Add the .vtt type used for HTML5 video subtitles.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=132996392\n'}"
1723,"{'code': '9656d92aa0164845760762769db4b2e786443e0e', 'message': ""Increase test coverage for Networks. Add clarifying statement in javadoc for inEdges() and outEdges(). Modify the sanityCheck method to also check that a set is equals() to its ImmutableSet copy (this will also make sure the set doesn't have duplicate elements).\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=132956078\n""}"
1724,"{'code': '112e7eb1358ab4bcbaea7a61e195fba29b7e0d13', 'message': ""Optimize Graphs.transitiveClosure() to avoid copying to a List in the undirected case. Credit to jbduncan for the idea!\n\nNote: Change reachableNodes() from HashSet to LinkedHashSet since the latter has has slightly better iteration performance, and we're now iterating over the set repeatedly.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=132927288\n""}"
1725,"{'code': '4c776946209739bcb248f30400193da6bdf895b4', 'message': 'Add note about replacements for BYTES constants, isFinite(), and hashCode() methods in Java 8.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=132923187\n'}"
1726,"{'code': '0ab8b1f42ee68f7a42bf75e9359e9e08aaac3430', 'message': 'Warn Android users that default Stopwatch behavior may be bad for their health.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=132910015\n'}"
1727,"{'code': 'fa7b9050c3632090928a3a34dbdf97fc55bc5e3d', 'message': 'Temporarily allow creation of a CharMatcher from a BitSet for internal purposes.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=132688558\n'}"
1728,"{'code': '35c56277f3127ef90a488cf595d4d1c43d58c925', 'message': 'Update Public Suffix List.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=132612873\n'}"
1729,"{'code': '1b4881c26e8701ad2f3ed835743fe0705c01c840', 'message': 'Use AssertionError for default case.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=132476284\n'}"
1730,"{'code': '93efad911b41aec2199bd72b9ee4bcec017e8507', 'message': ""Clean up some exceptions. In general, the pattern we try to follow is that if the user provides an invalid argument (e.g. a node not in a graph), we throw an IllegalStateException with a detailed error message. If it's an internal method and something is wrong on our end, we throw an IllegalStateException (and don't usually bother with an error message).\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=132447786\n""}"
1731,"{'code': '66d4fbbac0c56aae90582c62d74f1bb437d275d4', 'message': 'Swap the nodes of an unordered EndpointPair to prevent callers from relying on the ""ordering"" of an unordered pair. Remove some superfluous ""this."" prefixes in ElementOrder (we generally only include ""this."" when assigning to a member variable).\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=132439705\n'}"
1732,"{'code': '29972d7c185b6acd0ca09132c315cf8eebbb051a', 'message': ""Add a test for passing ListenableFuture<?> instances to whenAllComplete.\nIt doesn't always work as we'd like :(\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=132437172\n""}"
1733,"{'code': '41e03385ee37287845312b1d15c5d7bb378d660c', 'message': 'Run g4 fix on all the files in common.graph.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=132405519\n'}"
1734,"{'code': '2d3386b9a3162c093ca22524711308a5c48b4299', 'message': ""Move some javadoc out of the graph implementation classes (where we don't really expect people to be poking their noses). Mention briefly in the graph interfaces.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=132390285\n""}"
1735,"{'code': 'd2b300f8d1aff1b58b2353b369b079741c8fc379', 'message': 'Avoid duplication of code in ImmutableValueGraph. Surprised I didn\'t realize this sooner :-/ the backing graph is a ValueGraph, so we can just call through. This also let\'s us do some other nice things:\n\n1) Get rid of the static methods in AbstractValueGraph.\n2) Get rid of the static method in AbstractGraph. That was actually for a different reason (because of ForwardingObject), but the only thing ForwardingObject did for us was forward the toString() method which we actually *don\'t* want.\n3) Allow us to ""cache"" the edge value map, and have both the mutable and immutable implementations inherit that behavior. If someone is calling e.g. graph.edgeValues().get(...) in a loop this should be a noticeable improvement.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=132330742\n'}"
1736,"{'code': 'bc506b9b4c2caf6ef77f02c9a181a60321e38635', 'message': 'Rename parameter.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=132286166\n'}"
1737,"{'code': '21aed0fcf3fec4e7566c8ae10b95491d6f90d734', 'message': 'Increase test coverage for common.graph. Ensure properties besides just those covered by Graphs.equivalent() are copied over as well.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=132210161\n'}"
1738,"{'code': '3ce29544a5ba20cae8d134583e2b0b9f5439d1a1', 'message': 'Some minor common.graph tweaks to avoid equals() checks when unnecessary.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=132168152\n'}"
1739,"{'code': 'd7a8ec278d82466bef86eecffa03ac8e7c3ad557', 'message': 'Refer to Network references as ""network"" instead of ""graph"". Note that we\'ve already started doing this, but (as you can see) are fairly inconsistent with it.\n\nRename GraphType to EdgeType in {Graph,Network}EquivalenceTest\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=132130888\n'}"
1740,"{'code': 'fb8a4db811b0153555a69679069d7a28bad5ee62', 'message': 'Suppress some unused warnings in Eclipse.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=132121576\n'}"
1741,"{'code': '3ca1145c6b9ab856810b9300542da815a22b5a6c', 'message': 'Eliminate checkNotNulls where they\'re clearly they\'re not necessary (i.e. when we dereference the variable on the immediately following line). Also remove the ""variableName"" message in some of them, particularly when they\'re internal variables.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=132120234\n'}"
1742,"{'code': '00cc27551213ddcceac578765cc2d305189264db', 'message': 'guava-testlib: Cover Collections.unmodifiableSortedMap()\n\nTested: []\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=132105239\n'}"
1743,"{'code': '0c350b5c61e48d1732ef1f5b1bd82bf92ca4caaa', 'message': 'guava-testlib: Cover checked{,Sorted}{Map,Set}\n\nTested: []\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=132091633\n'}"
1744,"{'code': 'ece87b099d211a4bc52f18cef24f3cce10fb52e9', 'message': 'guava-testlib: Cover Collections.unmodifiableMap\n\nTested: []\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=132070464\n'}"
1745,"{'code': '192c4b1c1dfbae11a3b4705f135ede409faf3426', 'message': 'Add some missing @Nullable annotations.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=132065891\n'}"
1746,"{'code': '38f5a373214a2246393f1274a1e71ee809d33526', 'message': 'Specify in the javadoc the behavior of Graphs.equivalent() when both parameters are null. Run g4 fix on the file.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=132046690\n'}"
1747,"{'code': 'c4d971943595a00693cd547b23fac1720957ec77', 'message': 'Refactor test utility methods to match graph mutation signatures.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=132005311\n'}"
1748,"{'code': 'db8cac30f1441a9bef0a4ebc47c46bd97716c121', 'message': 'Fix Eclipse warning (missing #).\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=131988897\n'}"
1749,"{'code': '8f3bb256e076de739b26e597bd5263aa22ea3f4f', 'message': 'ValueGraph.java: modify edgeValues() Javadoc to clarify that the behavior of get() if passed an EndpointPair not in the graph is different from the behavior of edgeValue() if passed two nodes not connected in the graph.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=131985226\n'}"
1750,"{'code': '58f40144cd50246dfebd00d36e372527ba912d0b', 'message': 'Add ValueGraph.edgeValues(). Remove ValueGraph.edgeValueOrDefault(node, node).\n\nThere\'s a few nice things we get out of this. An easy way to address all the values in a ValueGraph as a single collection (edgeValues().values()). An easy way to get an edge value if you\'re dealing with ""EndpointPair""s. And if you\'re on Java 8+, Map has getOrDefault() plus some other nifty methods.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=131959724\n'}"
1751,"{'code': '5e8b9f6314d30bc97c77e17511decfcf85abb815', 'message': 'Scope an (internal) return type to UnmodifiableIterator.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=131915927\n'}"
1752,"{'code': 'f7a8a000cf97ed29af366a88ce220c14c8b3fb3c', 'message': 'Make the ""constructor"" methods EndpointPair.ordered()/unordered() public (and make the ones accepting a Graph/Network package-private).\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=131908058\n'}"
1753,"{'code': 'cfe05dfda3ba79aa1bd3acce6b4e766eb7b9bc00', 'message': 'Changes to common.graph. Sorry for the churn, but after this things should be settled down for a while (and we\'ll be launching v20 soon!). Changes include:\n\n-Revert the interface names back. ""BasicGraph"" is now ""Graph"" (BasicGraph was probably a a poor choice), and ""Graph"" is now ""ValueGraph"". The ""node only"" Graph interface is at the top of the interface hierarchy, and ValueGraph extends it.\n-To facilitate the above, the various graph interfaces do *not* specify equality, and the default implementations use reference (identity) equality.\n-Add static methods Graphs.equivalent(...) for users that want value-based equality.\n-Rename Endpoints to EndpointPair. Rename nodeA()/nodeB() to nodeU()/nodeV() and expose isOrdered().\n\nMinor changes:\n\n-Undid the small refactor from [] since the original structure makes it easier for the Immutable classes to have the right hierarchy (i.e. ImmutableValueGraph extends ImmutableGraph, ImmutableNetwork.asGraph() is an ImmutableGraph).\n-Added an ""isEquivalentTo"" method to NetworkSubject (formerly GraphSubject) in labs. Eventually we should get around to having a single truth import for both Graphs and Networks.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=131906631\n'}"
1754,"{'code': '91b0b20cdff4d5cd8ff07befbf1fb3e6b27a7286', 'message': ""Fix the serialization of sparse immutable tables.\n\nThe 'cellColumnIndices' fields of DenseImmutableTable and SparseImmutableTable\nappeared to serve the same purpose, but were actually slightly different. This\nbroke serialization of sparse immutable tables. Additionally, our serialization\ntests did not cover sparse immutable tables.\n\nRename the SparseImmutableTable field for clarity, and add tests covering\nsparse immutable tables.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=131855143\n""}"
1755,"{'code': '212b62566935763aeb4d0dd9082b1238b4b6cb58', 'message': ""Add some javadoc stating that immutable graphs are thread safe.\n\nSlightly refactor code so enterprising users looking at the implementation don't think that's not the case :) And more seriously, this is a better design that makes us less likely to introduce bugs, so it's a good change all around. Thanks Greg!\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=131507603\n""}"
1756,"{'code': '3cbc829d062920b02efc4f99953f28b189a1641e', 'message': 'Try to explain Sets.newHashSetWithExpectedSize() more accurately and usefully.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=131318810\n'}"
1757,"{'code': 'bf011acab6f16f61abe35581cdbc2cfc86e488cd', 'message': 'Fix typo just because.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=131316999\n'}"
1758,"{'code': 'fd3c30f0efd09435c010f5fab52495554242ab52', 'message': ""Make it more difficult to get StackOverflowErrors from hooking chains of futures together with setFuture\n\nThere are two ways such an SOE can occur given a chain of AbstractFutures strung together with setFuture\n1 when the 'innermost' future completes, the sequence of directExecutor listeners will all execute inline, recursively\n2 when the 'outermost' future is cancelled, AbstractFuture.cancel() propagates cancellation to the future that has been assigned to it via setFuture since this is 'inline' we can run out of stack\n\nThe first one can be solved by modifying the way we execute listeners and detecting this case explicitly\n\nThe second one would technically allow for the same solution but a number of users depend on their cancel methods actually getting called so we need to limit this solution to TrustedFuture subclasses and mark TrustedFuture.cancel final.  I can break this change into a separate CL but i thought it might be easier to review altogether, let me know.\n\nThis of course doesn't solve every way you could get such a StackOverflowError, just a few potentially common ones.\n\n(This may help with problems like https://github.com/google/guava/issues/2254)\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=131312174\n""}"
1759,"{'code': 'cfd409b2d0b6ed0ee35589d8471a44689eddccc4', 'message': ""Add @Beta to new method that hasn't yet been API reviewed.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=131302300\n""}"
1760,"{'code': '3208687a98d6decf4074389d6b2b40e667ac6dae', 'message': 'Make nonCancellationPropagating available to GWT.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=131285023\n'}"
1761,"{'code': '5ebbc983c70c3be177bcedaed991615f75fa14c5', 'message': ""Automated g4 rollback of changelist 131198531.\n\n*** Reason for rollback ***\n\nThe ArrayDeque implementation in upstream GWT has a bug that is being fixed in https://gwt-review.googlesource.com/#/c/16680/\n\n*** Original change description ***\n\nUse ArrayDeque and PriorityQueue under GWT (where they're newly available), and provide synchronizedQueue, synchronizedDeque, and MinMaxPriorityQueue there.\nThis also lets us delete our manual implementation of TreeTraverser and avoid LinkedList internally.\n\nFixes #2545\n\n***\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=131218608\n""}"
1762,"{'code': '760da0368b49188928c6efd7eb150d3df7fe96e4', 'message': ""Use ArrayDeque and PriorityQueue under GWT (where they're newly available), and provide synchronizedQueue, synchronizedDeque, and MinMaxPriorityQueue there.\nThis also lets us delete our manual implementation of TreeTraverser and avoid LinkedList internally.\n\nFixes #2545\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=131198531\n""}"
1763,"{'code': '6c63cf3c8a9d94821e2b24a96fb4c3564377051f', 'message': 'Fix bug in Helpers.isEmpty.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=131104085\n'}"
1764,"{'code': '16d03d56aa85457a91b48f5b05dbf1701b2e880d', 'message': 'Allow atomic removal of 0 values from AtomicLongMap\n\nI think this is a pretty sensible thing to expose as an atomic sort of alternative to\nremoveAllZeros. We could also expose remove as is.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=131078929\n'}"
1765,"{'code': 'af1dabf1b37fd74bfe074ad6d7a7fe8da5a61d12', 'message': 'NullPointerTester should not require @Nullable on the param of an equals() override\n\nThis is currently being worked around with things like:\n\nnew NullPointerTester()\n    .ignore(AutoValue_MyValueType.class.getMethod(""equals"", Object.class))\n    ...\n\nThe work-arounds prevent AutoValue from being treated as a pure implementation-generating processor.\n\nFixes #1819\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=131074329\n'}"
1766,"{'code': '484e083653bef124948c449edc56195323b8d00a', 'message': 'Add @Nullable annotations.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=131061728\n'}"
1767,"{'code': 'e9482f34d0960a1b789301905e6ce59123d8a0ff', 'message': ""Disabling SelfEquals check for test\n\nWe intend to make this a compilation error in []'s Java compiler, so it is necessary to fix existing occurrences first to avoid breaking builds.\n\nSee [] for more details.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=131053298\n""}"
1768,"{'code': 'f0cfb17400a63ec566886edc22c98f1e98b281e3', 'message': ""Add Vector tests to guava-testlib's TestsForListsInJavaUtil\n\nTested: []\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=130970050\n""}"
1769,"{'code': 'fb3d380a567f088bd464fb9c9dc159980bf8bfcf', 'message': 'Prefer hardcoding constant over calculating at runtime.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=130969942\n'}"
1770,"{'code': 'c9914b84572ad3fdc572a016a0be4caaf785a00f', 'message': 'Return the underlying graph/network for multiple calls to Graphs.transpose()\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=130954918\n'}"
1771,"{'code': 'ccccbf25427fbc2141ff9b502c6cbe467ac2a967', 'message': 'Add Graphs.transpose() static utility methods for viewing the transpose of a graph. See: https://en.wikipedia.org/wiki/Transpose_graph\n\nAdd Graphs.asBasicGraph(). One downside to having BasicGraph *under* Graph in the type hierarchy (still overall a good idea though :P) is that people are likely to write methods that accept ""BasicGraph<N>"", even though they COULD accept ""Graph<N, ?>"". A little bit of javadoc is not going to stop that from happening, so might as well make it less painful to handle. Also, if someone e.g. wants to make a MutableBasicGraph copy of a Graph, there was really no way to do that before. They can now do:\n\nGraphs.copyOf(Graphs.asBasicGraph(myGraph));\n\nNote that we cannot simply change the MutableBasicGraph version of copyOf() to accept a Graph<N, ?>, because then it would have the same type erasure as the MutableGraph version of copyOf() but a different return type. ImmutableBasicGraph.copyOf() has the same issue, because ImmutableBasicGraph extends ImmutableGraph which has it\'s own copyOf().\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=130939830\n'}"
1772,"{'code': '4d5f8e0242e94256edd2d59bfb002adb44c083a2', 'message': 'Minor javadoc tweak.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=130896308\n'}"
1773,"{'code': 'dbfa8710de66c7cff24962fbce6ee02d2d5840de', 'message': ""Remove some superfluous checkNotNulls in NetworkConnections. On the nodes/edges, these are internal classes and those parameters have already been checked. On the calls to super.remove*, they've also already been checked.\n\nNote that I previously made a similar change for the GraphConnections.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=130873616\n""}"
1774,"{'code': '825d8dcf1f3d310635223af42c72f5fdecd03324', 'message': 'Fix indentation.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=130870792\n'}"
1775,"{'code': '3a2804bad68215ea046ad679958a29b5cbced8b8', 'message': 'Change allowsSelfLoops() to default to false for Graph/NetworkBuilder.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=130840045\n'}"
1776,"{'code': '29398f1f2222ac019a57aba9a7bf5d07d03936a4', 'message': 'Delete the unused Graphs.parallelEdges(). Promote Graphs.adjacentEdges (back) to interface method, with a default impl in AbstractNetwork.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=130803846\n'}"
1777,"{'code': '12ef690bfbb1b28576ffe9b6c54bd17a6ea68410', 'message': 'Make Endpoints implement Iterable.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=130800281\n'}"
1778,"{'code': '8fef23a205c895d9fb45b2da4cbb243eab652f0f', 'message': 'Fix some stale language in a test.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=130796558\n'}"
1779,"{'code': 'e1a9594a370ae39773dde429b3d912e48f07dc3f', 'message': 'Fix typo\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=130785660\n'}"
1780,"{'code': 'adeb3c60455b381842ea745b8272282191695e37', 'message': 'Slightly update javadoc for inducedSubgraph(). Since edges() has different return type in Graph vs Network, have to use slightly different terminology here.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=130776654\n'}"
1781,"{'code': '98124f5f1dc4b6102c7c03032e3a6d705326914c', 'message': ""Change javadoc to refer to Mutable* interfaces. Technically, Graph/Network don't dictate anything when adding edges, because they don't have methods for adding edges.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=130760757\n""}"
1782,"{'code': 'd7a12d09fe0f4ee389a7a9bde75415a64fa249cd', 'message': 'Add NetworkMutationTest (parallel to GraphMutationTest).\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=130753566\n'}"
1783,"{'code': '7d350c1eba46ad4776ddcf839219e56d15db5541', 'message': 'Expand on ""question 3"" from the graph/network javadoc, which I felt was a little hard to parse. Also some misc. javadoc cleanup.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=130752546\n'}"
1784,"{'code': '2ce1eab5195e4dac688c790b35009eb96a493cb9', 'message': 'Fix typo\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=130699020\n'}"
1785,"{'code': 'fe6a5c506a24a078fb48932741716524a2a5bb21', 'message': ""Super nit: move allowsParallelEdges() above allowsSelfLoops() in the Network interface (this is the order they're presented in NetworkBuilder, as well as the order in the implementing class).\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=130698523\n""}"
1786,"{'code': '408a57887a14efeb3941b98c1b0de47fb4fa5127', 'message': 'Fix compile-time constant expression overflows\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=130697805\n'}"
1787,"{'code': '657c5a8fe1ba24d36835f0ae927051654faf3745', 'message': 'Some more cleanup of javadoc. Add specific language regarding undirected graphs since I feel the behavior there is non-obvious.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=130684893\n'}"
1788,"{'code': 'd0b8e4a1edf3497aef345e93a170c46f6cbc7036', 'message': ""Update Network.asGraph()'s edge value methods to be consistent with how they're defined in the interfaces. Update tests to fail with the old implementation.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=130683572\n""}"
1789,"{'code': 'ed63eb90b1f2feba71d7d3cde8c4611b853add6b', 'message': ""Completely overhaul top-level javadoc for common.graph interfaces in light of the new interface hierarchy. Spend a lot of time answering what I think will be the #1 question users have: should I use a Graph or a Network? Spend a lot less time defining graph theory terms, that's what wikipedia is for :) plus the method-level javadoc defines terms as necessary. Overall, make it a lot more concise. Javadoc that's too long for anyone to bother reading is just as good as javadoc that doesn't exist!\n\nAlso, ran g4 fix on these files.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=130673920\n""}"
1790,"{'code': 'e16c9e16b2e645d884944b721522aeb85e4c8bbf', 'message': 'Update some javadoc in the graph builders, add sample code. Run g4 fix on the files.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=130658795\n'}"
1791,"{'code': '15dee03f00908a7d621ed93b358e376c4b2c96a2', 'message': 'More test coverage for graphs! Test adding and removing nodes/edges repeatedly. Currently only for Graph, will add similar coverage for Network later.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=130657984\n'}"
1792,"{'code': 'eb62df758064852a95a8095b4d3b2ff61a225cd4', 'message': 'Optimize directed graphs to consume less memory, at the cost of additional code complexity. Some very rough benchmarks also seem to indicate this has slightly faster runtime. I suspect this is due to improved cache performance/locality when using a single Map.\n\nMemory: Directed mutable graphs consume less memory across the board, with graphs of small degree benefiting the most (memory consumption around 75% of previous). Directed immutable graph memory consumption is more of a wash - going down slightly for graphs of small degree and up for graphs of large degree.\n\nRuntime: Adding a few million edges seems to be about 10% faster.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=130653738\n'}"
1793,"{'code': 'a29aed7dd8b3163f9156f1af6d003f004b677e8c', 'message': 'Add *degree() methods back to Graph/Network interfaces, with correct formal definition this time (self-loops count twice).\n\nReplace references (in affected tests) to assert{True,False} with Truth.assertThat().is{True, False}.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=130651507\n'}"
1794,"{'code': 'aad58839648feb938333a92330a99f9fa093a70b', 'message': 'Remove reference to hypergraphs in test!\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=130646222\n'}"
1795,"{'code': '72ad7a5ecbd9f04f7763ee873fa6eacdf40ce571', 'message': 'Move Network validation into a static method (will be useful for adding Network coverage to MutationTest later).\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=130645401\n'}"
1796,"{'code': 'ed00daeb58e8ba143bb0cdfd4547c57985e2c862', 'message': 'Add more test coverage for Immutable graphs/networks.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=130643917\n'}"
1797,"{'code': '9718ea57e02620a44683465358ca8705438b89ec', 'message': ""Change the definition of hashcode for Networks (map of edges to endpoints) to more closely mirror hashcode for Graphs (map of edges to value). Also the map we're basing the hashcode on is now half the size for undirected networks, which is nice (a downside is that isolated nodes don't affect the hashcode, but I'm not too worried about that).\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=130560997\n""}"
1798,"{'code': '22936fd61d4ea05644acec71317003812f3f907b', 'message': 'Rename SimpleEdgesConnecting to EdgesConnecting to be consistent with our naming pattern for NetworkConnections (*NetworkConnections and *MultiNetworkConnections).\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=130551638\n'}"
1799,"{'code': 'd0a31db68a8ef6ff2d2e53b694dc77308ce0d77e', 'message': 'Update some javadoc. Remove old @SuppressWarnings.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=130551561\n'}"
1800,"{'code': 'ec6f0cffe68e0736c04783b61f980f1271064dd9', 'message': 'Make equals/hashcode methods in AbstractGraph/Network final, since changing the behavior of these while still implementing the interface is incorrect.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=130551324\n'}"
1801,"{'code': '41becc60f5e1d8b121846c890478d39e6ec42979', 'message': 'Rename ValueGraph to Graph.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=130546021\n'}"
1802,"{'code': 'c3f9fef2e589d1555873349cce8c380f2c131653', 'message': 'Update error message for calling source/target on endpoints of an undirected edge.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=130530287\n'}"
1803,"{'code': 'ceee77fafdc9bdc5e2e6df85e231879c4ab6d755', 'message': 'Rename ""Graph"" to ""BasicGraph"". Flip the inheritance hierarchy. Now, BasicGraph<N> extends ValueGraph<N, Presence>.\n\nNote that in a followup CL, ""ValueGraph"" will be renamed ""Graph"", and this will make more sense :)\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=130529648\n'}"
1804,"{'code': '151e30fc903a5b6ed2c62367fea9150e929d931d', 'message': 'Add Hashtable to TestsForMapsInJavaUtil.\n\nTested: []\nAs a sanity check, also verified that that target fails if I put a ""throw new AssertionError()"" in testsForHashtable()\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=130452528\n'}"
1805,"{'code': '99d3a02aaa9ad571c380fad7c2ac3b1377785b29', 'message': 'Shuffling from internal-only change.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=130430413\n'}"
1806,"{'code': '949b399eb099f9ebddb101139b6883229a744483', 'message': 'Slightly update wording on Graph.equals() javadoc.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=130410280\n'}"
1807,"{'code': '0798e33d8384abc87e673cdbca52b80ed5904ccf', 'message': ""Delete the NodeConnections interface. As an implementation detail we previously took advantage of the shared interface, but that is no longer the case, and such a trivial interface doesn't seem worth keeping around.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=130403467\n""}"
1808,"{'code': 'ed84d09dff4e10673b2a28ed2d12d09865b34d86', 'message': 'Add a bit of test coverage for value graphs.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=130333367\n'}"
1809,"{'code': '53f72d87a9b98498398fe3d4a583c08961e5a98f', 'message': ""Delete the unused, @GoogleInternal copy* methods (in particular, copyNodes, copyEdges, and their Predicate-based counterparts). We're missing the ValueGraph version for all of these, and in the copyEdges case, also the Graph version. The Predicate-based methods have the obvious issue that we'd want to release with the Java-8 Predicate, not the Guava Predicate. copyNodes() and copyEdges() have the unfortunate issue of there not being an obvious correct answer for the whether the source or destination should come first in the parameters. And finally, copyEdges() requires us to decide what to do in the event that the destination graph doe not contain the incident nodes (and neither option is particularly intuitive). Overall, we'd rather not have to support these methods at this point.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=130333320\n""}"
1810,"{'code': '6e62ae569837d8d2fc9d51c3ac6eddf0468f9143', 'message': 'Define equality for Graphs so that a Graph never equals a ValueGraph. This allows ValueGraphs to have the expected behavior when you query valueGraphA.equals(valueGraphB) (i.e. values are taken into account as well).\n\nSince ValueGraph now defines its own equals/hashcode, add AbstractValueGraph to facilitate clients getting this behavior.\n\nAdd ValueGraph versions of copyOf() and inducedSubgraph().\n\nAdd a package-private ForwardingGraph class for the non-value graph classes (ConfigurableMutableGraph, ImmutableGraph) to use.\n\nRename AbstractConfigurable* classes to Configurable* (and make non-abstract).\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=130329432\n'}"
1811,"{'code': '2febb986da9ae9755dc0ead50c7890480ee87a97', 'message': 'Move GraphProperties.isCyclic() to Graphs, delete the GraphProperties class. Rename method to hasCycle(), because isCyclic() implies that it might be O(1). Also to be consistent if we ever add other ""has"" methods (e.g. hasSelfLoop(), hasTriangleSubgraph(), etc.).\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=130327382\n'}"
1812,"{'code': '0f0f616ef7962d97748e2b1bbbd539e96dcbc7b4', 'message': ""Add the methods Graphs.reachableNodes() and Graphs.transitiveClosure(). Three teams have already implemented similar logic! Also, looking through the remaining uses of the legacy Digraph, the only thing preventing many from being converted to common.graph is the lack of transitive closure. So I'd say there's very high demand for this.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=130307025\n""}"
1813,"{'code': 'afdde25395a15a3f293ec9546eddcbfeb456093b', 'message': 'Fix source links.\n\nFixes https://github.com/google/guava/issues/2548\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=130300093\n'}"
1814,"{'code': '13cdfeeb204c4b3786be57fb5a0ea113b29ced31', 'message': 'Clean up the javadoc for the mutable graph interfaces.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=130297160\n'}"
1815,"{'code': '4b77bfafa9a59414a732e6f298f34b468e5e92a7', 'message': ""Delete TestGraphBuilder/TestNetworkBuilder. Remove the testing subpackage from common.graph.\n\nNote that similar functionality will be introduced if we add ImmutableGraph.Builder classes (see b/30855928), but that probably won't be for a little while.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=130280956\n""}"
1816,"{'code': 'dc03be881cc6ff13ef5769c8b2eaa99e24cad4d8', 'message': 'Shift the nodeOrder/edgeOrder methods down in the Graph/Network interfaces. These are definitely ""properties"" of the graph, and should be under the label as such. Note that the AbstractConfigurable* implementation classes already have the methods in this order.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=130227111\n'}"
1817,"{'code': '57ec8ce480d75c69f90f72e4faaf13dda25a7f67', 'message': 'ValueGraph implementation.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=130174881\n'}"
1818,"{'code': 'b476c9eda993dbca13b48880ae61680a4cb6c131', 'message': 'Add some test coverage.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=130173111\n'}"
1819,"{'code': '3a26a954c12ce3ba0540f93f7be62fc011304748', 'message': ""Update isCyclic() to work on both directed and undirected graphs. This is part of the effort to move it to Graphs (which I'll do in a followup CL), so we can delete the GraphProperties class!\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=130163573\n""}"
1820,"{'code': 'af1ce0bb68e01c1d04a0886e6f6bc3f537c57f43', 'message': ""Expand test coverage. Make validateGraph() a static method so ValueGraphTest can use it (a MutableValueGraph is a not MutableGraph so it can't extend AbstactGraphTest directly). Move removeEdge_existingEdge() up in the test hierarchy.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=130160765\n""}"
1821,"{'code': '572fec480544f11385dc8462d88621776fae2ec8', 'message': 'Update Ordering javadoc to explain the Java 8 situation. Now with branchiness.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=130097437\n'}"
1822,"{'code': 'c82e55f354858a7abbf4516db54e13599e1612f4', 'message': ""Use BitSet under GWT, as it's now available there.\nThis lets us remove our manual emulation of BinaryTreeTraverser, and it moves us a step closer to allowing precomputed CharMatchers there (if we want to someday, which we might not due to memory concerns).\n\nFixes #2546\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=130010612\n""}"
1823,"{'code': 'df95c9ee241355679bcda83803d551186b01d727', 'message': 'Fix compile-time constant expression overflows\n\nThis change fixes compile-time constant expressions that overflow, in\npreparation for enabling a new compiler error.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=129993557\n'}"
1824,"{'code': 'e8ed22a752dfd16ee3ff83f4233654775357b300', 'message': 'Use StringBuilder.append(a).append(b) instead of sb.append(a + b) in Iterators.java.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=129988431\n'}"
1825,"{'code': '62c8259058f3349cee51b2dd392bfe11664d4e9a', 'message': 'Rename addEdgeV2() to addEdge().\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=129976233\n'}"
1826,"{'code': 'e076a9d722a8eb6bdb3f4da5aee9306a0376821b', 'message': 'Endpoints.java: revert language change in Endpoints.adjacentNode()\'s exception message; ""does not contain"" seems more appropriate even though Endpoints is no longer a Collection.  ""is incident to"" implies that ""Endpoints"" is really a misnomer for ""Edge"", which is sort of OK for Graph but not so much for Network, and ""contain"" works in both cases.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=129924124\n'}"
1827,"{'code': '8cc9ed6f04ed6d785227249a1fd1be621c45b17a', 'message': 'Bump timeout after recent flaky failure.\n\n[]\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=129894231\n'}"
1828,"{'code': '80a312f5a6c565d9dfe1355d723222c7ad8f4d1f', 'message': ""Some tweaks to the Endpoints class:\n\n-Expose nodeA() and nodeB() as public methods.\n-Don't have Endpoints implement Collection.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=129826551\n""}"
1829,"{'code': '5178ace93305d4c203ae866f7c3a442f952d8e99', 'message': 'Remove logging of regex compiler.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=129777911\n'}"
1830,"{'code': '5562218b96f0b262deb5c0d2288c1bcc339dbbb2', 'message': 'Make ImmutableTable serializable.\n\nAdd a common serialized form for ImmutableTable implementations which preserves\nall external behavior (e.g. view iteration orders) through round-trip\nserialization.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=129756122\n'}"
1831,"{'code': 'b3b5b648499b186a5cdd0361339332f224b7b98a', 'message': 'Remove a few unnecessary casts that were previously required due to the old ""? super"" signature. Some slight tweaks to AbstractNetwork.toString() method (no behavioral changes).\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=129696909\n'}"
1832,"{'code': 'a25dfcde87307642316239d6f2ab23f4109de09a', 'message': 'Remove the ""? super"" from the return type of the nodeOrder/edgeOrder methods. It doesn\'t actually provide any additional functionality for the user, just a mild annoyance. Also this is in line with the recommendation here:\n\n[]\n\nIn partiular:\n\n""In return types\n\nAvoid using wildcards in return types and constants. You should almost never need to do this, and it puts a burden on the user.""\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=129689329\n'}"
1833,"{'code': '739a6f681c622033709f69b7145b61e226b9a852', 'message': 'Add the following method to the Graph interface:\n\nSet<Endpoints<N>> edges()\n\nwhich replaces the existing Graphs.endpoints() method, but makes it more discoverable and also makes .size() O(1).\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=129680891\n'}"
1834,"{'code': 'a3029230279a9d448bca6be6fd1ba14f941630ad', 'message': ""Improve EvictingQueue.addAll()'s performance by skipping the head of\ncollections larger than the size of the queue. Also clear the backing\nqueue in such cases to avoid calling .remove() n times.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=129679957\n""}"
1835,"{'code': 'f407f14352abeed3c38aba36b2032f9556933de2', 'message': 'while-statement did not loop\n\nA return statement occurred in the first\niteration of the loop making the loop\nstatement redundant, as it is semantically\nequivalent to an if-statement.\n\nReplaced the loop-statement with the\nequivalent if.\n\nFixes #2541\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=129649564\n'}"
1836,"{'code': 'd58c05a1b4340676d85bf41fdfe4dcebcb0d7f23', 'message': 'AbstractGraphTest: use Truth-style assertions where possible.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=129645612\n'}"
1837,"{'code': '061da3b34c3497877bb65db6874f4e9610bed2e8', 'message': 'Fix a test not marked @Test\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=129588434\n'}"
1838,"{'code': '7aa9178daece0553616f192dcd7a2fca771994c2', 'message': 'Rename MutableGraph.addEdge(N, N) to MutableGraph.putEdge(N, N) (to indicate that Graphs do not support parallel edges and for consistency with the upcoming ValueGraph interface). Change the order of parameters in MutableNetwork.addEdge(E, N, N) to MutableNetwork.addEdge(N, N, E).\n\nThe migration for the latter will be done in two steps, in order to avoid silently breaking someone with a WIP change involving a Network<N, E> where N == E. The method with the new parameter order will temporarily be called addEdgeV2, and is planned to be changed back to addEdge the evening of Wednesday, August 10.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=129529711\n'}"
1839,"{'code': '943bff9a21627e48cdd64f6d53cc8317aaafc76f', 'message': 'Add a service provider for the regex library used by common.base (e.g. Splitter.onPattern).\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=129471520\n'}"
1840,"{'code': 'b501c7cec28c94d39c172c58fd7b5f506f019295', 'message': 'Update to GWT 2.8.0-rc1.\n\nThis requires that we treat the GWT sources as Java 8. That should be harmless.\nIt also requires that we upgrade the version of Firefox that we use to run GWT tests (not that we run GWT tests very regularly). Probably also harmless?\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=129440214\n'}"
1841,"{'code': '8f4ff6f348be4bf9ffd17e5a90d0f4b5f78aa9e2', 'message': 'Demote Network.adjacentEdges() from an interface to a utility method.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=129380888\n'}"
1842,"{'code': '62ab4d2820243c1fac6c232a1cf7b7dc455ca107', 'message': 'Make the Endpoints subclasses private. Expose a package-private isDirected() method. The instanceof check felt a little hacky to me.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=129352385\n'}"
1843,"{'code': 'e2483714e1cf3cf2ff11c6954f228ed0dc0d8d7e', 'message': 'Preliminary ValueGraph interfaces.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=129344333\n'}"
1844,"{'code': '828103fee56ece0dc1a613a330c995e10e553bbf', 'message': ""Use J2ObjC's @RetainedWith annotation to prevent leaks resulting from reference\ncycles between inverse maps.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=129344101\n""}"
1845,"{'code': '71766941fdf7c29b88c9ae15e04c8532d603a642', 'message': ""Remove the *degree() methods from the Graph/Network interfaces. In a followup CL, we'll add a (correct) implementation of degree() as a static utility method in Graphs. But I'd like to get the client-affecting changes (i.e. ones where the longer I wait the more merge conflicts I get) out ASAP.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=129170874\n""}"
1846,"{'code': 'f5b1c23b1604c4bdfb9902801e1fb61f17ac9ffa', 'message': ""Minor style tweak (doesn't actually change anything, but the better symmetry makes me happy).\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=129060870\n""}"
1847,"{'code': '3776f45d1054faaa5e368db33dc5ebcc38af0292', 'message': 'Flatten the Graph->Network hierarchy. In other words, it\'s no longer true that a Network IS A Graph. Instead, provide an asGraph() method that allows for viewing a Network as a Graph. Also, update a lot of code that should have been using Graph (instead of Network) to use Graph.\n\nThe motivating reasons for this are:\n\n1) Graphs, by definition, do not support parallel edges. So to have Network be a Graph and break that is a little odd. Instead, we can delegate this to asGraph(), stating that the graph will have an edge between node A and B if the Network has an edge between A and B.\n\n2) Equality/hashcode semantics. It was rather unfortunate to require Graph to have explicit knowledge of its subinterfaces, so that they could have their own definition of equality that\'s incompatible with Graph. With this change, Graph has only one definition of equals/hashcode (like basically every other Java data structure) and subinterfaces (e.g. the upcoming ValueGraph) are expected to follow that.\n\n3) We\'re going to add an edges() method to Graph, but Graphs will have a slightly different concept of edges than Networks. In a Graph the edges ARE the endpoints, while in a Network the edges HAVE endpoints (and ARE the user-provided objects).\n\nNote that there are a LOT of places where we refer to networks as ""graph"" in the code. This CL does not make an attempt to change those. It\'s uncertain whether we want to change those to ""network"" or continue to use ""graph"" as a generic term, but that can be handled in a separate CL if necessary.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=129020913\n'}"
1848,"{'code': '5803c43d7e79b969b12fb61ed423dbb07fddfc6c', 'message': ""Redesign of MapMakerInternalMap with the motivation of saving a lot of memory by not wastefully having stuff that's unneeded. The algorithm (the j.u.concurrent.ConcurrentHashMap-inspired segments of hash tables) is untouched.\n\nMemory usage of MapMakerInternalMap is important because it's used under the covers by Interners#newWeakInterner.\n\nThe problems the new design fixes\n---------------------------------\n\nThere are four relevant cases of MapMakerInternalMap, one for each combination of weak/strong keys and weak/strong values. The old code implemented all of these exactly the same, from a memory layout perspective. For example, in the worst-case of strong-keys-strong-values, there's the following waste (all numbers assume 64-bit jvm with Xmx < 32G), in decreasing order of severity:\n\n* per-entry: 16 bytes for the StrongReference object\n* per-segment: 32 bytes for the ReferenceQueue object for the values, 32 bytes for the ReferenceQueue for keys, 8 bytes for the storing the references to both of those).\n* per-map: 8 bytes for storing the references to keyStrength and valueStrength, 4 bytes for storing the reference to valueEquivalence (just comes from valueStrength).\n\nFor maps with strong values, there's also the minor issue that a new StrongReference wrapper is created whenever the value of a key is changed. This puts unnecessary, albeit probably not that much, pressure on the GC.\n\nThe approach\n------------\n\nWe want to get rid of the above waste but we don't want to sacrifice any type safetey. Here's how we do this:\n\n* We introduce four different entry implementations and four corresponding Segment implementations (for each key & value strength pair). These implementations have optimal memory usage wrt the waste discussed above.\n* We introduce a base InternalEntry interface, parameterized on its own implementation (i.e. CRTP - https://en.wikipedia.org/wiki/Curiously_recurring_template_pattern). This is so the Segment implementation can be generic in the actual Entry type and still be type safe).\n* We introduce a base Segment class, parameterized on its own subclass (CRTP) as well as on the type of the InternalEntry implementation. The latter is so that the Segment implementations know how to safely efficiently handle the corresponding InternalEntry implementations.\n* And, tying it all together, we introduce a InternalEntryHelper class, parameterized on the InternalEntry implementation type. Specific InternalEntryHelper implementations know how to safely and efficiently deal with the corresponding InternalEntry and Segment implementations.\n* Each of the four InternalEntryHelper implementation classes are singletons (they have no state!). The MapMakerInternalMap has a reference to the specific InternalEntryHelper implementation it needs - this is the _only_ overhead of our approach.\n\nThe existing MapMakerInternalMap tests unfortunately poke around into the internals in a hacky and unsafe manner. To continue to support this, we have XXXForTesting methods that do casts and call into the type-safe methods alluded to above.\n\nResults\n-------\n\nGuava's memory benchmark\ntl;dr:\nStrongKeysStrongVals (size = 1M) -> 28.3% memory savings\nWeakKeysStrongVals (size = 1M) -> 24.8% memory savings\nStrongKeysWeakVals (size = any) -> 48 bytes per-map memory savings\nWeakKeysWeakVals (size = any) -> no change\n\nFuture Work\n-----------\n\nThe same design optimization could be applied to LocalCache.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=128986019\n""}"
1849,"{'code': 'c48fdcf1825a68426f205542c77aff30c49804d6', 'message': ""Update Guava's J2ObjC dependency to version 1.1. This version includes the\n@RetainedWith annotation.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=128842160\n""}"
1850,"{'code': '48affd07a86210f6e1b02a080a59d2b894adeeb7', 'message': 'Rename otherNode() to adjacentNode() in Endpoints.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=128831933\n'}"
1851,"{'code': '4bfb25c13ad69f837c5171172517b9b109d6d5f6', 'message': 'Add guarantee of insertion-based order to HashBiMap.\nPreserve insertion order in GWT as well.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=128827385\n'}"
1852,"{'code': 'b6381b286a8cd45f1b7533b4e76abe202e8a5c23', 'message': 'Update MutableGraph javadoc to state in no uncertain terms that there can only be a single edge connecting a pair of nodes. Delete TODOs regarding parallel edges for Graphs, which we will not do.\n\nRegarding motivation:\n\n1) Having a Graph with parallel edges complicates things a fair bit. There are certain assumptions you can make about graphs without parallel edges that you cannot make about graphs with parallel edges. Given that we don\'t even expose an ""allowsParallelEdges()"" method, there\'s literally no way to future-proof yourself if we did later add Graphs with parallel edges. We\'d just break a lot of code.\n\n2) In order for a Graph with parallel edges to actually make sense, we would have to expose several additional methods (at the least, getEdgeCount(nodeA, nodeB), setEdgeCount(nodeA, nodeB), and allowsParallelEdges()). Given that Graph is supposed to be the simpler interface, this would be unfortunate.\n\n3) With my proposed ValueGraph interface, a ValueGraph<N, Integer> would be exactly analogous to a Graph<N> with parallel edges, but with clearer semantics. However, I feel points #1 and #2 are sufficient to resolve this matter.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=128824588\n'}"
1853,"{'code': 'd6235bd2cf3a551780b071c7022b2c8d2c96e955', 'message': 'Automated g4 rollback of changelist 128499385.\n\n*** Original change description ***\n\nSuper source Strings#isNullOrEmpty to improve JS performance.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=128709966\n'}"
1854,"{'code': 'bfbcebedcef09d26538e5ad5c9a7cbe7d99fddc0', 'message': ""Object shouldn't be tested for equality with itself. This was identified using Error Prone check.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=128657125\n""}"
1855,"{'code': 'c46f7980cacd5dd91cef64117e1bd0f7419a1c85', 'message': ""Object shouldn't be tested for equality with itself. This was identified using Error Prone check.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=128588135\n""}"
1856,"{'code': 'c00b6e07ad609901919093c74012147b64910213', 'message': 'Automated g4 rollback of changelist 128473677.\n\n*** Original change description ***\n\nSuper source Strings#isNullOrEmpty to improve JS performance.\n\n***\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=128499385\n'}"
1857,"{'code': '1b2cb0589e53da75777f857d526327dfbf0f2890', 'message': 'Super source Strings#isNullOrEmpty to improve JS performance.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=128473677\n'}"
1858,"{'code': '2979ffab1dd3ff6c2d0e9c24d399f2008608932c', 'message': 'Graph.java: fix typo in documentation\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=128397707\n'}"
1859,"{'code': '85461bd3a1f2ccab17293650ad7660a481ddee25', 'message': 'Super source Objects to have Objects#equal(String, String) to improve JS performance.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=128390183\n'}"
1860,"{'code': '15f94ddbb6f1537bb5a8651c08a4c4fa592879a7', 'message': 'Fix typo in Splitter.limit javadoc.\n\nAlso, grammar pedantry: ""including the last"" is a parenthetical but was missing a comma. Adding a third comma was too many, so I moved it to the end.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=128381331\n'}"
1861,"{'code': '01a834af3e320ada8457a2b8ccdbdf43e0bbeed7', 'message': 'Add MapMakerInternalMap to BenchmarkHelpers, mostly for the sake of getting support for MapMemoryBenchmark.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=128380910\n'}"
1862,"{'code': '202ba853a79bdbb987bedb54839ee79109b397fb', 'message': 'Remove unused import.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=128196200\n'}"
1863,"{'code': '545da1dd55a20982645f365f2f30b53ce52af39b', 'message': 'Optimize Ascii toUpperCase/toLowerCase for generic charsequences\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=128182386\n'}"
1864,"{'code': '288ca09bc98b3d2a20beade2133378706884705c', 'message': 'Replace calls to deprecated Throwables.propagate() with ""throwIfUnchecked(e)"" (if it is possibly unchecked) and ""throw new RuntimeException(e)"".\n\nFor files in javatests/, just wrap + throw a new RuntimeException.\n\nWe are removing all calls in preparation for deleting the method.\n\nMore information: []\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=127774261\n'}"
1865,"{'code': '095942751f789e930877cd734355afb4b7a837a4', 'message': 'Update imports ordering to the new java import order.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=127770522\n'}"
1866,"{'code': 'd0ddcb8616dbfad3cb14f5fa4b54f866f3a7f4ff', 'message': 'Update imports ordering to the new java import order.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=127766798\n'}"
1867,"{'code': '52b889e3d5b259afeb3c19a0f0115c8f999b221d', 'message': 'Change HashBasedTable to be backed by LinkedHashMaps so iteration order is deterministic.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=127625411\n'}"
1868,"{'code': '595613322ec3972dc669c53f3d2dfaaec9af5c01', 'message': 'Add some test coverage for removeEdge().\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=127584532\n'}"
1869,"{'code': 'd17832598fd0b23265b3c29039490e47b23182b3', 'message': 'An optimization for removeNode() on undirected graphs.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=127583081\n'}"
1870,"{'code': 'bb7a1ce573a6da955e095869bd3e06cb1449ae9e', 'message': 'Update imports ordering to the new java import order.\n\nThe import order is changing because the current rules are unnecessarily complicated, difficult to configure in IDEs, and difficult for users to remember.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=127568338\n'}"
1871,"{'code': 'd6ef78ff26c28401c4bd8a61b75cfdf052b65696', 'message': 'Rename NodeConnections to NetworkConnections and NodeAdjacencies to GraphConnections. Have a base interface called ""NodeConnections"". This change is just cosmetic right now (although we do refer to these things as ""connections"" everywhere, so it\'s nice to actually have ""NodeConnections"" be the base interface), but it will make more sense in the context of ValueGraph (there will be a ValueGraphConnections).\n\nHowever, I think this change is worthwhile (or at least not harmful) even outside of ValueGraph. And a rename like this, if bundled like with a large functional CL, will clutter things up a lot.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=127552346\n'}"
1872,"{'code': '453d9218face0014267fe39fc1e172c231b203a9', 'message': 'Rephrase the equals() javadoc in Graph. Remove same statement from Network since there currently are no subinterfaces of Network. Clean up a reference to ""relation"" (that\'s impressive it snuck in considering we ditched that name long before we actually checked in any code!).\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=127547695\n'}"
1873,"{'code': 'b79501ac1cf46d791a0a2f44ac208ee84247f9b3', 'message': 'Small tweaks to some methods in AbstractGraph/Networks.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=127546964\n'}"
1874,"{'code': '474993ee985a387bfe3084011d1703cab6b517e1', 'message': 'Eliminate some duplicated code.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=127538907\n'}"
1875,"{'code': 'a01998946b92508ab53b3fc8939744c1061dd135', 'message': 'Remove the public equal/hashCode/toString methods from Graphs. There are a variety of reasons for doing this:\n\n1) No other class in Guava does this. For example, there\'s no Sets.hashCode() or Multimaps.equals().\n2) The instanceof checks and casting is annoying, and would only get substantially worse if we introduced an additional core interface. Yes, this is hidden from the user, but might as well take advantage of polymorphism and avoid it entirely.\n3) Reduced API surface area. I don\'t like exposing multiple ways to do the exact same thing. The user shouldn\'t have to wonder ""hmm... is Graphs.equal(foo, bar) always going to give me the same result as foo.equals(bar)?"".\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=127507834\n'}"
1876,"{'code': '9e54741abdccb0eb10cb1b3e3ccd98485e202db0', 'message': 'Delete the ImmutableSet.copyOf() inside edgesConnecting() for immutable networks. Three main points here:\n\n1) The comment is no longer true. edgesConnecting() used to be evaluated as the intersection of two sets, but is now done differently (we did add a unit test to make sure they\'re equal though!).\n\n2) With the introduction of ""SimpleEdgesConnecting"", in the no parallel edges allowed case, this is already super efficient (i.e. everything is O(1)). There\'s no need to wrap it in an immutable set.\n\n3) With the introduction of ""MultiEdgesConnecting"", even in the parallel edges allowed case, methods such as .contains(), .size(), and .isEmpty() are all O(1) if successors() has been invoked. We lose the O(1) runtime of those methods if we always make an immutable copy of the set first.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=127470554\n'}"
1877,"{'code': '339d243bab64b744df808036de72cd1c5ebccc80', 'message': 'Update the javadoc for the MutableGraph/Network interfaces. Update three things:\n\n1) Remove the reference to ""optional operation"". This was before the mutation methods were split out into Mutable* interfaces. Now that they are, the language doesn\'t really make sense - if an implementation didn\'t support it they just wouldn\'t implement the Mutable interface! jrtom@ mentioned the possibility of e.g. a MutableGraph that only supports adds but not removes. This is possible, but seems relatively unlikely, and it\'s not like this stops them from throwing UOE. I just don\'t think it\'s worth mentioning in the javadoc any more.\n\n2) Mention what the default behavior of addEdge() is. My coworker using graph for the first time was trying to figure it out, and was frustated because he had to dive into the implementing class logic to figure it out (and it wasn\'t particular easy). We should just state up front what we do.\n\n3) Make it clear when addEdge() will throw an IllegalArgumentException. We no longer have to add clarifying javadoc in the implementing classes.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=127449329\n'}"
1878,"{'code': '94cd09b519d6c9dfdd18b28cbe4b4d005300c600', 'message': 'Fix typo in GraphBuilder.nodeOrder() javadoc.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=127438088\n'}"
1879,"{'code': '501e3353f543e2cb3e0f147ec1329dbc7c7a6f3e', 'message': ""Update edgesConnecting().size() and edgesConnecting().isEmpty() to be more efficient for Networks with parallel edges. In particular, take advantage of the cached successor multisets. Currently the methods are always O(D). This will also be O(D) if successors hasn't been invoked, but will be O(1) for future calls. For example, with something like:\n\nedgesConnecting(n1, n2).size()\nedgesConnecting(n1, n3).size()\nedgesConnecting(n1, n4).size()\n...\n\nAll calls after the first will be O(1), as it invokes successors(n1). This makes it so that, if someone has a dense graph with O(N^2) edges, calling edgesConnecting().size() or edgesConnecting().isEmpty() on every pair of nodes is O(N^2) (i.e. amortized O(1)) rather than (N^3).\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=127381761\n""}"
1880,"{'code': '522debc80a9d3df903a018ea54f8aa419e82c44e', 'message': 'Add the Forwarded header (RFC 7239) to HttpHeaders.java.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=127381583\n'}"
1881,"{'code': 'ab7808a6c737b1ae9125f074f552f7d89103ef2b', 'message': 'Make ImmutableNetwork.copyOf() more efficient in the case of directed networks that allow self loops. Sets.intersection().size() is linear in the size of the first set, whereas this is O(1) assuming degree() is O(1) (which at least in our impl, it is).\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=127357590\n'}"
1882,"{'code': '7d45b192cf1bf3a45990afeb840a382760111dee', 'message': 'More test coverage!\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=127355528\n'}"
1883,"{'code': '163988050d56e39e36e95e5f938baf6429077a0e', 'message': 'Suppress error for comparing objects to themselves\n\nMore information: []\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=127346658\n'}"
1884,"{'code': 'cb6938e0dac102685ded36d70e6225b01f1874d3', 'message': 'Make Endpoints.of(Un)Directed package private. I don\'t think it makes sense to create Endpoints outside the context of a Graph. Also, exposing these methods might encourage clients to try to make graphs with ""mixed"" (directed and undirected) edges, or even use Endpoints as a hacked up Pair.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=127230487\n'}"
1885,"{'code': '8be417067dc8a2d3c312d38cc712b7ea3d446dc5', 'message': 'Fixed the typo for javadoc\n\nFixes #2528\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=127197947\n'}"
1886,"{'code': '8319b5479afdf51629b8a08144604c40fbd6141a', 'message': 'Update link to Style Guide.\n\nFixes #2526\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=127196987\n'}"
1887,"{'code': '6439299ec90bf6af70e7651ca4cc8a5a468edbd2', 'message': ""Remove the isDirected() method from Endpoints. Also remove Graphs.addEdge(), which was only used inside Graphs, and I wasn't a huge fan of (it's super easy to implement yourself if you need the functionality).\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=127142376\n""}"
1888,"{'code': 'f64d1070bf6f8a5d6778f736ceb2f26254286918', 'message': 'Remove the method Graphs.roots(). “roots” as we’re defining them isn’t really a standard term of art (I can only find references to ROOTED graphs, which have exactly one root). Additional reasons to remove:\n\n1) It\'s super easy to implement yourself, either inlined as you\'re processing nodes or as a static method.\n2) The definition is even weirder for undirected graphs.\n3) If we have this method, we should have also have the parallel method ""Set<N> leafs(Graph<N> graph)"". However, ""leafs"" is not well-defined in graph theory. It can either mean ""nodes with an out degree of zero"" OR ""nodes with a degree of one"".\n4) There\'s only 1 real caller. Technically there\'s 2, but one of them seems to have a bunch of methods that are dead.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=127139526\n'}"
1889,"{'code': '78272bb5fda64a50355e82634deb2076dfab3b11', 'message': 'Split testFuzzyCompare(), which seems to be the main test to time out recently.\nThis should reduce the flakiness to more tolerable levels.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=127115918\n'}"
1890,"{'code': 'c9839e4799abb13c2504f9cec7fae2743dbf441d', 'message': 'Migrate from easymock to mockito in javatests/com/google/common/collect\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=127112056\n'}"
1891,"{'code': 'b610655ef7729fd5870d5a804e5fe48a119268bd', 'message': 'Migrate from easymock to mockito in javatests/com/google/common/hash\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=127106598\n'}"
1892,"{'code': '373d18a79d446b2770b7b16545c6599203088aae', 'message': 'Enforce that various iterators are unmodifiable to prevent potential bugs.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=127101187\n'}"
1893,"{'code': 'e5367f117079576ba10675ae78ed4752f250c640', 'message': ""Fix typo in ForwardingMultiset.\n\nPS: It would appear this class and many like it have between 0 and low single digit usage in all of [] (and of those uses, some are... questionable). I wonder how useful these classes really are :-/ although I'm sure we're not in any rush to deprecate them, just an observation.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=127094899\n""}"
1894,"{'code': 'acbdb82fa74bbe28ab1d81376f38d7868af8ebee', 'message': 'Slightly rearrange the methods in NodeConnections (I prefer all the Set-returning methods to be together). The subclasses still implement the methods ""in order"" due to their particular hierarchy.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=127035785\n'}"
1895,"{'code': 'bf357415a7ef30e3100e7e8e2fc6b80129a9b74b', 'message': 'Update Public Suffix List.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=127000299\n'}"
1896,"{'code': 'cfc06d3d2f2eec021b6d58d0c50e6884a4b63869', 'message': 'Fix 2 small typos in common.math Stats classes.\n\nhttps://github.com/google/guava/issues/2522\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=126994349\n'}"
1897,"{'code': '390c506448d47842888943f2fb9371f51e3cbb75', 'message': 'Migrate from easymock to mockito in javatests/com/google/common/io\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=126993635\n'}"
1898,"{'code': '18080d258c897f4e357d95675c9394c54ad1719c', 'message': 'Increase timeout for each open-source GWT test method from 5 minutes to 10.\nThe test that does static initialization of MathTesting is timing out.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=126971588\n'}"
1899,"{'code': '3f24df5f4ff41d0b70fdc8845bd4c4cadca896e2', 'message': 'Migrate from easymock to mockito in javatests/com/google/common/util/concurrent\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=126971523\n'}"
1900,"{'code': '1e17b2598bdc8b7257a01f4457230838262132d3', 'message': 'Migrate from easymock to mockito in javatests/com/google/common/cache\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=126971307\n'}"
1901,"{'code': '6ed0a709a546f1d2c3de6a56c032c2c5261926ae', 'message': ""Update definitions of equals() and hashCode() for Graph/Network. The new hashCode() shouldn't change any behavior (of course) but should be more efficient for directed graphs. equals() does change behavior in certain corner cases (see [] but it was arguably broken before. To keep things simple, we now flat out say directed != undirected.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=126965617\n""}"
1902,"{'code': 'cf2ee16221e38a2e600975f448b71e21fb321275', 'message': ""Update MapCacheTest so it's not flaky. Ensure the mapCache is cleared before every test so state is not persisted across tests.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=126918869\n""}"
1903,"{'code': 'df95a87ee451be485889487bd481695e0df8c03e', 'message': 'Delete MapMaker.makeComputingMap() and ComputingConcurrentHashMap.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=126901506\n'}"
1904,"{'code': '7850a145998c2dd7c01f256d85f967bab0ca3294', 'message': ""Add ConcurrentHashMultiset.create(ConcurrentMap).\nDeprecated and 'MOE insert public' for ConcurrentHashMultiset.create(MapMaker).\nMigrate [] users to the latter.\n\nRELNOTES: None\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=126901404\n""}"
1905,"{'code': '6427916a307897e56796f37609506d1062d72163', 'message': 'Add the method Graphs.endpoints() that does what you expect: returns the endpoints corresponding to each edge in a graph. The whole ""we print every edge in an undirected graph\'s toString() twice, and that\'s a feature not a bug *wink*"" annoyed me. Also there\'s other cases, such as copyOf() and and getWeaklyConnectedComponents(), where we don\'t want to process each edge twice. In those particular cases they happen to be no-ops, but for cases where it\'s not, or where you do something computationally expensive, doubling up on undirected edges is bad :(\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=126884706\n'}"
1906,"{'code': '8a2e1844e0b16cc476a5fc9bb5e4b78691610bba', 'message': 'Avoid using MapRetrievalCache unless node lookup is expensive. The class constructs ""CacheEntry"" objects when adding to the cache, which if the cache is not used makes us slower, and even if the cache is used is roughly a wash speed-wise if map lookup is fast (e.g. a HashMap or ImmutableMap, and an object with a reasonable hashCode()).\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=126874176\n'}"
1907,"{'code': 'f1f4c88f47c7c2a260a0d9410392e233eaada068', 'message': 'Move oppositeNode() from Graphs to Endpoints and rename it otherNode(). Also make a few methods final. It changes the following code:\n\nGraphs.oppositeNode(graph, edge, node);\n\nto this:\n\ngraph.incidentNodes(edge).otherNode(node);\n\nThe oppositeNode() method in Graphs always kind of bugged me. It takes three parameters, which is a lot for a utility method. More importantly, the last two parameters were both of type Object, with no ""obviously correct"" ordering, so it was easy to accidentally swap them and get a run-time error. Finally, with the introduction of the Endpoints class, this moves the method to the more logically correct place. Someone looking for this method was probably already dealing with incidentNodes() and Endpoints. It makes a lot more sense to say ""hey, sorry you can\'t call target() since this is undirected, try otherNode() instead!"" if it\'s in the same class.\n\nIn terms of the change itself, the more fluent style seems like a big win. And there\'s not even a burden to third-party implementations of Graph/Network, because we will have the only implementations of Endpoints (the constructor is private). So I see only positives and no negatives for this change.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=126859221\n'}"
1908,"{'code': 'f941b2d560f71d98c07c049d0a22cdf2f443f5b7', 'message': 'An optimization for Graphs and Networks, inspired by Michael. Introduce ""MapIteratorCache"" and ""MapRetrievalCache"". MapIteratorCache is extremely light-weight and optimizes the follow case:\n\nfor (N node : graph.nodes()) {\n  graph.foo(node);\n}\n\nwhile MapRetrievalCache is slightly heavier and additionally optimizes the following cases:\n\ngraph.foo(node);\ngraph.bar(node);\n\nOR\n\ngraph.foo(node1);\ngraph.foo(node2);\ngraph.bar(node1);\ngraph.bar(node2);\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=126763076\n'}"
1909,"{'code': 'd215851eaa46fe012abc4232a9a65544c52e3a9c', 'message': 'Permit forwarding from a Future<V> to a Future<? extends V>.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=126696175\n'}"
1910,"{'code': '1a4d70b4ae4d3dc01670ce825d1666dc8a66cabf', 'message': 'Fix typo.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=126665968\n'}"
1911,"{'code': 'a5b1ce806d6b6e9271debc430d335638bbb327e9', 'message': 'Replace use of MapMaker.makeComputingMap in Ordering.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=126444165\n'}"
1912,"{'code': '1b1163b7e2c121d4a5b25b8966714201551976c4', 'message': 'Fix DoubleMath rounding bug identified in Guava issue 2509.\n\nThe approach is a little changed from the pull request #2511 -- more exhaustive testing, and it does more math in long arithmetic before casting back to a double.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=126331169\n'}"
1913,"{'code': '47685055994a5f873c3f2d2f41190a519a883bf8', 'message': 'Fixing missing dep in concurrent.\nNot sure how targets are only now failing: []\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=126318059\n'}"
1914,"{'code': 'b62bb981723123e7fa33dec0193ca6597f8ad54b', 'message': 'Update comment to be more accurate/descriptive.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=126308525\n'}"
1915,"{'code': 'b03410a83c5c5aed312264846a5ea611be1093a9', 'message': 'Use N and E instead of S and T in get*MapForBuilder() methods.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=126305518\n'}"
1916,"{'code': '26304fc503be158226f1af31e06173a8d158fb62', 'message': ""Automated g4 rollback of changelist 125826869.\n\n*** Reason for rollback ***\n\nThe class-level Javadoc for the top-level interfaces is going to be refactored soon, and I don't want to lose these comments in the process.\n\n*** Original change description ***\n\nI was reading through the class-level javadoc (which could use some cleaning up, but I think jrtom said he's working on that), and this passage struck me. The latter two options don't seem like something that would actually happen. For example, we allow nodes of any type, so an impl where the nodes store the topology and cannot be shared across graphs doesn't really make sense.\n\nEven beyond that, this just seems like low-level implementation stuff that users of the Graph/Network interfaces shoul...\n\n***\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=126258496\n""}"
1917,"{'code': '2eecfca0cc07d3773dbb51a71bfb53aae8ca774e', 'message': 'Suppress SelfComparison error.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=126106581\n'}"
1918,"{'code': '165ef0d34adffb8a5ac84b859e9d58cd68412193', 'message': ""Mention getOnlyElement() as an alternative in the Javadoc for getFirst().\n\nThis came up in my Java readability review ([]as I had been\naware of getFirst() but not of getOnlyElement(). Indeed, I think many of the\ncases where it's valid to only look at one element from an iterator are\nactually cases where there's only one element in the iterator, and so I suspect\nI won't be the only person who's using getFirst() when they are really looking\nfor getOnlyElement() instead.\n\nThis CL also reformats the rest of the Javadoc for getFirst() to 100 characters\nto be consistent with the new paragraph that I added.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=126073627\n""}"
1919,"{'code': 'c482dbe283fe2d87d9ea001f3fda74132134456c', 'message': 'Super nit fix: move <p> into the same line as comment (this is how rest of common.graph is formatted).\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=126025605\n'}"
1920,"{'code': '7dbc4dff487c38fe0531f0fd4cd989f0b0329c38', 'message': 'Have more helpful error messages.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=125997504\n'}"
1921,"{'code': '49c91f7d855d2334b1417e3b64767b2aed29a2bb', 'message': 'Makes copyNodes() and copyEdges() @GoogleInternal. kevinb mentioned earlier that he thinks those methods should be @GoogleInternal for now.\n\nAlso, change copyOf() slightly to have separate impls for the predicate and non-predicate versions. The non-predicate version can be slightly more efficient by avoiding incident node containment checks when adding edges.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=125995006\n'}"
1922,"{'code': '50b4633420711d95606d42e5a2f0abd862771d6d', 'message': 'Delete the common.graph.algorithms subpackage. Move the... unusual retainWithTransity() method into the same package as its only caller. Move inducedSubgraph() into Graphs (dropped the ""get"" prefix) and tried to apply some sense of ordering to the class.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=125983079\n'}"
1923,"{'code': 'e5a731c3b7507efadc2a61b7c1bf69b964a646c4', 'message': ""The JavaDocs for LinkedHashMultimap#keySet() don't specify the iteration order of the returned set, so making the documentation more specific. The new JavaDocs were copied from Multimap#keySet(), with the 2nd paragraph added by me.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=125961795\n""}"
1924,"{'code': '58c157015408bd6a11d3be9e4dd76cf617d3db53', 'message': 'Use some fancy logic to reduce the number of equality checks in certain cases for undirected endpoints.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=125901163\n'}"
1925,"{'code': 'ef3b720d2a51b973c567416e97e3a7514517f737', 'message': 'Move the static ""constructor"" methods in ElementOrder above the class methods (as done in e.g. Endpoints). Also, remove ""final"" from the static methods, since it\'s not standard practice to include on static methods (and the class itself is final).\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=125901101\n'}"
1926,"{'code': '0ad7e8f68622fc13eb9bb4a881b9ae3ec63a8f47', 'message': ""Update example code snippet slightly (existing one doesn't techincally compile).\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=125873135\n""}"
1927,"{'code': 'a54c34542dc5c3c2bfa4d9f10a8bc9c565d3835b', 'message': 'Fix broken generic types in ElementOrder. Added two tests, neither of which compile with the existing code!\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=125863282\n'}"
1928,"{'code': '3b64d9c34377736ece64aec0207f62b6e5bc376a', 'message': 'Fix typo.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=125863097\n'}"
1929,"{'code': '4643834036b3af60e052bfa735a0addd04eabf85', 'message': ""I was reading through the class-level javadoc (which could use some cleaning up, but I think jrtom said he's working on that), and this passage struck me. The latter two options don't seem like something that would actually happen. For example, we allow nodes of any type, so an impl where the nodes store the topology and cannot be shared across graphs doesn't really make sense.\n\nEven beyond that, this just seems like low-level implementation stuff that users of the Graph/Network interfaces shouldn't have to care about.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=125826869\n""}"
1930,"{'code': 'ecabde5b336c79801f6d3eebb9266833abc85f99', 'message': 'Make the load factor for ""inner"" (per node/edge) hash maps and sets 1.0. Note that non-multi networks use HashBiMaps, which already have an unmodifiable load factor of 1.0.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=125796201\n'}"
1931,"{'code': '4c816891bd5b7eeb6c9787a73f5a0bc9aba8bfd7', 'message': ""More safety checks when adding and removing edges, plus simplify the code. Rather than return a boolean, addEdge now asserts that it *always* add an edge (we avoid calling it at all if it wouldn't). Similarly for removing edges, removeEdge() now asserts that it always removes an edge - unless the graph is undirected and it's a self-loop edge.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=125784233\n""}"
1932,"{'code': '9d2a5e9beaf310d81134e3629e5ffec1854f420c', 'message': ""Make degree(node) on directed networks O(1) instead of O(D), at the cost of a teensy bit of memory (a self loop counter). In actuality it doesn't seem to take up any extra memory, perhaps due to how the object is padded/aligned. Additionally, this CL makes iterating through incidentEdges() slightly faster on directed networks if no self-loops are present. In the undirected case, adding and removing self-loop edges is now slightly faster.\n\nNote: this CL makes it so that every call to *degree(node) is O(1), as explained here:\n\ndegree(node)\ndirected graphs: we store a map that combines predecessors + successors\nundirected graphs: easy\ndirected networks: now O(1) :P see description above\nundirected networks: easy\n\noutDegree(node)\ndirected graphs: we store an explicit successor count\nundirected graphs: same as degree(node)\ndirected networks: easy, we store an out edges map\nundirected networks: same as degree(node)\n\ninDegree(node)\ndirected graphs: we store an explicit predecessor count\nundirected graphs: same as degree(node)\ndirected networks: easy, we store an in edges map\nundirected networks: same as degree(node)\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=125754834\n""}"
1933,"{'code': 'aac086af38b6a8e68ca9de741fb6644b43e45608', 'message': ""Make sure all public classes/interfaces in common.graph have @Beta and @since.\n\nAlso, a little bit of narcissism :) add myself to authors to the main interfaces (Graph/Network/MutableGraph/MutableNetwork). I normally wouldn't list myself first but the convention seems to be alphabetical order.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=125691964\n""}"
1934,"{'code': 'a2fde5411366a29259483c521955ef1fdcef280b', 'message': ""Delete some incorrect javadoc. ImmutableGraph doesn't evan *have* an edgesConnecting() method. For ImmutableNetwork, the statement isn't quite true either. In the case of no parallel edges allowed, it's actually O(1) (thanks to [] Given that, I think it makes sense to just remove the statement entirely.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=125686408\n""}"
1935,"{'code': '29976218c6e986bc836706fa5e5fef737f10a2f0', 'message': ""Remove trailing whitespace.\nIt's marginally complicated a couple Java 8 branch integrations for me.\nAlso, add trailing newlines, and replace tabs with spaces.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=125668183\n""}"
1936,"{'code': '2278f6654038473e7e9dc09e07686fe6913c78ce', 'message': ""Remove some TODOs I added a while ago that probably shouldn't be TODONE.\n\nRegarding Java 8: we'll want to minimize the code differences between the two versions of Guava, and avoiding repeating a 3 line static method doesn't really seem worth the difference.\n\nAllowing users to specify the expected degree is in direct opposition with specifying expected edge count, since given two out of (node count, edge count, degree) you can always derive the third. Specifying node/edge count seems like the most reasonable combination, and it's what's already implemented.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=125642711\n""}"
1937,"{'code': 'acd1d3d410bb822e43990638c822f79854e9cde4', 'message': ""Make the predicate versions of copyOf() not call expected(Node|Edge)Size, because that may allocate too much memory if most elements don't pass the predicate.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=125642699\n""}"
1938,"{'code': '3963e35e57ec92dae33ea0b3e299524404159b0b', 'message': 'Test ImmutableMap.equals in ImmutableMapTest.testEquals.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=125597377\n'}"
1939,"{'code': '9b9286cee07f3b239ae61f25bbea0e2fe583957f', 'message': 'A teensy weensy optimization for the no-self-loops case.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=125596848\n'}"
1940,"{'code': 'fa375cce4ce6415d42342ef502988454a62b211a', 'message': ""Interrupt the producer thread instead of assuming it will exit naturally.\nIf the SynchronousQueue producer doesn't try to put() in time for the consumer to accept the value, it hangs forever.\nThe result is a flaky test.\n\nAs part of this, I've removed the producer's ability to fail the test if it's interrupted.\nThat's because I need to be able to interrupt the SynchronousQueue put() operation.\nI could find a way to continue to fail on interrupts in other cases, but it doesn't seem valuable enough to be worth the trouble.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=125565652\n""}"
1941,"{'code': '6cf5dc8665a8396637f401cd9aee6985a65cec7b', 'message': 'Always wait around for the expected interrupt.\nIn the current code, we sometimes stop waiting too early and never receive it. The main thread then waits forever to hear that the interrupt was received.\nThe result is a flaky test.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=125560176\n'}"
1942,"{'code': 'b49d93bc0b428a29f84bc9cbd1537a7b51d8debe', 'message': ""I thiiiink there's a chance the current removeEdge() impl could still cause a CME. Either way, I have a change that avoids the issue and is more efficient, by removing the self node from the predecessors/successors before we start iterating through them.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=125536109\n""}"
1943,"{'code': 'c0fa2df84f20dee3c58d22b3d18d30b1b836b72b', 'message': 'Fix typo in private method in Graphs.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=125493802\n'}"
1944,"{'code': '5c2f02f8ecda506398cefc3048aba2da4494e2f8', 'message': ""I remember why I did the parallel edge check before the self-loop check now! In the MutableGraph case, it's actually more efficient, because we can return early (rather than just throw an exception) in that case. And I have the same order in MutableNetwork just for consistency.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=125487467\n""}"
1945,"{'code': '0c83700802007d8741f09232836ac37b0b3c11c4', 'message': 'Propagate toString() through TrustedListenableFutureTask, for better debug.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=125473814\n'}"
1946,"{'code': 'ea4973c60724570d957f25bd827a8cadbba71ce6', 'message': 'Remove a retain cycle in FluentIterable.\nEven though ""this.iterable = this"" is a legitimate java code, it causes a memory leak when it is transpiled to objective-c via j2objc.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=125467534\n'}"
1947,"{'code': '25468d9a32c4723dd0d13087c0611960c6028dc5', 'message': 'Rename orderNodes() to nodeOrder() and orderEdges() to edgeOrder().\n\nNote that I feel this is actually *more* in the spirit of the guidelines we established.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=125467297\n'}"
1948,"{'code': 'a0844f75a6138c438453bd7bb8853e80bf0865a9', 'message': 'Merge GraphErrorMessageUtils into GraphConstants.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=125402353\n'}"
1949,"{'code': 'e246cf9a801497b64c54de03ca7331d767e8588f', 'message': ""Improve the performance of addEdge(). This doesn't change the big O runtime (it's already O(1)), but it does eliminate several hash lookups :)\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=125397749\n""}"
1950,"{'code': '1148cc947810a8cbad6177d15d9a05ee97d14ed9', 'message': 'Add Graphs.replaceEdge() (@GoogleInternal for now). Especially useful if a caller has immutable weighted edges and needs to update an edge weight. Given that we want to encourage immutable elements (as opposed to the mutable weighted edge my team ended up using :P), seems worthwhile.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=125392004\n'}"
1951,"{'code': '668a35673fff8ae3acb8d12a3d5fdda41c1af20e', 'message': 'Prefer TODO with bug number over alias, plus add a couple TODOs re: graphs with parallel edges.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=125370345\n'}"
1952,"{'code': 'b8ebf50f13a864264da9dd120753bc5906b6c3e8', 'message': 'Lower ""expected degree"" for internal maps, of which we have O(N) per graph/network. This greatly reduces memory consumption for graphs of small average degree, in exchange for a small performance hit for graphs of large average degree.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=125369630\n'}"
1953,"{'code': 'fe259bfc460bb9f67c0d2aa2a5b113c0af0a7200', 'message': 'Update variable names that referenced old node1/node2 names with new A/B names.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=125368052\n'}"
1954,"{'code': '5a6857187b707cdb6ac16fdf7c995b410dc93cb4', 'message': 'Delete the TODO to ""try creating an abstract superclass that NetworkBuilder and GraphBuilder could derive from.""\n\nI investigated this, and although it\'s possible, you get almost no benefit from it. There\'s only 3 rather trivial methods that end up the in the abstract class (4 if we eventually allow parallel edges on Graphs), and the subclasses still have to override them to scope the return type (you don\'t want to actually return the abstract base class to the user!).\n\nIf the method names were buildGraph() and buildNetwork() instead of just build(), it would be much more reasonable.  Then we wouldn\'t need an abstract class at all and NetworkBuilder could extend GraphBuilder. But I don\'t think the extra verboseness for callers is worth being able to simplify some code on our end. Also, I don\'t think being able to use a NetworkBuilder to build Graphs (not Networks) is an ability anybody particularly wants.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=125365378\n'}"
1955,"{'code': 'c514e3258a1da18c5609422743b4eebc2c887b4e', 'message': 'Give a more realistic usage example for EqualsTester.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=125338610\n'}"
1956,"{'code': '4736eea644d1d22e3f48bdfe4b315ee0e6288cfa', 'message': ""Update the immutable and mutable versions of copyOf() to have the correct restriction: don't make copies of Networks that allow parallel edges.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=125224138\n""}"
1957,"{'code': 'ef0b70ed311c37e0f9d64c5bd36895d4c02235df', 'message': ""Mark methods in Graphs that take a Predicate as @GoogleInternal until we can migrate to JDK 8's Predicate. Rename the merge*From() methods to copy*(). Change the behavior of copyEdges from copying over all edges (and adding incident nodes as necessary) to only copying over edges where the incident nodes are already present (and thus not adding any additional nodes), as was discussed in API review.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=125178123\n""}"
1958,"{'code': 'f1871a75754a1f26d0f15722a6a0e5aaa03ec76e', 'message': ""Clean up the implementation of roots() and move it to Graphs. This is part of the effort to delete GraphProperties.java, as discussed earlier. The other method in GraphProperties is isCyclic(), which I'd like to handle separately (e.g. it should handle undirected graphs if it's going to be in Graphs, or maybe moved to labs/).\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=125176121\n""}"
1959,"{'code': '3a70f36acc91ffa8c5c173171673083a3a0d3700', 'message': 'Update toString() for Endpoints in undirected case. Also, change test to use EqualsTester, which gives us coverage for hashCode().\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=125174596\n'}"
1960,"{'code': '7e9055fe8e74fafd022df80ce7001214c5329cba', 'message': 'Remove the redundant (inherited from Graph) adjacentNodes() method from Network, as well as some other javadoc cleanup I missed in []\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=125172452\n'}"
1961,"{'code': 'f5195606e82244b2d5c581aa3b160b798821826a', 'message': 'Work around javac bug.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=125169771\n'}"
1962,"{'code': 'f159e3fc4d9dec1beea0cc39cd887250e6ea36b5', 'message': 'Delete the existing Hypergraph interface. We\'re pretty much 100% sure this is not where we want it in the interface hierarchy, and leaving it there as a public interface isn\'t helping anyone.\n\nAlso, remove references to ""hyperedges"" and ""hypergraphs"" in the javadoc/g3doc. No proposal that we\'re considering will Graph/Network support hyperedges.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=125098921\n'}"
1963,"{'code': '7fbd99f23566e293a6b89db4639b91e31b6053b8', 'message': 'Change the return type of Network.incidentNodes() from Set<N> to Endpoints<N>. This also replaces the source() and target() methods on Network and moves them to Endpoints.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=125092926\n'}"
1964,"{'code': 'dfe6f1663fff4181d3e24828324b18beabe83a1f', 'message': 'Make unmodifiableNavigableMap covariant in V.\n\nFixes #2499\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=125058909\n'}"
1965,"{'code': '81bab84bb4136603a247ad61a51b699e48d82c4b', 'message': 'Update javadoc. The previous sample code was not actually doing what the comment describes. In particular, it was calling adjacentNodes() instead of successors(). The comment says ""all nodes reachable from node"", but adjacentNodes() will also travel AGAINST the direction of the edge (not necessarily ""reachable"" in the directed case).\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=125022633\n'}"
1966,"{'code': 'd995d54831ca569bbcc3f932ae068d5470062104', 'message': 'Fixes mismatched parentheses in Graph javadoc.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=124975157\n'}"
1967,"{'code': '2d5bf218070babe00f63d663e55828e7d669c539', 'message': 'Remove @Beta from Escaper and UrlEscapers.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=124844727\n'}"
1968,"{'code': 'eee9b2146655e142bd3d39675a9efc5c131b5199', 'message': 'Add a Charmander to CharMatcher.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=124753981\n'}"
1969,"{'code': '70f37c12b4cb53f5bce07084a150ababf575596a', 'message': 'Fix usage example of ImmutableSortedMultiset.Builder.\n\nFixes #2500\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=124729333\n'}"
1970,"{'code': 'ce340b320b78e7c3c758ece0a56ae17dd8e09a09', 'message': '*Builder, graph classes: support element ordering using a new ElementOrder class.\n\nMemoryTester: add accessors for bytesPerElement and constantOverhead.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=124401032\n'}"
1971,"{'code': 'c550125af4a0da6d2ba5a6dc6d44fa400824d9d4', 'message': 'Fix some Graph/Network javadoc.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=124387755\n'}"
1972,"{'code': 'cee9942d5ac735d8d143dad9cee019670f3b8ada', 'message': ""Document that we don't forward calls to default methods, except when we do.\nAlso, standardize on <b> for Warnings.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=124370400\n""}"
1973,"{'code': '5cac6264bc946d8532fd64b91da38a85646cb5b4', 'message': ""Allow linear white space before ';' character in MediaType.\nThis is allowed by the relevant specs, AFAICT.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=124283184\n""}"
1974,"{'code': '015fbbdd21eb52529f841325cfe94323893099d8', 'message': 'Move Graphs.selfLoopPredicate() to GraphsTest.java\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=124271785\n'}"
1975,"{'code': '477f645acc37e94a541a1998a23127d882277fa1', 'message': 'Suppress warning from comparing Object to itself. This was identified using Error Prone.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=124270612\n'}"
1976,"{'code': 'd573ee9196951825eb574551322c5b9a2c23b61c', 'message': 'Add some missing @Nullable annotations to InetAddresses.\nUse static imports for Preconditions.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=124267108\n'}"
1977,"{'code': 'f3381da3d4697f38384b8f45c16a362518d58a76', 'message': 'Push asList() cache down into ImmutableCollection subtypes to avoid holding onto the extra reference in ImmutableList.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=124186158\n'}"
1978,"{'code': '681566ebd5f060433f9dfc5324d84b0454ce4fdb', 'message': 'Support owner type subtype relationship in TypeToken.isSubtypeOf() and TypeToken.getSubtype()\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=124038295\n'}"
1979,"{'code': 'e53a8154368689026b3216fe259be4129c89fcd5', 'message': 'Make a couple of optimizations to UnsignedLongs.toString(x, radix):\n\n* If x > 0, use Long.toString. The JDK code is essentially the same for radices other than 10, and is much faster for 10.\n\n* If radix is a power of two, use shifting and masking instead of division and remainder.\n\n* If radix is even, simplify the initial division that extracts the last digit.\n\nSee also https://github.com/google/guava/issues/2478.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=123940513\n'}"
1980,"{'code': '52a6955f2a3f7d5e62bcb9561e5fc563b6e7fafb', 'message': 'Change MoreExecutors.invokeAnyImpl to accept <long, TimeUnit>.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=123436300\n'}"
1981,"{'code': '18fec18334b242dc71d9baeadaff78e2323e99d5', 'message': ""<td><b> => <th>\n\nAlso move the <blockquote> tags. The forthcoming Javadoc formatter will probably move them somewhere else. I kind of want to remove them, but I assume they're there to indent the table.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=123426877\n""}"
1982,"{'code': '21af9b60469de976a0f7bfe38f48a5f10b906a9e', 'message': '- Update links to URL and HTML specs where necessary.\n- Use https for all links, new and old.\n- Remove claim that the *fragment* will be percent-encoded at *parse* time, as this is apparently not true:\n""Unfortunately not using percent-encoding is intentional as implementations with majority market share exhibit this behavior.""\nhttps://url.spec.whatwg.org/#fragment-state\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=123321924\n'}"
1983,"{'code': '6c23ac1620a6e78bc313fd3e6c0ee2fd6520ac6a', 'message': 'Remove unnecessary string concatenation\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=123253690\n'}"
1984,"{'code': 'f0351dde0b006721b68cd4926498e66414e137d8', 'message': 'Deprecate Ordering.binarySearch.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=123249690\n'}"
1985,"{'code': '7037b865b955e0bbe697e735ed62d644d3a6ff01', 'message': 'Add a fallback in Ordering.leastOf to ensure the worst case of the quickselect component is bounded to O(k log k).\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=123038053\n'}"
1986,"{'code': '7086f2ee96caee74013128bfa80b9fcb21b6a01a', 'message': 'Make iterating through predecessors() and successors() more efficient on directed graphs. Avoids doing a hash lookup for every element in the table. A rough benchmark shows that iteration takes slightly less than half the previous time.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=122853102\n'}"
1987,"{'code': 'b09e955cf24482736cd6559786cfc10120ab867c', 'message': 'Restrict Unsafe.getLong() hack to x86_64 (amd64) and AArch64.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=122817458\n'}"
1988,"{'code': '7efca38f152334b6bca45c411355607d39b4c4a7', 'message': ""Adding WOFF2 media type.\n\nBootstrap uses this file format, which is then filtered out in apps framework since this type isn't defined.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=122743223\n""}"
1989,"{'code': '370c604dda193d01913c02a05630f3ae80bdd688', 'message': 'Use ""}{@code @"" or similar formulations to prevent things like ""@Override"" from being interpreted as tags.\nRemove some @Override tags entirely.\nMake other fixes as necessary.\nMove some code in the direction of the one-ish true-ish template-ish ""<pre>   {@code ... }</pre>.""\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=122443929\n'}"
1990,"{'code': '47b464a12eb901ad935b43a8720a152cb3a1fd4b', 'message': 'Rewrite the LongMath.SIEVE_30 constant in a more readable form. The new form is not numerically equivalent but the difference is only in the ignored bits 30 and 31.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=122266867\n'}"
1991,"{'code': '8d0c8b531da925e5afa35ac9e9bced969d5213ea', 'message': 'Update javadoc of Futures#dereference to point to correct #transformAsync method.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=122184701\n'}"
1992,"{'code': '7a7a663c67b006b1a01f2603a2aaea62972aaa70', 'message': 'Update public suffix list.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=122019817\n'}"
1993,"{'code': '67c6eead31950f1dcb60900b5dd33812cb298f54', 'message': 'isPrime: try to improve javadoc\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=122003309\n'}"
1994,"{'code': '2268de5221f052673c7ec2e883f8f8c2afe001c2', 'message': 'Expose {Int,Long}Math.isPrime to external users.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=121998832\n'}"
1995,"{'code': 'c234ed7f015dc90d0380558e663f57c5c445a288', 'message': 'Remove emptyIterator() from Guava.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=121572091\n'}"
1996,"{'code': '08d290bbba90e954dd2873e8e4e3d1cc96229b36', 'message': 'Deprecated Throwables.propagateIfInstanceOf() and propagateIfPossible().\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=121520908\n'}"
1997,"{'code': 'a6dcca483a2dcfd36e00e5c9eaa8f2158128fa97', 'message': 'Annotate the GWT client copy of ImmutableList.add* with @CanIgnoreReturnValue.\nThe server copy already has this annotation.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=121516405\n'}"
1998,"{'code': '14a372375b2f3786a0962966aec378d62dc7831b', 'message': 'Delete unused methods in ConfigurableMutable*.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=121494418\n'}"
1999,"{'code': 'f400dd0b93272a156bbf471edf03b3bf2ba65d70', 'message': 'Inline remaining usages of Throwables.propagate. We are removing all calls in preparation for deleting the method.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=121489882\n'}"
2000,"{'code': '42bd9bef16ea055965aa8a40ad1242b950702893', 'message': 'Make the AbstractConfigurable* classes actually abstract.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=121411875\n'}"
2001,"{'code': '18b794aba3d0bedcc0f65b41e66521db25f63323', 'message': ""Rename ConfigurableNetwork->ConfigurableMutableNetwork and ConfigurableGraph->ConfigurableMutableGraph. A followup CL will rename AbstractConfigurableNetwork->ConfigurableNetwork and AbstractConfigurableGraph->ConfigurableGraph (this is being done in two seperate CLs otherwise critique doesn't understand it's a rename). The above mentioned classes are not actually abstract, so calling them Abstract* is wrong.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=121393585\n""}"
2002,"{'code': '695f19022688ac1a724aeffa7eddf0f8deb6f0fb', 'message': 'Adds content security policy (CSP) headers, which are used by older user agents.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=121387099\n'}"
2003,"{'code': 'a393083a312bbc0974be0ce567e56ca17b7ca757', 'message': 'Remove @Beta from Throwables.throwIfInstanceOf() and throwIfUnchecked().\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=121375812\n'}"
2004,"{'code': 'aa02b68afbb05d19aa06e6b41bcc8c20fc92ea53', 'message': 'Deprecated Throwables.propagate()\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=121375741\n'}"
2005,"{'code': '6c86373a9f7407af9a8a921435ee2e0e1ade922f', 'message': 'Fix a minor oversight in using a constant in LongMath for its intended purpose.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=121145870\n'}"
2006,"{'code': '1de67afcb295c771fb00a98281c6becf74926e76', 'message': 'Predicates.subtypeOf, a correctly-named duplicate of Predicates.assignableFrom. Deprecate the latter. Add javadoc.\n\nhttps://github.com/google/guava/issues/1444\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=120843247\n'}"
2007,"{'code': 'ddda106332902b7b0888eb3b04b8c538e6f3e8d6', 'message': 'Delete warning that TimeLimiter might be changed significantly.\n\nIt is just as API-unfrozen as any other @Beta API -- no more, no less.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=120835232\n'}"
2008,"{'code': 'e3b6106c1f5798c49f95358687cdbfe493dfd90b', 'message': 'Added NaCL binaries to media type list.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=120819293\n'}"
2009,"{'code': '6ea15f3891e17a993fd87d86866296442980b591', 'message': ""Add some missing @Beta's for new stuff in 20.0.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=120809190\n""}"
2010,"{'code': '027e336819e18d7ac9b0d65301c3eed9ceaf3264', 'message': 'Delete GenericMapMaker parent class now that generic parameterization is no longer needed (caching APIs are gone).\nDelete unused NullEntry and AbstractReferenceEntry.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=120734317\n'}"
2011,"{'code': 'd300191a42cbfa410c7f8c5c82ecb4383c01e119', 'message': 'Add spaces to annotations inside comments to prevent them from being interpreted as real code when the file is parsed by tools that behave like the checker framework (see http://types.cs.washington.edu/checker-framework/current/checker-framework-manual.html#annotations-in-comments).\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=120731063\n'}"
2012,"{'code': '5ab9ab92200446e240934fb0b06d9cb497622f57', 'message': 'Delete MapMaker.softValues().\nDelete unused NullConcurrentMap and NullComputingConcurrentMap implementations.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=120709309\n'}"
2013,"{'code': 'f206690a68af12667fea42eb6df515c98dedf575', 'message': 'Remove MapMaker.expireAfterWrite(), the expirationQueue, ticker related functionality, and all expirable/evictable related implementation details.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=120703596\n'}"
2014,"{'code': '2ee69f587c4285cbb80f40d0d81c517d4778878c', 'message': ""Change name of Animal Sniffer run.\nThe old name includes the version of Java that we're running against. This would otherwise become an unnecessary diff between the Java 8 and Android branches.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=120559577\n""}"
2015,"{'code': 'a901d4fcedf9c1aa621ebb2c1257c0279dc47a3a', 'message': 'Suppress what will soon be an error-prone compile error internally.\n\npropagateIfPossible(e) means ""throw e if it\'s a RuntimeException or Error."" In this code, e is known to be a checked exception.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=120407217\n'}"
2016,"{'code': 'dbd485ec5fcd514d1361af194dc69aa28ee07780', 'message': ""Small optimization for node/edge containment. It wouldn't be worth it if nodes()/edges() returned they keysets directly, but wrapping in an unmodifiableset involves an extra object creation and subsequent garbage collection.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=120366484\n""}"
2017,"{'code': 'b734b00d9c190db6e70555d3937f32fda9f52985', 'message': 'Make sure edgesConnecting() is unmodifiable in the parallel edges allowed case.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=120348240\n'}"
2018,"{'code': '02dad9587b008a333a9985fe7e043c0c82618549', 'message': 'Clean up the impls of edges connecting in the no parallel edges allowed case. Slightly optimize contains() by avoiding constructing an interator.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=120347747\n'}"
2019,"{'code': '80dad6bf149f9b8d66e4db4436034cf6b7018398', 'message': 'Support reflection-less atomic updates in AggregateFutureState and InterruptibleTask as in AbstractFuture.\n\nFixes https://github.com/google/guava/issues/2463\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=120337540\n'}"
2020,"{'code': '717146e3910cf4e5243defa3760c456c4dc16ecb', 'message': ""Add some validation to predecessor/succesor counts. This should also catch the unlikely (impossible?) case where there are more than Integer.MAX_VALUE predecessors or succesors. Alternatively we could change these to longs, but that adds ~8 bytes to every node, and I'm already pretty sure a HashMap cannot hold more than 2^30 entries.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=120291028\n""}"
2021,"{'code': '8a0ac6c8f7b95effe92e598db769839833463fd0', 'message': 'Update documentation for Interners.\nSince Java 7, the String.intern() does not allocate the strings in permgen, but instead on the heap (in a table whose bucket size is configurable using XX:StringTableSize).\n\nSee http://bugs.java.com/view_bug.do?bug_id=6962930\nand http://java-performance.info/string-intern-in-java-6-7-8/\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=120287206\n'}"
2022,"{'code': 'dd6b0e8b0f143d357784ddb4c16223a3ac125113', 'message': 'Make mutable directed graphs about 40% smaller. Another nifty benefit: directedGraph.adjacentNodes(node).size() is now O(1). Remove (unused) equals/hashcode impl from NodeAdjacencies.\n\nInterestingly, this does make immutable directed graphs slightly larger. The exact % depends on the degree of the nodes. inDegree == 1 and outDegree == 1 is a particularly large increase because two SingletonImmutableSets is much smaller than one ImmutableMap with two entries.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=120276536\n'}"
2023,"{'code': '660634db9f0aca515d34931e6afa0f032b197918', 'message': 'Reduce the memory usage of Networks by roughly 20%. Delete the IncidentNodes class. Remove (unused) equals/hashcode impl from NodeConnections. Additionally, removeEdge() is now O(1) in all cases (used to be O(D) for networks with parallel edges). edgesConnecting() is now O(1) for networks that don’t allow parallel edges (used to be O(D), even though a network without parallel edges cannot return > 1 edge for this method).\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=120272801\n'}"
2024,"{'code': 'e6003692500352e1ba59eee5c93bc21acb3f46c0', 'message': 'Stop using exceptions as flow control in isUriInetAddress().\n\nThis causes processes to use more memory (Object[]s) than they ought to due to filling in stack traces for the exception.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=120245586\n'}"
2025,"{'code': '4c39fc6e3543700272764fa707311bb7c22d3e73', 'message': 'AbstractServices failure exceptions report what service failed to help with debugging tests with many services.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=120232421\n'}"
2026,"{'code': 'd02eda3dc4e1066f90b091d29f0323287cbd5b95', 'message': '""subType"" -> ""subtype""\n""superType"" -> ""supertype""\n\n""Subtype"" is one word, according to various dictionary and to our usage in public methods on TypeToken and MediaType.\n""Supertype"" is not as 100% clear in the dictionary, but when a dictionary or other document mentions it, I see it as one word. I also see precedent in ""Class.getSuperclass.""\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=120124434\n'}"
2027,"{'code': '03e61eefd8bb423859d35809d50877f8af8874cb', 'message': 'Work around Eclipse bug that previously affected GWT and now affects j2objc (with -sourceLevel 8):\nhttps://bugs.eclipse.org/bugs/show_bug.cgi?id=443596\n\nFixes https://github.com/google/guava/issues/1939 (though I believe that GWT fixed things on their end a while back)\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=119992342\n'}"
2028,"{'code': '49e7d716f0f72d00c490864c3d11b815cfe93ec4', 'message': 'Make some of Throwables available under GWT.\n\nFixes #2457\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=119967512\n'}"
2029,"{'code': 'c2abe9fd5346ed443ace463d31b2673f0a1e3d97', 'message': ""Add @GwtIncompatible.\nThis isn't currently necessary but may be so someday, so I've been trying to establish the practice.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=119881900\n""}"
2030,"{'code': 'e0198af556f68cc3a5cd20d638a5bba00c731c48', 'message': 'Add char overload to Joiner.withKeyValueSeparator() to parallel the overload in Splitter.withKeyValueSeparator().\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=119803558\n'}"
2031,"{'code': '946ebccece2c45cce528cdc6d2db1aa31d2cfa73', 'message': ""Currently, SomeClass<?>.getSubType(SubClass<?, OtherT>) returns SubClass<?, OtherT>.\nHowever, if we do NotGeneric.getSubtype(SubClass<OtherT>), we get SubClass as a raw type instead of\nSubClass<OtherT>.\n\nIf we fix that bug, then as it turns out we weren't generating proper owners for static classes, so fix that too\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=119755147\n""}"
2032,"{'code': '2645626b6c724f1b9535e8bb49663c11e661a5a7', 'message': 'Followup to ""Let PackageSanityTests run over the entire package (and stop special casing).""\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=119501361\n'}"
2033,"{'code': '293e69ed6449f2b9975450e903a2a93ff7ad264c', 'message': 'Let PackageSanityTests run over the entire package (and stop special casing).\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=119488117\n'}"
2034,"{'code': 'c1c5dae45283129c67eb7d5d2b5b90eff4c92c4c', 'message': ""Graph.java: break out mutation- and edge-specific methods into subinterfaces:\n* Network.java: edge-specific methods (extends Graph)\n* MutableGraph.java: mutation methods for Graph (extends Graph)\n* MutableNetwork.java: mutation methods for Network (extends Network)\nGraph<N, E> becomes Graph<N>.\n\nConsequential changes:\n* adding various new Network-specific classes (NetworkBuilder, AbstractNetwork, etc.)\n* adapted Graph-specific classes to remove edge-related code\n\nNote: Graph does not currently support parallel edges.\n\nMotivations:\n* Make graphs without explicit, first-class edge objects available.\n* Remove mutation methods from the top-level interfaces so that Graph/Network objects supplied as their parameters don't (contractually) support modifications.  (And so that the slightly differing signatures for Graph and Network mutation methods don't cause user confusion.)\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=119461180\n""}"
2035,"{'code': '693e95371e544e927a2f6c3f3ebcb9b3d6c2f525', 'message': 'Stop toString() on Stats and PairedStats throwing when the count is zero.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=119289337\n'}"
2036,"{'code': '2bcf189a62275bb23fd92edf4dc72e9ad849a89e', 'message': 'Add throwIfUnchecked and throwIfInstanceOf.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=119271623\n'}"
2037,"{'code': '2f3f7b1e766d4831c87cfc210c5ab46b12d289c9', 'message': ""Delete MapMaker.expireAfterAccess(), including it's recencyQueue.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=119225281\n""}"
2038,"{'code': '2b4067d26e1533a878349434b73deb1282f8432d', 'message': ""Delete MapMaker.maximumSize(), including it's evictionQueue.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=119208974\n""}"
2039,"{'code': 'f753b087158d3b0f5bda8b5788ef2ab4f3d54581', 'message': 'Add javadocs about O(1) support for Iterables.getLast() on RandomAccess lists.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=119188139\n'}"
2040,"{'code': '3eb8face47fe7783daba0469b4842ff64946fb1f', 'message': ""Avoid importing classes that don't exist in GWT.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=119183243\n""}"
2041,"{'code': '0b556868431f6bc11c12e41ad18b7ea4b8b226f8', 'message': 'Remove MapMaker removal notification queue and removal listener support.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=119165768\n'}"
2042,"{'code': 'bcd212c9c7134555114ef6892cd61916f1f5ad71', 'message': 'Update Public Suffix List.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=119098167\n'}"
2043,"{'code': '5f0f00090a2c2f00916aefd8994988cce40f0060', 'message': 'Improve MoreExecutors.shutdownAndAwaitTermination.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=118971489\n'}"
2044,"{'code': 'd248cc8c4d65694d934e96526e4eab0bedb8f5fd', 'message': 'Hide MapMaker.maximumSize() internally.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=118959646\n'}"
2045,"{'code': '20cd7a4f21941f993600bdb182fa00e8da3c342b', 'message': 'Add more warnings to the javadoc of Files.copy(File, File)\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=118821183\n'}"
2046,"{'code': '66560f1d37c9de06a8963e7051fdc539f2f2f3c9', 'message': 'Fix typo in Javadoc: ImmutableList is a ""list"", not a ""set"".\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=118817173\n'}"
2047,"{'code': 'c995616f2409e2b20e890e415d6dd3d38d5bc1fe', 'message': 'Implement Stopwatch.toString() under GWT.\n\nFixes #2437\nFixes #2365\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=118680962\n'}"
2048,"{'code': '5b608043b9d56a4427a2d8c1583f6f3c5a4e1023', 'message': 'Remove wildcard imports.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=118678029\n'}"
2049,"{'code': '519be107c031c05b506d407a7b7cf5578a2764a0', 'message': 'Remove the use of static, shared buffers for skipping/discarding data.\n\nAlso replace the use of BUF_SIZE constants with createBuffer() methods.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=118598496\n'}"
2050,"{'code': '5249b00e4df2097166a7536992a842a18e6880d5', 'message': ""Add ByteSteams.exhaust(InputStream) and CharStreams.exhaust(Readable).\n\nAlso ensure that the write-only skip buffers are zeroed each time they're written to just so we don't hang on to any data we shouldn't in memory.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=118584097\n""}"
2051,"{'code': '45e1848250b10d88aadf726005612d1b2d328a1b', 'message': 'Add .DS_Store to .gitignore.\nFrom: mardibiase <mardibiase@gmail.com>\n\nFrom #2437\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=118503538\n'}"
2052,"{'code': '8992cc01ce05904e3e91da265df0b832cc925546', 'message': 'Re-run google-java-format on //java[tests]/com/google/common/ (up to escape) now that some\nformatting behavior has changed.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=118071047\n'}"
2053,"{'code': '0657551ce26c5c1e2f43c3e191f05f238fdd2acf', 'message': ""Changes to the LinearTransformation API: add inverse(), remove transformY(y), and rename transformX(x) to transform(x). Note that inverse().transform(y) is the new transformY(y).\n\nThe inverse is lazily initialized, following the pattern used in Converter. (This doesn't to any double-checked locking or anything, which is presumably okay because in the unlikely event of a race, constructing it twice is not the end of the world.)\n\nTGP appears to show nothing but flakes: [][]\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=118056833\n""}"
2054,"{'code': '65e6bd2efb54b9f6a94de0771db698cea8d2a1ca', 'message': ""Remove hardcoded graph toString() tests. Instead, simply verify that every node and edge appears in the graph's string representation. This is done for a few reasons:\n\n1) It gives us a false sense of test coverage. For example, getPropertiesString() is used in both the actual code and the test code. If there was a bug in getPropertiesString none of the tests would catch it.\n\n2) Any minor tweak to the graph string format, which should be an easy change, requires touching a lot of tests.\n\n3) The biggest reason: incidentNodes() on an undirected graph makes no guarantee of order. As such, a test should not hardcode the expected toString() result. Multiple string representations of the same graph are equally valid.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=117974195\n""}"
2055,"{'code': 'eadcba08e2c5290afbe30b88d1773cca6e82d980', 'message': 'Link to the new spec instead of the old one, and do so more concisely.\n\nContext: https://github.com/google/guava/issues/2434#issuecomment-200464086\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=117950249\n'}"
2056,"{'code': '276bd8045c98935858ff068cd64dd07a7dc42fc0', 'message': 'Add constants for X-Forwarded-Host and X-Forwarded-Port to HttpHeaders.\n\nSee https://github.com/google/guava/issues/2430\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=117837581\n'}"
2057,"{'code': '94f1bf053ee27fa06b1f350646d57dab42d413df', 'message': 'Deprecate all CharMatcher constants.\n\nRemoval date tentative based on date of 20.0 release.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=117833310\n'}"
2058,"{'code': '72f1743e7c365f6d979625d55fdfda8c18ab127b', 'message': 'Re-remove CharMatcher.WHITESPACE internally.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=117823196\n'}"
2059,"{'code': 'f1a0a2e2ada9e300412041a2190a8e6825e03858', 'message': 'updated readme\n\nFixes #2431\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=117823087\n'}"
2060,"{'code': 'e31ea8307811fc8e82503fd901d55c7535c3e125', 'message': 'Remove MapMaker.expireAfterAccess() from public API internally. Please use CacheBuilder instead.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=117774783\n'}"
2061,"{'code': '95953a50badf3b966ca35423e3146455aab9b107', 'message': ""Make all AbstractFutures behave like TrustedFutures under GWT.\n\nI'm doing this for two reasons:\n\n1. Exceptions are almost certainly disproportionately expensive under GWT. But mostly...\n\n2. I can get away with under GWT, where there are very few users of util.concurrent. (This is technically a violation of our compatibility policy, but I suspect we've played a little fast and loose with it when it comes to GWT before. Plus, util.concurrent is likely to be even less used outside Google than it is inside, and it gained GWT support only in Guava 19. And to top that off, I hope to remove Future.get() entirely from GWT, so this CL will be the least of users' worries :))\n\nAlso, update a comment in ImmediateFuture.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=117746555\n""}"
2062,"{'code': '2ce6c11ff71122bd9b55766f9116ee3b7bdb2d75', 'message': 'Steer users away from dereference().\n\nQuestions:\n- Should I steer them away even more strongly? Should I be trying to delete this method?\n- Might we want Callables.submit(Executor, AsyncCallable)? This is a moderately common use of dereference(). https://github.com/google/guava/issues/2076\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=117730195\n'}"
2063,"{'code': '42292f577883abae1d8d1e9fd5443fe666007170', 'message': 'Steer users away from ListenableFutureTask.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=117730099\n'}"
2064,"{'code': 'e6acf93a0d2fe6fdf12f8232b6002a66599ad6c7', 'message': 'Update public suffix list.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=117625766\n'}"
2065,"{'code': '807760488eaaab1ced435ec07dab6be7e991fc47', 'message': ""Major refactoring of the com.google.common.graph APIs (including updates to client code):\n-Remove DirectedGraph and UndirectedGraph interfaces; a Graph's directedness can now be queried with graph.isDirected().\n-Remove GraphConfig class; use the query methods directly on the Graph interface instead.\n-Add GraphBuilder; use this instead of Graphs.create[Un]Directed(GraphConfig)\n-Remove ImmutableGraph.Builder; ImmutableGraph construction is now done with ImmutableGraph.copyOf(Graph).\n-Rename multigraph() to allowsParallelEdges(boolean).\n-Rename noSelfLoops() to allowsSelfLoops(boolean).\n\nOld example syntax for creating a graph:\n  DirectedGraph<N, E> graph = Graphs.createDirected(GraphConfig.multigraph());\n\nNew example syntax for creating a graph:\n  Graph<N, E> graph = GraphBuilder.directed().allowsParallelEdges(true).build();\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=117606125\n""}"
2066,"{'code': '76cc848bf7f739d05789d9d7b4f83b9c7bee6906', 'message': 'Automated g4 rollback of changelist 117579683.\n\n*** Original change description ***\n\nRemove CharMatcher.WHITESPACE internally.\n\n***\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=117604531\n'}"
2067,"{'code': '7e0795df212bd33828d23f9fc27532f95d376192', 'message': ""Test that changes to an Iterator are reflected in the backing collection.\nUnrelatedly, move CopyOnWriteArrayList suppressions into TestsForListsInJavaUtil, since the collection's quirks are documented decisions, not implementation bugs. This prepares for adding another suppression on the Java 8 branch.\n\nTested:\nglobal TAP\n[]\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=117580763\n""}"
2068,"{'code': '63ae85444ead5f9f4021877bf4a74599935cd608', 'message': 'Remove CharMatcher.WHITESPACE internally.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=117579683\n'}"
2069,"{'code': 'c925b98f0dadbf1fe836fe70251ba294ef8f6c81', 'message': 'Document that order() is called even without KNOWN_ORDER.\n\nFixes https://github.com/google/guava/issues/2349\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=117569479\n'}"
2070,"{'code': '6bd4a49baaefd36e1f7c8c4d28a82d688b15a0fc', 'message': 'Skip Map+Multimap toString() tests if NON_STANDARD_TOSTRING is specified.\n\nFixes https://github.com/google/guava/issues/2418\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=117563335\n'}"
2071,"{'code': '00ad4b03340a6b58134e5f6f5c46c0eb775a3895', 'message': 'Hide MapMaker.removalListener() internally.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=117372601\n'}"
2072,"{'code': '660e86d7f4f6bdc165d923fb7851d11648ab88fe', 'message': 'Restore documentation that Futures.catching is available under GWT but with some caveats.\n\nThe resulting documentation looks roughly like this:\n\n@Partially.GwtIncompatible(value=""AVAILABLE but requires exceptionType to be Throwable.class"")\npublic static <V,X extends java.lang.Throwable> com.google.common.util.concurrent.ListenableFuture<V> catching(\n    com.google.common.util.concurrent.ListenableFuture<? extends V> input,\n    java.lang.Class<X> exceptionType,\n    Function<? super X,? extends V> fallback)\n\nFixes https://github.com/google/guava/issues/2379\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=117364356\n'}"
2073,"{'code': '99ec8ccc644bc13a85836251b0885af810465114', 'message': 'Remove all CharMatcher constants except WHITESPACE internally.\n\nWHITESPACE will be removed separately since it had orders of magnitude more usages.\n\nThis is effectively a roll-forward of [] but with additional constants removed.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=117362844\n'}"
2074,"{'code': '478faecc46d31a0fee22f88a17e599407669f81b', 'message': 'Remove class from <pre class=""code"">.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=117357703\n'}"
2075,"{'code': 'a25d9cc5d20a6b4faa8370a1afaf5b0f50fe361c', 'message': 'Specify behavior with self-loops in degree() javadoc.\n\nWikipedia states: ""the degree (or valency) of a vertex of a graph is the number of edges incident to the vertex, with loops counted twice"". I\'ve found several primary sources that also state the same. But Wolfram has this definition: ""The degree of a graph vertex v of a graph G is the number of graph edges which touch v"" with no mention of self-loops.\n\nWith directed graphs it would be easy to get this behavior (just return inDegree + outDegree), but with undirected graphs you would either need to store more information than we currently do or make this an O(D) method instead of O(1). Overall I\'m not sure how many people care so probably not worth changing, but at least worth calling out in the javadoc.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=117273477\n'}"
2076,"{'code': '7d436409f79a40cdae8c247d9dacae841648f4d4', 'message': 'Fix javadoc typo in ImmutableSet.copyOf()\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=117174782\n'}"
2077,"{'code': '219235d1add4557c4a92db136b056f1afcdcae55', 'message': 'Replace instances of StringBuilder.append(String.substring/CharSequence.subsequence) with the append overload that takes a substring range. Plus another minor change.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=117136790\n'}"
2078,"{'code': 'a27bcd2f585ab90afc52173cbed38d1d573c51f3', 'message': 'Make immediateFailedFuture and immediateCancelledFuture trusted futures.\n\nhttps://github.com/google/guava/issues/1961\n\n(Rollforward CL 86499614, which was rolled back in CL 86516778 because of test breakages.)\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=117125023\n'}"
2079,"{'code': '2cd4d629a2b6f1a462643b248e0972f44c5133b7', 'message': 'Update references to guava-libraries.googlecode.com to the Github location in pom.xml files.\n\nTested:\n    TAP --sample for global presubmit queue\n    []\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=116983878\n'}"
2080,"{'code': '15ad032a151d8b3f3bbd2aa7aee83c326f9edc44', 'message': 'This change replaces usages of static final fields on CharMatcher, e.g. CharMatcher.WHITESPACE, with the equivalent static factory method, e.g. CharMatcher.whitespace().\n\nThe change is being made so that we can remove the static final fields, primarily because they must be eagerly initialized, causing many implementation classes (which may be unnecessary) to be loaded. This is a significant performance problem on Android. Using methods allows implementation classes to only be loaded when actually needed, as well as matching our long-standing preference for factory methods over public fields.\n\nSee [] for more information.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=116880331\n'}"
2081,"{'code': '8a44aef49e970db93d5b3406d74b95e916b65467', 'message': ""Used UncheckedThrowingFuture in another place.\nAdd tests for Error throwing now that that's easy to do.\n\nThis also eliminates a usage of Forwarding*Future:\nhttps://github.com/google/guava/issues/2416\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=116853544\n""}"
2082,"{'code': '92f59507b136d7efd6af91dd9c9ceba2ee0daa06', 'message': 'Adopt getDone() and getDoneFromTimeoutOverload() in other Future tests.\nMove ""get(-1, SECONDS)"" test out of the normal path and into its own test method so that I can supppress it if we remove Future.get under GWT.\nTest ""get(MAX_VALUE, SECONDS)"" for overflow.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=116853438\n'}"
2083,"{'code': 'ba2024d4e147cedc3fb442746872b46b11fef8a9', 'message': 'Fixes, standardizations, and noise reduction in Futures tests.\n\n- Run more tests under GWT (and fix some @GwtIncompatible reason documentation). This required no actual changes to the tests except...\n- Make testSuccessfulAsList_resultCancelledRacingInputDone look at the correct logger now that we\'ve moved most listener execution to AbstractFuture.\n- Retrieve that logger with getLogger() rather than from the class under test\'s `log` field.\n- Use TestLogHandler instead of our custom throwing handler.\n- Move RuntimeExceptionThrowingFuture out of FutureCallbackTest, and use it in FuturesTest instead of our hacked up solutions that happen to work today.\n- Test both overloads of get() for some immediate*Future() implementations.\n- Go crazy with static imports, even by my standards.\n- Rename expected exceptions to ""expected,"" and remove comments about their expectedness.\n- Remove descriptions from fail() calls.\n- Remove a redundant immediateFuture() test.\n- Use Truth in a few places.\n- Use getDone() for various reasons:\n  - It will let tests work under GWT if I remove get() there.\n  - It sometimes saves us an isDone() assertion.\n  - It prevents some tests from hanging in the case of a bug.\n  - It doesn\'t declare `throws InterruptedException`, so in theory, we might be able to remove some `throws` clauses. (But I haven\'t done so.)\n- Add a getDoneFromTimeoutOverload() with a custom GWT implementation to prepare for losing timed get() there.\n\nLeft for later CLs:\n- reformatting everything\n- splitting FuturesTest into separate classes\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=116759522\n'}"
2084,"{'code': '9a2c0e531ee7202ec0aeae35b7e4bacf6b8dc88e', 'message': 'Make LittleEndianDataOutputStream final (like LittleEndianDataInputStream).\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=116674000\n'}"
2085,"{'code': '001b5850d1d3beec5caedf8002f87b33c1399471', 'message': 'Fix tiny Javadoc problems.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=116657537\n'}"
2086,"{'code': 'd1bcf31967d6070df7d65a181af62e5b9e3665e6', 'message': 'Use Futures.getDone() internally.\nAdd a doc reference to getDone() from getUninterruptibly().\nImprove the error message on bad calls to getDone().\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=116652736\n'}"
2087,"{'code': '189aa74b143dab4c7d8d8568961d39abe01e9209', 'message': 'Add @CheckReturnValue to the com.google.common.io package. This forces the caller of these APIs to ""do something"" with the result of the call.\n\nFor more information, see []\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=116620632\n'}"
2088,"{'code': 'c5f3d4692ad2228dc1c88f03965fdf5b9eefeb1a', 'message': 'Start a README.md and an overview/recipe-book for Stats calculations. Revise Stats.java class docs a bit.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=116584822\n'}"
2089,"{'code': 'f38e143893dc6e7f8cdda979a4f1d2623623b028', 'message': 'Discourage people from mocking or otherwise creating custom implementations of ListenableFuture.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=116573821\n'}"
2090,"{'code': 'd810fc4b42d80b64fd118c2cf1483fb7682d34a9', 'message': 'This change replaces usages of static final fields on CharMatcher, e.g. CharMatcher.WHITESPACE, with the equivalent static factory method, e.g. CharMatcher.whitespace().\n\nThe change is being made so that we can remove the static final fields, primarily because they must be eagerly initialized, causing many implementation classes (which may be unnecessary) to be loaded. This is a significant performance problem on Android. Using methods allows implementation classes to only be loaded when actually needed, as well as matching our long-standing preference for factory methods over public fields.\n\nSee [] for more information.\n\nTested:\n    TAP train for global presubmit queue\n    []    Some tests failed; test failures are believed to be unrelated to this CL\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=116565003\n'}"
2091,"{'code': 'a54bc6e1fea45a672837f334362910dbf1e6da5e', 'message': 'Automated g4 rollback of changelist 116449500.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=116468022\n'}"
2092,"{'code': 'dffed2f7420dff52045949bc3925ebf3491d1575', 'message': 'Prevent fail() from being ignored by the surrounding catch() block by throwing new Error().\n\nTests of a testing API often look like this:\n\ntry {\n  runATestThatShouldFail();\n  fail();\n} catch (AssertionError expected) {\n}\n\nHowever, the catch() block can catch not only the expected failure from runATestThatShouldFail() but also the ""test did not fail when it should have"" failure from fail().\n\nThis an automated fix using Error Prone ([]\n\nWe intend to make this a compilation error in []\'s Java compiler,\nso it is necessary to fix existing occurrences first to avoid breaking\nbuilds.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=116458330\n'}"
2093,"{'code': '71b34733742f6381fc2f384121567e02968aba71', 'message': 'Fix documentation issues with CharMatcher.matchesNoneOf.\n\nFixes external issue https://github.com/google/guava/issues/2410.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=116450985\n'}"
2094,"{'code': '232a80ea5ce2bad7b6c3a20a21cee1278839495a', 'message': 'Shuffling from internal-only change.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=116449500\n'}"
2095,"{'code': '622d9477e597d01553dad65be1f8eb216ac5431f', 'message': ""Remove more unnecessary @CheckReturnValues on APIs now that these packages are\ncompletely @CRV'd.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=116285375\n""}"
2096,"{'code': 'a2a2ebb9aa29a5d24182f394125121129f936155', 'message': 'Remove @CheckReturnValue from individual classes now that it is in\npackage-info.java\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=116280164\n'}"
2097,"{'code': '3875a1b95070b2a8305814c8f009c20d1981529b', 'message': ""Add Futures.getDone().\n\nAPI Review:\nhttps://docs.google.com/document/d/1HvGIffjs3clWLzs0SNzLSKSzlzjIIesZOt6fhedo85Y/edit\n\nAlso, make immediateCancelledFuture() available under GWT, since I use it in the new tests.\nTo use cancellationExceptionWithCause() from it, I had to move that method out of the server-only AbstractFuture.java and into the shared Futures.java.\nThis runs somewhat counter to my effort to make Futures.java smaller. Maybe we'll want a Util/Helpers class, though I'm not quite sure what else would go in it (executeListener? currently non-static maybePropagateCancellation?).\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=116279071\n""}"
2098,"{'code': '6daefa4c432de3b3c26010bae33bbbefc347db64', 'message': 'Update the travis configurations to only build the ""master"" branch or any branches prefixed with ""release"" in order to reduce the duplicate use of build bots on travis for pull requests based on non-user-fork-originated branches.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=116275195\n'}"
2099,"{'code': 'baab673669e86bc1f9aba851e63cc25d559bff9a', 'message': 'Add @CheckReturnValue to com.google.common.collect package. This forces the caller of these APIs to ""do something"" with the result of the call.\n\nFor more information, see []\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=116272898\n'}"
2100,"{'code': '8c90f965ecbd401e5b1b70ed434b5ff46d9b77de', 'message': ""Add tests:\n- map.put(presentKey, value)\n- entry.setValue\n\nFixes https://github.com/google/guava/issues/2406\n\nMake classes support entry.setValue:\n- CompactHashMap\n- LocalCache\n  - Support was removed in [] and I'm not sure why.\n  - The private documentation still claims that it's supported.\n  - A test (that I edit in this CL) checks that it's not, but presumably only because it was copied from a test that looked for the old behavior and thus needed to be updated: http://[] | []\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=116244562\n""}"
2101,"{'code': '06ab00ba27e5473b1461e5a8693a814721581fef', 'message': 'Remove unused variables.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=116177337\n'}"
2102,"{'code': 'f7d482d79eb1f6953d9b421d94118d34f0428406', 'message': 'Add asAsyncCallable method to Callables.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=116175454\n'}"
2103,"{'code': '5364bf33e15c46c1b362ad7a7a5208bc012557db', 'message': 'When displaying the actual class name, use the simple name.\n(Note that GWT has supported getSimpleName() since 2.6.0.)\n\nWe started doing this for the expected class name in CL 115380685 by passing literal strings like ""IllegalStateException"" to the constructor.\nBut I also made some changes to make this more obvious.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=116150794\n'}"
2104,"{'code': 'f5855cd04305aefaf519b42a737a6651e84546d1', 'message': 'Add missing rejectionPropagatesToOutput tests.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=116137704\n'}"
2105,"{'code': '2d97fd8466f9bf00c7a90d1795b3ce0b891c030c', 'message': 'Never return a (Sorted|Navigable|Bi)(Map|Set) from the plain (Map|Set) overloads.\n\nPrior to this CL, the plain overloads performed instanceof checks, delegating to the (Sorted|Navigable|Bi) versions when possible.\n\nThe old behavior is probably The Right Thing, but it hinders Proguarding.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=116128191\n'}"
2106,"{'code': '2b384af7d7c63afa06cf684c24867757d7e54969', 'message': 'Encourage users to use framworks instead of chaining things together manually.\n\nAs part of that, I tried to clarify the significance of using ListenableFuture ""as an input to another Future."" I don\'t love what I\'ve ended up with, but I\'m not optimistic that I\'ll do better anytime soon.\nOne part of *that* was switching part of the doc to the second person simply because I couldn\'t find a good way to make it flow otherwise. I ended up propogating this to more of the doc, and I think it\'s probably a small net improvement.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=116019725\n'}"
2107,"{'code': '9ee945dbee63ab6171f3eba73a2cb1219cc6c952', 'message': 'Add @CheckReturnValue to Iterators. This forces the caller of these APIs to ""do something"" with the result of the call.\n\nFor more information, see []\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=116004491\n'}"
2108,"{'code': '525112c0128c2fa065a2b48424995d24038ebf6e', 'message': 'Add @CheckReturnValue to ListMultimap and SetMultimap. This forces the caller of these APIs to ""do something"" with the result of the call.\n\nFor more information, see []\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=115997209\n'}"
2109,"{'code': 'b281c1fd5a960abf179fe8f4f280daca47ff2156', 'message': 'This change replaces usages of static final fields on CharMatcher, e.g. CharMatcher.WHITESPACE, with the equivalent static factory method, e.g. CharMatcher.whitespace().\n\nThe change is being made so that we can remove the static final fields, primarily because they must be eagerly initialized, causing many implementation classes (which may be unnecessary) to be loaded. This is a significant performance problem on Android. Using methods allows implementation classes to only be loaded when actually needed, as well as matching our long-standing preference for factory methods over public fields.\n\nTested:\n    TAP train for global presubmit queue\n    []    Some tests failed; test failures are believed to be unrelated to this CL\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=115935997\n'}"
2110,"{'code': '892e323fca32945cdfb25395ca6e346dd0fffa5b', 'message': 'Add overloads to Preconditions checkState,checkArgument and checkNotNull to avoid boxing and varargs for the most common parameter combinations.\n\nThis adds primitive overloads for all combinations of Object,char,int and long up to 2 parameters and Object only overloads up to 4 parameters.  This covers 92-98% of formatting calls based on an analysis of googles codebase.\n\nThis change is fully binary compatible but only mostly source compatible.  It is possible that this cl will call some Preconditions calls to become ambiguous with respect to overload resolution.  For example this call\n\nvoid foo(Boolean condition, short s) {\n  checkState(condition, ""%s"", s);\n}\n\nwill fail to compile with this change.  There are two simple changes to the invocation that will resolve the ambiguity.  \'condition\' can be explicitly unboxed, or \'s\' can be explicitly boxed.  We believe that such situations will be incredibly rare.\n\nSee the JLS 15.12.2 for full information on overload resolution: https://docs.oracle.com/javase/specs/jls/se7/html/jls-15.html#jls-15.12.2\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=115881707\n'}"
2111,"{'code': 'b76c4183becbcfceb618dcecdfb46951209889da', 'message': 'Add @CheckReturnValue to RangeMap and RangeSet. This forces the caller of these\nAPIs to ""do something"" with the result of the call.\nFor more information, see []\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=115856896\n'}"
2112,"{'code': 'c56fa61dfa62612cb7191790beec647ba053f434', 'message': 'Add @CheckReturnValue to Multimap and Table. This forces the caller of these APIs to ""do something"" with the result of the call.\n\nFor more information, see []\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=115771812\n'}"
2113,"{'code': '012d8f4f9c07228c89c728330abaaa6a87cd318d', 'message': 'Make Iterables.unmodifiableIterable() and Iterators.unmodifiableIterator() methods accept (Iterable|Iterator)<? extends T> instead of (Iterable|Iterator)<T>. Some of our unmodifiable*() methods already did this (e.g. unmodifiableMultiset(), unmodifiableBiMap()), and the ""? extends T"" signature is consistent with the unmodifiable*() methods in Collections.java.\n\nNote that SortedMap only does it for values, not keys, due to the various Key-typed methods that return views in the interface. Maps.unmodifiableMultimap() also has some issues that at the very least make it tricky (maybe impossible, didn\'t investigate enough to be sure) to follow this pattern.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=115705731\n'}"
2114,"{'code': 'ae1f2cbe0f3e682328a82fababc7a67ba2999190', 'message': 'Add the Service-Worker-Allowed header to the HTTP header constants for Java/Go.\n\n(Note: C++ constants are added in []\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=115700477\n'}"
2115,"{'code': '907f05f02b50895a4d7515b40e3ec77d16f3c6e5', 'message': ""Automated g4 rollback of changelist 108345794.\n\n*** Reason for rollback ***\n\nCauses performance regression in J2CL transpiler and requires incorrect code to be accepted.\n\n*** Original change description ***\n\nAutomated g4 rollback of changelist 108184450.\n\n*** Reason for rollback ***\n\nChange no longer needed, j2cl transpiler was updated.\n\n*** Original change description ***\n\nRemove import for java.util.Formatter since it's needed only for the javadoc.\nThis class is not supported by GWT and in the new version of GWT (J2CL) we plan to strip not needed imports only if the class/method is marked with @GwtIncompatible.\n\n***\n\n***\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=115640681\n""}"
2116,"{'code': 'bfc61d3bc529ee57e362db2075e261d66b7ef591', 'message': 'Add @CheckReturnValue to the immutable collection types. This forces the caller of these APIs to ""do something"" with the result of the call.\n\nFor more information, see []\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=115562334\n'}"
2117,"{'code': '67374248c30a9b80d146adf7f24fd60e3a6cf8ef', 'message': 'Add @since 20.0 to the {ceiling,floor}PowerOfTwo methods.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=115489834\n'}"
2118,"{'code': 'fe11eeb686f44feae84b180f76c9304528d993e5', 'message': 'Add {floor,ceiling}PowerOfTwo as discussed at API review.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=115483556\n'}"
2119,"{'code': 'f6da31136af15dd324d56d253bc17c5b9afe9759', 'message': 'Add @CheckReturnValue to Multiset and friends.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=115381146\n'}"
2120,"{'code': '0c063801f91f10891339ec9ce5127e26f9f00931', 'message': ""Fix 6-year-old test bug.\n\nThe bug is:\n\n  try {\n    somethingThatShouldFail();\n    fail();\n  } catch (AssertionFailedError expected) {\n  }\n\nThe fail() is masked by the catch() block.\nI've requested an enhancement to Error Prone to catch this: https://github.com/google/error-prone/issues/393\n\nAdditionally, I improved IteratorTester under GWT: IteratorTester couldn't catch wrong-exception bugs there because of GWT's lack of reflection. This was a known, documented limitation, but the tests still attempted to verify its ability to do so. When I fixed the test bug, they broke. I then realized that I could just fix IteratorTester to work under GWT. It's probably even a simplification.\n\nTested:\nglobal TAP\n[]\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=115380685\n""}"
2121,"{'code': '8613c4dbde2aaeb871dce3ea0e52811039ee203d', 'message': ""Reformat parts of util.concurrent that I had mostly already reformatted.\nNow that I have some more automation, I've caught some more problems.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=115358094\n""}"
2122,"{'code': '517267d764f32383fdac36fcd6eabad855dd2f93', 'message': 'Strip mentions of soft references from Guava.\nReformat.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=115352566\n'}"
2123,"{'code': '8b970eb934595d903be555de6ac0d5a27722da21', 'message': 'Remove most of our uses of <code>.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=115352506\n'}"
2124,"{'code': 'feb726c559772827771c96b9f1d2e8291488aca4', 'message': 'Replace <br> tags.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=115352490\n'}"
2125,"{'code': 'e719a651ba846fd77d9a132d69f4e79a0ddadccc', 'message': 'More reformatting.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=115333807\n'}"
2126,"{'code': 'a2981bf2a683ccf67665a790de07055c06710d4f', 'message': 'Add @CheckReturnValue to Iterables. This forces the caller of these APIs to ""do\nsomething"" with the result of the call.\n\nFor more information, see []\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=115264046\n'}"
2127,"{'code': '55f03321aea35bf38d2aa7c766aab02b8204da71', 'message': 'More reformatting.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=115240986\n'}"
2128,"{'code': 'ac083ab0599d9b3b4a59191b397e1da8fc39a99f', 'message': ""Removes @WeakOuter from AggregateFuture.RunningState and subclasses. The weak\nouter reference causes a dangling pointer if the RunningState outlives its\nFuture. Furthermore, the @WeakOuter wasn't necessary to maintain leak-free\nbehavior because AggregateFuture nulls it's runningState reference in\nafterDone().\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=115226151\n""}"
2129,"{'code': '0664d966535b95328b684b471ac05c481b55f297', 'message': 'Fix Error Prone errors in GWT code.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=115110183\n'}"
2130,"{'code': '428f6f0cc751bc7c2f11b3ed5d4a2f9e3ec2cfb6', 'message': 'More reformatting.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=115089318\n'}"
2131,"{'code': '65663e795c406001f93d82c9bc69ef1d9031dc18', 'message': ""Remove closing </li> tags.\nI couldn't find any </p> or other optional closing tags in any of the files I've touched so far.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=115089061\n""}"
2132,"{'code': '018ed188c7066fc16a5242759bb352ce2271549e', 'message': 'More reformatting.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=115088232\n'}"
2133,"{'code': '1aaf7ae4b4b2773664d2462a258de506f7e1de73', 'message': 'Move <p> tags to the beginning of the line.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=115086346\n'}"
2134,"{'code': 'aef3838801686022ad766b0ccfd21d5d45d0cb5c', 'message': 'Attempt to finish adding Java 8 usage notes to our functional types.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=115081604\n'}"
2135,"{'code': '83999cb0c1e5d26aebcf16ac38f66a76def284e3', 'message': 'GraphConfig: fix logic bug in compatibleWith(), document the correct behavior, and add tests.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=115078269\n'}"
2136,"{'code': '870a15766917eca534f459c3e9a089358040c020', 'message': ""AbstractPackageSanityTests.java: document that the @Test annotations are deliberate even though it's not actually a JUnit4 test, as some of its subclasses @RunWith(JUnit4).\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=115074892\n""}"
2137,"{'code': '83b5794ba8370017a70a8e42a65370fc15bf6fd8', 'message': 'Make effectively final fields final\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=114996899\n'}"
2138,"{'code': '318f97587c770e29f081294a2e5a3fe46376714b', 'message': 'Make effectively final fields final\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=114996805\n'}"
2139,"{'code': 'b9731bcb3345be0f9a184fae26c6747351365c90', 'message': 'Create an abstract base class for our graph implementations. Eliminate lots of redundant code! Also improves the (currently incorrectly documented) runtime of removeNode() in IncidenceSetUndirectedGraph on multigraphs from O(degree^2) to O(degree).\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=114995238\n'}"
2140,"{'code': '2e3bb314df50a750c2298d3d0a13a30b95d49734', 'message': 'More reformatting.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=114992641\n'}"
2141,"{'code': 'a6c137ef10842ee31a0749a121fbd44af4350559', 'message': 'Fix bad line breaks.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=114992502\n'}"
2142,"{'code': 'b47da45d0ef44dac5f7cc82c7f1b2dff68b2f7a9', 'message': 'More reformatting.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=114976442\n'}"
2143,"{'code': 'a5cbbefac2ccc846dedfa0608125b85e92f20d75', 'message': 'Add missing GWT emulation of interruptTask().\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=114972363\n'}"
2144,"{'code': 'f06590cea537116b82d2b24184c81729692425e6', 'message': 'More reformatting.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=114972304\n'}"
2145,"{'code': '6cca4e75672e214007598cb805e660e82259696a', 'message': 'More reformatting.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=114963965\n'}"
2146,"{'code': '728300cfd7c7303d78fd272ce53bb61d85e7a567', 'message': 'Reuse the mac instance just constructed for bit-length calculation.\n\nVia https://github.com/google/guava/pull/2395/\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=114961907\n'}"
2147,"{'code': '6d717b9dd7483d4b01a852b639753ee7105cfb34', 'message': 'Add @CheckReturnValue to the com.google.common.{escape|xml|html} packages and subpackages. This forces the caller of these APIs to ""do something"" with the result of the call.\n\nFor more information, see []\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=114912000\n'}"
2148,"{'code': 'de1acf4634d172ecf6f572510c2a1d2e20c4a437', 'message': 'Graph.java: change return type of #degree() methods to int.\nAdd documentation specifying behavior if the number of relevant edges is > Integer.MAX_VALUE.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=114905866\n'}"
2149,"{'code': '20078868d0e6b7739cc806319dcfe1534f82d74d', 'message': 'Introduce AbstractGraph. This is a bare-bones base class that all Graph implementations should be able to extend (analogous to e.g. AbstractSet for Sets). It ensures there is consistent equals()/hashCode() across different Graph implementations. Additionally, this CL drops the requirement that two graphs have to have ""the same type"" to be equal.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=114901380\n'}"
2150,"{'code': '529027a088829cfa7985d65fa7e095b61e5cdb76', 'message': 'Reformat FluentIterable, moving some ""Stream equivalent"" sections above @tags so that they appear properly.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=114900720\n'}"
2151,"{'code': '955584656132fb7b8d76daafb73aac5cb404974c', 'message': 'Use StringBuilder.reverse() instead of reimplementing it.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=114887716\n'}"
2152,"{'code': '08a6bb421f0931cc4cee499a631c651e4633787e', 'message': 'Fix modifier order\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=114875899\n'}"
2153,"{'code': '9cbd75163ecb22c76cb5e8198022febfd4efb664', 'message': 'Eliminate intra-|if| MOE stripping, and add a comment.\n\n[]\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=114859955\n'}"
2154,"{'code': '024e56a668b8a1d2653655a5530ed9f4ed5bb166', 'message': 'google-java-format the rest of util.concurrent.\nI also rewrapped Javadoc and comments (mostly using the built-in Eclipse formatter).\nI made almost no hand changes.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=114854530\n'}"
2155,"{'code': '9f94aa41d9abc300f049064160deedcb74c31ba2', 'message': ""More reformatting.\nI've restricted myself to files that are part of open-source Guava.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=114854445\n""}"
2156,"{'code': 'c6e21a35f3113a7a952a9615a0e92dcf1dd4bfb3', 'message': 'Change Range.toString() to use printable ASCII chars (..) instead of \\u2025 (‥)\n\nSee https://github.com/google/guava/issues/2376\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=114820315\n'}"
2157,"{'code': '31c5a404b250f692d864fb36fb419988c4bc7ee4', 'message': 'Indent continued @tag lines 4 spaces instead of aligning them with the second word of the first line.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=114799803\n'}"
2158,"{'code': '2d38cd44602886d7871861fea4acc1a22320387b', 'message': 'google-java-format common.escape.\nI also rewrapped Javadoc and comments (mostly using the built-in Eclipse formatter).\nI made almost no hand changes.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=114785034\n'}"
2159,"{'code': 'b14197ec461092de12ebb8657f247412a84a5ff2', 'message': 'Clarify docs of filter(), limit(), and transform() to specify that the result is a view.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=114554046\n'}"
2160,"{'code': 'a72b6e39f3b9800591adcfaa8f6d3c03254f05f0', 'message': ""In EnumsTest, rewrite code that creates a second copy of TestEnum in a second ClassLoader, so that it doesn't try to add instances of the second TestEnum to a Set<TestEnum> (which is a Set of the original TestEnum). In Java 8, apparently this is a little bit less erased so it fails.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=114474572\n""}"
2161,"{'code': '7176c5a66db0ab298e3f77d55760b17b74933af6', 'message': 'Add javadoc and test coverage stating that non-hypergraph edges are always incident to either one or two nodes.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=114459445\n'}"
2162,"{'code': '683d4271104c48889011f92e0c8e7a9ba45c5033', 'message': 'Run more tests against MutableClassToInstanceMap by defining a type that implements 5 interfaces.\nEliminate a suppression for MutableTypeToInstanceMapTest that is unnecessary because put() is unsupported, anyway.\nDo some assorted other cleanup.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=114449200\n'}"
2163,"{'code': 'a24fa94bd10240b17e205dc571f4126f9dfccfd3', 'message': 'Add a validation check to AbstractDirectedGraphTest, opposite to the one in AbstractUndirectedGraphTest:\n\n[]\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=114447561\n'}"
2164,"{'code': 'e8637b3dc6ff86f1eddb6f8a89d883cf295bf5f2', 'message': ""Slightly optimize Graphs.oppositeNode(). 50% of the time (assuming node is randomly chosen between the repeated node and adjacent node) we'll only have to perform one equals() check instead of two.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=114380996\n""}"
2165,"{'code': '6e5d50950189567224dcb57df026f08b0709a3ba', 'message': 'Add @CheckReturnValue to the com.google.common.util.concurrent package. This forces the caller of these APIs to ""do something"" with the result of the call.\n\nIf you want to use transform() to perform an action on a successful Future without returning a result, use addCallback(). (addCallback() brings the added bonus that any exceptions will be logged.)\nSimilarly, if you want to use catching() to perform an action on a failed Future without return a result, use addCallback().\n\nFor more information, see []\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=114371704\n'}"
2166,"{'code': 'f976f2b8cffcebb525dc2c8f06a99356578a4449', 'message': 'Simplify some code in directed graphs. In particular, make removing the incident edges when removing a node more intuitive. Note that removeNode() in undirected graphs currently is O(degree^2) (for multigraphs), but that will be alleviated once we have AbstractIncidenceSetGraph and it moves to this implementation.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=114345530\n'}"
2167,"{'code': 'b1f52443f73317a68e79417cba536ef6f69ebd5f', 'message': 'Remove unused variable declarations that are followed by fail().\nThey are no longer necessary.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=114342552\n'}"
2168,"{'code': '966e8f10f41f119c5aa476840320d3db078b30da', 'message': 'Add test coverage to IncidentNodes to ensure our equals/hashcode is compatible with other Sets. Add a (micro)optimization to avoid constructing an iterator object for calls to contains().\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=114329541\n'}"
2169,"{'code': 'aaf8877fd7aa32cc24e85fd3b5c9ffc6f3cac51d', 'message': 'Add some validation checks for undirected graphs.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=114224325\n'}"
2170,"{'code': '950610f657f044e3012c18daa1ddeceedd62db22', 'message': 'Add @CheckReturnValue to com.google.common.reflect. This forces the caller of these APIs to ""do something"" with the result of the call.\n\nFor more information, see []\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=114218057\n'}"
2171,"{'code': '0bb149bf18b0a6968b2706edffc3a14616ead7d5', 'message': 'Add @CheckReturnValue to collect.Range. This forces the caller of these APIs to ""do something"" with the result of the call.\n\nFor more information, see []\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=114147974\n'}"
2172,"{'code': 'dd813c144c86e9ee02bf72becae37fc1f5e1cb7a', 'message': ""Permit the elapsed time to be slightly shorter than expected.\nThis fixes some flakiness I'm seeing in Guava.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=114130006\n""}"
2173,"{'code': '8d8eebc9fe60c8c06b18f4d684813e537040f3b9', 'message': ""Release most of UninterruptiblesTest and UninterruptibleFutureTest to Guava.\nI've excluded the CountDownLatch tests, which are currently intertwined with some other Google-internal tests.\n\nThis requires migrating off TearDownTestCase to TearDownStack.\nhttps://github.com/google/guava/issues/1752#issuecomment-180971813\nhttps://github.com/google/guava/issues/2387\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=114122813\n""}"
2174,"{'code': '5f2e2d68051197dfdbec7c400dd7d97ce097f569', 'message': 'Add @SafeVarargs to Iterators.cycle() (being consistent, since we just added it to forArray()).\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=114120886\n'}"
2175,"{'code': 'd07efded0b474f2520bad78238db21e61343355a', 'message': 'Use String.isEmpty() in Strings.isNullOrEmpty().\n\nString.isEmtpy() was not in Android until Java 6/API 9 (http://developer.android.com/reference/java/lang/String.html#isEmpty()), which Guava now requires.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=114108086\n'}"
2176,"{'code': 'e1faec5f1bf6c8e0e880956239e18e2f1593387f', 'message': 'Add @SafeVarargs to Iterators.forArray (ImmutableList.of() and ImmutableSet.of() are already annotated with this).\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=114078599\n'}"
2177,"{'code': '21def41580dfe9250a3a1b8044a9899841034af9', 'message': 'Add documentation indicating that the builder mutators returns the same builder object.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=114066331\n'}"
2178,"{'code': '8ed53a463b12256d3e798f84657d00cbbbf73bce', 'message': 'Document the requirement that, for directed graphs, incidentNodes iterates as source then target. Move other directed graph specific documentation into DirectedGraph.\n\nNote: this order is already expected in a few places, and is tested in existing tests here:\n\n[]\n[]\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=114038654\n'}"
2179,"{'code': '3ae3b05f1247feefde3a6cbe48dd5fa4735cfd46', 'message': 'Add @CheckReturnValue to DiscreteDomain. This forces the caller of these APIs to ""do something"" with the result of the call.\n\nFor more information, see []\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=114030796\n'}"
2180,"{'code': '8f43bdaee14fe6d6f8b0d0b083e04016ea915986', 'message': 'Some small cleanup to Graphs.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=114030721\n'}"
2181,"{'code': 'fb3b3245bb5f2393870438e8540d7d363f917b07', 'message': 'Replace ""DirectedIncidentNodes"" and ""UndirectedIncidentNodes"" with a shared ""IncidentNodes"" class that implements Set. This avoids the call to .asImmutableSet() that the directed graphs were performing, and also makes it so that we are now very close to having an abstract base graph implementation that will almost entirely replace the 4 current implementations.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=114000977\n'}"
2182,"{'code': '5a16769ee190e50e5c7429f159c8ca16a8c7fb0d', 'message': 'Move toString() implementation for graphs to Graphs.java. This is similar to how Graphs.equal() is implemented, and will allow Graph implementations to get toString() for ""free"".\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=113999189\n'}"
2183,"{'code': 'd3d542d7ea00afd5b0e2b99f2b8f16d62d65200c', 'message': 'Add @CheckReturnValue to com.google.common.math. This forces the caller of these APIs to ""do something"" with the result of the call.\n\nFor more information, see []\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=113983550\n'}"
2184,"{'code': '650af4cb1359df96adc4ce79200f32ae022f5840', 'message': 'Add more consistency checks to AbstractGraphTest.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=113961752\n'}"
2185,"{'code': 'af44761113af50f1955feceac9dd7dfe2d127bbf', 'message': 'Reduce memory footprint of mutable graphs by roughly 10%. Considering the increase that [] yielded, getting this back down is definitely good.\n\nThis is done by using HashSets instead of LinkedHashSets for the various internal data structures stored in NodeConnections. Note that we still maintain insertion order on nodes() and edges(), because those are the keysets of LinkedHashMaps. As ""outer level"" structures (i.e. only 1 per graph), making those HashMaps instead of LinkedHashMaps would have a relatively small effect on memory footprint compared to changing the many ""inner level"" Sets inside NodeConnections.\n\nAs for the question of whether we WANT to maintain insertion order, that\'s not what we were doing anyway, and implying it is what we were doing could be dangerous if someone relies on it. For example, the order in which nodes becomes predecessors or successors to other nodes can be completely different from the order in which the nodes were inserted to the graph. So there is no consistent ordering of nodes, each call to predecessors() or successors() will yield a different ""ordering"" than that of nodes(). To complicate the matter even further, there are methods like incidentEdges() and adjacentNodes() on directed graphs. These are simply the union of two other sets, which by its nature will not preserve any ordering (a union iterates over the elements in set1, followed by the elements of set2 that were not in set1), so we have yet another inconsistent ""ordering"". For now, I propose we should only guarantee insertion order on a graph\'s nodes() and edges(), and not any other accessors.\n\nAs a side note, of the two problems mentioned, the former will not be a problem when we allow ""sorted nodes/edges"" because the inner Sets can simply be TreeSets as well, preserving the same ordering as the outer level TreeMaps. The implementation of Sets.union() will still prove to be problematic, but the implementation could be presumably be modified to support SortedSets if we want to guarantee that any Set<N> or Set<E> accessor will be sorted if the Graph is created with a Comparator<N> or Comparator<E>.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=113885975\n'}"
2186,"{'code': '693c8d94861f627fd772c347b4644773167b3990', 'message': 'Make Graphs.oppositeNode() slightly more efficient. It performs the same number of equals checks (1 in self-loop case, 2 otherwise) but without the additional call to contains() - while still providing the incidence check.\n\nAlso, make it work on the base Graph type. This will be necessary in order to call it from our base abstract graph implementation.\n\nAnd finally, add test coverage, for which there was apparently none!\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=113869827\n'}"
2187,"{'code': 'c58adc6f56ab8eee54f597d279a711f977474ae6', 'message': 'Add @CheckReturnValue to MinMaxPriorityQueue. This forces the caller of these APIs to ""do something"" with the result of the call.\n\nFor more information, see []\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=113863719\n'}"
2188,"{'code': 'c408a6fcecc7a6997c3dad3f3ab73338bb199756', 'message': 'Add @CheckReturnValue to ObjectArrays. This forces the caller of these APIs to ""do something"" with the result of the call.\n\nFor more information, see []\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=113856750\n'}"
2189,"{'code': 'bcb97a7a81063f853678f3e04cd8ab2bae810142', 'message': 'Add @CheckReturnValue to the com.google.common.eventbus package. This forces the caller of these APIs to ""do something"" with the result of the call.\n\nFor more information, see []\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=113855301\n'}"
2190,"{'code': '248ce9fde9013bb1562b1f1647abc6017c37811d', 'message': 'Remove ""SetView"" from all graph implementations. See [] for why it should be killed with fire. In particular, it made the returned Sets have O(N) (in both time and memory) size() and contains() methods, and in one case, O(N^2) iteration!\n\nTo facilitate this change, create ""NodeConnections"" to replace ""IncidentEdges"". This class stores not only the incident edges but also the adjacent nodes for each origin node.\n\nAs a side benefit, addEdge() is now O(1) in all cases.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=113813654\n'}"
2191,"{'code': 'eed5980c2e584151af3c674b74945ba003968c03', 'message': 'Add @CheckReturnValue to SortedLists. This forces the caller of these APIs to ""do something"" with the result of the call.\n\nFor more information, see []\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=113749076\n'}"
2192,"{'code': 'c0fe985c62855adaa3a89cae1ec797e1150af3b5', 'message': 'Add validation that checks that predecessors, successors, in edges, out edges, and all sorts of other relationships are in sync after every test. Add more test coverage for removing edges. This would have caught the breakage in []\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=113690611\n'}"
2193,"{'code': 'd9fafc8ac2a52ffc2343efbffd163005dff94d4c', 'message': 'Graph.java: fix indentation in class-level Javadoc.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=113683678\n'}"
2194,"{'code': '07e82c083f5f71a982bc0767b1dd6b1b8dc8109f', 'message': 'Fix various collections (Sets.union(), Sets.intersection(), Multisets.sum(), etc.) that might overflow when asked for size(). With very large collections, these could potentially return negative (!) results. According to the spec, the result should be Integer.MAX_VALUE:\n\nhttps://docs.oracle.com/javase/7/docs/api/java/util/Collection.html#size()\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=113683485\n'}"
2195,"{'code': '0290fa93dde6ee26255a0679f9f1b5f9677401ed', 'message': ""Remove unnecessary 'unused' variables thanks to an update in the @CheckReturnValue checker.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=113673831\n""}"
2196,"{'code': '8b0051972aa91d50be08542e027e0e017cd0e542', 'message': 'Small fix in javadoc\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=113660488\n'}"
2197,"{'code': '2067e7725ee32d373a253d1fb24578751f3d712a', 'message': 'Automated g4 rollback of changelist 113559037.\n\n*** Reason for rollback ***\n\nAs per api review.  This is being rolled back since [] statistics have been gathered.\n\n*** Original change description ***\n\nAdd overloads to the Preconditions.check(NotNull|State|Argument) varargs\nmethods to avoid varargs and boxing overhead in the case of 1-2 template parameters.\n\nIn order to avoid autoboxing and numeric conversions we need to support all primitive types.\n\nAPI review:\nhttps://docs.google.com/document/d/1EJ0dqFIagdOCJZQkrNGgzhnIS-4lSEYi0_GQeUlKJBE/edit\n\n***\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=113655916\n'}"
2198,"{'code': '6575f8aa9c348c9a73dc1e327e4bafb116442b44', 'message': 'Add @CheckReturnValue to the following classes: EvictingQueue, FluentIterable, and Ordering.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=113653886\n'}"
2199,"{'code': '76e7d7a81012b19d5c29a76c1807a41cfc55575c', 'message': 'Add @CheckReturnValue to MapMaker.\n\nFor more information, see []\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=113640939\n'}"
2200,"{'code': '6336404e539bb948caac14b4a00152409c3e7120', 'message': 'Automated g4 rollback of changelist 113583321.\n\n*** Reason for rollback ***\n\nForgot to remove nodes from predecessor/successor sets if we were removing the last connecting edge.\n\n*** Original change description ***\n\nRemove ""SetView"" from all graph implementations. See [] for why it should be killed with fire. In particular, it made the returned Sets have O(N) (in both time and memory) size() and contains() methods, and in one case, O(N^2) iteration!\n\nTo facilitate this change, create ""NodeConnections"" to replace ""IncidentEdges"". This class stores not only the incident edges but also the adjacent nodes for each origin node.\n\n***\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=113599971\n'}"
2201,"{'code': '8b0ec570c69b969b47262eff5935ddc7a80ced50', 'message': 'Remove ""SetView"" from all graph implementations. See [] for why it should be killed with fire. In particular, it made the returned Sets have O(N) (in both time and memory) size() and contains() methods, and in one case, O(N^2) iteration!\n\nTo facilitate this change, create ""NodeConnections"" to replace ""IncidentEdges"". This class stores not only the incident edges but also the adjacent nodes for each origin node.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=113583321\n'}"
2202,"{'code': '2e112b74caa773d6d57c3766a8086e9c59d39bce', 'message': 'Document which exception is used by catching()/catchingAsync().\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=113563893\n'}"
2203,"{'code': '4aa5ff256cd0d3e609d1b08485ed01a5c23ce69a', 'message': 'Remove incorrect javadoc regarding ""passing the smaller Set first"" from Sets.union().\n\nIn Sets.intersection() this comment makes sense, since it iterates through set1 as the ""main set"", and does a contains check against set2 for every element in set1. So iterating through intersection() is O(|set1|) for HashSets, or O(|set1| * log|set2|) for TreeSets. For the union() case though, I don\'t believe this comment is correct. Iterating through the union involves:\n\n-Iterate through set1. No contains checks are performed. This is simply O(|set1|) (assuming the Set has normal iteration performance)\n-Iterate through set2. For every element, a contains check against set1 is performed. Thus we have O(|set2| * C1), where C1 is the cost of a contains() call to set1.\n\nSo if set1 is a HashSet we have O(|set1|) + O(|set2|). Order makes no difference. If set1 is a TreeSet we have O(|set1|) + O(|set2| * log|set1|). This is actually *worse* when set1 is the smaller of the two sets.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=113561878\n'}"
2204,"{'code': '1ef638f369964c1d1f56bd0ae588535c6abd99a4', 'message': 'Add overloads to the Preconditions.check(NotNull|State|Argument) varargs\nmethods to avoid varargs and boxing overhead in the case of 1-2 template parameters.\n\nIn order to avoid autoboxing and numeric conversions we need to support all primitive types.\n\nAPI review:\nhttps://docs.google.com/document/d/1EJ0dqFIagdOCJZQkrNGgzhnIS-4lSEYi0_GQeUlKJBE/edit\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=113559037\n'}"
2205,"{'code': '18c84380cb56e74d7e5c7209199624ac112f86e4', 'message': '*GraphTest.java: Add @Test annotations to tests marked @Override.\n(This is apparently not strictly necessary but makes for better documentation.)\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=113549694\n'}"
2206,"{'code': 'a66c6ebb733d54c28b71fdbaf295f5f0d799996b', 'message': 'Refactor the test classes from the previous hierarchy:\n\n                      AbstractGraphTest\n                        |           |\n                        v           v\n        AbstractMutableGraphTest   AbstractImmutableGraphTest\n         |                    |\n         v                    v\nAbstractDirectedGraphTest   AbstractUndirectedGraphTest\n\nto the following:\n\n                      AbstractGraphTest\n                        |           |\n                        v           v\n      AbstractDirectedGraphTest   AbstractUndirectedGraphTest\n                  |                             |\n                  v                             v\nAbstractImmutableDirectedGraphTest   AbstractImmutableUndirectedGraphTest\n\nUnfortunately the lack of multiple inheritance in Java means we have to choose between whether we want inherit from a base ""immutable graph test"" or get all the functionality of the base ""(un)directed graph"" test. Both involve some amount of code duplication for full test coverage, but I think this is the better option of the two given that the (un)directed tests are likely to have more tests added over time, whereas a base immutability test is unlikely to be expanded much (the tests for this are currently repeated between AbstractImmutableDirectedGraphTest and  AbstractImmutableUndirectedGraphTest).\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=113542823\n'}"
2207,"{'code': '026d168a41b35855a35b80f92aba440585f8e5a0', 'message': 'Add @CheckReturnValue to the entire c.g.c.hash package.\nOpt-out certain APIs using @CanIgnoreReturnValue.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=113536377\n'}"
2208,"{'code': '6e8370d443dc3f2da70ca0befda68cf8d687216b', 'message': 'Some optimizations to AbstractIteratorTester based on profiling data on MapsCollectionTest.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=113299505\n'}"
2209,"{'code': '4a68440ab9d8d60e13a48bd4441fbb36347efc58', 'message': 'Add @CheckReturnValue to Lists, Maps, Multimaps, Multisets, Queues, Sets, and Tables.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=113265870\n'}"
2210,"{'code': 'f001be54c2e3676d39623942e96b97699d42467a', 'message': 'Remove APIs to be deleted for Guava 20.0.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=113254099\n'}"
2211,"{'code': '5b587abdfa0e513db8a11b7265ce8689d1edf277', 'message': 'Some minor improvements to FeatureUtil in the hope of speeding up c.g.c.collect tests.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=113178622\n'}"
2212,"{'code': '52b5ee640da780e0fd2502ec995436fcdc93e03e', 'message': ""Don't silently swallow Errors.\nhttps://github.com/google/guava/issues/2254\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=113152082\n""}"
2213,"{'code': '88e42e657a32f9aaf0fa705d40a164431133d342', 'message': 'Add ClassPath.ResourceInfo.asByteSource() and asCharSource(Charset).\n\nFixes https://github.com/google/guava/issues/2228\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=113094135\n'}"
2214,"{'code': 'a1fb228f5b30cbcf93c4f912cddd479f36b620b5', 'message': 'This change replaces usages of static final fields on CharMatcher, e.g. CharMatcher.WHITESPACE, with the equivalent static factory method, e.g. CharMatcher.whitespace().\n\nThe change is being made so that we can remove the static final fields, primarily because they must be eagerly initialized, causing many implementation classes (which may be unnecessary) to be loaded. This is a significant performance problem on Android. Using methods allows implementation classes to only be loaded when actually needed, as well as matching our long-standing preference for factory methods over public fields.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=113072117\n'}"
2215,"{'code': '8f826b1b80fc43aefe3925a830f75bbebf101c15', 'message': 'Add @CheckReturnValue to the entire c.g.c.graph package (by adding it to package-info.java).\nOpt-out certain APIs using @CanIgnoreReturnValue.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=113060183\n'}"
2216,"{'code': '98815a1b93a18d917d37eec508fd1f06905ead7d', 'message': 'Publish j2objc cycle_whitelist.txt to the public Guava repo.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=112992186\n'}"
2217,"{'code': '8fbeb9038cbe8b382b1ee188ae8459203cd04fb5', 'message': 'Add a comment about the use of non-short circuiting logical operators.\n\nThis is identical to a comment in IntMath.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=112913215\n'}"
2218,"{'code': '5b8495f81ec6af59b6e8880df920952648682e09', 'message': 'Move @CheckReturnValue to package-info.java so it applies to all of\ncom.google.common.primitives. Annotate some methods with @CanIgnoreReturnValue.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=112870925\n'}"
2219,"{'code': 'cf39936b578f6b312c08540a4e9d0078e724f566', 'message': 'Move @CheckReturnValue to package-info.java so it applies to all of\ncom.google.common.base. Annotate some methods with @CanIgnoreReturnValue.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=112870719\n'}"
2220,"{'code': 'cf7c48bd97f354e0d9a4cd3d9b8fbe85add66184', 'message': 'Improve nullability checking for com.google.common.hash.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=112829088\n'}"
2221,"{'code': '9b845ef22fb91a6d842cf03c94b85f1bb5c9e00c', 'message': 'Some updates to Graph javadoc.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=112818614\n'}"
2222,"{'code': '3ec45222114150ad45305d58daf80d916c99b16c', 'message': 'This change replaces usages of static final fields on CharMatcher, e.g. CharMatcher.WHITESPACE, with the equivalent static factory method, e.g. CharMatcher.whitespace().\n\nThe change is being made so that we can remove the static final fields, primarily because they must be eagerly initialized, causing many implementation classes (which may be unnecessary) to be loaded. This is a significant performance problem on Android. Using methods allows implementation classes to only be loaded when actually needed, as well as matching our long-standing preference for factory methods over public fields.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=112814971\n'}"
2223,"{'code': '919ffc3d617df7d049e8754ae62373166f879b2e', 'message': 'Change BaseEncoding.toString() to return ""withPadChar(\'=\')"" instead of ""withPadChar(=)"". This is more consistent with how the string literals are printed for the alphabet.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=112723381\n'}"
2224,"{'code': 'f1f1d3d9bb0b989e87f6ff4a56972270d14b1d9c', 'message': 'Add FluentIterable.concat methods, and make Iterable.concat methods delegate to them.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=112713876\n'}"
2225,"{'code': '4760f6ca0d68b3a374bf8754967c0cb50b54977d', 'message': 'This change replaces usages of static final fields on CharMatcher, e.g. CharMatcher.WHITESPACE, with the equivalent static factory method, e.g. CharMatcher.whitespace().\n\nThe change is being made so that we can remove the static final fields, primarily because they must be eagerly initialized, causing many implementation classes (which may be unnecessary) to be loaded. This is a significant performance problem on Android. Using methods allows implementation classes to only be loaded when actually needed, as well as matching our long-standing preference for factory methods over public fields.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=112708491\n'}"
2226,"{'code': '4b6ffd496674b55a6893bbd705a7486d661b1b53', 'message': 'Improve performance of nested calls to Iterables.concat() and Iterators.concat() *without* using any additional memory. This CL brings the runtime from O(D^3) to O(D^2), where D is the nesting depth of concatenation.\n\nIt appears this issue was previously discussed here:\nhttp://code.google.com/p/google-collections/issues/detail?id=151\n\nBut no work was done to fix it other than adding some javadoc to Iterators. While still not as fast as unnested concatenation (which is linear), this seems fast enough that a javadoc warning is no longer necessary - especially considering the warning was only in Iterators and not in Iterables, even though both exhibited the cubic runtime and there are 13x more calls to Iterables.concat() than Iterators.concat().\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=112701959\n'}"
2227,"{'code': '445c56885ce2616cf2b7690d8331964a3e099e85', 'message': 'Add MediaType.L24_AUDIO.\n\nSee https://github.com/google/guava/issues/2132\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=112650740\n'}"
2228,"{'code': 'ad68d5fd2a538672b2a625a8a481e4d6f1930622', 'message': 'Shuffling from internal-only change.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=112626786\n'}"
2229,"{'code': 'c72972d162e161284f3516c69066752d6e19b791', 'message': 'Add new MediaTypes. See https://github.com/google/guava/issues/2132\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=112612873\n'}"
2230,"{'code': '6fef0b0dba5dfa40fe30cdd6fbcc9d3908801e23', 'message': 'Fix the tests in primitives for tryParse not to generate their own NPEs.\n\nhttps://github.com/google/guava/issues/2238\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=112600511\n'}"
2231,"{'code': '9b826b4b45ecca5a77e94fc82581ca0600a29aa8', 'message': 'Add tests for https://github.com/google/guava/issues/2238\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=112410294\n'}"
2232,"{'code': '3ddefd829e9fc0ed033613cd7d74427e6397c745', 'message': 'Reduce the memory consumption of undirected graphs by storing the incident nodes explicitly in an ""UnirectedIncidentNodes"" class, rather than in a Set.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=112273670\n'}"
2233,"{'code': 'af89d96d586a8b4da1d864cc985ec58093b00ee5', 'message': 'Remove stray line.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=112271827\n'}"
2234,"{'code': 'fe66108ba9a4443da4b91f70e57f5763533d3ffa', 'message': 'Automated g4 rollback of changelist 112075036.\n\n*** Reason for rollback ***\n\nBroke various tests, may not be handling second-level domains properly.\n\n*** Original change description ***\n\nAllow terminal hyphens on domain parts.\n\n***\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=112175053\n'}"
2235,"{'code': '6f125ffc33d8b186a6dcfa78735cb54b80b04ac4', 'message': 'Document RFC 1123 host label digit prefix mandate\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=112163962\n'}"
2236,"{'code': '5f195b68c222095a5e09e21fdb28c08238ed4735', 'message': 'Update Public Suffix List.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=112099761\n'}"
2237,"{'code': '0107253bf87eecb709b4df2804ee63bd29199f57', 'message': 'Add Service-Worker.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=112094082\n'}"
2238,"{'code': '5178c864c04a87a5e55f17355d0d65446b316ee4', 'message': 'Graph.java: clarifying the requirements around node/edge objects.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=112082354\n'}"
2239,"{'code': 'e18fdecbefdd9304c51c0523651dd8668e120a89', 'message': 'Allow terminal hyphens on domain parts.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=112075036\n'}"
2240,"{'code': 'fe4170f6d89470ac57c127b12aa853c3c50c9c1b', 'message': 'Update Public Suffix List.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=112015560\n'}"
2241,"{'code': '1eb3090b9fbf13cc7e249d3bbe4e7652339192cc', 'message': 'Bump GWT to a non-snapshot dependency, so Guava is unblocked for release.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=111953577\n'}"
2242,"{'code': '7256f579d7166a10bf4ff406df672a41531ae579', 'message': ""Remove TODO, which is no longer an issue now that we're committing to GWT 2.8.0.\n\nhttps://github.com/google/guava/issues/1999\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=111852957\n""}"
2243,"{'code': 'a55f0896718693e112ca95107fb0f0e9384f13af', 'message': 'Reformat.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=111843256\n'}"
2244,"{'code': '621a20dd9a4ab9b034a492ff754bb325fa449b70', 'message': 'Quiesce the continuous integration builds a bit by running maven in batch mode (reducing chatter from download progress logging)\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=111811091\n'}"
2245,"{'code': 'dd571af41c828b6dbf3d56e56dda073c295fcd16', 'message': 'Publishes the new StatsAccumulator.addAll(Stats) and PairedStatsAccumulator.addAll(PairedStats) methods.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=111704390\n'}"
2246,"{'code': 'e3f2c557c8ffa03962bb542bfe18481487b9699a', 'message': 'Add TODO to use ofElementsIn(expected).\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=111703041\n'}"
2247,"{'code': '0787bc502c9c639e8d7c3648466f3f37990016c0', 'message': 'Simplify the implementation of RemovalNotification by extending AbstractMap.SimpleImmutableEntry.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=111636230\n'}"
2248,"{'code': '08b6bb9877b53e9a731f5a22f7db43e1c8648a48', 'message': 'Use getBytes(Charset) instead of getBytes(String) now that we require a new enough version of GWT.\n(We require 2.8.0 and need at least 2.7.0 for this CL.)\n\nAlso, replace our custom array assertion with Truth.\n\nhttps://github.com/google/guava/issues/2124\nhttps://github.com/google/guava/issues/1999\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=111624468\n'}"
2249,"{'code': 'b467432088344f2d805744c5bb175e167843e497', 'message': 'Stop ignoring http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6533203 in iterators now that the bug has been fixed in GWT for a while and the JDK for even longer.\n(This is like CL 57745078 but for a different bug.)\nAlso, go a step further, and remove support entirely for ignoring both bugs.\n\nThis is safe to submit now that we require a version of GWT with the bug fix (2.8.0, though 2.7.0 would have been good enough).\nhttps://github.com/google/guava/issues/1999\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=111622620\n'}"
2250,"{'code': '6f260ee8a40a6cc9a98fff1312d52d69dd1e3b9f', 'message': ""Go back to avoiding AssertionError(String, Throwable), which isn't available in Gingerbread.\nhttp://developer.android.com/reference/java/lang/AssertionError.html#AssertionError%28java.lang.String,%20java.lang.Throwable%29\n\nThis rolls back CL 111609121, which AFAIK didn't break any tests but would have made broken tests run under Gingerbread throw NoSuchMethodError instead of the proper, descriptive AssertionError.\n\nI had noted this compatibility issue previously but had dismissed it because we were not running our tests on Android at the time.\nhttps://github.com/google/guava/issues/1999#issuecomment-85579982\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=111622300\n""}"
2251,"{'code': 'f68659f02b5e59c51ecac61cd1ac94041c49a0ec', 'message': ""Remove unnecessary copy of Arrays.copyOf now that we require a new enough version of GWT.\n\n(taken over from kak's CL 83767705)\n\nhttps://github.com/google/guava/issues/1942\nhttps://github.com/google/guava/issues/1999\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=111610384\n""}"
2252,"{'code': '654158dea78a2531247bdf539ce3405a2d335f20', 'message': ""Automated g4 rollback of changelist 86212236.\n\n*** Reason for rollback ***\n\nWe now require GWT 2.8.0.\n\nhttps://github.com/google/guava/issues/1999\n\n*** Original change description ***\n\nAvoid AssertionError(String, Throwable) constructor, which isn't available in version of GWT we use for Guava.\n\n***\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=111609121\n""}"
2253,"{'code': 'd6e1e0c2712f607716a13619505e74f00bbce34b', 'message': ""Add a test case to GraphEqualsTest to make sure edge direction is handled properly in different graph types. Also, use EqualsTester so that we're additionally verifying that the hashcodes between equal graphs are equal.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=111547711\n""}"
2254,"{'code': '1b0831c9f9229cd7049e24b2f62360b5e05bd78f', 'message': 'Use Collections.newSetFromMap directly.\nIt is available in GWT as of 2.7.0.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=111510442\n'}"
2255,"{'code': 'e5f4c665001e8801cce23aa2a5fb493b7219fc04', 'message': 'Optimize PairedStatsAccumulator.addAll(PairedStats). If we update the xStats before we update sumOfProductsOfDeltas, instead of after, so that we use the new value of (values.xStats().mean() - xStats.mean()) instead of the old value, then we absorb two of the factors in the product, and save ourselves a multiplication and a division.\n\nThis seems like a straight win, and also makes the code look more like that in the add(double, double) method.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=111495396\n'}"
2256,"{'code': '00d42155755bb7748fce8ca27a7109afc0a05d49', 'message': 'Change StatsAccumulator.addAll(Stats) to use a more Knuth-like calculation for the mean. I claim that this is more accurate in the cases we care about.\n\nWe know that this method is more accurate when adding a single value to an accumulator which has accumulated a large number of values (see Knuth for the background). I believe that it is generally more accurate when we are adding a small number of values to a larger number. It may be less accurate when the two datasets are comparable in size. But I claim that we care about the former more than the latter.\n\nAs a motivating example, think turning a double into a Stats of a single value, and then merging the Iterator<Stats> into a single Stats using this new method. The aggregation will happen hierarchically: typically, there will be a first phase on the mapper where we combine individual values on a given shard, and a second phase on the reducer where we combine values from the various shards. In the first phase, we\'re combining a lot of Stats each with a single value, so this is actually equivalent to the case where we\'re adding a single value, and the Knuth method is definitely more accurate. In the second phase, we can expect to be combining similarly-sized Stats instances from a large number of shards, so the process will be dominated by the case where we\'re adding one shard\'s values to many shards\' values, which is adding a small number to a larger number.\n\nAnything where we\'re combining more than a few similarly-sized Stats instances will benefit from this change.\n\nThis CL also makes a tiny tweak to add(double): instead of incrementing count and then branching on count==1, it branches count==0 and increments (or sets to 1) inside both branches. This is probably more readable (because it\'s easier to understand ""are we starting from an empty accumulator"" than ""are we creating an accumulator with one value""), it improves the symmetry between the two methods, and there\'s an outside chance it could be faster (if the compiler/hotspot create better code for comparing to zero).\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=111495046\n'}"
2257,"{'code': '15950e79dfe33c36051c58441d7fda9d74509677', 'message': 'Convert all @GwtIncompatible.reason values to implementation comments.\n(redo of CL 110542459)\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=111321187\n'}"
2258,"{'code': 'dedde5b419970441726a6699a065e30bd496bf93', 'message': 'Add @GwtIncompatible annotations to top-level classes.\n(redo of CL 110542265)\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=111314988\n'}"
2259,"{'code': 'f89a73485023a73defcfd5aa435bfb566f4552ca', 'message': 'Fix a tiny mathematical typo in LongMath.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=111156014\n'}"
2260,"{'code': 'ecb5eaa6672faf665e6bdd064866ad795ad2d394', 'message': 'Add @since for RangeSet.intersects.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=111072613\n'}"
2261,"{'code': 'bb00ee0febdc30c02417795cef3f1ee7f687a7a7', 'message': 'Add @CheckReturnValue to BaseEncoding.decode() and decodeChecked().\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=110989320\n'}"
2262,"{'code': 'f4bbaf7cc919ac885c5b3df424313f5b568cec25', 'message': 'Adds an addAll(Stats) method to add a Stats object to a StatsAccumulator, and corresponding methods for PairedStats and PairedStatsAccumulator.\n\nThis is useful for merging statistics accumulated by multiple StatsAccumulators. One application is using a saved Stats object to restore the state of a StatsAccumulator.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=110843746\n'}"
2263,"{'code': '7d3af5b5b6a4427220581b5d69df68d6d00418b8', 'message': 'Add .intersects() to RangeSet.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=110802499\n'}"
2264,"{'code': '6ff77cf5941d5caac9672ce148ae6f7ab67cf144', 'message': 'Provide information about which parameter we were passing null for and what values we used for the other parameters -- even if another exception was thrown.\n(We already did this if no exception was thrown, thanks to CL 3405048 and CL 48801694).\n\nhttps://github.com/google/guava/issues/2264\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=110793874\n'}"
2265,"{'code': '5d4abb0e70b63105f08baf156999580d53d1ad40', 'message': 'Release Futures.whenAllComplete and whenAllSucceed as @Beta.\nWe may still develop these further by integrating allAsList/successfulAsList into them.\n\nRelated Guava request:\nhttps://github.com/google/guava/issues/1421\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=110712191\n'}"
2266,"{'code': '89b3eb1405241540dda1313953127fb01d4fc98f', 'message': 'Add deprecation notices to mutation methods on ImmutableRange{Set,Map} as per https://github.com/google/guava/issues/2258.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=110711365\n'}"
2267,"{'code': 'aa5a184e271d86809d2dcb80e90dfc7dde5ca261', 'message': 'Automated g4 rollback of changelist 110542265.\n\n*** Original change description ***\n\nAdd @GwtIncompatible annotations to top-level classes.\nOur previous policy was: ""Look for a @GwtCompatible annotation. If it doesn\'t have one, then it\'s not GWT-compatible.""\n\nBut maybe it\'s better to be explicit in both cases?\nIf nothing else, it might let us write tests that everything is annotated one way or the other, so we would have to actively annotate something wrongly to get the wrong outcome.\nBut the real motivation is that this gets us a step closer to relying on the GWT compiler\'s @Gw...\n\n***\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=110556733\n'}"
2268,"{'code': '354a91a308566d10cb72535622fc6882890642b7', 'message': 'Automated g4 rollback of changelist 110542459.\n\n*** Original change description ***\n\nConvert all @GwtIncompatible.reason values to implementation comments.\n\n***\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=110555733\n'}"
2269,"{'code': 'cd78ca12b249fb1c2ad0ec6aca324e7d733da4b7', 'message': 'Convert all @GwtIncompatible.reason values to implementation comments.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=110542459\n'}"
2270,"{'code': '71643094aca01d7386f8a84609aad7fa7632086e', 'message': 'Add @GwtIncompatible annotations to top-level classes.\nOur previous policy was: ""Look for a @GwtCompatible annotation. If it doesn\'t have one, then it\'s not GWT-compatible.""\n\nBut maybe it\'s better to be explicit in both cases?\nIf nothing else, it might let us write tests that everything is annotated one way or the other, so we would have to actively annotate something wrongly to get the wrong outcome.\nBut the real motivation is that this gets us a step closer to relying on the GWT compiler\'s @GwtIncompatible stripping internally (as we already do externally) instead of our own.\n\nDo note, though, that I haven\'t fully annotated everything:\n- I\'ve skipped c.g.c.base.internal.Finalizer, where I\'m not sure it\'s safe to depend on @GwtIncompatible or even to declare a special copy. (It has a test that forbids nested classes, but maybe I could put a copy in the internal package as a top-level class?)\n- I might have just missed stuff that was added since I first created the first version of this CL back in, like, 2013. (This is actually part of my motivation for submitting it: I keep having to do enormous syncs with annoying merges. I want to stop carrying these changes around in a client.)\n\nI\'ve left all of the reasons (that is, the annotation values) blank.\nWe decided that this was OK in API Review.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=110542265\n'}"
2271,"{'code': '8ffc1e3d94e3ef9f87734ff10eed8837bc020098', 'message': 'Remove @SuppressWarning for ""CheckReturnValue"" and ""CanIgnoreReturnValue"" in\nfavor of unused variables.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=110486602\n'}"
2272,"{'code': 'd904bddd5194e3ebab7130a8394c1a4e93e9ebdc', 'message': 'Make @GwtIncompatible.reason optional.\nWhile there, redocument and reformat the file.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=110482560\n'}"
2273,"{'code': '7e84e741f9f154476abdabce422f3c2360a6ab74', 'message': 'Make AbstractFuture#done protected & rename it #afterDone to decrease chance of collision with existing subclasses.\n\nafterDone() provides a more general (and probably overall better) solution than what was originally proposed in https://github.com/google/guava/issues/1905\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=110469383\n'}"
2274,"{'code': '1d14953afc82ec4c29b47d4a31a4d49bd722734e', 'message': ""Add @SafeVarargs to Immutable{List,Set}.of just to suppress the Eclipse warning.\n\n(Taken over from lowasser's CL 101977679.)\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=110376515\n""}"
2275,"{'code': 'aa242aafb420e623c5f11ae9d952ec359246af43', 'message': ""Increase wait time.\n\nI saw a failure with the current value, and I assume that it just didn't wait long enough:\n\n-------------------------------------------------------------------------------\nTest set: com.google.common.util.concurrent.InterruptibleMonitorTest\n-------------------------------------------------------------------------------\nTests run: 16, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.447 sec <<< FAILURE!\ntestTryEnterIf_initiallyTrue(com.google.common.util.concurrent.InterruptibleMonitorTest)  Time elapsed: 0.067 sec  <<< FAILURE!\njunit.framework.AssertionFailedError: expected:<true> but was:<false>\n\tat junit.framework.Assert.fail(Assert.java:47)\n\tat junit.framework.Assert.failNotEquals(Assert.java:283)\n\tat junit.framework.Assert.assertEquals(Assert.java:64)\n\tat junit.framework.Assert.assertEquals(Assert.java:71)\n\tat com.google.common.util.concurrent.TestThread.callAndAssertBlocks(TestThread.java:145)\n\tat com.google.common.util.concurrent.MonitorTestCase.testTryEnterIf_initiallyTrue(MonitorTestCase.java:186)\n\nThis is the first time I've seen this test be flaky.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=110375968\n""}"
2276,"{'code': '133f276136fb59db96eddfe7a43886af6deeae23', 'message': 'Deprecate DoubleMath.mean.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=110342322\n'}"
2277,"{'code': '566fc5d60f2b56232a6bd71e1f75c264f7f3b6b2', 'message': 'A first pass at an optimized canDecode implementation.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=110304545\n'}"
2278,"{'code': '4adbd561a73477763bfc77508f49889a2e2697e9', 'message': 'Add BaseEncoding.canDecode(CharSequence).\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=110289529\n'}"
2279,"{'code': '0b328318604e3991ba48efbe78a6f73de8cd2f24', 'message': 'Suppress test under Android.\nIt is occasionally slow, making GuavaAndroidTests flaky.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=110259603\n'}"
2280,"{'code': '379c224e53ac8684bbd9b50bf6986ed8ef13e581', 'message': 'Migrate callers of (Long|Int)Math.checked(Add|Multiply) to the new saturated math methods if it appears that that is what they wanted.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=110255813\n'}"
2281,"{'code': '4dcbc834151c35573ed64e8b3b377afe68963620', 'message': ""Write compare method in a way that won't look buggy to Error Prone.\n\nThis change modifies Java compare methods that are using int casts from longs in\na usually broken way. Int casts in Java will truncate a long value and\nconsequently may alter the sign of the value being cast. Compare methods may be\nimplemented using a subtract, iff values are known not to be near overflowing\nlimits. When the values are longs you can get:\n\nint compare(MyLongHolder other) {\n  return (int)(other.x - x);\n}\n\nAs the cast won’t preserve the sign of the subtract it is buggy and can lead to\nbroken sort orders.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=110206257\n""}"
2282,"{'code': '4940d982c1309f1c93a294d20c5018c7000ede43', 'message': 'Add LocalCache.getOrDefault implementation.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=110199123\n'}"
2283,"{'code': 'e0afcde890057cab55534bc4eac50e0847370dca', 'message': 'Automated g4 rollback of changelist 110160185.\n\n*** Reason for rollback ***\n\nMysteriously breaks tests.\n\n*** Original change description ***\n\nMake AbstractFuture#done protected.\n\ndone() provides a more general (and probably overall better) solution than what was originally proposed in https://github.com/google/guava/issues/1905\n\n***\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=110198153\n'}"
2284,"{'code': '737ff2f3509afbbe8b959798a27f61cc8cf11d02', 'message': 'Warn not to call any default methods on the map returned by Cache.asMap().\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=110193849\n'}"
2285,"{'code': '326ec435e287eff23e72f7a98cf1264c876f9b6f', 'message': 'Update deletion date for Sets.newSetFromMap to December 2017.\n\nAlso switch all calls to it from other methods in Sets to use Collections.newSetFromMap.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=110188751\n'}"
2286,"{'code': 'bd899fd215b9b60db94f6b1156ebca175c0bb66e', 'message': 'Add saturated(Add|Subtract|Multiply|Pow) IntMath and LongMath\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=110188732\n'}"
2287,"{'code': '888fba24b94fc0538a28d6f7ee667a043afc4356', 'message': 'Document Predicate vs. Java 8 issues.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=110185504\n'}"
2288,"{'code': '7e4db4ec8193fc251b549f31ba50dc7f4919b7fc', 'message': 'To generate random hashable things, use Random instead of Object hash codes.\n\nApparently Object hash codes are not particularly random on Gingerbread, under which we run our tests (though they\'re better by Marshmallow).\nPerhaps the ""best"" hash functions can deal with this, but we\'ve seen a few hash functions that sometimes generate more collisions than our tests permit.\n\nThis made their tests flaky.\n\nI couldn\'t identify any particular reason for the use of hash codes over Random.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=110171885\n'}"
2289,"{'code': 'dff906257e001decaa061c33f8b1c1916606232d', 'message': 'Make AbstractFuture#done protected.\n\ndone() provides a more general (and probably overall better) solution than what was originally proposed in https://github.com/google/guava/issues/1905\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=110160185\n'}"
2290,"{'code': '1b6b439d8335321a6f4b86af95cb49937b386c75', 'message': 'Make a slight tweak to the way we calculate means in StatsAccumulator. We pull out a variable for (value - mean) instead of computing it twice. This also means that we no longer need the old mean to compute the change in sumOfSquaresOfDeltas, we only need the new mean, so we can update mean directly instead of storing nextMean. We end up with the same number of temporary variables and the same calculation but one subtraction fewer and (perhaps more importantly) we do the computations in a more natural order.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=110147656\n'}"
2291,"{'code': 'e8167d6059f9bf0bc4679bd8ae62608d340a1f7d', 'message': 'Skip JUnit 4 test under Android.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=110097819\n'}"
2292,"{'code': 'd28d3487c295331a0b0c72bff41f1ccf0fde1719', 'message': ""Update Guava's package-info.java files to point at github instead of googlecode.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=110088488\n""}"
2293,"{'code': '11e6cd4de99bc3c131f26e995f9b3065cf8689f9', 'message': 'Add package-info.java for com.google.common.graph.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=110041898\n'}"
2294,"{'code': 'fa31c1eb06783cf3431d1712d181dc7800207713', 'message': 'Hardcode the expected value to work around Android UTF_16 bug:\nhttps://code.google.com/p/android/issues/detail?id=196848\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=110028408\n'}"
2295,"{'code': '1b7e2844d82c1114c208bb98ee851f1aade328cc', 'message': 'Adds to PairedStats toByteArray() and fromByteArray() to facilitate (faster) serialization.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=110027472\n'}"
2296,"{'code': '2fa06edd823eaa29cb6a5af3e98f296ec1ec0356', 'message': 'Prepare Stats et al and Quantiles for beta release in Guava 20.0.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=110013555\n'}"
2297,"{'code': '621ce7fe1057d8b826093037c58b35bfa4fa6368', 'message': 'Open source com.google.common.graph into Guava.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=110008126\n'}"
2298,"{'code': '55573e6f04c4d1c1f131f9d7b88306264713e3f8', 'message': 'Update README to reference 19.0 as the latest release.\n\nAlso update the current snapshot version from 19.0-SNAPSHOT to 20.0-SNAPSHOT.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=110006844\n'}"
2299,"{'code': 'e5070042c85e764062cfcdf48943ae8feffe0867', 'message': ""Skip cases in which checkedMultiply() fails on Gingerbread (because of an Android bug that has since been fixed).\nI would ideally also be unsuppressing the test now, but it's sometimes slow enough to be flaky, so I'm leaving it suppressed.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=109997357\n""}"
2300,"{'code': 'bbac0656b2da4ef4aaca040d6caa4d76d927df7f', 'message': 'Upgrade Guava to use Truth 0.28 for its tests.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=109995862\n'}"
2301,"{'code': 'dca69d597725d9270159951a805375070fd46b6c', 'message': ""Re-suppress testDivNonZeroExact, which, like testDivNonZero, is too slow.\nIt's been flaky since I turned it back on.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=109911520\n""}"
2302,"{'code': 'a87dfb2aced2da2250d279b6d4a804650a0d6ee2', 'message': 'Instead of skipping testDivNonZeroExact entirely under Android, skip only the problematic cases.\nAndroid bug: https://code.google.com/p/android/issues/detail?id=196555\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=109800696\n'}"
2303,"{'code': '36ab578eb78c92e9ca0a302800f437c7cf08efef', 'message': 'Document that bug affecting LongMathTest.testDivNonZeroExact() has been fixed in recent versions of Android.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=109800032\n'}"
2304,"{'code': '1950bd3e86b9c0f7caba0772cca1d252c900a9bb', 'message': 'Suppress testGoodFastHash32 under Android, as it is flaky there.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=109792217\n'}"
2305,"{'code': '00772bafbd858eb32ab5ffc6ea6a67197354ae16', 'message': 'Remove type parameters from IterableSubject, MultisetSubject, and MultimapSubject.\n\nSee https://github.com/google/truth/issues/192\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=109722143\n'}"
2306,"{'code': '57c01464116fc758b7d1a7f4e355a4edd91ce752', 'message': 'Document that regex bug has been fixed in recent versions of Android.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=109689421\n'}"
2307,"{'code': '0fd7953ccc7a6746cd646ef96f067aea3cae6bdb', 'message': ""Better documentation for an Android test suppression.\nMatcher probably isn't intended for cases in which the subject string is being mutated.\nWe probably don't need to test this case at all, but I've kept it around for now and just explained why it's kind of unfair to begin with.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=109688628\n""}"
2308,"{'code': '22d76943fcc5effee612cc12e89b7027ccc27aba', 'message': 'Shuffling from internal-only change.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=109621456\n'}"
2309,"{'code': '16850211f730ea37a040ab46dc2c25821048b02a', 'message': 'Preparation for j2cl in com/google/common/collect|math|primitives.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=109604218\n'}"
2310,"{'code': '82810968135e9ac4c9120f44b0936d478492066e', 'message': 'Remove support for deprecated GWT Dev Mode (but continue to support Super Dev Mode).\n\nRelated: https://github.com/google/guava/issues/1328\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=109588917\n'}"
2311,"{'code': '3f825ffd9d4485afeb70bb73fa10daf2facf0893', 'message': 'Update README to reference 19.0-rc3 as the latest release candidate.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=109442368\n'}"
2312,"{'code': '1d651423555d8317d3b7ca299bef95a1e52a56ea', 'message': 'Add @Beta annotation to new subSet/subMap methods.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=109435892\n'}"
2313,"{'code': 'c85eacce7d0358d0489d93ef60a4e7cd79aea080', 'message': 'Add subSet and subMap methods to Sets and Maps (respectively) which use Ranges\nto construct the views.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=109360209\n'}"
2314,"{'code': 'a87b7038cdc5b59169943ad7af71317ad8454d4c', 'message': 'Delete InputSupplier and OutputSupplier from Guava.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=109306705\n'}"
2315,"{'code': 'f8fb8c005386fed668ade679bb1469355fddc4f7', 'message': ""Remove TODO. We're satisfied with the current behavior.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=109112840\n""}"
2316,"{'code': '0a686a644ca5cefb9e7bf4a38b34bf4ede9e75aa', 'message': 'Ensure the correct removal notification is published.\n\nFixes #2101.\n\nPull request #2122.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=109009756\n'}"
2317,"{'code': '69a42c5e6fcdba03e1445a8eb9acad7177c6a714', 'message': 'Add @CheckReturnValue to more BaseEncoding APIs.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=108994823\n'}"
2318,"{'code': '4362a4529306ea43e177fae2d0457e794dd77cd6', 'message': ""Fix calls to contains(Object) and get(Object) that pass a value of apparently the wrong type.\nTighten up some generics in other cases to make the type, which was correct after all, look more correct.\n\nBUGS:\n\nAbstractBiMapTester:\n- Fix inv.entrySet().contains(...) check, which was using the forward entry instead of the reverse.\n- Fix getMap().get(v) call to be an inv.get(v) call.\n- Use |reversed| instead of |entry| consistently for clarity.\n\nTypeToken:\n- Call map.get(K) instead of map.get(TypeCollector).\n(Presumably this was just an optimization and not necessary for correctness?)\n\nSIMPLIFICATIONS:\n\nTypeResolver:\n- forLookup always returns a (nullable) TypeVariableKey. Declare that return type instead of plain Object.\n(benyu@: I feel like we may have talked about this, with your expressing a preference for the Object type. But I can find no record of the discussion, so I could be making that up. If you do prefer Object, I won't push for the change.)\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=108994208\n""}"
2319,"{'code': '04ed59121f88861eb24d59de0a0c66aa5400c748', 'message': 'Restore import for java.util.Formatter.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=108345794\n'}"
2320,"{'code': 'daf4349567d344e72fce935aacbb68857327e3ca', 'message': ""Remove import for java.util.Formatter since it's needed only for the javadoc.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=108184450\n""}"
2321,"{'code': '8dc7b6fd4168a0d984262d1254cdfc2c350bae97', 'message': 'Adds documentation to various Sets and Maps factories to discourage their usage.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=108181363\n'}"
2322,"{'code': '71e57ee88a921c820d44897c3e9f5593709f8cf8', 'message': 'Add toString() overloads for all of the singleton enums in c.g.common.primitives\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=108004576\n'}"
2323,"{'code': '2eb1d507c0bc088c58115758e6ff00d56c94263b', 'message': 'Some prep for making SleepingStopwatch extensible someday.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=107961123\n'}"
2324,"{'code': 'eef1c0b22f32fd966f19b3c3f049a113b992fe4c', 'message': 'Add a third AtomicHelper strategy to abstract future\n\nThis should only be used when getDeclaredField(String) fails (used by AtomicReferenceFieldUpdater).  afaik classes are always allowed to reflect on their own private fields so this should never happen.  But some Samsung 5.0.x android devices have bugs in the reflection APIs that can cause this to happen.  As yet reproducing such failures has proven elusive, it is thought that this failure mode may depend on address layout randomization or possibly a flaky bug in the ART compiler.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=107939645\n'}"
2325,"{'code': '0ff281075eee2af8e87d14857911c89a681dfc20', 'message': 'Update Public Suffix List.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=107852605\n'}"
2326,"{'code': '2c735d8e347c429ba4cf97c255e0793ed87e0cb5', 'message': 'Another flaky test.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=107780748\n'}"
2327,"{'code': 'f5ccc73b907631c3e7084f5ca281b61340abedae', 'message': 'Fixes missing parenthesis in javadoc for addCallback in Futures.java\n\nThe current example does not compile.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=107776271\n'}"
2328,"{'code': 'ce57ab2a17f6c04afadfb98c42f99a550b877316', 'message': ""Suppress another flaky test.\nI've seen 3 failures in the past 2 weeks.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=107682920\n""}"
2329,"{'code': 'e20bfcfa976182e4f435807ae0c58e7707fefa75', 'message': ""Implement FarmHash's Fingerprint64 in Java.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=107440675\n""}"
2330,"{'code': 'e809a66d3a851cc39bbde3774806ea99e15d7bab', 'message': 'Explain relationship with juf.Function.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=107409616\n'}"
2331,"{'code': 'c5b947f94fa2e9cfc8981e85b66b3bcbbda8a66b', 'message': 'Document the behavior of transform(|Async) if the input fails.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=107384495\n'}"
2332,"{'code': 'd3d3c98dcf1cd356c5afe1e5345b1398d5d1835c', 'message': ""Revise CL 103553690's scaretext, and propagate it to Cache.\n\nAlso, reformat to 100 characters where not already done.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=107269241\n""}"
2333,"{'code': '987230520c1871fd196df1d7a685813d3680b28f', 'message': ""Suppress another test that's flaky on Android.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=107265666\n""}"
2334,"{'code': '97d14313b8cd6725232f2458dce376571d81bdc5', 'message': ""Start running the tests for guava-testlib under Android.\nThis revealed the usual minor problems and also a new test bug in ForwardingWrapperTesterTest: The sample buggy forwarding class was buggy in *two* ways instead of the intended one. Not only did it forward to the wrong method in one case, but it also reversed the order of parameters in all cases. Android happens to test its methods in a different order than the JVM, so it detects the reversed parameters first. I've fixed this by fixing the parameter order.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=107246813\n""}"
2335,"{'code': '86daa5957a113a729dcfc75365de889cbe200a1c', 'message': 'Remove no-longer-needed suppression method.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=107200850\n'}"
2336,"{'code': 'acb83ead07974893aa37d5e30fe8c4e1bf814241', 'message': 'Implement CharSource.asByteSource(Charset).\n\nhttps://docs.google.com/document/d/12AiHmmoOuMFposUQI9nyVBUr7-pZcsiKkDj5sm2Qwvo/edit\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=107071921\n'}"
2337,"{'code': '107078903eaf1898ad0986257e69444378c13bf1', 'message': 'Add warning/scare text to MD5 and SHA1 hash functions.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=107007414\n'}"
2338,"{'code': 'f506c13369d250027dfe9d5ee09695c839d64270', 'message': 'Make CycleDetectingLockFactory.lockStateChanged static.\nFixes #2213.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=107001430\n'}"
2339,"{'code': '08127e3110bd7ea8e6eb84fccaed501455394f63', 'message': 'Make MultisetNavigationTester.totalSize static.\nFixes #2214.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=107000422\n'}"
2340,"{'code': 'bd0ff5e4fdb97904fca84d57792fddc3f7d96862', 'message': 'Make methods in CycleDetectingLockFactoryBenchmark static\nFixes #2215.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=106999688\n'}"
2341,"{'code': '557a51f3ac19cf4b2ffbcb32354152c88643398d', 'message': 'Make some methods in guava-tests static.\nFixes #2216.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=106999599\n'}"
2342,"{'code': '37b5f69eecee2350f765ed1d613914e78f514e9a', 'message': 'Suppress another flaky test.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=106983717\n'}"
2343,"{'code': '8b8a060a134055c46149ccb369e5ce83a8bf29a2', 'message': 'Reduce Bloom filter size again to reduce (eliminate?) flakiness.\n(In fact, CL 106839287, while it claims to remove a value that\'s ""no longer meaningful,"" seems to have made the flakiness worse. This fits with the comments on the CL that suggest it has effects -- specifically, an increase in wall time. Since that CL, this test has been failing 100% of the time instead of just the vast majority of the time, though it\'s possible that the timing is a coincidence.)\nThis test has also been causing problems for our coverage build:\n\n[]\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=106949319\n'}"
2344,"{'code': '50abd28024b494a585b41890191099c11a2a5461', 'message': 'Fix lastIndexOf reference in BooleansTest.\n\nSaw this when looking through [] Looks to be a copy/paste error?\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=106864923\n'}"
2345,"{'code': '0cd37337a227dd00c0634305ddad0b37599022c7', 'message': 'Suppress new CollectionIncompatibleType Error Prone check by casting\nincompatibly-typed argument to query methods in generic collection types.\nThis will enable us to make this pattern an error in [], preventing\nfuture occurrences of this bug.\n\nREVIEWERS TAKE NOTE: We are *not* fixing this bug.  Fixing it requires making\na behavioral change, and we need your team to assume any risks associated\nwith that. Please approve this CL, so we can enable the new compiler error\nand prevent future occurrences of this bug.\n\nBackground:\n\nVarious generic collection types have methods that take Object rather than the type parameter you would expect, e.g. Collection#contains. Consider a\nCollection<String>.  If someone invokes contains() on that collection and\npasses in an argument of type Integer, it can never return true because the\nCollection cannot contain any Integers.\n\nThis CL changes places where these methods are called with an incompatible\ntype by casting the argument to the declared type of the method, such as\nObject or Collection<?>.  **This does not fix the bug.**  It is\nsemantically-equivalent code that bypasses the Error Prone check so that the\ncode will continue to compile after we enable the check in the compiler.\nFixing the bug mechanically is not feasible because the fixes are too complex,\nbut we want to prevent more instances of this bug from entering the codebase.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=106759178\n'}"
2346,"{'code': 'ea53e2a4fe1511cd9f552ba7d9bf42af5d372671', 'message': 'Eliminate some CollectionIncompatibleType errors that were suppressed by CL 106598613.\nThe errors are harmless in this case, but we might as well make sane calls.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=106759168\n'}"
2347,"{'code': 'b79fa921fe418f7f105e8bb9d96b6e9ae23598c9', 'message': 'Suppress new CollectionIncompatibleType Error Prone check by casting\nincompatibly-typed argument to query methods in generic collection types.\nThis will enable us to make this pattern an error in [], preventing\nfuture occurrences of this bug.\n\nREVIEWERS TAKE NOTE: We are *not* fixing this bug.  Fixing it requires making\na behavioral change, and we need your team to assume any risks associated\nwith that. Please approve this CL, so we can enable the new compiler error\nand prevent future occurrences of this bug.\n\nBackground:\n\nVarious generic collection types have methods that take Object rather than the type parameter you would expect, e.g. Collection#contains. Consider a\nCollection<String>.  If someone invokes contains() on that collection and\npasses in an argument of type Integer, it can never return true because the\nCollection cannot contain any Integers.\n\nThis CL changes places where these methods are called with an incompatible\ntype by casting the argument to the declared type of the method, such as\nObject or Collection<?>.  **This does not fix the bug.**  It is\nsemantically-equivalent code that bypasses the Error Prone check so that the\ncode will continue to compile after we enable the check in the compiler.\nFixing the bug mechanically is not feasible because the fixes are too complex,\nbut we want to prevent more instances of this bug from entering the codebase.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=106729548\n'}"
2348,"{'code': '41c3a220300dd8e8b6e41f7089875c98a14cb7d9', 'message': ""Fix buggy test identified by CollectionIncompatibleType.\nThe test was calling get(class) instead of get(typeToken).\nThe test still passes, since it was expected a null return value -- exactly what it gets for a key that isn't present.\nI've also added containsKey() and entrySet().contains() checks to verify that the null value really is present.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=106703971\n""}"
2349,"{'code': '6b0e07b84a7a442965c2c85f0e1ea108b6f0c257', 'message': 'Improve docs.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=106684213\n'}"
2350,"{'code': '98744349daa4c32fd07ecc5f6010863c825e5fbd', 'message': 'Reduce size of ""large bloom filters"" test...it\'s causing OOMEs\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=106629533\n'}"
2351,"{'code': 'dfea713ebb421181f287fbd51c0d581892a17a5d', 'message': 'Suppress new CollectionIncompatibleType Error Prone check by casting\nincompatibly-typed argument to query methods in generic collection types.\nThis will enable us to make this pattern an error, preventing\nfuture occurrences of this bug.\n\nREVIEWERS TAKE NOTE: We are *not* fixing this bug.  Fixing it requires making\na behavioral change, and we need your team to assume any risks associated\nwith that. Please approve this CL, so we can enable the new compiler error\nand prevent future occurrences of this bug.\n\nBackground:\n\nVarious generic collection types have methods that take Object rather than the type parameter you would expect, e.g. Collection#contains. Consider a\nCollection<String>.  If someone invokes contains() on that collection and\npasses in an argument of type Integer, it can never return true because the\nCollection cannot contain any Integers.\n\nThis CL changes places where these methods are called with an incompatible\ntype by casting the argument to the declared type of the method, such as\nObject or Collection<?>.  **This does not fix the bug.**  It is\nsemantically-equivalent code that bypasses the Error Prone check so that the\ncode will continue to compile after we enable the check in the compiler.\nFixing the bug mechanically is not feasible because the fixes are too complex,\nbut we want to prevent more instances of this bug from entering the codebase.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=106628443\n'}"
2352,"{'code': 'd00572edf1c42f9fc9d2419a615588404efd656a', 'message': 'Fix deletion date for Objects APIs to be two years since the release of 18.0.\n\nhttp://google.github.io/guava/releases/18.0/api/diffs/changes/com.google.common.base.Objects.html\nhttps://github.com/google/guava/wiki/ReleaseHistory\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=106615381\n'}"
2353,"{'code': 'b949116fbccc42f90e96c9278c3593c9903a32be', 'message': 'Flag another flaky test.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=106606046\n'}"
2354,"{'code': '57cfd334a6bd2830e8971101a925bf5c4198cc72', 'message': 'Adding SOAP 1.2 media type.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=106586330\n'}"
2355,"{'code': 'f6186e3be52ad5118e5efa787f0ce5cd03013278', 'message': 'Pick a clearer word to describe |target|.\n\nFixes #2211.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=106549164\n'}"
2356,"{'code': '37746d4569b434ec1fcec6854bb8b29904ac2172', 'message': 'Another flaky test.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=106508082\n'}"
2357,"{'code': 'c341403876b50134ab47a4c5f85630a2c88ba9ed', 'message': ""Suppress more flaky tests, plus a few that I'm guessing will also be flaky (because they have nested loops over our integer candidates).\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=106498617\n""}"
2358,"{'code': '3cabeeefe50d93a91f3e1b98f725de33e0f9c73c', 'message': 'Another another flaky test.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=106438348\n'}"
2359,"{'code': 'e73befa763b968c1d016ff700b9da4b2b8032b37', 'message': 'Yet another flaky test.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=106426307\n'}"
2360,"{'code': '8c412a725f91ccf05fc5231ce2cdae99141edc8e', 'message': 'Re-apply wildcard translation fix.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=106415574\n'}"
2361,"{'code': 'bc913b7d0ab3b230943fb666b3d05be56aa7a6f6', 'message': 'Suppress the MapMaker equivalent of the Cache test suppressed in CL 106397380.\nThe test is flaky.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=106404785\n'}"
2362,"{'code': '242f8147210d0beec6f8222ce84caa7b47fa8e17', 'message': 'Revert unintended Objects->MoreObjects migrations.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=106403843\n'}"
2363,"{'code': '345c7f98d9474ceceb66c442e225440784123681', 'message': 'Another flaky test.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=106402571\n'}"
2364,"{'code': '1d927f9b55109cb284bbdbf0ab055f676d2821b3', 'message': 'Migrate users from c.g.c.base.Objects to MoreObjects.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=106401177\n'}"
2365,"{'code': '32c0b4c9c9badde90f4c49cbee72f12786a49d3d', 'message': ""Suppress the main flaky tests we've seen since running Guava-Android tests.\nThis probably isn't a complete list, but it's a good start.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=106397380\n""}"
2366,"{'code': 'e4dec2136f396f462de9f31c035f04a3686f6cdf', 'message': 'Replace one use of String.split() with a Splitter to reduce\nmemory allocations.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=106330171\n'}"
2367,"{'code': '3197768314b6f9e0b7078d40176c8b9220415db5', 'message': 'Rename SuppressUnderAndroid to ""AndroidIncompatible,"" since we treat it just like GwtIncompatible: stripping, not @Suppress-style suppression.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=106329942\n'}"
2368,"{'code': '42f98108422f92cb6620d6f22ff78d7ce491d76e', 'message': 'Eliminate the hacks that we needed in order to use ClassValue and Unsafe on Android.\nNow we tell Proguard to ignore those classes (since Unsafe is actually available and both have fallbacks anyway).\n\n(partial rollback of CL 101034385)\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=106320897\n'}"
2369,"{'code': 'cd3cc46a37e1dc005e2ad4ca3cc28ebb4b9a99ae', 'message': 'Suppress ""non-varargs call of varargs method with inexact argument type for last parameter.""\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=106315392\n'}"
2370,"{'code': 'd76cd8770c519d3341c91fb01aeb2b0e4026ab24', 'message': ""Automated g4 rollback of changelist 105235264.\n\n*** Reason for rollback ***\n\nIt turns out this doesn't fix the Guava issue. As such, I think it's probably preferable to keep the count != 0 check as it prevents unnecessary work when there are no entries in the segment. I have another fix in progress that seems to work.\n\n*** Original change description ***\n\nAttempt to address https://github.com/google/guava/issues/2131 by removing the if (count != 0) check.\n\n***\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=106181279\n""}"
2371,"{'code': 'ff7e92eb82e83b3da3b01ece5a0150c7d2f11c3d', 'message': 'Port a small optimization made to a copy of ByteStreams upstream.\n\nThe small optimization preallocates the ByteArrayOutputStream.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=106169239\n'}"
2372,"{'code': '2be61aa4ac0427a36c70ee75728b91d4bc7e246f', 'message': ""Stop stripping Error Prone @ForOverride from Guava.\n(We still need to strip @LazyInit, which hasn't yet been released publicly.)\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=106159338\n""}"
2373,"{'code': '5b9f5ef77666d2e1ffe5489d503facee83133d99', 'message': 'Have Cache.stats() warn that stats might be untracked (zero). Addresses Guava\nissue #2178.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=106154194\n'}"
2374,"{'code': '44a2592b04490ad26d2bc874f9dbd4c1146cc5de', 'message': 'Fix RegularContiguousSet.intersection to handle singleton results.\n\nPull request from perceptron8 <perceptron8@gmail.com>\nhttps://github.com/google/guava/pull/2197\n\nFixes https://github.com/google/guava/issues/2196\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=106153276\n'}"
2375,"{'code': 'c071822d399b5c0e066790067d575c6a56740762', 'message': ""Warn about stringConverter()'s very surprising behavior for Longs, Ints and Shorts.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=106139124\n""}"
2376,"{'code': '27bd02b0599639288b565fd976c6b22d2459e872', 'message': 'Link to wiki.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=106007357\n'}"
2377,"{'code': '8740e5ca66b27ac0a0aeb28854ac4b89333f9cbd', 'message': 'Improve Throwables.propagate javadoc\n\nThe mention of the type system is misleading, and a word was missing.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=105980357\n'}"
2378,"{'code': '1a1b97ee1f065d0bc52c91eeeb6407bfaa6cbea1', 'message': 'Fix Iterables.removeIfFromRandomAccessList to handle Lists for which set() throws IAE (for example, if the list disallows duplicate elements).\n\nFixes Guava issue #1596\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=105826920\n'}"
2379,"{'code': 'bde81523d94478e145583eb5b1687c8aad280a1b', 'message': 'Add a note about finding the first non-null element in an iterable and with varargs.\n\nRelated to https://github.com/google/guava/issues/384\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=105802942\n'}"
2380,"{'code': '1c9236d4ea9267b460ed6af65b5b3c325f56999b', 'message': 'Make warning warningy. Fixes Guava issue #2153.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=105800506\n'}"
2381,"{'code': '34914345ea2c1ea55fca0f72efd962022a3e8dd2', 'message': 'Update the comment link for the Apple Passbook media type.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=105787155\n'}"
2382,"{'code': 'bffcd0a6edc5febbb7543128f4789e968f099ab7', 'message': 'Deprecate FluentIterable.of(E[]).\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=105753905\n'}"
2383,"{'code': '63360f3f588a4a30d2d2e43ee6ec3f724d38b546', 'message': ""For public Guava only, rely on the GWT compiler's built-in @GwtIncompatible stripping instead of our custom stripping.\nThe custom stripping dates from the days before GWT 2.6.0 added it to the compiler: http://www.gwtproject.org/release-notes.html#Release_Notes_2_6_0_RC1\nThis change has been possible for a while, since Guava has required GWT 2.6.1 since Guava 18, but we hadn't had the motivation.\nNow we do: This lets us avoid checking the stripped sources into Github, which lets us avoid mixing stripped and handwritten sources, which lets us simplify our MOE inverse mappings.\nInternally, we will continue to rely on the custom stripper for now.\n\nMechanically, all we're doing is:\n- Remove all the stripped sources from public Guava (by removing the build rules that put them into Guava).\n- In Maven/Ant, copy *all* GWT-compatible sources, whether fully GWT-compatible or not, into our GWT resources. Those that aren't fully GWT-compatible either have supersource emulations (in which case the main sources will be ignored under GWT's usual supersource mechanism, as they are now) or simply require the built-in @GwtIncompatible stripping (in lieu of the previous custom stripping).\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=105596491\n""}"
2384,"{'code': '73da46a848acc327b956d6ef6263647fd6457d2d', 'message': 'Add tests that demonstrate the difference between FI.from(E[]) and FI.of(E[]).\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=105513154\n'}"
2385,"{'code': '69a75be1f1f8b15a03fe8aaf985aceadc7a10f41', 'message': 'Reformat much of util.concurrent.\n\nI squeezed in a few other changes:\n- for (;;) => while (true), since our formatting rules require(?) weird formatting for the former\n- removal of some ""@throws NullPointerException if x is null"" clauses, since that is our default policy\n- adding {} to some if() statements or loops or something\n- maybe other things I forgot?\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=105508573\n'}"
2386,"{'code': '7eb6b3de60691344f52234184a44f22eb2eefde0', 'message': 'Update public suffix list.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=105479296\n'}"
2387,"{'code': 'c7f97f64a32dd742461e22b1524d5ff03e844260', 'message': ""Don't strip the @GwtIncompatible from Guava.\nDoing so will cause problems if we change how we generate GWT supersource.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=105328892\n""}"
2388,"{'code': 'b5c5f028e0b5fe178fca45a71b9b1e16e0b403e5', 'message': 'Remove @GoogleInternal from GWT emulation of ForwardingSortedMultiset.\nForwardingSortedMultiset itself has been GWT-compatible since CL 43412779.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=105327321\n'}"
2389,"{'code': '728a990f9b455bbebcaaf1111c766101893135f6', 'message': 'Emphasize the differences between of(E[]) and from(E[]).\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=105322014\n'}"
2390,"{'code': 'ea11557f1dcbb4a06abe213d9234784c5b01e094', 'message': 'Cache Ordering.natural().nulls{First,Last}(), since those are very commonly used. https://github.com/google/guava/issues/1451\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=105247018\n'}"
2391,"{'code': 'bb5673f60ce9dcda1c228b0d0e2ce2485468f965', 'message': 'Attempt to address https://github.com/google/guava/issues/2131 by removing the if (count != 0) check.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=105235264\n'}"
2392,"{'code': 'e3142eea5770e267524c280c8fbb23be130fac5a', 'message': 'Link from SettableFuture to AbstractFuture, and do some more rewriting and reformatting.\nMotivation: https://github.com/google/guava/pull/2184\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=105234717\n'}"
2393,"{'code': '68bc047eb60d7f200f1190878d2f0c067bb9b842', 'message': 'Address https://github.com/google/guava/issues/1543 by explicitly despecifying evaluation order.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=105077540\n'}"
2394,"{'code': '0cdfef602bc04513efe9a7a4c2821d71f9dcf00d', 'message': 'Rewrite Iterables.toArray to work correctly in the presence of concurrent modification (https://github.com/google/guava/issues/1558).\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=105071914\n'}"
2395,"{'code': '80b78c8ba68e32963e1684787a10b7f78c91e81a', 'message': ""1. Omit sun.security.* methods from our Android tests.\nThat package isn't available there (at least at compile time, presumably at all).\n\n2. Accept NPE instead of IAE when given an empty key.\nI didn't dig enough to figure out whether this was an Android bug or a spec ambiguity.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=105070193\n""}"
2396,"{'code': '2025f478bc3b9f2ecca4918f80ec4a6878788afd', 'message': 'Whitespace changes from MOE release?\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=105015253\n'}"
2397,"{'code': 'e7aeee328e1d6b42fea2c0971b46b9ad649e2398', 'message': 'Make MutableClassToInstanceMap serializable.\n\nFixes Guava issue #1437.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=104998043\n'}"
2398,"{'code': '83923892da4dc396e497c956f00cb4c577d941ec', 'message': ""Remove more possible static-init deadlocks (https://github.com/google/guava/issues/1977).\n\n- ImmutableSortedMultiset: I couldn't figure out a way for this to actually deadlock, but I figure it's best for it to follow the pattern of the others.\n- ImmutableSortedSet: This might be able to deadlock if one thread creates a RegularImmutableMap (which then calls into RegularImmutableSortedSet and then ImmutableSet) while another initializes ImmutableSortedSet (which then calls into RegularImmutableSortedSet).\n- ImmutableTable: This might be able to deadlock if one thread GWT-deserializes a SparseImmutableTable (which then calls into ImmutableTable) while another initializes ImmutableTable (which calls into SparseImmutableTable).\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=104995935\n""}"
2399,"{'code': '91b5db6570568265aec0a4636023c0e0925661ba', 'message': 'Upgrade local variables for Iterables.filter and Iterators.filter to indicate the input predicate keeps the result (not filter out elements from result).\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=104528163\n'}"
2400,"{'code': '8fbb7ac8d31aed6ce9dfb6cf8cbe0d426820fb91', 'message': 'Update README to include link to guava-testlib Javadoc and to reference 19.0-rc2 as the latest 19.0 release candidate.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=104437358\n'}"
2401,"{'code': 'a9f8b899c07a33c2203b4e6cf84861646952aeed', 'message': 'Bump version of maven-dependency-plugin.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=104298531\n'}"
2402,"{'code': 'b01e8df8a7ffdcd3d52c960aadb044fefaafc8ba', 'message': 'Fixes to FluentIterable:\n-add from(E[] elements) (unmodifiable)\n-open source of()\n-open source of(E, E...)\n-soon-to-deprecate of(E[]) (modifiable)\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=104226690\n'}"
2403,"{'code': '60fe0bb1bf3257779474af8fd80a59cb9a2f402a', 'message': 'Delete AbstractFuture.newCancellationCause().\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=104201894\n'}"
2404,"{'code': '43081bd66bd9a4881a91001abb7d62855de3e4cc', 'message': 'Test rejectionPropagatingExecutor under GWT.\nThis would have caught the bug since fixed in CL 104101156.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=104199812\n'}"
2405,"{'code': '40c67d60770905d5dbb3a4966f492b95e9052886', 'message': 'Update the Public Suffix List.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=104153251\n'}"
2406,"{'code': '1667927759ca66835d3154c99d25fa4799e507d6', 'message': ""Move many implementations out of Futures.java (https://github.com/google/guava/issues/2091).\nMostly I've moved them to new classes, but I've also moved rejectionPropagatingExecutor to MoreExecutors (unmodified except for a new null check).\n\nThis also revealed that the GWT copy-pasted catching/catchingAsync code was missing use of rejectionPropagatingExecutor. This is now fixed.\n\nAlso, reformat the moved code.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=104101156\n""}"
2407,"{'code': '1269ba4833c8ed134444963069bb3b664c945fcf', 'message': 'Presize the ArrayList/LinkedHashMap to which ListFuture/MapFuture adds its final results. See [] for motivation (ignore the fact that I accidentally used List#newArrayListWithExpectedSize there... oops!).\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=104098308\n'}"
2408,"{'code': '611004986159134f4c45122279b5a93cb14bf3bf', 'message': 'Make TreeRangeSet Serializable.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=103974562\n'}"
2409,"{'code': 'c115c594de2f63bc710260cfadbe44b3b0e6ba25', 'message': ""Disable cancellation causes by default and make them enableable via a system property.\n\nAlso, remove protected from newCancellationCause.  I'll eliminate in a followup.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=103957793\n""}"
2410,"{'code': '508681f2a02cee7865a9b7ef82d8d64dbdf8cd6a', 'message': 'Remove unnecessary string literal concatenation.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=103863840\n'}"
2411,"{'code': 'd3d57fb445d239f2045de1d65d0fc10fda6bed9f', 'message': 'Test the current propagation of cancellation (but non-propagation of interruption) from the input Future to the transformed Future.\nArguably we should test this for methods like catching+catchingAsync and perhaps others. Maybe we already do; these tests are kind of a mess: https://github.com/google/guava/issues/2091\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=103769878\n'}"
2412,"{'code': '54dc1b0b18f5f77e675101ddb48e9ddfb1f1666f', 'message': 'Add copy/paste for Gradle projects that want to use Guava.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=103556414\n'}"
2413,"{'code': '49d8026ac5cc8d1d0acd4bd79f0a22f5b8fcb8cf', 'message': 'slight error message enhancement requested in Guava bug #2158\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=103386220\n'}"
2414,"{'code': '417170e76e39b20849c9d4b36d40b9cbff48c17a', 'message': 'Point users directly to catchingAsync instead of requiring them to read the withFallback deprecation advice, too.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=103323620\n'}"
2415,"{'code': '8238e01ac71a9ee16a64e581e96801d488d06fdd', 'message': 'Open source the HMAC hashing libraries (@since 20.0).\nClone the underlying Mac instance (if possible) during newHasher() invocations.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=103098597\n'}"
2416,"{'code': '37aa9ba6c22fa8285f137b34c309ef288374c35c', 'message': 'Try to uncorrupt the Converter javadoc.\nhttps://memegen.[].com/5619060859994112\n\nIf I ever interview elsewhere in the future and they ask what the hardest\ntechnical challenge I ever faced was, I plan to say ""getting a code example to\nshow up right in Javadoc"". Unless they want an example where I was ultimately\nsuccessful.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=102877432\n'}"
2417,"{'code': 'faeac10f40ccac6d851983b1d88bb95a6c37d3ae', 'message': 'Deprecate Hasher#hashCode(), implementations of this method return a hashCode of the Hasher object itself and not the hashed data, deprecating this would help warn users of making this mistake.\n\nSee []\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=102665096\n'}"
2418,"{'code': '9d094dcf64f6e7b51306c47689160025169306ea', 'message': 'Fix two javadoc typos in Forwarding[Loading]Cache (""delegete"" -> ""delegate"").\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=102646747\n'}"
2419,"{'code': '70a8f94e0690a51bc8b106c563a09cc4435d5cfb', 'message': ""Ensure that ByteStreams.skipFully/skipUpTo don't skip more bytes than remain in the stream.\n\nThis is a horrible thing that is possible with FileInputStream in JDK7, despite that it violates the contract of InputStream.skip. The solution (which we were already doing in our method for counting a stream via skip) is to never ask to skip more bytes than the stream reports as available().\n\nThis does unfortunately change skipFully to skip by reading when the InputStream always returns 0 from available() (the default behavior if it isn't overridden), but as far as I can tell it's necessary to ensure correct behavior.\n\nThis issue is causing test failures under JDK7 with the recent change to the behavior of ByteSource.slice.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=102586216\n""}"
2420,"{'code': '3f1d2e422a12a29e5ac7425dc323c4b99470f0d2', 'message': ""Allow slicing a ByteSource starting at an offset that is >= the source's total size.\n\nIn this case, the sliced source will be empty. Previously, the call to slice() would succeed but an exception would occur when the user attempted to read the returned source. There is precedent for this behavior: FileChannel/SeekableByteChannel allow setting the channel's position beyond the end of the file, in which case reads return EOF.\n\nThis is a change to existing behavior, but I think it's probably a good change to make:\n\n- Previously, it was unspecified what happens if offset is >= source.size. Now it's specified.\n- Previously, a call to slice could succeed but return an (effectively) invalid ByteSource that would always throw.\n- The override of ByteArrayByteSource.slice is currently using this behavior, because I thought that was the behavior that the normal slice implementation was already using. I could change that, but I think this is preferable.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=102276980\n""}"
2421,"{'code': 'e45dc70105840d3816a6a1f08c9b6365ab7d8aee', 'message': 'Remove unnecessary ""unused"" suppressions.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=102260279\n'}"
2422,"{'code': 'ef814effebd9ac91dc7d4b89ee14d46782bd6b62', 'message': 'Escaped instance of symbol ""\'"" within a url so that more apps detect the full URL.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=102250495\n'}"
2423,"{'code': 'bc26f3c3b47acef8bba45ac4a0d30250d14063b1', 'message': 'Mark ClassPath as compatible with j2objc.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=102170255\n'}"
2424,"{'code': '7f357b8db9dc1c0564c99689e29f5f927e623ad7', 'message': 'Make Splitter.on(String) redirect to Splitter.on(char) if the String has one character.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=101985625\n'}"
2425,"{'code': '6b3a586b9f4a0ad3936fbeace6c66f940aa7530f', 'message': 'A few small improvements to ImmutableSet method docs.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=101956976\n'}"
2426,"{'code': '878097bc15a46e0f9cebcf27016fe9bb2c0109f1', 'message': 'Advertise Converter.from() a little better, for Java 8 users.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=101721565\n'}"
2427,"{'code': 'ee7ff4e772ba4273e298cd50ddce1333e8d654ba', 'message': 'Avoid boxing ints in ConcurrentHashMultiset Preconditions checks\n\nThe preconditions checks for occurrences are boxing int values for the format\nstring. This has shown up in profiling as we are using this collection quite\nheavily. Switch from preconditions formatting to basic if statement to avoid boxing.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=101702798\n'}"
2428,"{'code': 'f95284485db2f50f5e88c95348d737ca1c6b0c58', 'message': 'Use MultimapBuilder instead of a custom Multimap subclass in ImmutableMultimap builders.\n(Retry of CL 100504590, which was rolled back in CL 100578593. The problematic target has been fixed.)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=101478691\n'}"
2429,"{'code': '07a277bb9ab6dacd4bdbeee49024918be4159cdb', 'message': 'Roll back most of the rest of CL 100047098 (the javatests/... parts, since I got java/... in 100850485).\n\nLeave a few tests suppressed:\n- the ""relies on assumptions about OpenJDK"" Maps tests\n- TreeMultisetTest#testElementSetBridgeMethods\n- ForwardingMultisetTest#testElementSet\n- ImmutableTableTest#testOverflowCondition\n\n*** Reason for rollback ***\n\nNested test classes now work under Android: []\n*** Original change description ***\n\nSpray @SuppressUnderAndroid on everything related to suite builders and nested test classes.\nAlso:\n- Work around Android toArray() bug in UnmodifiableCollectionTests.\n- Stop referring to NavigableMapTestSuiteBuilder / ListTestSuiteBuilder in comments of ForwardingNavigableMapTest.java / ListsTest.java. The reference impedes the import stripper.\n\n***\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=101455645\n'}"
2430,"{'code': '01105d161ceb753ac93d467c2859814b7b121ce0', 'message': ""Roll back the eventbus portion of CL 100292134.\n\n*** Reason for rollback ***\n\nNested test classes now work under Android: []\n*** Original change description ***\n\nSuppress tests under Android.\n- ByteStreamsTest.testNewDataOutput_writeChars may show a legitimate bug, whether in our code or in the Android library.\n- CloserTest.testCreate looks up the JDK version. We should update this to look up the Android version if applicable.\n- Android seems to have trouble with:\n  - nested test classes\n  - test classes without default constructors (which are necessarily constructed in suite() methods).\n\nI've also improved some failure messages in ByteStreamsTest.\n\n(Not...\n\n***\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=101455589\n""}"
2431,"{'code': '062b226bad9d86479a23329e8c40cbcfc833d21c', 'message': ""Clarify why we're logging a specific failure.\n\nhttps://github.com/google/guava/issues/2134#issuecomment-133094389\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=101240012\n""}"
2432,"{'code': 'a34e7053d0b1db281893e0ec430f0d27ffa8e85e', 'message': '(These changes apply ONLY to our Google-internal Android-specific copy of Guava.)\n\n- Hackily disable use of Unsafe and ClassValue as a temporary measure.\n- Strip comment reference to @ForOverride, which was impeding import stripping.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=101034385\n'}"
2433,"{'code': '1f2b8775c6b29a89261cef3ddf33523b043c9056', 'message': ""Convert much of Guava to Truth by using Refaster.\n\nThe motivation was my wish for a better ThrowablesTest error message in https://github.com/google/guava/issues/2130 (though I'm pretty confident that the problem there is \\n vs. \\r\\n).\nI made a lot of changes, but I left a lot undone. In particular, I avoided most of the collection assertions, since we often want to test specific collection methods. e.g., we don't necessarily want get() to be rewritten to containsKey().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=101020845\n""}"
2434,"{'code': 'c94fe82560e55debf0778af2db287e091d01b419', 'message': 'Internally rewrite LexicographicalOrdering to accept a Comparator.\n\nThis is just to make it easier, in Java 8, to write a Comparators.lexicographical(Comparator) that need not go via Ordering.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=101014892\n'}"
2435,"{'code': '8fafcc4cfa302f75d70d3943b26ece226c45418e', 'message': 'Import Animal Sniffer annotation.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=100960079\n'}"
2436,"{'code': '3a604328c28919480caea60e754debb8ec84b75b', 'message': 'Update public suffix list.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=100855861\n'}"
2437,"{'code': '623fe38bb7151e3afd3c539a67b06be9c0b663c3', 'message': ""Automated (partial) g4 rollback of changelist 100047098.\n(only the testlib parts, and excluding UnmodifiableCollectionTests, where we still need a workaround for Android's toArray() bug)\n\n*** Reason for rollback ***\n\nNo longer a problem now that we put test infrastructure in a separate dex (CL 100842219) and suppress searching for tests in that dex (CL 100849889).\n\n*** Original change description ***\n\nSpray @SuppressUnderAndroid on everything related to suite builders and nested test classes.\nAlso:\n- Work around Android toArray() bug in UnmodifiableCollectionTests.\n- Stop referring to NavigableMapTestSuiteBuilder / ListTestSuiteBuilder in comments of ForwardingNavigableMapTest.java / ListsTest.java. The reference impedes the import stripper.\n\n***\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=100850485\n""}"
2438,"{'code': '70b6e02a7c8ada33d89472ccba88ca9c55a22689', 'message': 'Test that the Future returned by schedule() returns the correct value.\n\nhttps://github.com/google/guava/issues/2133\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=100686478\n'}"
2439,"{'code': 'b1c37ad75c31fe7cc7f57f2b5427f44ccf2c0fd5', 'message': 'Fix SlicedByteSource.sizeIfKnown() to work in the case where offset + length > Long.MAX_VALUE.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=100584971\n'}"
2440,"{'code': '047addc8b86b71b77f19850500097c113f4f543a', 'message': 'Automated g4 rollback of changelist 100504590.\n\n*** Original change description ***\n\nUse MultimapBuilder instead of a custom Multimap subclass in ImmutableMultimap builders.\n\n***\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=100578593\n'}"
2441,"{'code': 'fd2ed183d135fe0fa80b8aded6c56926160760cc', 'message': 'Do intelligent sizing in ImmutableMap.Builder.put(Iterable<Entry>).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=100573858\n'}"
2442,"{'code': 'b2fbacd11615d7d381d598e6c25d13bed0b49d28', 'message': 'Discourage use of CheckedFuture.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=100572172\n'}"
2443,"{'code': '655c55c1bd99b610e40f1ca3973edac3aec60486', 'message': 'Fix a typo in an identifier in FreshValueGenerator.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=100543465\n'}"
2444,"{'code': '2b244625a3d452460ae04b865c6b1893fe98a78a', 'message': 'Use MultimapBuilder instead of a custom Multimap subclass in ImmutableMultimap builders.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=100504590\n'}"
2445,"{'code': '0f4bd484fc6e1b779da9a4178c336f278e81d746', 'message': 'Fix ByteArrayByteSource.slice to handle the case where offset + length > Long.MAX_VALUE.\n\nFixes https://github.com/google/guava/issues/2127\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=100485800\n'}"
2446,"{'code': 'cadd7237e484818b55be97883cc5d83f0f0bd6a7', 'message': ""Loosen up our nefarious Entry tests to permit an exception so long as the nefarious entry can't harm the underlying collection.\nIf a nefarious Entry really wants to throw an exception, we can't stop it, since it could also do it from getKey() or getValue().\n\nThis fixes the test under Android.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=100300382\n""}"
2447,"{'code': '9c3ea24fe4d409f6ffe2ca4d7942ba69ce02b333', 'message': ""Suppress tests under Android.\n- I've suppressed nearly everything that might be calling Type.equals(). At some point, we can try to figure out whether we can interoperate with Android's Type.equals() just as we do with JDK7's. Or we can at least be more surgical in our suppressions; this CL sprays them everywhere.\n- I've suppressed a bunch of URLClassLoader-using tests. I'm not sure that custom URLClassLoaders make a lot of sense on Android.\n- I've suppressed some suite() methods, as I haven't managed to get the test-suite builders working under Android.\n- ForwardingObjectTesterTest may show limitations of ForwardingObjectTester under Android, or it may a sign that we just need to call setAccessible or something. But since ForwardingObjectTester is just a package-private testing utility, I haven't dug into it.\n- I've commented a test in RateLimiterTest that may fail for similar reasons in newer versions of Android.\n\nA general point about c.g.c.reflect: Reflection is slow on Android, so it's unlikely that users will be making significant use of this package. For this reason, I don't see further work on Android testing of the package as a priority.\n\n(Note that we don't actually run these tests on Android at HEAD. This will be changing soon.)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=100300236\n""}"
2448,"{'code': 'f884739190740aa4a73a74f1a445bc1bce382659', 'message': 'Whoops, FluentIterable.cycle() does have a decent Stream equivalent when the source is something with a stream() method.\n\nAnd I even tested this.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=100298931\n'}"
2449,"{'code': '02da7eaa207b2f31080427c88291f40c872cf6da', 'message': ""Document why we're using a custom annotation instead of Android's built-in @Suppress.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=100295547\n""}"
2450,"{'code': '462200278acc8e0224496a8f05ad3480dcdc679f', 'message': ""Suppress tests under Android.\n- ByteStreamsTest.testNewDataOutput_writeChars may show a legitimate bug, whether in our code or in the Android library.\n- CloserTest.testCreate looks up the JDK version. We should update this to look up the Android version if applicable.\n- Android seems to have trouble with:\n  - nested test classes\n  - test classes without default constructors (which are necessarily constructed in suite() methods).\n\nI've also improved some failure messages in ByteStreamsTest.\n\n(Note that we don't actually run these tests on Android at HEAD. This will be changing soon.)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=100292134\n""}"
2451,"{'code': '9ec5f9cda354997424ca4012345f383390a4a403', 'message': 'Fix https://github.com/google/guava/issues/2125 by having all the AbstractService delegate classes forward their toStrings() to their outer impls.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=100274992\n'}"
2452,"{'code': '46b7091ca5c39464f67e2bb74b7fc48798fe98be', 'message': '- Use newFastestQueue in ConsumingQueueIterator so that we get ArrayDeque instead of LinkedList on the server.\n- Use newFastestQueue in BinaryTreeTraverser, bringing it one step closer to GWT compatibility.\n- Rename newFastestQueue to newFastestDeque.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=100127987\n'}"
2453,"{'code': '77dbca52620d360e15c0e4ef4ac71d6e0146298a', 'message': 'Remove unneeded ""emulated=true"" to fix open-source GWT tests.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=100126746\n'}"
2454,"{'code': '703ef758b8621cfbab16814f01ddcc5324bdea33', 'message': ""Fix an ancient bug in Iterators.cycle: Once we spawn a second iterator, we shouldn't remove from the first one.\nAndroid caught this bug (by returning true from hasNext() rather than by throwing ConcurrentModificationException as the new test does).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=100115203\n""}"
2455,"{'code': '1cabf8aac191b2628205e84b30ecafb1e88c2a3e', 'message': 'Make EvictingQueue GWT compatible.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=100063347\n'}"
2456,"{'code': '9e56ef17c335319d21f1f2c454176c9d32687a59', 'message': 'Makes sure guava only uses public GWT APIs.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=100051360\n'}"
2457,"{'code': '1670960e088fe9c1e78b5d7dd7c0505741bf2988', 'message': 'Spray @SuppressUnderAndroid on everything related to suite builders and nested test classes.\nAlso:\n- Work around Android toArray() bug in UnmodifiableCollectionTests.\n- Stop referring to NavigableMapTestSuiteBuilder / ListTestSuiteBuilder in comments of ForwardingNavigableMapTest.java / ListsTest.java. The reference impedes the import stripper.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=100047098\n'}"
2458,"{'code': '9bf99b4d77339af124b8595028f4e9b1756917ca', 'message': ""Give MapMaker the same workaround as Cache for Android's concurrency-unsafe toArray() implementation.\nThe fixes the corresponding Android test for MapMaker.\nAlso, use that implementation for values() (for which we have no test, but it looks likely to be vulnerable, too).\nFinally, include an android.com link in case the shutdown of Google Code invalidates the existing bug link.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=100037556\n""}"
2459,"{'code': '8ff490732db7a71adcf561171b5444ddc61c8990', 'message': 'Reformat with google-java-format (a few hand corrections necessary).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=99979179\n'}"
2460,"{'code': '5cc546f8688ded5fe8c0ceb5d36a631f00b758c2', 'message': 'Finish explaining the Stream equivalents.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=99831803\n'}"
2461,"{'code': '273f6961656c6c5512ea8be49a0086fb0f6a29e7', 'message': 'Eliminate our custom emulations of java.nio.charset.Charset and java.nio.charset.StandardCharsets.\nThe classes will be including in GWT itself in the next release.\nTo get our code to compile, we must change to build against a GWT snapshot.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=99780060\n'}"
2462,"{'code': '0fa6eac941722326e776f000089d4065b66354ae', 'message': 'Update FluentIterable to explain its relationship with Stream.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=99760803\n'}"
2463,"{'code': 'c5a469757a46757302030da1a00cedc22c6afa6a', 'message': ""Suppress tests on Android.\n- BigInteger and BigDecimal appear to be buggy on Android (at least Gingerbread, where I'm testing now, since we claim to work with it).\n- Some c.g.c.math utilities appear to be failing there, presumably because of other Android bugs, but I suppose it's conceivable that there's something wrong with our code. Ideally we will investigate further at some point, perhaps after testing on newer versions of Android.\n\nAlso, check in some of the failure-message improvements I put together while debugging.\n\n(Note that we don't actually run these tests on Android at HEAD. This will be changing soon.)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=99743836\n""}"
2464,"{'code': 'd1bf05846f63faf0d63b375dfc88eca00e11ebbf', 'message': ""Suppress tests under Android:\n- EasyMock, since class extension doesn't work there\n- BloomFilter tests where Android runs out of memory\n- a couple other tests where Android appears to disagree about String.format rounding\n\n(These tests don't actually run on Android at HEAD yet, but they will soon.)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=99728601\n""}"
2465,"{'code': '2b8b6fd9f3da35b0a7c28316a8167092bafd6179', 'message': 'Update public suffix list.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=99624314\n'}"
2466,"{'code': '1d16deaafeeac53b84f3b63bb75b5cb202f4d547', 'message': ""Loosen the tests around the regex: It's OK for the regex to match something that turns out to be invalid.\nThis makes the test pass on Android.\n\nAlso, add debugging output for when the test does fail.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=99605586\n""}"
2467,"{'code': 'c92fd867770ed68e59a79a9f73ccd991e032301b', 'message': 'Migrate from EasyMock to Mockito.\nThis lets the test work on Android.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=99598924\n'}"
2468,"{'code': '2fdf32abe4c8f03b2de52a531c2e87a660ef28f6', 'message': 'Work around Android toArray() bug by doing what we arguably should have done in the first place -- calling containsElementsIn(...).inOrder() instead of converting both arguments to List.\n\nhttps://code.google.com/p/android/issues/detail?id=72073\nhttp://r.android.com/98929\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=99598194\n'}"
2469,"{'code': '0f7c6c8e5f4ce82a7dbe89afea568093f02d79ce', 'message': 'Provide concurrency-safe toArray() implementations for Android VMs (at least Gingerbread, probably others) that need it.\nThis fixes LocalCacheTest.testExpand_cleanup on Android:\n[]\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=99595440\n'}"
2470,"{'code': '528f0c5a0eada088eb29c9b3882b1d083f4d209d', 'message': 'Add notes about circular buffer to EvictingQueue javadocs.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=99585760\n'}"
2471,"{'code': '6ef4550c792a47b91ff7fa60a60a7a2765178eb1', 'message': '- Stop manually stripping @MediumTest. MOE has stripped it automatically for a while. Remove end-of-line comments that were interfering with stripping in this particular case.\n- Strip @Flaky with strip_line instead of begin_strip/end_strip.\n\nBoth of these are minor simplifications, and that\'s nice. But also...\n\nI ran into a bad interaction between (I think) MOE\'s ""strip elements with this annotation"" stripper\'s heuristics and its comment stripper. I started stripping @MediumTest-annotated attributes from a special internal ""Guava for Android."" MOE\'s annotation heuristics appear to strip the end_strip comment but not the begin_strip comment. I guess that it\'s stripping everything from the first method annotation -- surely the right thing to do but a pain in this case. This causes MOE to strip everything from there to the end of the file. As it turns out, there\'s not much left to strip. But it strips the closing }, so that fouls everything up.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=99569931\n'}"
2472,"{'code': '7a3389afb9f97fe846c69e46d106ac1dbf59f51d', 'message': 'Fix for\nTypeToken[Map<?, String>].getSubtype(ClassToInstanceMap.class)\n\nto return TypeToken[ClassToInstanceMap<String>]\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=99527025\n'}"
2473,"{'code': 'dde3133a3b9b84e9349849af6ec5a62da67ec706', 'message': 'Mark MoreExecutors.DirectExecutorService and decorator classes final to prevent Mockito.spy usage\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=99526523\n'}"
2474,"{'code': '06720a55796344906d2e35ba2dd737260c25b9be', 'message': 'Javadoc update to reflect generic type change.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=99506351\n'}"
2475,"{'code': '648c0fe661f328a2cb1785c85e70d9e4fbdf01ba', 'message': 'Noninvasive patch for negative results from size().  See https://github.com/google/guava/issues/2108 for more details.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=99503151\n'}"
2476,"{'code': 'f49015a77c5eb39587687a6c529280fecd33ceef', 'message': 'Change the type of ImmutableSortedMultiset.naturalOrder to be more liberal.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=99501054\n'}"
2477,"{'code': '6221f96f36240f5b0296ec2910306ac326af3590', 'message': 'Fixes J2ObjC reference cycles in c.g.c.util.concurrent.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=99482445\n'}"
2478,"{'code': 'd394ad4710a658c1ccf8bace32ff94f2bd10517a', 'message': 'Suppress some Guava tests for c.g.c.base, and update others.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=99400844\n'}"
2479,"{'code': 'b39c3dad1b213d78170f688f9dac930f904c5735', 'message': 'Make a private inner class final. Prevents Mockito.spy().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=99391056\n'}"
2480,"{'code': 'aaf8ce209dcb8cc03f1e73cf0962f876f45679ef', 'message': 'Remove a stray @Beta annotation on a test.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=99365620\n'}"
2481,"{'code': '3d7163a70404eb1f5771fd05ecb710fa142dabf5', 'message': 'remove special Error handling from JdkFutureAdapters.  no need to turn Errors into deadlocks.\n\nSuch special handling has been removed from other parts of concurrent over the years.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=99300567\n'}"
2482,"{'code': 'caac80a4f9772ae544c98ac195e8a7432d6a9c9c', 'message': 'Adding a new MediaType for ""application/manifest+json"", defined in http://www.w3.org/TR/appmanifest/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=99289128\n'}"
2483,"{'code': '755b2a8a851a15e7d9fbe32fc8d99e7670717631', 'message': 'Use Ascii.truncate() now that our copy of Guava contains it.\nActually, I think we could have done this back in CL 97895305, if not earlier.\n\n(partial rollback of CL 74746985)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=99270142\n'}"
2484,"{'code': '05daed8a64abd271faf51962cf505d5ce60b1001', 'message': 'Optimize the GWT TimeUnit library in terms of performance.\n\nBackground:\nLong divisions in GWT are expensive because there is no ""long"" type in Javascript and the GWT emulates them. When the TimeUnit library is used in a hot loop, it causes perfomance issues.\n\nSolution:\nThe long divisions are extracted into precomputed constants.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=99220786\n'}"
2485,"{'code': '1cb299387932d97e38eef63f52e5b20dd6943ab6', 'message': 'Give directExecutor a better toString() (currently it is just ""INSTANCE"")\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=99183090\n'}"
2486,"{'code': 'f0c1ccba7e35bf46585f3fa4d1aaef00dc11c4ee', 'message': 'Fix cycles com.google.common.cache.\nAdds @J2ObjCIncompatible to com.google.common.util.Debugger.\nStop whitelisting other packages that pass the cycle test.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=99038555\n'}"
2487,"{'code': '3b46e4c7725a828c79df9d3abbece1e9aae7d98b', 'message': 'Add mention of Guava 19 release candidate in README.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=99037572\n'}"
2488,"{'code': '31fc19200207ccadc45328037d8a2a62b617c029', 'message': 'Introduce tryParse function to Longs which accepts radix parameter. This makes it consistent to Ints which support this function as well.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=98915993\n'}"
2489,"{'code': '26342f6fe1f8b629a2ce1bdb3ef872f84a7e960a', 'message': 'Work around a type inference change in javac\n\nThe javac compiler\'s behavior when handling wildcards and ""capture"" type\nvariables has been improved for conformance to the language specification. This\nimproves type checking behavior in certain unusual circumstances. It is also a\nsource-incompatible change: certain uses of wildcards that have compiled in the\npast may fail to compile because of a program\'s reliance on the javac bug.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=98889343\n'}"
2490,"{'code': '19de0d57cad063a5952dc2f33a573cb8ed0494ff', 'message': 'Add maven-central badge to Guava README.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=98851664\n'}"
2491,"{'code': '5c981c7f47bc4a3e30870dcadbf092328d4b13fc', 'message': 'Do not require an exception to be thrown on a no-op putIfAbsent if null is unsupported.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=98636371\n'}"
2492,"{'code': '9a50815df26be7416be0fac489e29feee7a3c220', 'message': 'Dummy change to test something.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=98514770\n'}"
2493,"{'code': '5e4e5eee5d5df8804db49ddc596682e7910220b8', 'message': ""Use raw types in ImmutableSet.copyOf(EnumSet) magic.\n\nI haven't been able to find any better way to make this work when I try to build against Java 8.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=98448037\n""}"
2494,"{'code': '799f5952d9d6aac782f9256936cbe61c2d088935', 'message': 'Add missing @throws tags to Verify.\n\nPull request from Alberto Goffi <alberto.goffi@usi.ch>:\nhttps://github.com/google/guava/pull/2106\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=98443748\n'}"
2495,"{'code': '5c35173581c89a684e499652d9840798b0fd57f7', 'message': ""Don't require an exception to be thrown on a no-op putIfAbsent if put is unsupported.\n\nThis rules out Java 8's default putIfAbsent implementation, and is really just a pain.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=98443465\n""}"
2496,"{'code': 'b7f275422d25cb592eecfe37b86aa7c1aa9a4059', 'message': 'Resolves J2ObjC reference cycles in eventbus.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=98393529\n'}"
2497,"{'code': 'a91e6f2f18e7b5a9e72d4d782e11a111729112fb', 'message': ""Update Guava's README.md to add release info.\n\nThis includes info on the latest release version as well as on snapshot versions, with links to Javadoc and JDiff for both.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=98328630\n""}"
2498,"{'code': '00adacb0ad4f35d08cfe1927b7fc1e9df075aa9e', 'message': ""Fix guava test breakage due to GWT internal changes.\n\nFor some reason Guava tests call into GWT internal implementations.\n\nI ported guava to use Arrays.copyRange instead of GWT's internal arrays methods. These\nmethods should never be called from any code outside of GWT's core module.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=98113442\n""}"
2499,"{'code': 'f1ffbe598cec1c91a87926fb05df4b3176c3232c', 'message': ""Eagerly check for an appropriate exceptionClass constructor during calls to Futures.getChecked.\nThis way, callers that pass a bad exceptionClass find out unconditionally instead of only when their Future fails.\n\n(Retry of CL 97776570, rolled back in CL 97787294 because of a breakage that has since been addressed. I've made two tweaks: I've improved the error message (to minimize confusion, and I've migrated to the standard J2ObCIncompatible annotation (as done elsewhere already),\n\nWe hope for bad exceptionClass parameters to soon be caught at compile time.\n\nTo keep performance acceptable, cache a set of classes with appropriate constructors.\nUse ClassValue, which was introduced in JDK7.\nDo the compatibility dance, including making Animal Sniffer happy by annotating the class that uses ClassValue.\nThat requires updating Animal Sniffer to a version that respects the annotation in more places, perhaps related to http://jira.codehaus.org/browse/MANIMALSNIFFER-29\nI've also updated the Animal Sniffer signatures on the theory that newer is probably better, although there is no apparent no impact on Guava.\n\nThe cost of the eager check is performance in the success case: What used to take ~1.6ns will now take ~3.2ns. This is likely to be swamped by the actual work being done and by other overhead (like threads). (This was discussed and approved in API Review.)\nThe ClassValue implementation is faster than the fallback version, particularly in the unlikely case in which users call getChecked() with many different kinds of exception types.\n\nFinally, take the opportunity to start on splitting up Futures.java and FuturesTest.java: https://github.com/google/guava/issues/2091\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=97961145\n""}"
2500,"{'code': '43804c29191423a33e5cf24a36ae7920a64ddad6', 'message': ""Stop stripping lowasser's username.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=97814212\n""}"
2501,"{'code': 'cbe012e7d5c8315a4418b3ea2be1e288a07a8ee9', 'message': ""Run the tests from the class instead of those from some other class.\n\nI seem to recall some weirdness around adding suites to themselves -- like, the tests were getting run even without the self-add call except in some unusual case like when you requested a run of a specific class with --test_arg/--test_filter? I forget. Anyway, I came across this while trying to run the tests under Android, which apparently we don't do.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=97801167\n""}"
2502,"{'code': '62c3f0a82c32cda85df28f77d08fc7967e52aa6f', 'message': 'Automated g4 rollback of changelist 97776570.\n\n*** Reason for rollback ***\n\nBroke tests.\n\n*** Original change description ***\n\nEagerly check for an appropriate exceptionClass constructor during calls to Futures.getChecked.\nThis way, callers that pass a bad exceptionClass find out unconditionally instead of only when their Future fails.\n\nWe hope for bad exceptionClass parameters to soon be caught at compile time: []\nAPI Review: https://docs.google.com/document/d/1hUeO_1OJY_xIAHN089p5d9as1uX4M62MBlbkiLyiJbk/edit\n\nTo keep performance acceptable, cache a set of classes with appropriate constructors.\nUse Clas...\n\n***\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=97787294\n'}"
2503,"{'code': '15284f71149325e6f389512cf5ba946031ea835f', 'message': ""Eagerly check for an appropriate exceptionClass constructor during calls to Futures.getChecked.\nThis way, callers that pass a bad exceptionClass find out unconditionally instead of only when their Future fails.\n\nWe hope for bad exceptionClass parameters to soon be caught at compile time: []\nAPI Review: https://docs.google.com/document/d/1hUeO_1OJY_xIAHN089p5d9as1uX4M62MBlbkiLyiJbk/edit\n\nTo keep performance acceptable, cache a set of classes with appropriate constructors.\nUse ClassValue, which was introduced in JDK7.\nDo the compatibility dance, including making Animal Sniffer happy by annotating the class that uses ClassValue.\nThat requires updating Animal Sniffer to a version that respects the annotation in more places, perhaps related to http://jira.codehaus.org/browse/MANIMALSNIFFER-29\nI've also updated the Animal Sniffer signatures on the theory that newer is probably better, although there is no apparent no impact on Guava.\n\nThe cost of the eager check is performance in the success case: What used to take ~1.6ns will now take ~3.2ns. This is likely to be swamped by the actual work being done and by other overhead (like threads). (This was discussed and approved in API Review.)\nThe ClassValue implementation is faster than the fallback version, particularly in the unlikely case in which users call getChecked() with many different kinds of exception types.\n\n[] run --run_under=perflab javatests/com/google/common/util/concurrent:FuturesGetCheckedBenchmark -- -i runtime -DexceptionType=CHECKED -DotherEntriesInDataStructure=0,12 -Dvalidator=NON_CACHING_WITHOUT_CONSTRUCTOR_CHECK,CLASS_VALUE,WEAK_SET\nhttps://caliper.[].com/runs/1b73aa59-83d1-429d-9ff4-e40cd8f4637a#r:scenario.benchmarkSpec.parameters.otherEntriesInDataStructure,scenario.benchmarkSpec.parameters.validator&c:scenario.benchmarkSpec.parameters.result\n\nFinally, take the opportunity to start on splitting up Futures.java and FuturesTest.java: https://github.com/google/guava/issues/2091\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=97776570\n""}"
2504,"{'code': '4fbb165ebf208d75100d5d47f56750d247f7d181', 'message': ""Add static factory methods to CharMatcher equivalent to the existing constants.\n\nAlso do some significant reorganization, primarily extracting anonymous CharMatcher implementations to named nested classes and grouping them together at the bottom of the file. This makes it easier to look through the various methods in CharMatcher without being swamped by implementation details of individual matchers. It's also needed for the constant implementations to create a place to put a static final INSTANCE field (which will allow the implementations to be effetively constants, but also lazily loaded, once we remove the constant fields.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=97727559\n""}"
2505,"{'code': 'ee50c94031ae9449d52802d03241791cc2964194', 'message': 'Added missing @throws tag to ConcurrentHashMultiset.removeExactly.\n\nPull request from Alberto Goffi <alberto.goffi@usi.ch>:\nhttps://github.com/google/guava/pull/2099\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=97701970\n'}"
2506,"{'code': '612aaa17a6cd84000779d01a03de37bcac00a1f3', 'message': 'Use j2objc-annotations instead of local annotations.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=97671363\n'}"
2507,"{'code': '56990330cadcf1773b14334366348f85e06935e2', 'message': 'Test Collection.clear() to ensure that iteration and size() are consistent with isEmpty().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=97347352\n'}"
2508,"{'code': '54efc6afdd08c1b1d7d16fc07310e8b25de8e31d', 'message': 'Check that size and iteration are consistent with isEmpty after map.clear().  BiMapTestSuiteBuilder failed to catch an error of this type in HashBiMap, though other tests fortunately caught it.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=97345369\n'}"
2509,"{'code': '01aa613e2132bc3bfcce03c6b2b4d5c3596713f2', 'message': 'Explain the relationship with java.util.Optional, in some detail.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=97336621\n'}"
2510,"{'code': '5bab9e837cf273250aa26702204f139fdcfd9e7a', 'message': ""Use key insertion order in HashBiMap.\n\nThis bumps memory consumption back up to equal a pair of HashMaps; the shared entries in both directions are just enough to pay for the linked list.  On the other hand, we're not actually allocating any additional objects, so this shouldn't be a significant loss for Android.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=97273863\n""}"
2511,"{'code': 'ee2abfb80839ce9d58ad3253c443e3473a8eda17', 'message': 'Shuffling from internal-only change.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=97263526\n'}"
2512,"{'code': '29810272f1bbd76d9c11537b1e28df721fe0d660', 'message': 'Suppress FuturesGetCheckedIllegalExceptionType, a forthcoming Error Prone error.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=97236165\n'}"
2513,"{'code': '7f1ee318345f9099145e4b07b942f0997ce364ce', 'message': ""@GoogleInternal a helper method that's only used by an @GoogleInternal test.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=97235390\n""}"
2514,"{'code': '51b5094d7f71f97e868a01d94f2647efe2d7307a', 'message': 'Call out MinMaxPriorityQueue failure mode.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=97167980\n'}"
2515,"{'code': 'cb0cf6a40e815e662fb63438dbbfebaf6d9dcb80', 'message': 'Add Apple Passbook media type\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=96881592\n'}"
2516,"{'code': '317e95410d73576336e5fec90724b2d4f61b86ac', 'message': 'Adds (unused) method to Utf8Test as part of internal change.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=96817586\n'}"
2517,"{'code': '63b5409df16866e5408f31fc2987dea6cfb716fa', 'message': 'Group annotation dependencies at the top.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=96795721\n'}"
2518,"{'code': 'c62b07df3a68126e1cf549c85c35f4e55178990b', 'message': 'Resolves reference cycles in com.google.common.collect for J2ObjC translation.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=96793584\n'}"
2519,"{'code': '90aada3600274f4aba576f682a936f8cd7eb4492', 'message': 'Minor changes to Utf8 as part of internal change.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=96788388\n'}"
2520,"{'code': '44d99fc5f83f06f577f61cf63569604d3142d96a', 'message': 'Recognize that the reason for an early completion might be cancellation rather than exception.\nThis fixes the bug ""com.google.common.util.concurrent.AbstractFuture$Cancellation cannot be cast to com.google.common.util.concurrent.AbstractFuture$Failure""\n\nTODO(cpovirk): Write basher tests at some point.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=96784416\n'}"
2521,"{'code': 'e9a23fe5ef043723c428a47ca96049306fcf813d', 'message': ""Remove usage of Truth from Guava Testlib.\n\nThere's a circular dependency issue. This also removes some trailing whitespace.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=96639131\n""}"
2522,"{'code': 'd3ee94d93f08ff7cde4c3bbc1ee10fd0feaf73c3', 'message': 'Sort imports.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=96604490\n'}"
2523,"{'code': 'bafb3705b4539fdf6ae7cada2807054f81e5f383', 'message': ""Test EmptyContiguousSet.equals() more heavily, specifically with an argument that's a RegularContiguousSet.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=96599243\n""}"
2524,"{'code': '7c1296bc9422a15d9971b62ef050f660df42fcf4', 'message': 'Replace a couple usages of Iterators.emptyIterator().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=96356488\n'}"
2525,"{'code': '6640609a10c02ad8708cff784417a47a9b4006a4', 'message': 'Add ImmutableMap.Builder.orderEntriesByValue.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=96353128\n'}"
2526,"{'code': '490b1923ac423d4e0063ef131595c8858dcb6016', 'message': 'Use static import for Character char constants.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=96348182\n'}"
2527,"{'code': '0c4e372fece2b313b27f680faaeb02832ddb0699', 'message': 'Make some more helper methods static, as suggested.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=96347171\n'}"
2528,"{'code': '9f90827427e8fe014399d684fc02c07065cdf27d', 'message': ""Remove references to SourceCodeEscapers from javadoc.\n\nIt's still internal-only.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=96345180\n""}"
2529,"{'code': '4db64ccfcdbb20a16c07dd651103e7db68d2fbb0', 'message': 'Permits common/{io,reflect,testing} packages to be transpiled by j2objc.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=96324276\n'}"
2530,"{'code': '8d6b948d4608bd16b777425ca4928cabcaf1aef4', 'message': 'Minor readability and coverage improvements to Utf8Test:\n- static import of Character constants\n- more thorough testing of invalid strings\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=96321934\n'}"
2531,"{'code': '3afb7b79ab5fcfecd85dc8f558ad8a1c579b3cbd', 'message': 'Mark GcFinalization as @J2ObjCIncompatible.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=96311707\n'}"
2532,"{'code': 'f7048f587ea9e1cf3c6575e5918ef74eeb37b7c4', 'message': ""Avoid use of raw types.\n\nJDT's rules for raw types do not match javac's, so it issues a compile error.\nFixes https://github.com/google/guava/issues/2082\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=96216812\n""}"
2533,"{'code': 'd675f3c0a3c96c6a2569a677f5a94c586d68d75f', 'message': 'Update .travis.yml encrypted username/password for oss.sonatype.org to use encrypted form of access token, which can be revoked.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=96120709\n'}"
2534,"{'code': '6315a434ab54c804c0a9d89434f14803ace52b64', 'message': ""Fix a lock ordering deadlock in CustomScheduler reported in https://github.com/google/guava/issues/2072\n\nThe issue is that CustomScheduler uses a lock to atomically reschedule after each iteration, unfortunately this lock has inconsistent ordering with respect to the lock used by AbstractService.  In particular for a RUNNING service the following can ocurr\n\nT1:\nservice.stopAsync()\n  -> AbstractService.stopAsync() [ ACQUIRE AbstractService.monitor]\n     -> AbstractService.doStop()\n        -> CustomScheduler.cancel() [ ACQUIRE CustomScheduler.lock]\n\nT2:\nCustomScheduler.reschedule() [ ACQUIRE CustomScheduler.lock]\n   (getNextSchedule throws an exception)\n  -> AbstractService.notifyFailed [ACQUIRE AbstractService.monitor]\n\nBoom deadlock!\n\nIt looks like i introduced this deadlock in https://github.com/google/guava/commit/2c0727049d7e7cbbe1febf5bcf6b7a4b1860dea5 though it is possible it wasn't an issue at the time since the AbstractService implementation was different\n\nThe fix was to simply move the call to notifyFailed outside the lock.\n\nI have similar concerns about the other lock in this class, but i believe it actually is safe (though we should probably remove it anyway, as per an ancient TODO)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=96113737\n""}"
2535,"{'code': 'a6ce7b511bff96f39c56e598143557dcff08db86', 'message': 'Automatically release snapshots to Maven and Javadoc/JDiff to gh-pages on push.\n\n- Based off of the Dagger config\n- The Javadoc/JDiff updates are handled by https://github.com/google/guava/blob/gh-pages/updaterelease.sh\n- Encrypted env variables have already been added for google/guava\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=96064069\n'}"
2536,"{'code': '49312a9249c1a34c262167bfeb47dea87242ea05', 'message': 'Override isHashCodeFast() to return true for a couple ImmutableSet implementations for which... well, hashCode() is fast.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=96044185\n'}"
2537,"{'code': '3d04a569461d2d4bd978d822b3e01007d2e4bfd6', 'message': 'Google Collections -> Guava\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=96022158\n'}"
2538,"{'code': 'dca232da2109097a0935ef9fa441a76ae7780ba8', 'message': ""&& -> &\nI have no benchmarks, but I'd argue that, based on our past benchmarks of similar situations, this should be our default move.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=96014749\n""}"
2539,"{'code': '287c48c59c740892190a0858218b7383b14f1b98', 'message': 'Fix {@code} and {@link} in com.google.common that are either missing the @ completely or put it before the brace.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=95921937\n'}"
2540,"{'code': '05e283065ac6a51f16a432d87be869c5d21db8cc', 'message': 'Scaretext for everyone!\nFollowup to CL 95568320 and CL 95480161.\n\nAlso, tweak and reformat some other docs.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=95914301\n'}"
2541,"{'code': '0b22e5b3662340e30afdd0b6ef33bfff356c6fb3', 'message': ""Ignore CacheLoadingTest.testExpandDuringRefresh in open-source.\n\nIt's extremely flaky, particularly when run in Travis CI. It's pretty much guaranteed to fail in at least one of the 3 different build runs we do there.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=95839819\n""}"
2542,"{'code': '009c2139db52e058be5f3b237c40df36f90bfe5b', 'message': 'Update README.md to point to new GitHub Javadoc locations.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=95839673\n'}"
2543,"{'code': 'a7e9bf049e6036cec29542befd4ee2495ccd7abb', 'message': 'Change the order of timeoutFuture.setException() and delegate.cancel(), which no one seems to depend on anymore.\nThis allows us to rely on done() for almost all cleanup.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=95839519\n'}"
2544,"{'code': '67862aee98a823bc8ce926e4599b1eb83fc695b1', 'message': 'Add missing @since 19.0.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=95790743\n'}"
2545,"{'code': '1e58f230c9ce4937241cbc866967d1bdca5553a7', 'message': 'Change link to OrderingExplained to GitHub location.\n\nIt got reverted to the Google Code location by the doc change.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=95780221\n'}"
2546,"{'code': '76b76a8491d7e1cfe1f69ee00c796d907be3e8ef', 'message': ""Re-add create() methods with an int expectedInsertions parameter.\n\nThese methods should probably live on indefinitely for binary compatibility.\n\nAlso add @since 19.0 to the versions with a long parameter, since they're technically newly added methods, and add a paragraph from the 3-param version that was missing to the 2-param version.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=95741164\n""}"
2547,"{'code': 'd210c7af763d7045fa35034cab3b4151ae93686e', 'message': 'Add a warning about deadlocks.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=95636626\n'}"
2548,"{'code': 'e1ec3b363fb27208053fd9b6a8c079631e9af19c', 'message': 'Move cancellation propagation from cancel() to done().\n\nAdvantages:\n- We are no longer a blocker to making AbstractFuture.cancel() final. Realistically, that will never happen, but maybe we can make FluentFuture.cancel() final when it comes along?\n- cancel() is not the only way to cancel: setFuture(cancelledFuture) also works, bypassing any propagation logic defined in cancel(). This is probably fine in practice: Once setFuture() is called, there\'s generally no need for additional propagation logic. Still, it feels cleaner to me.\n- The ""read to local, then cancel, then use local"" dance is error-prone (<[]Extracting a method happens to simplify things.\n\nDisadvantages:\n- The method has to be defined in both copies of AbstractFuture (GWT and non-GWT). We could work around this by introducing a superclass or by making it static.\n\nRelated: https://github.com/google/guava/issues/1905\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=95634367\n'}"
2549,"{'code': '578a7944a7611b7433c05d5674fe390171004798', 'message': 'Javadoc generation fixes\n\nDisable timestamp comments in generated files and restrict the use of our custom javadoc stylesheet to builds under JDK7... using that stylesheet with JDK8 generated files produces bad results.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=95584269\n'}"
2550,"{'code': '2cf98c0fd9f520b38ea638e62ef042b5c6bcda90', 'message': ""Fix a race:\nIf one input fails at nearly the same time and with the same exception as the *first* failure, we sometimes log the exception, even though it's already propagated into the output.\nThe problem is that the first failure lets subsequent failures proceed before it registers itself in seenExceptions.\nIt does register itself with setException(), but we don't have full atomicity because we have two sources of truth.\n(This is why we have a problem only when the first failure is involved: Other failures atomically manipulate seenExceptions.)\nThe solution is for whichever caller initializes seenExceptions to propagate it with the value from setException().\nThis is a little messy but hopefully not too bad.\n(It comes with a small bonus: It happens to avoid allocating seenExceptions entirely if there is only one failure.)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=95568611\n""}"
2551,"{'code': '8f750ca2e373ebe8274e7d7ff8aab378929406df', 'message': 'directExecutor() scaretext, take 152.\n\nThis revision consists mostly of being less specific about the circumstances in which bad things happen and more specific about the effects of the bad things.\n\nIf we like this, we can decide whether it belongs here or on directExecutor() itself, and we can link to it from Futures.transform, etc.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=95568320\n'}"
2552,"{'code': 'd871deaba5b832cd60784595035cf3a305a63635', 'message': 'Try to teach users how to understand complex chained Ordering statements.\n\nhttps://github.com/google/guava/issues/1342\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=95475801\n'}"
2553,"{'code': '736f404aed944516aba96812ae0eab6781bf869a', 'message': 'Random collect javadoc improvements, including replicating the pseudo-deprecation information found on Lists.newArrayList for Sets.newHashSet.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=95474959\n'}"
2554,"{'code': 'fe9c2ab0865e85793eceba59dd6c9dc6638bf50a', 'message': 'Miscellaneous minor doc fixes.\n\nincluding:\nhttps://github.com/google/guava/issues/1725\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=95466089\n'}"
2555,"{'code': '9c848726d6b9778fe8649a26cbd82cb66043d403', 'message': 'Rewrite the AbstractFuture Javadoc.\nLink to Futures from ListenableFuture.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=95464400\n'}"
2556,"{'code': '6ac6e2a2d8d01e15cd77e3c3824b3764056878b7', 'message': 'Inline doRun(), which is no longer needed after the combine() rewrite.\nMake done() final.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=95461156\n'}"
2557,"{'code': 'cc3b0f8dc48497a2911dfe31f60fe186b3fed8d4', 'message': 'Change Guava wiki links to new GitHub locations.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=95452934\n'}"
2558,"{'code': 'fb60b16954881e517fdfb93db87c7025c87840ae', 'message': 'Add test for the complicated example in Guava issue #1342.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=95442782\n'}"
2559,"{'code': '229e155dedf273a0547f166f80177664f32dfbc8', 'message': 'Put |final| on a couple methods.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=95325599\n'}"
2560,"{'code': '3df4c67da61c5fdda14db0e9789ac18a32fb3f31', 'message': ""Remove the test code from TypesTest that tries to ensure that Types.newTypeVariable functions correctly in the presence of a SecurityManager.\n\nIt isn't really possible to test this fully given that the security-sensitive operation happens in a static initializer.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=95325181\n""}"
2561,"{'code': '23ce3eb540003adf1095c550aefbcd02bb1f8c98', 'message': ""Aggressively null out references when invoking the transformation/fallback.\n\nThis probably won't matter for the Function overloads. (But in theory the GC could recognize that the remaining references in local variables are unused. And we could null those out if we want, too.)\nIt is more likely to help with the AsyncFunction overloads. There we are more likely to let inputFuture (and possibly a chain of its own dependencies) be GCed long before the derived future completes, since the whole doTransform/doFallback stack frame is often destroyed before the setFuture call bears fruit.\n\nOne other advantage: If we screw up and try to access the fields instead of the local variables, we get an error always instead of only in rare cases.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=95137240\n""}"
2562,"{'code': '27cb14f4d64cdffaae08190d7514e41dafabe42a', 'message': 'Rename AbstractCatchingFuture.running to ""inputFuture.""\nThis matches AbstractChainingFuture.\nThe ""running"" name was more appropriate in the days that it used to sometimes contain the fallback future.\nThat was necessary for cancellation at the time, but now that\'s handled by our use of setFuture().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=95134862\n'}"
2563,"{'code': '9ac7331cdf831adf55842cce6fd9563b09d4766f', 'message': ""Strip testNewTypeVariable from Guava.\nIt really needs to run in its own VM, and this doesn't seem worth the trouble to set up in Maven.\nWe'll continue to run it internally while we decide whether it's worth keeping.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=95121754\n""}"
2564,"{'code': '27dd26ec6876329a6c6bccecc6549939cb02e4c6', 'message': 'Grammar correction in RateLimiter javadoc.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=95117476\n'}"
2565,"{'code': '3bea24c6ad264e9a450debee9808993bdaa25ea5', 'message': ""De-@Beta Stopwatch.\n\nSee https://github.com/google/guava/issues/1312 (we were holding off on the\nde-@Beta'ing because we wanted to remove the public constructors).\n\nThe only other API change we might want to make is to add toString(TimeUnit)\n(https://github.com/google/guava/issues/2007) but that shouldn't stop us from\nde-@Beta'ing it now, right?\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=95031929\n""}"
2566,"{'code': 'b7413f6197c78856b7f706c773f4b9a415e4e996', 'message': 'Dereference the future stored in the local, not the future stored in the field.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=94956002\n'}"
2567,"{'code': 'b1bec6df36b82498ce1dc9c91dd5567d074a7808', 'message': 'Some enhancements for Futures.transform and Futures.catching\n * extract a template method and 2 subclasses from CatchingFuture and ChainingListenableFuture.  This will allow us to eliminate asAsyncFunction() and 2 allocations per transform\n * make CatchingFuture implement Runnable and save a Runnable allocation\n * have CatchingFuture/ChainingListenableFuture clear all their fields on cancel, which should prevent pinning the transformers\n * have rejectionPropagatingRunnable short circuit for directExecutor() which should save 2 allocations for users who prefer to pass directExecutor() explicitly\n * have Futures.catching use the rejected execution exception logic when it makes sense\n\nhttps://github.com/google/guava/issues/1995\nhttps://github.com/google/guava/issues/2013\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=94954378\n'}"
2568,"{'code': '93f2646608858620706b8293dda8236bb4346ca9', 'message': 'Deprecate ComparisonChain#compare(Boolean, Boolean).\n\nSee https://github.com/google/guava/pull/2062\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=94949611\n'}"
2569,"{'code': 'f4aaf986810b8ed3d70665a72c650330c5b262d9', 'message': ""Replicate CL 94485597's uniqueIndex doc changes to FluentIterable.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=94930940\n""}"
2570,"{'code': '2b9d1761e6f913cbe044f1b80033e555e1500539', 'message': 'Static import all Feature values (except sizes) when no names in the file are ambiguous.\n(Ambiguous names are cases like ""SUPPORTS_REMOVE,"" a name used by both IteratorFeature and CollectionFeature.)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=94787622\n'}"
2571,"{'code': '70622d7cff636ae14d35b529250db939ba273f5c', 'message': 'Add ConcurrentNavigableMapTestSuiteBuilder, which also applies the ConcurrentMap testers to the sub-map views.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=94786659\n'}"
2572,"{'code': '924be3363a15007dd3888ad85e878591412e4a68', 'message': 'Add testers for ConcurrentMap.replace(K, V, V).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=94784595\n'}"
2573,"{'code': '1027abc546e85d679cb273f9a59b96b98277f883', 'message': 'Fix a bug where NavigableMapTestSuiteBuilder was not using NavigableMapTestSuiteBuilder on the descending map tests, due to an oversight discussed in []\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=94779653\n'}"
2574,"{'code': 'b9fdc929c6f19d8a4592643a637d9fd24e6976eb', 'message': 'Use ConcurrentMapTestSuiteBuilder to test CacheBuilder and its flavors\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=94773095\n'}"
2575,"{'code': '0773e1f33527e782da18b73e33dd9aed54a08c8d', 'message': 'Add a tester for ConcurrentMap.replace(K, V).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=94772513\n'}"
2576,"{'code': '5a9636bff2add7ddc39d2a6cd995d8ac00bd8b38', 'message': ""Eliminate TestConcurrentMapGenerator, which isn't really buying us anything.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=94766887\n""}"
2577,"{'code': '161398088d6ff7dab5c0f4c9e33e02c92c14272e', 'message': 'Revert hack introduced in []\n\nError Prone now has its own copy of @GoogleInternal.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=94720637\n'}"
2578,"{'code': '27e74e7aae5afc816887e29c77e05757bf3fe315', 'message': 'Add a tester for ConcurrentMap.remove(key, value).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=94711404\n'}"
2579,"{'code': '7da6133e7d4b5c7691e7031f412f3b1d557630fd', 'message': 'Start ConcurrentMapTestSuiteBuilder, adding a tester for putIfAbsent.\n\nBegins work on https://github.com/google/guava/issues/149.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=94704830\n'}"
2580,"{'code': 'cc65b4f51f110c01cf5a10c2966bac767b270327', 'message': 'In TypesTest, change the check for correct functioning in the presence of a SecurityManager. Previously we had a SecurityManager that refused Method.setAccessible except in a few well-known places, the intent being that one of the places it would refuse would be the use in Types.TypeVariableInvocationHandler that we wanted to test. But that proved to be fragile. Instead, we explicitly refuse that place, and we check that the refusal happened. This builds more knowledge of the implementation into the test, but should be more robust.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=94699561\n'}"
2581,"{'code': 'cc9a6859088a105889c448f719757e7c5d04b4cc', 'message': ""Make Stopwatch's constructors package private.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=94623624\n""}"
2582,"{'code': 'fd29d0ef46498aae20a9b98c2e598168ff63bb99', 'message': 'Reformat collect.[A-I]* with google-java-format.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=94617505\n'}"
2583,"{'code': 'df63c1841305fac43b6b4990df4a81de2ee66d6b', 'message': 'google-java-format com.google.common.hash\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=94607659\n'}"
2584,"{'code': 'df2054b1bd40a1382a86c9796086c619045a4948', 'message': 'Automated g4 rollback of changelist 94598995.\n\n*** Original change description ***\n\nAnnotate com.google.common.base.Converter reverse field with @LazyInit.\nIt\'s safe to lazy init ""reverse"" field since the object it\'s pointing to is immutable.\n\n***\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=94606878\n'}"
2585,"{'code': '40e74b7943eaf871ab3781661e155ecbf9a41527', 'message': 'Reformat common.primitives with google-java-format.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=94602682\n'}"
2586,"{'code': 'aa63148561009f5f4b4a07ea4174f3e8b09450bd', 'message': 'Reformat common.base with google-java-format, to 100 columns. A few changes by hand as discussed.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=94602205\n'}"
2587,"{'code': '1ad071f27ee0b96d5ca9e45bad7ae973e3a19e76', 'message': 'Annotate com.google.common.base.Converter reverse field with @LazyInit.\nIt\'s safe to lazy init ""reverse"" field since the object it\'s pointing to is immutable.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=94598995\n'}"
2588,"{'code': 'e1931d4392c825b923bc1a6a6310e5966625f120', 'message': 'Rollforward [] with the missing dep added.\n\n*** Original change description ***\n\nAnnotate MediaType.toString with @LazyInit and remove volatile (which is\nunnecessary).\n\nMinor followup to []\n\n***\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=94594440\n'}"
2589,"{'code': '13f0d1624c1002d470383cdee7ec5958c7c1d3ff', 'message': 'Automated g4 rollback of changelist 94571347.\n\n*** Original change description ***\n\nAnnotate MediaType.toString with @LazyInit and remove volatile (which is\nunnecessary).\n\nMinor followup to []\n\n***\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=94574051\n'}"
2590,"{'code': 'fb25083e4628ba4f648b80283d167b667fb0d09c', 'message': 'Annotate MediaType.toString with @LazyInit and remove volatile (which is\nunnecessary).\n\nMinor followup to []\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=94571347\n'}"
2591,"{'code': '394b543cecd34825ea829102bb8c0c8b1f0f3037', 'message': 'Annotate lazily iniatialized fields of immutable collections with @LazyInit\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=94498610\n'}"
2592,"{'code': '505b14ab0a87d2663ae4d593e0affa9b902268b0', 'message': 'Deprecate Sets.newSetFromMap().\n\nSee https://github.com/google/guava/issues/1001\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=94497455\n'}"
2593,"{'code': '64164e46013f0939a0e6539620c33588ced0e6cf', 'message': 'Suggest Multimaps.index from Maps.index -- both in its Javadoc and in its failure messages.\nRewrite the Javadoc more generally.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=94485597\n'}"
2594,"{'code': '8b5e347fbbfa8b6287bd8913b418e2980625c777', 'message': 'Add special-file doc to isEmpty().\nThis is similar to what we already have on size/sizeIfKnown/length/lengthIfKnown.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=94299611\n'}"
2595,"{'code': '516a02f67b37e7ef2045faaa35124f104f844825', 'message': 'Enable tests that are newly runnable under GWT:\n\n- some immediateFailedFuture tests, which we missed when making immediateFailedFuture work under GWT.\n- some tests that uses TestLogHandler now that TestLogHandler works under GWT.\n\nAlso, rename a logger variable to reflect the recent CombinedFuture->AggregateFuture rename.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=94197944\n'}"
2596,"{'code': 'b52c926ad08f04f2d5c95e313cffaac6a9c28d9c', 'message': ""Make TestLogHandler GWT-compatible.\n\nGWT doesn't have synchronizedList, so I switched to |synchronized|. The small performance difference shouldn't matter much.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=94193122\n""}"
2597,"{'code': '2fe6fd117fb75e01372506334fb408be0d46f327', 'message': 'Use Arrays.deepToString() to print arrays in MoreObjects.toStringHelper().\n\nSee https://github.com/google/guava/issues/1125\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=94118840\n'}"
2598,"{'code': 'bab78fedb1fa6a2b519a69048aad9faf4e1c052a', 'message': 'Special case Futures.immediateFuture(null) to return a static constant since all null immediateFutures are indistinguishable.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=94118271\n'}"
2599,"{'code': '01d5493fa96a16e4217dd5c3d2e953fca0e93a94', 'message': 'Update travis-ci for new container based infrastructure and maven caching.\n\nPull Request: https://github.com/google/guava/pull/2043\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=94116813\n'}"
2600,"{'code': 'd7307d809756af7602f140f82692d652b27e5ce9', 'message': 'Simplify CharStreams.skipFully.\n\nSkip is documented as blocking until characters are available, so zero should only be returned if EOF.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=94099984\n'}"
2601,"{'code': '3446f7093562549d863ccb00edc2d5907d4038f4', 'message': ""Add usage example to MMPQ's class docs.\n\nSee https://github.com/google/guava/issues/1678\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=94030468\n""}"
2602,"{'code': '566b80d7e4f1822917c8a450ccda35fd5e9154aa', 'message': 'Use lazy init (single-check idiom) for MediaType.toString().\n\nSee https://github.com/google/guava/issues/1486\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=94028416\n'}"
2603,"{'code': 'e72e09f8516936c000f25118b0dead2adc8e3930', 'message': 'Add size-related methods to Byte/CharSource:\n\n- ByteSource: Optional<Long> sizeIfKnown()\n- CharSource: Optional<Long> lengthIfKnown()\n- CharSource: long length() throws IOException\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=94027330\n'}"
2604,"{'code': '590036122e482c28affda893efd5e0e2e01732ee', 'message': 'Complete the migration of static analysis annotations to Error Prone\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=94023780\n'}"
2605,"{'code': 'a33ec44061f7c986f86cadfe4306808ba4c80feb', 'message': 'GWTifies a few more concurrency related things to support delayed execution and futures with timeout.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=93930624\n'}"
2606,"{'code': '3aa114e884ab1835d65122ee6474c287f64c3361', 'message': 'Deprecate MapConstraint and MapConstraints.\n\nWe removed Constraint + Constraints back in Guava 16, so these should ultimately go as well.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=93750347\n'}"
2607,"{'code': '97a90475292a4681c5f709b9e728cc01e716d5fb', 'message': 'Update public suffix list.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=93726186\n'}"
2608,"{'code': 'a12990bf76c59305ff7b28ffbb2a90cdc367f688', 'message': 'Add a comment to AbstractStreamingHasher explaining why putString(CharSequence, Charset) is not overridden.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=93648231\n'}"
2609,"{'code': 'bd833b03a3b955c7c8107bf2be8930d297510eb6', 'message': 'Adding javadoc to com.google.common.collect.testing.Helpers.testComparator.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=93470413\n'}"
2610,"{'code': '9f5e84957ebe770949265c3eadd9ef355edc0e95', 'message': 'Add specialized slice support to ByteArrayByteSource.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=93334857\n'}"
2611,"{'code': 'e15b12c85581128298a9e499d8b0655aa9b2a257', 'message': 'Properly use the expected-size factory methods in MultimapBuilder, instead of conflating capacity with expected size.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=93322785\n'}"
2612,"{'code': '3407145dd77cad5a409583b19bbaf2ed1750e0df', 'message': 'GWT-related shuffling from internal change.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=93144921\n'}"
2613,"{'code': '8da635118880351587de56de99f3988e1d466f2a', 'message': ""Don't rely on MessageDigest.isEqual() for constant-time evaluation in HashCode.\n\nAdd benchmarks for the various array equality impls.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=93134222\n""}"
2614,"{'code': '88853aca64ea245be0b4bc325b67754b5ea040ac', 'message': 'Remove some unnecessary checkNotNulls from BaseEncoding.\n\n(One instance was reported here https://github.com/google/guava/pull/2045)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=92938049\n'}"
2615,"{'code': '4f7f6b4634387234578fe0a0a454b6d975783eec', 'message': 'Finally publish Lists.cartesianList to Guava.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=92936363\n'}"
2616,"{'code': '1ea3ff8fdeb285bb5c4fd1d3d5cc8781216d0a2c', 'message': 'Give people who have never used UnmodifiableIterator before a hint.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=92927557\n'}"
2617,"{'code': '4dac1d05549f6a1057a823aedec7f0e1f71a683b', 'message': 'Specify constant-time behavior for HashCode.equals().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=92925537\n'}"
2618,"{'code': '40544b8942cdeadce0d1a0986696ef849ff4fb3d', 'message': 'Fix typo in Floats.max() javadocs.\n\nReported here https://github.com/google/guava/pull/2044\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=92574147\n'}"
2619,"{'code': '20a42756c477b03c0123870b763148f4a18bdc8e', 'message': 'Fix LongMath.checkedPow to correctly error out on large negative inputs, and fix LongMathTest to test a full range of long inputs.  See https://github.com/google/guava/issues/2036 .\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=92571001\n'}"
2620,"{'code': '67695ccef09650b2dfbe4a6d6f33d3c5d0f2a76b', 'message': 'Use getBytesInternal in HashCode.{hashCode, toString}.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=92395681\n'}"
2621,"{'code': '935d24fad4f6cb0d70bb6045b0834a876b7adb35', 'message': 'Fixed typo in comment.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=92388286\n'}"
2622,"{'code': '8ac7104b2383f40ccccaa18298022f130a72c113', 'message': 'Add RangeSet.asDescendingSetOfRanges() and RangeMap.asDescendingMapOfRanges().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=92378397\n'}"
2623,"{'code': '9e23ac36e8fe0f54d399d54b67b3c484c46eccb1', 'message': ""Suppress log output from tests in guava-testlib by redirecting it to files.\n\nWe made this same change a while back for guava-tests ([] guava-testlib's tests also have some log output we'd rather not see.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=92277616\n""}"
2624,"{'code': 'cb799351aec562485d4aa961b379458395111bda', 'message': 'Minor changes from internal addition.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=92186970\n'}"
2625,"{'code': '35c470b214182b163e3030c0e59cb6ee5c53944d', 'message': 'Migrate users calling new LinkedHashMap(int) to\nMaps.newLinkedHashMapWithExpectedSize when it appears that that is what they\nactually want.\n\nnew LinkedHashMap(int) sets the size of the internal hashtable to the given\nsize, but usually callers really just want a hash table that is large enough\nfor a given number of elements.  newLinkedHashMapWithExpectedSize does exactly\nthat.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=91990827\n'}"
2626,"{'code': '08a3fbfd82b289ac83132ce08b24af9961e3658f', 'message': 'Remove duplicate Stopwatch tests.\n\nSee https://github.com/google/guava/issues/2039\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=91890774\n'}"
2627,"{'code': 'c910256f20468f1782ae3174f9a4c8ce1667a035', 'message': 'Fix a few warnings in ThrowablesTest\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=91884994\n'}"
2628,"{'code': 'ba240ccb80fe88e1ee6793800622ec3dca53a575', 'message': 'Add Maps.newLinkedHashMapWithExpectedSize\n\nRerolling the dice\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=91788123\n'}"
2629,"{'code': 'd4ecd71653f4c2c466960d4ba56aa547f5fdfdf5', 'message': 'Make Optional.absent().hashCode() different from Optional.of(0).hashCode()\n\nFixes https://github.com/google/guava/issues/2037\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=91595440\n'}"
2630,"{'code': '6cbb6075bd84396476f7dd2cfbd89caa8ab08ee6', 'message': 'Fix typo - Trutested is tru and tested, but not a word.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=91420403\n'}"
2631,"{'code': '7e98d987b726f3c7d0b93248887a7782b15aeb82', 'message': 'Remove unneeded and unavailable inherits from testModule.gwt.xml files.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=91328781\n'}"
2632,"{'code': '45d5463b53e9e327cf1f86ea954853f781773677', 'message': 'Refactored Scanner.onJarEntry() and onResourceFile() to scanJarFile() and scanDirectory().\n\nAdvantages discussed sofar:\n\n1. scanJarFile(JarFile) and scanDirectory(File) leaves no room for ambiguity. Questions like ""are manifest files, directory resources filtered out?"" won\'t be asked because it\'s up to subclasses.\n\n2. scanDirectory() can potentially be more efficient when searching for a particular package for example. You wouldn\'t even need to recurse into c/g/common if you are only interested in c/g/foo.\n\n3. scanJarFile() can use JarFile.entries() and loop over. It\'s an existing API that we don\'t need to provide an alternative way to traverse through Jar file entries.\n\n4. scanDirectory() can use either Files.fileTreeTraverser() or java.nio.file.Files.newDirectoryStream(). So we shouldn\'t expect too much boilerplate duplication.\n\n5. If a client doesn\'t like to silently ignore unreadable sub directory, it doesn\'t have to.\n\nDisadvantages include inconvenience for the subclass compared to implementing the bare-bone onJarEntry() and onResourceFile().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=91324193\n'}"
2633,"{'code': 'c33a718d699ee03efbd40d12ecac844ae97643c3', 'message': 'Add @CheckReturnValue to MultimapBuilder.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=91101255\n'}"
2634,"{'code': '2b6bb1689b3f93dc8a019d76fabc6d65cea79b59', 'message': ""Two minor changes to the new Scanner support\n* Pass the JarFile to onJarEntry, this way we can read the jar entry without having to open the Jar a second time\n* add 'throws IOException' to the callback methods.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=91020019\n""}"
2635,"{'code': '0506f938b4855bd2148e644ca2dbed0de0ed3024', 'message': ""Add a method that tells how many permits are stored and can be used without blocking future tryAcquire calls.\n\nSuccessfully acquiring permits when the rate is set to near zero causes all subsequent tryAcquire calls to fail even after setting the rate really really high. For our use-case we don't want to ever incur this penalty and would instead want to only acquire if we've stored up enough.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=91004719\n""}"
2636,"{'code': 'f8642513c8a4d011097b7158321312f055882225', 'message': 'Fixed a line-wrapping I missed.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=90934632\n'}"
2637,"{'code': 'a904e91af4eea83b91f7bf3acff90b14927eced7', 'message': 'Fix ClassPath by exposing Scanner for internal clients to customize.\n\nThis change slows down CodeInspectionTest. But it exposes Scanner for it to extend and memorize the urls.\n\nBasically, the test should create its own ClassInfo class (name + url).\n\nAnd subclass ClassPath.Scanner as:\n\nclass MemorizingScanner extends ClassPath.Scanner {\n\n  private final ListMultimap<String, ClassInfo> classes = ...;\n\n  @Override void onResourceFile(ClassLoader loader, String packagePath, File file) {\n    if (file.getName().endsWith("".class"")) {\n      classUrls.put(packagePath + file.getName(), new ClassInfo(resourceName, url));\n    }\n  }\n  //  same for jar entry\n}\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=90897375\n'}"
2638,"{'code': '7fa5082e6b920d243cb9d273b97de7e8dd3bb1d4', 'message': 'Just cleaning up old @since tags.\n\nI finally couldn\'t stand seeing this stupid phrase ""imported from Google Collections Library""\nall over the place. It\'s long since irrelevant information now that there have been 17 Guava\nreleases since then.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=90732444\n'}"
2639,"{'code': 'c4346aaea935df8289e30fbe5fd739ad26825174', 'message': 'Update public suffix patterns.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=90558429\n'}"
2640,"{'code': '8894dba44923a6e06842b6696c6eb2bc08c3c7e0', 'message': 'Pull out a subclass of ImmutableSet for indexed implementations, which are common enough that it saves code overall.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=90549526\n'}"
2641,"{'code': 'f79d64fa7dd2adc19e29cbef6cd98ad106d1692a', 'message': 'Remove all of common.cache from @Beta.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=90542356\n'}"
2642,"{'code': '34724451a106e1d5eab3af20e566f7fbbd8b08ae', 'message': ""Make CacheLoader.UnsupportedLoadingOperationException and RemovalNotification's constructor public.\n\nBoth may be needed for custom Cache implementations.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=90540168\n""}"
2643,"{'code': '5394f635d552aae319c5a58d6a9a332ccbcd0dd8', 'message': 'Address https://github.com/google/guava/issues/2008 by discarding references to iterators in Iterators.concat after they have been iterated over.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=90525172\n'}"
2644,"{'code': '156e3b8926e89f21086bb38961dff121d55f1470', 'message': 'Update AsyncFunction javadoc to point to a non-deprecated method.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=90438335\n'}"
2645,"{'code': '9ff016c3727436ae28044f4b7b56737a243f1aa1', 'message': 'Delete redundant performance overloads from SingletonImmutableList.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=90196002\n'}"
2646,"{'code': '07a06bccf9cac98feafc6c279840e866c6bb9ba8', 'message': 'Add RandomAccess implementations for Lists.{equals,indexOf,lastIndexOf}Impl, to eliminate allocation of the iterator.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=90193421\n'}"
2647,"{'code': 'bd929fa5dc6066aa6576fb4591189b913a749b7c', 'message': 'Trim overrides from SingletonImmutableSet that are just for tiny performance wins.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=90191174\n'}"
2648,"{'code': 'ac1e4d610c24937fcd726f13dbf9ca061ee7bc58', 'message': 'Fix minor bug in setValue method of HashBiMap.inverse().entrySet() entries.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=90104250\n'}"
2649,"{'code': '82eb9afef0e432390300f83bf237d169d0db5187', 'message': 'Minor simplifications to HashBiMap using the {key,value}OrNull utilities from Maps.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=90100234\n'}"
2650,"{'code': '0321687aac74b13c2f910cd66dafbb67d8fb0e57', 'message': 'Reuse the passed-in entry array in RegularImmutableMap and RegularImmutableBiMap.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=90082508\n'}"
2651,"{'code': 'b736b9d20fc2dc8d14b860a46d93ed037a7a4353', 'message': 'Minor tweak: ImmutableList.subList can return the original list instead of a view if the range is the whole list.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=89893003\n'}"
2652,"{'code': '5797777fc85b0ae703f8e1fa15a0512952dca938', 'message': 'Fold RegularImmutableSortedMap into ImmutableSortedMap, since that is now the only implementation.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=89888434\n'}"
2653,"{'code': 'ffd15fd686ce71ac32a347e1d97aa5d7e19bf67a', 'message': 'Fold EmptyImmutableSortedMultiset into RegularImmutableSortedMultiset.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=89740927\n'}"
2654,"{'code': '3823dde77be1ce60b962c0d49f036683c7421c84', 'message': 'Fold EmptyImmutableSortedMap into RegularImmutableSortedMap.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=89737176\n'}"
2655,"{'code': '0dc5ba45824130e7c09beeeb450cc3d430382c19', 'message': 'Demonstrate a race that can result in excessive logging.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=89722067\n'}"
2656,"{'code': 'bcaed940f6bfb8ab24e86269c4e4e0d7cce5eea6', 'message': 'Woops - seenExceptions should only be released when the future is done, not on failure!\n\nUnfortunately, difficult to write a test because it requires 2 failed futures to complete at almost the exact\nsame time, with the first future setting seenExceptions=null immediately after the other future does a compareAndSet\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=89721761\n'}"
2657,"{'code': 'be67064ab091183f8a7c273358f35bcc51f7157e', 'message': 'Tiny simplification in CharMatcher to define indexIn(CharSequence) as indexIn(CharSequence, 0).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=89718886\n'}"
2658,"{'code': 'e7e0abefddbb35c60ef73e96df197db90c707db2', 'message': ""Eliminate EmptyImmutableSortedSet, while we're at it.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=89712042\n""}"
2659,"{'code': '77b134cd1dbf2ceface9956f9598e786c5c5f5b7', 'message': 'Remove replaceFrom overrides from CharMatcher.NONE.\n\nThe default implementation short-circuits if indexIn == -1, which is always the case.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=89711093\n'}"
2660,"{'code': '6681a0cedbba452837a6314c0af956dc55d1f2d0', 'message': 'Reduce memory consumption of ImmutableSortedMultiset by eliminating the count array.\n\nIt can be inferred indirectly from the cumulative sums of the counts.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=89710934\n'}"
2661,"{'code': 'beca42b67c4857e0b57b648961ccdc633d39c7d0', 'message': ""Tiny simplification to CharMatcher.\n\nmatchesNoneOf is already defined in terms of indexIn; ANY and NONE don't need to override it for performance, since they already optimize indexIn.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=89709447\n""}"
2662,"{'code': 'b1cfcc56043bb78c947fc08628d71981acada3a7', 'message': 'Delete EmptyImmutableBiMap, instead using a RegularImmutableBiMap with null hash tables.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=89629248\n'}"
2663,"{'code': 'cdcd91f198719d87c71d4079494acdf7ca321133', 'message': 'Eliminate EmptyImmutableSet, replacing it with a RegularImmutableSet with a null hash table.\n\nRelated: https://github.com/google/guava/issues/1268\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=89625833\n'}"
2664,"{'code': '402ab069ddf128db18588ed2617cdb618900bd2f', 'message': ""Don't execute AsyncFunction in ChainingListenableFuture if the future has been canceled.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=89613683\n""}"
2665,"{'code': 'd8e73b37d62f2dabb9731adbe929c54d28246fb0', 'message': 'Remove the version of getChecked() with the old parameter ordering.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=89606673\n'}"
2666,"{'code': 'ab56ef398baea2b4da007ba1de62b32245d70c00', 'message': 'Add @CheckReturnValue to many APIs in c.g.common.util.concurrent.Futures.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=89553140\n'}"
2667,"{'code': '231f8ada4ed4615f93ce4f84aaff4dece9b233df', 'message': 'Microoptimization: presize builder when deserializing ImmutableMap\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=89527038\n'}"
2668,"{'code': 'ed40f37f6154bafc34c89919c49b2c6aed84bd27', 'message': 'Add @CheckReturnValue to filter*() methods in Collections2, Iterables, Maps, and Multimaps.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=89522301\n'}"
2669,"{'code': 'c33873bdbae0cd23cbaf084f296e19d0a4553c4e', 'message': 'Deprecate the version of getChecked() with the old parameter ordering.\n\nThis is to discourage backsliding while I test the CL to remove the method.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=89508952\n'}"
2670,"{'code': '2dd017b0637921e7ced3a7a94a98c5942a659ed4', 'message': 'Add @CheckReturnValue to all methods in FluentIterable (except copyInto(Collection)).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=89461679\n'}"
2671,"{'code': '51148d02e4a61d5f99c716f365a039f4b884366b', 'message': 'Round 3 of the immutable collections classdocs rewrite.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=89434768\n'}"
2672,"{'code': '4f60b48ec264366c86ec91d3219638266a7d2d40', 'message': 'Add a new overload of getChecked() with a different parameter order.\n\nWe will migrate callers to the new version.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=89434462\n'}"
2673,"{'code': '9131ddb3bd2ff2f3ad08dd06f59d0597d33b8bdf', 'message': 'Alternative way to get AssertionError instance in com.google.common.util.concurrent.GeneratedMonitorTest, since public AssertionError(String message, Throwable cause) does not exist in Java 6 yet.\n\nPull request from Pingsan: https://github.com/google/guava/pull/2012\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=89416149\n'}"
2674,"{'code': '95117a4d625a5d733da1b504affdde2a808fd3ea', 'message': ""Wrap the Method.setAccessible call in Types.TypeVariableInvocationHandler in try/catch so that it is not an error for it to fail.\n\nUsually setAccessible won't be necessary: we only added it because of App Engine's unusual execution environment. TypesTest now runs with a SecurityManager so we can detect this and similar problems.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=89368532\n""}"
2675,"{'code': '7af428ed5883d5237849d44a76d8ec0f41c10080', 'message': 'Simplify the ImmutableMapEntry shared code by making the base ImmutableMapEntry class terminal and sharing the subclasses for non-terminal nodes in the hash table.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=89319446\n'}"
2676,"{'code': '8d6c68415db141d7e44e7132f0ed39c571d47468', 'message': 'Prevent rare disastrous classloading in first call to LockSupport.park.\nSee: https://bugs.openjdk.java.net/browse/JDK-8074773\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=89317155\n'}"
2677,"{'code': 'c1e0e671a775886c16ddfab543711f002460b538', 'message': ""Eliminate boxing in RegularImmutableMultiset by inlining the hash table implementation.\n\nThis is primarily intended as an optimization for Android's sake, but is expected to have net performance benefit in all environments, just at the expense of code complexity.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=89315361\n""}"
2678,"{'code': '56456cb58c0cb71d7c0f05047e13718ad202b748', 'message': ""Round 2 in the great ImmutableCollection javadoc rewrite. Try to make it a little tighter, and widen the circle to a few more classes.\n\nI'm still trying to avoid getting into rewriting any *method* javadocs, though\nI couldn't help tackling a few obvious problems.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=89309215\n""}"
2679,"{'code': 'b3855ef79650e282563561368577253d7abcc385', 'message': 'When a new entry exceeds the segment\'s maxWeight all by itself, don\'t bother evicting anything else, only the new one. Still go through all the motions of actually adding and evicting it; otherwise I fear the code complexity will skyrocket.\n\nIn a sense this starts us down a path of trying to make weight-based eviction ""smart"", and it\'s not clear where that should end up, but I think this seems like a logical special case no matter what.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=89308526\n'}"
2680,"{'code': 'ca402cd09435eec98bf662eac1a74dad6376f36a', 'message': 'Apply some simplifications and improvements.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=89149129\n'}"
2681,"{'code': '896225238f984ca58784c432c5c5c8d0ef3791b8', 'message': 'Use Hashing.smearedHash directly in HashBiMap.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=89066886\n'}"
2682,"{'code': 'dac4164a5b67c8adc5a710b13f48c69b428d573a', 'message': 'Make implicit narrowing compound assignments explicit.\n\nCompound assignments to variables with type byte, char, short, or float hide\ndangerous narrowing conversions. This change makes implicit narrowing\nconversions explicit in preparation for enabling a new compiler error that will\nprevent narrowing compound assignments.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=88986348\n'}"
2683,"{'code': '4d2e153f212deecc3f02061d773b41a22a000b92', 'message': ""Make it explicit that a memoized Supplier's get() method is invoked at most once.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=88974060\n""}"
2684,"{'code': '409672d0f3956219c5c62f52011f2538fee6461f', 'message': 'Improve the implementation of Multisets.ElementSet.remove to do only one operation.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=88968217\n'}"
2685,"{'code': '8d46727795220cebf794f350459e3c73a90ac84d', 'message': 'Document that callers of catching() should prefer more specific exception types.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=88864139\n'}"
2686,"{'code': '107a3c5ac2459a484fd25dfef26dacc5e1a6359e', 'message': 'Migrate calls of to-be-deprecated Futures.get to equivalent Futures.getChecked.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=88830649\n'}"
2687,"{'code': '34f3e9f690dfd6f8352f30647c020ecc72ec5078', 'message': 'In com.google.common.reflect.Types, make the Method objects that are used as part of Java compatibility accessible.\n\nMaking them accessible should not be necessary, since they are being used to access package-private methods from elsewhere in the same package. But having them not accessible trips over an unfixable race condition in App Engine. There, the security layer intercepts reflective operation and ultimately ends up invoking the Method from another package. To make this work it has to do Method.setAccessible(true) in a try/finally. But if two threads end up doing this at the same time then one may set the Method back to inaccessible just after the other has set it accessible. Making the Method always accessible avoids this problem. It is not any kind of security problem since the methods in question are harmless and the only reason they are not public is to avoid polluting the API.\n\nhttp://www.artima.com/weblogs/viewpost.jsp?thread=164042\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=88573029\n'}"
2688,"{'code': '97e6b600c1cb7cdd9e5b1806842dc7685f060136', 'message': 'Add FluentIterable.toMultiset().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=88522314\n'}"
2689,"{'code': 'fc277895b9220901f9a016c11aa0da1ad8c39f4f', 'message': ""Deprecate get(), which is being replaced by getChecked().\n\nNearly all callers have been migrated. Callers who use guava_jdk5 will be stuck on the deprecated method for now. We'll migrate them when getChecked() becomes available in guava_jdk5.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=88468127\n""}"
2690,"{'code': '02c3c8719a8f6f200447c7dcf31398d92738df32', 'message': 'Migrate calls of to-be-deprecated Futures.get to equivalent Futures.getChecked.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=88435725\n'}"
2691,"{'code': '94ded7f70ebcb9014480326f24df552c48bd327a', 'message': 'Add Futures.getChecked, the new name of Futures.get.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=88397579\n'}"
2692,"{'code': '0f8d0d846684d73f5fd9928afe946355c45b4f18', 'message': ""Remove warnings from Futures.java.\n\nSafeVarargs is an especially painful one, as it'll produce warnings in any users of the methods\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=88345700\n""}"
2693,"{'code': '2fe1415c5c2a1ee771a1616cc5d30d12e656026c', 'message': 'Optimize BaseEncoding by removing GwtWorkarounds and using an implementation without streams\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=88332628\n'}"
2694,"{'code': '1628be3168a63d2cab94f8122bfe04c0024961d2', 'message': 'Add tests for current transformAsync/catchingAsync interruption behavior, namely ""It doesn\'t do anything.""\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=88255363\n'}"
2695,"{'code': 'a7acd431fa71b18a09310216c47cef48533fe109', 'message': 'Refactorings in util.concurrent so more code can be shared.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=88247030\n'}"
2696,"{'code': 'aaac377a8f326df3589ebefad48ab0ae6b223b2c', 'message': 'ImmutableRangeMap is now serializable.\nCopy/paste javadoc fixed.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=88227012\n'}"
2697,"{'code': 'a671062fc995479a8dc0c64ace754e8207e991db', 'message': 'Collections coming from ImmutableRangeSet.asSet() and ImmutableRangeMap.asMapOfRanges() can now be correctly serialized.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=88224961\n'}"
2698,"{'code': '4a0e33df4e09b8e0a21c5a08e6ec83239c3db803', 'message': ""Re-enable compilation of benchmarks in Guava now that caliper 1.0-beta-2 is out.\n\nFix some things this turned up:\n\n- Remove a couple benchmarks for APIs that aren't public in Guava.\n- Remove LoadingCache benchmarks that compare a LoadingCache to MapMaker.makeComputingMap, which is package-private now.\n- Fix a usage of diamond operator that snuck in.\n- Remove CombinedFuture from Futures, since the methods that use it are internal-only.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=88142834\n""}"
2699,"{'code': 'f3099c7e01df0f240615eea996ec0c973a47aa11', 'message': 'Move EMPTY to RegularImmutableList.\nThis was requested in https://github.com/google/guava/issues/1977 to avoid circular static-init dependencies.\nI fear that we have other such problems. We should consider adding a test for them.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=88131198\n'}"
2700,"{'code': '1839378a0dc48379f018597adb0cbcadc3225d34', 'message': 'Add the piece of information that I really wanted last time.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=88115213\n'}"
2701,"{'code': '58d63de6e4a839ca87177d0d77d6f7216523b31b', 'message': 'Improve failure message from testUrls to help us figure out why it\'s failing on Travis, e.g.,\nhttps://travis-ci.org/google/guava/jobs/53222839\n""testUrls(com.google.common.reflect.ClassPathTest): expected:<3> but was:<1>""\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=87967592\n'}"
2702,"{'code': '69a86a80e79bed7bbc8afeea431eb2c60e7f913f', 'message': 'Remove com.google.common.labs.reflect.Signature. It has not gained any uses in\nthree years of existence.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=87751075\n'}"
2703,"{'code': '4b96d280b8e4a8279025fb704fbcaac015bcca8b', 'message': ""Remove @Beta from Maps.asMap and Maps.toMap.\n\nUpdate the Javadoc of Maps.toMap and FluentIterable.toMap to specify that it's unspecified what value you get for a key when it appears multiple times in the iterable and your function isn't well-behaved.\n\nCloses Guava issue #1963.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=87740790\n""}"
2704,"{'code': '3c7981efb11ab50bc98393a6a897859b8a4990de', 'message': '*Close* our blocks, now in our moment of triumph?\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=87644978\n'}"
2705,"{'code': '0d50b3add7225681826af56d8e5fc23e7405c9fc', 'message': ""Fix https://github.com/google/guava/issues/1982 by adding some preconditions\n\nThe error behavior isn't really changing, since it would still fail, it is just\nthat now it will fail slightly sooner and the stack trace when it does will\npoint to the users buggy scheduler() method, which i believe is all the bug was\nasking for.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=87567830\n""}"
2706,"{'code': 'f84ad90572dc117039662560ca68d8c600b6c8b0', 'message': 'Remove APIs scheduled for deletion in March 2015.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=87511933\n'}"
2707,"{'code': 'd812ccf2c25d82a23619ec6bb377d58ce8882e28', 'message': 'Add missing @Nullable annotations to Table and BiMap\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=87297784\n'}"
2708,"{'code': '1a5b0b9caaa5b6aaef77c9e7ace4f8cac4025738', 'message': 'Fix a signaling bug in newDirectExecutorService()  Also switch to implicit\nmonitors to take advantage of biased locking.\n\nIf thread A calls awaitTermination while there are no running tasks, then\nThread B calls shutdown(). Thread A will never be woken up.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=87280837\n'}"
2709,"{'code': '99a1407216220f3f0e14813bc1677f97ad12c60e', 'message': 'Enable j2objc compilation of common/util/concurrent.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=87259269\n'}"
2710,"{'code': '957450e1f7f476718d7d13e7723baa325267c763', 'message': 'Deprecate AsyncFunction transform() and withFallback().\nDeprecate FutureFallback.\n\nMore information:\nhttps://docs.google.com[]document/d/1FJxzf-e-jez00-_cWqEzdJNnZzhIQ-9ezmHt77gM8_I/edit\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=87154647\n'}"
2711,"{'code': '812621b76b50dca9cbcea061df0d7c2abca039d6', 'message': 'Expose Hashing.concatenating() in Guava.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=87106619\n'}"
2712,"{'code': '1a1589cb0069d6476977d8f09af6fa076dc5a9bb', 'message': 'Change exception messages; part of internal change.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=87085064\n'}"
2713,"{'code': 'b06c5351768591183aa0656949162f5e41a9042f', 'message': 'Migrate calls of to-be-deprecated Futures.java APIs to their equivalents:\n- Migrate calls from transform(...AsyncFunction...) to transformAsync().\n- Migrate calls from withFallback(future, new FutureFallback<V>) to catching(future, Throwable.class, new AsyncFunction<Throwable, V>()) (or occasionally a slight variant of that).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=87071526\n'}"
2714,"{'code': '3b37d547713fd86f261b9374c0fae0c5b61ab5d1', 'message': 'Shuffling from internal change.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=87059596\n'}"
2715,"{'code': '3f7cbe89e3062cf4efab473e4b876fb50a1c2501', 'message': 'Update publix suffix data.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=87012581\n'}"
2716,"{'code': 'd42e32781bc40bcc6df53d5d5d2120b91d8782a2', 'message': 'Rewrite javadocs for immutable collections.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=86995462\n'}"
2717,"{'code': '58994f12df2f3a11c1ca10a2a81553627df361e4', 'message': 'Sort and remove unused imports.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=86993473\n'}"
2718,"{'code': 'c082549f20a0b6a6466c9e6a3e5da4baf83e7ed8', 'message': ""Call file.toURI().toURL() outside of the entry iteration loop.  It turns out\nthat this sequence may end up stat'ing the jar, which can significantly slow\nthings down.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=86990876\n""}"
2719,"{'code': '64d13d81d5a3ffc35955a76b30eeed7921d2be5c', 'message': 'Add @CheckReturnValue to Stopwatch\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=86977616\n'}"
2720,"{'code': '7939255ffa8474eb55de08a230501598ae40a96f', 'message': 'One more @GoogleInternal I missed last time.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=86977055\n'}"
2721,"{'code': '4b66ade572cab7a3f49d500e1c913659ed86593b', 'message': 'Add @CheckReturnValue to c.g.c.hash APIs\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=86973520\n'}"
2722,"{'code': 'c9dbd3f6b754d10d1ea7ffffec829373e3328277', 'message': ""Remove ClassPathTest tests from Guava for the moment.\nThey're failing there.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=86968210\n""}"
2723,"{'code': '1f6f5a3a56078740bf31066650da711b9247ff3f', 'message': 'Add @CheckReturnValue to BinaryPredicates and Defaults.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=86847333\n'}"
2724,"{'code': '5f61495bccb3f5801dd6efa18ec4b7dc1246f696', 'message': 'Change a while to an if in AbstractFuture.  #TIL you can break <label> out of an if.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=86842992\n'}"
2725,"{'code': '9c300ebb29e67ef64f18ce0c12ed0b5ccf4c3d14', 'message': 'Suppress future Error Prone error for AsyncFunction that returns a _null Future_, rather than the intended _Future whose value is null_.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=86830267\n'}"
2726,"{'code': '7765943f120fdfeef6f418ad8f3f71094695ed5c', 'message': 'Add @CheckReturnValue to more classes in common.base.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=86794958\n'}"
2727,"{'code': 'd71cf1a7872259aa9701a0cc6bbadb47cacb29d1', 'message': 'Add @CheckReturnValue to Predicates.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=86794808\n'}"
2728,"{'code': '7ee45e248328719ad782210ad645a76428c1ffe6', 'message': 'Add @CheckReturnValue to Functions.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=86791183\n'}"
2729,"{'code': '0fd4c5832699b3fb43bfe280794e02d29ba51ea2', 'message': 'Collect all resource URLs in the ResourceInfo objects.\n\nEssentially ResourceInfo.url() is analogous to Class.getResource() and now\nResourceInfo.urls() provides analogous support for Class.getResources() with the benefit that it is significantly faster (ClassPath was already calculating these as part of scanning).\n\nThis is yet another attempt at trying to add a way to see alternate resources to classpath.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=86761898\n'}"
2730,"{'code': '20b7c04a528bcb8ac46752204eed5890d9d2c01f', 'message': 'Make Files use transferTo, which can copy files without bringing the bytes into userspace.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=86744917\n'}"
2731,"{'code': 'ac4dddb89b7557e20f17c9464f3adf439373ac0d', 'message': 'Migrate calls of to-be-deprecated Futures.java APIs to their equivalents:\n\n- Migrate calls from transform(...AsyncFunction...) to transformAsync().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=86703224\n'}"
2732,"{'code': '7e5909477f1590a48348d79af2f6f07d6c0296c4', 'message': 'Add @CheckReturnValue to Joiner, Objects, and Splitter.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=86646027\n'}"
2733,"{'code': '989e43f9cfa38a314ca12342570e13c7f18a5544', 'message': ""Migrate from Truth's deprecated .is(expected) to .isEqualTo(expected).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=86642578\n""}"
2734,"{'code': '2facd672d760e261d6731ef615d854ad16ed553c', 'message': ""Avoid boxing in newDataOutput's checkArgument invocations.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=86638527\n""}"
2735,"{'code': '8a593f3eef9bffd4a42135aba919883dd44ba6db', 'message': 'Refer to the old names of transformAsync and catchingAsync from their @since tags.\n\nWe have done this elsewhere, e.g., ""@since 9.0 (in 1.0 as {@code compose})""\nIt should make migration easier for anyone who skips over the version of Guava in which the old method was deprecated.\nIt should also help both internal and external users who go looking for the old name.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=86593983\n'}"
2736,"{'code': '6b9d234c3851a3f4736daec76b585d180ae0c832', 'message': 'Rollback of change to immediateFailedFuture and immediateCancelledFuture.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=86516778\n'}"
2737,"{'code': '1338bd10ca989840886868227e609da903424321', 'message': 'Make immediateFailedFuture and immediateCancelledFuture trusted futures.\n\nhttps://github.com/google/guava/issues/1961\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=86499614\n'}"
2738,"{'code': 'ad77a591bdb5eb665a4dee4e05f606edc52df506', 'message': 'Migrate from assertContentsAnyOrder() to Truth.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=86498851\n'}"
2739,"{'code': '4b6523ea39b8e476471e98a132335623a63e59f6', 'message': 'Rollback of BaseEncoding change.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=86442772\n'}"
2740,"{'code': 'b547d033e5c3e8958242c8d01de491ceac19c126', 'message': ""Optimize BaseEncoding's encode method by using an implementation without streams\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=86425194\n""}"
2741,"{'code': 'bba5c312ac4011e5fd2184768ee086596ba81486', 'message': 'Optimize LongMath.isPrime.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=86298499\n'}"
2742,"{'code': 'db73f380913db5e09bfc148e7fc31247985c6d85', 'message': 'Add @CheckReturnValue to ComparisonChain.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=86282152\n'}"
2743,"{'code': '7e4f51883753e62647f18018622a8f63de33f730', 'message': ""Avoid AssertionError(String, Throwable) constructor, which isn't available in version of GWT we use for Guava.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=86212236\n""}"
2744,"{'code': 'a8ed2f87e111ef6781b816d683c7e51946295805', 'message': 'Add newCancellationCause() again.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=86206373\n'}"
2745,"{'code': '2a18d13799f5de8bd39c25a5f51de859ef979e76', 'message': 'Add Futures.transformAsync() to replace the AsyncFunction overloads of transform().\nThis will make the methods work better with Java 8 lambdas.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=86188098\n'}"
2746,"{'code': '6500bd897f3d93da90a5d813ffabed4d5ff5f361', 'message': 'Warn about immutability.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=86185367\n'}"
2747,"{'code': '3e47a32fe38b0e36f6c3a614a146916914c922e9', 'message': 'Add Futures.catching{,Async} to replace Futures.withFallback.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=86180055\n'}"
2748,"{'code': '5a7ce45092fdcc00f7a5ba9eaaf7431e6c8d25b9', 'message': ""- More carefully guard all of loadFuture's functionality inside the try block\n- Prioritize calling setException when exceptions occur\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=86118912\n""}"
2749,"{'code': '8f743f950cf4eaaa4ac4dfff65a93c14da9f25d2', 'message': 'Avoid generating calls to GWT-incompatible setUp or tearDown methods.\n\nPrior to this CL, such methods would generate compile errors:\n\n[ERROR] Line 24: The method setUp() from the type TestCase is not visible\n[ERROR] Line 32: The method tearDown() from the type TestCase is not visible\n\n[]\n\nAlso, remove the workaround I added to com.google.common.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=86112432\n'}"
2750,"{'code': 'e176380df8b0bd2d3b921858aa8a5a960d6ea15a', 'message': ""Inline the implementation of DoubleMath.mean rather than using a helper class. This is called inside loops often enough that I think it's worth avoiding the object assignment. Also improve the javadoc.\n\nThis code is basically all copied from Stats.meanOf, where it was reviewed, so hopefully it shouldn't be too controversial.\n\n(For background, we accidentally --- it was my fault --- ended up with DoubleMath.mean and Stats.meanOf duplicating the same functionality. One of them needs to go, and it seems clear this one should survive, since it's already in guava and it's not even @Beta. But I want to make sure this one has the improvements from the other.)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=86081434\n""}"
2751,"{'code': 'b167ae5ebb5aa7bedc7ca3dccaf9c6cf14895a84', 'message': 'Roll back addition of newCancellationCause.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=86068136\n'}"
2752,"{'code': 'c95402345ac633cacb9fb2615aa6914eb92688d5', 'message': 'Add Hashing.sha384()\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=86055528\n'}"
2753,"{'code': '54d04a7fc97bfd8e43f62d13d25248385cf586a3', 'message': 'Add newCancellationCause.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=86054805\n'}"
2754,"{'code': '94a8062b93d60f4fb08714403761c4323c85a18a', 'message': 'Hide setSampleInstances internally.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=86015706\n'}"
2755,"{'code': 'f98fe0d069323bc92becbd75e727e44dc2c3a4c3', 'message': 'Add @CheckReturnValue to entire Optional class.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=86014536\n'}"
2756,"{'code': '8d18612a52ac0fa9fc0c77658787cd60682609b9', 'message': 'Fix several mistakes in how iteration order is documented for ImmutableMultimap.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=85990417\n'}"
2757,"{'code': 'de4c1919f885fa85d1465e6bea4b9d47cdcc032b', 'message': ""Migrate from Truth's deprecated .is(expected) to .isEqualTo(expected).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=85986665\n""}"
2758,"{'code': '4fc149cca70e2555f6d2a57129631c25526dccb1', 'message': 'Hide GoogleInternal*EscapersTest files completely, rather than leaving a test with no methods behind for Maven to complain about.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=85899334\n'}"
2759,"{'code': 'bcd8abb54113d4ebd3f245d18da8af99ba67098f', 'message': 'Re-remove Google-internal getAllEntries.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=85767223\n'}"
2760,"{'code': '5bd76be2e74fde183e6c43788bf5d8f5e572ada2', 'message': 'Re-add Google-internal getAllEntries.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=85742568\n'}"
2761,"{'code': '8e34d36efa806ec7978a4d4f9c9b15463303c900', 'message': 'GWTify Futures#withFallback and its tests.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=85631779\n'}"
2762,"{'code': '2e2f86ffa67242e99fb0074a49e69f461b63b179', 'message': 'Migrate from deprecated isAssignableFrom to identical isSupertypeOf.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=85539357\n'}"
2763,"{'code': '8ff1320932f74c7aa4cb7d179b6eb19b6196ad63', 'message': 'Seperate tests for GoogleInternal methods into their own class\n\nSome of the tests in javatests/com/google/common are run not\njust against the java/com/google/common code but also against\nGuava. This is fine as long as the tests do not test any\ncode marked as @GoogleInternal because they break as the\ncode to test does not exist in Guava.\n\nThis change breaks up test classes that break when run against\nGuava into separate classes, one for running against internal\nand Guava and one just to run against internal.\n\nThis is part of the work to upgrade guava_jdk5 to v17.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=85501856\n'}"
2764,"{'code': '606dd9e5493f4fd80a255a3d89b1ff762a53c763', 'message': 'Add missing removal dates/releases for deprecated APIs.\nAdd a horrible test to catch future missing info.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=85463445\n'}"
2765,"{'code': 'd8e9481c8f2b64fe8e8466d2571ce0de1d2e19cb', 'message': 'Re-add Multisets.removeOccurrences(Multiset, Multiset).\n\nThis non-@Beta method was removed in 18.0 and replaced with removeOccurrences(Multiset, Iterable). We need to have both for backward compatibility.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=85456166\n'}"
2766,"{'code': '6f64db53bb4380125fd70feea45faaea5c774ce8', 'message': 'Roll back addition of getAllEntries.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=85379241\n'}"
2767,"{'code': '42b35e1ea6626ba910a9c17ef1a70af60cae2190', 'message': 'Add Google-internal getAllEntries.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=85375065\n'}"
2768,"{'code': '1db30126d9c27c0df51b89baef9820416baf3dd0', 'message': 'Give the removal date for isAssignableFrom.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=85333830\n'}"
2769,"{'code': '9f90d2c3f0c897b030941a2d8f424f2a06048439', 'message': 'Add isSupertypeOf and isSubtypeOf, deprecating isAssignableFrom.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=85327607\n'}"
2770,"{'code': 'c2bb9d23a9b8d142f0c530c89252683e1fb60f85', 'message': 'GWTifies Futures#allAsList and friend.\nEnables some but not all FuturesTests.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=85168289\n'}"
2771,"{'code': '1eda69c0d7ca4c88a92c11d27dc3e921c4fd3b44', 'message': 'Stop scrubbing some more usernames (MOE update?).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=85156857\n'}"
2772,"{'code': 'a451495691f7e57de33344899e3ea2e0383a14be', 'message': 'Fix after rollback changelist 84974387.\n\nAdded documentation and test that SerializingExecutor ignores interrupts,\nsince javatests/com/google/apps/framework/concurrent/ListenableStreamTest.java assumes\nthat should be the case.\n\nI am not convinced that this is correct because it effectively disables the normal mechanism for shutting down an executor.\n\n*** Original change description ***\n\nAdd some functionality to SerializingExecutor and rework its code.\n\nAdd functionality to suspend the execution. Intended primarily for cases where we want to wait\nfor an rpc before continuing execution....\n\n***\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=85137867\n'}"
2773,"{'code': '0c8a5acc7d06943d426ee99f310ebeb590c9f3df', 'message': ""Rollback of: Add @CheckReturnValue to Optional\n\nBreaks lots of tests who aren't using the results of Optionals.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=85104606\n""}"
2774,"{'code': '966f3b23cbf9c8e568f681f62436836530f1453f', 'message': 'Add lazyStackTrace.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=85099500\n'}"
2775,"{'code': '9028da557b552ae2d3dcf79f1978a566f5825768', 'message': 'Shuffling from internal-only change.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=85089450\n'}"
2776,"{'code': '3c4bb15c18b2db3170b995bd9b6634cdb470a414', 'message': 'Add @CheckReturnValue to Optional\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=85088656\n'}"
2777,"{'code': '15384c305a3e1550d2829982a9944769e0778cc0', 'message': 'GWTifies Futures#combine().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=85081294\n'}"
2778,"{'code': '982e665c3c5d24ff53b2574ac216ffd57c7045dc', 'message': 'Add @CheckReturnValue to UnsignedBytes, UnsignedInts, and UnsignedLongs (except for parse methods and methods that throw exceptions that people may reasonably want to catch).\n\nRelated:\nhttps://github.com/google/guava/issues/1956\nhttps://github.com/google/guava/issues/1957\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=85081061\n'}"
2779,"{'code': 'da7359985e92e84d57ba18f554fe40d1d42e2cc7', 'message': 'Run dereference() tests under GWT.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=85079832\n'}"
2780,"{'code': '31f45cbb587b7407120991ab0b5d7345e412696c', 'message': 'Add a few final(?) tests.\n\nMost are tests of null handling, since our automated null tests don\'t run under GWT.\nI\'ve added checkNotNull() calls where appropriate.\n\nOne is to verify that a failing listener doesn\'t interfere with other added listeners.\n\nI also added a test of get() with a negative value, as concurrency classes generally permit:\n""All methods that accept timeout parameters treat values less than or equal to zero to mean not to wait at all.""\nhttp://docs.oracle.com/javase/7/docs/api/java/util/concurrent/package-summary.html\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=85076704\n'}"
2781,"{'code': '201bb362a9b6de3fec6507ff435ac6022b92da7b', 'message': 'Add and use helper methods like assertDone() in tests.\nThis found no bugs -- well, maybe one if you count the inconsistent propagation of interruption from the delegate, though I had suspected as much already.\n\nAdd another ""misbehaving listener"" test, this one for the case in which the Future is already done.\nThis found a bug, which I\'ve fixed.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=85074586\n'}"
2782,"{'code': '424c567c4dda17b56735ec8f9c30e324869f658b', 'message': 'Add @CheckReturnValue to c.g.common.primitives.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=85074273\n'}"
2783,"{'code': '69475911714fd7704717a76b0371c8e475ec1734', 'message': ""Test no-arg get() on pending Futures, even in a non-GWT setting.\nTo prevent from hanging forever, of course, we need to spin up another thread to make the call.\nConveniently, we already have the code for this lying around. The main thing I did to it was change it to call getUninterruptibly, since we handling interrupts isn't worth the trouble here.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=85072429\n""}"
2784,"{'code': 'e038bedc27b30bd6323de3e05c1d6534f3bc1650', 'message': 'Short-circuit future.setFuture(TrustedFuture) in GWT, too.\n\nIf anything, I would expect the gains of avoiding ""new ExecutionException(...)"" to be greater than GWT than in ""normal Java.""\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=85071658\n'}"
2785,"{'code': 'c1160f0226bc00b88db9d80152584d8f299f226c', 'message': 'Run many tests for addCallback and transform under GWT.\nMake the no-Executor overload of addCallback available under GWT.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=85070996\n'}"
2786,"{'code': '8078019d64be76a97cd9f964a03cd2d1c8024d36', 'message': 'GWTifies Futures#dereference().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=84985065\n'}"
2787,"{'code': '3ecb65ed9929066408b0feee0161a6829e753fb7', 'message': 'Rollback of: Add some functionality to SerializingExecutor and rework its code.\n\nAdd functionality to suspend the execution. Intended primarily for cases where we want to wait\nfor an rpc before continuing execution.\n\nAdd functionality to prepend a task to the queue, intended primarily for cases where\na continuation of the current task is needed to run immediately afterwards. This\nmay happen if we need to send an rpc and suspend the queue before retrying the current task.\n\nUse case: [] there named Ex...\n\n***\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=84974387\n'}"
2788,"{'code': '0f19a0653a3fcf208f1722528d362f5eadfb4dc9', 'message': 'Release withTimeout as @Beta\n\nFixes https://github.com/google/guava/issues/1146\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=84900032\n'}"
2789,"{'code': '87caee69fa9a53850ea31a8dd8287e2dacd2083f', 'message': 'Add BaseEncoding benchmarks for decode and stream methods\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=84860248\n'}"
2790,"{'code': '782032c03df5282bbedb1935b95a69e086affabf', 'message': 'Add some functionality to SerializingExecutor and rework its code.\n\nAdd functionality to suspend the execution. Intended primarily for cases where we want to wait\nfor an rpc before continuing execution.\n\nAdd functionality to prepend a task to the queue, intended primarily for cases where\na continuation of the current task is needed to run immediately afterwards. This\nmay happen if we need to send an rpc and suspend the queue before retrying the current task.\n\nUse case: [] there named ExecutionQueue\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=84859082\n'}"
2791,"{'code': '9cd3ea9cedd399648488142f7e1eefd0f5a63866', 'message': 'Add @CheckReturnValue to CaseFormat, Enums, Equivalence, Joiner, MoreObjects, Strings and Suppliers.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=84797925\n'}"
2792,"{'code': '0860d0e05c86af3c132ff87363cc2e764214da87', 'message': 'More doc tweaks based on martinrb@s comments on [] (sorry, submitted too fast!)\n\nAnd, now that I at least have decided that we should just deal with it via a few extra null checks, introduce those null checks in the appropriate places.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=84664256\n'}"
2793,"{'code': '83e833e66581b24068bae07e88fa5d6d439126cc', 'message': 'An update on write visibility.\n\nClarify the data race issue in a comment and link to the concurrency-interest thread.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=84637827\n'}"
2794,"{'code': '57bcd2456c9a057f49d3ffecc171a524a432b1e3', 'message': 'Move LabsFutures.makeTimeoutFuture to Futures.withTimeout in prep for releasing in guava.  This changes the signature to avoid joda time Duration and also eliminates the AtomicReferences which i believe are unnecessary.\n\nCurrently it not public in guava, pending api review.\n\nhttps://github.com/google/guava/issues/1146\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=84575437\n'}"
2795,"{'code': 'e376c4d3c371bf52b84c56b2524a44a5d7120d96', 'message': 'Clarify the error message when an AsyncFunction returns null (*not* a Future that contains null).\nAdd a similar message for FutureFallback.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=84565778\n'}"
2796,"{'code': '8f1df29aa3babf441c262aedb6176714c6749596', 'message': 'Suppress log output from tests in the console by redirecting it to files.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=84561967\n'}"
2797,"{'code': 'f935a1e96e387ea242e45f3e52dc1ac8219a9b7c', 'message': 'Address lint identified by https://github.com/lewisd32/lint-maven-plugin\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=84559622\n'}"
2798,"{'code': 'e6fd8a1b0710209c075ac0379de1c24bad650d77', 'message': 'Fix Travis build (hopefully) by setting max heap in the same <argLine> that sets the user language/country.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=84553475\n'}"
2799,"{'code': '6b76b9276557db9d9472f8a869cc819c70cfb3cb', 'message': 'Annotate AsyncFunction parameter as @Nullable.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=84545868\n'}"
2800,"{'code': '5c9f69a9563346fded905fa4291d42fb2793a3a3', 'message': 'Add documentation of the happens-before guarantees of ListenableFuture.addListener.\n\nThis is essentially the same documentation that is on Executor.execute.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=84463792\n'}"
2801,"{'code': '65c42d94306c3d9e16b4722c1d71a7d910c610a3', 'message': 'Add more info to README.md.\n\nGuava pull request #1950\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=84455104\n'}"
2802,"{'code': 'd3cce792afa1a6707b3aec079cd71508be2ff4bc', 'message': 'Add @CheckReturnValue to Collections2\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=84437574\n'}"
2803,"{'code': 'a7937a13fa8c11ba0de6e510b530ade0452c72bc', 'message': 'Add @CheckReturnValue to Ascii.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=84437572\n'}"
2804,"{'code': '9b446af7093a8dcc6cea883a10fa1e9cbc63966f', 'message': 'Improve invalid character exceptions from BaseEncoding\n\nFixes https://github.com/google/guava/issues/1947\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=84345586\n'}"
2805,"{'code': 'a907912f9650cc7c5760b7a9177f44f8f242c939', 'message': 'Simplify a boolean return.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=84337684\n'}"
2806,"{'code': 'c7435516a060d14002f3dff78f276ffca804bcbd', 'message': 'Implement wasInterrupted() under GWT, and use that API to verify that cancel+setFuture passes the correct mayInterruptIfRunning value to the delegate.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=84154982\n'}"
2807,"{'code': '0090c5559d0cdc63aae3833e8f36a84ba038ad43', 'message': 'Fail setFuture(null) immediately under GWT (as it already does under plain Java) to avoid going into an inconsistent state.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=84154017\n'}"
2808,"{'code': 'a89e931d811ad4cab0a48351ef4c95fd58e8d53d', 'message': 'Take advantage of new GWT AbstractFuture tests to enhance overall AbstractFuture testing:\n- Run the tests not just under GWT but also under ""normal Java.""\n- Run the test as part of our open-source build (which happens mostly ""automatically"" as part of the above change).\n- Expand the tests to run with a TrustedFuture input and a non-TrustedFuture input. Currently this matters only in non-GWT mode, but I expect that to change in time.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=84152832\n'}"
2809,"{'code': 'b3bf62e8a34d41e70df4ab07a4d30b930909c7a4', 'message': ""Depend on Truth 0.25.\nI'm about to introduce some assertThat(throwable).hasMessage(message) calls.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=84134145\n""}"
2810,"{'code': '07df39abc6fe9c8e58006be255b2b2995dca8483', 'message': 'GWTifies Futures#transform().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=84084635\n'}"
2811,"{'code': '3c090f535a548473adf3a7bd66520c377e6a696b', 'message': ""Fix typo in InetAddresses' Javadoc.\n\nGuava pull request #1943\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=84052980\n""}"
2812,"{'code': '252832d66a77cc19ba8b4d9c40afd2796127404c', 'message': 'Add toString to DeadEvent.\n\nGuava pull request #1948\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=84051921\n'}"
2813,"{'code': 'fa24bad4e4ca19c18294062da539cdc78837efa2', 'message': 'Increase heap.\n\nWe\'ve been running out of heap since https://github.com/google/guava/commit/651774d3734a0f72dd7bccab9e57bd9579cfff0e yesterday:\n""testLargeNumberOfInsertions(com.google.common.hash.BloomFilterTest): Java heap space""\nhttps://travis-ci.org/google/guava/jobs/47023222\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=84048185\n'}"
2814,"{'code': 'd7a7585be9c0f5d70238133a2e194a43cb5e545c', 'message': 'GWT emulation for some of util.concurrent.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=83996751\n'}"
2815,"{'code': '3dc2bbe30d61a97ad5426de39fdee619cf6dcf7f', 'message': 'Fallout from MOE update:\nWe now preserve some more usernames in comments.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=83975277\n'}"
2816,"{'code': '62bb8bd4f4756cdd796651397eead05637491e0b', 'message': 'Clear FallbackFuture.running, this used to be the behavior but it was lost when updating this method to use setFuture.\n\nThis fixes: https://github.com/google/guava/issues/1937\n\nIn addition to not pinning the input future, i also changed it so that a call to cancel() prior to the input completing, does not trigger a CancellationException in the listener.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=83951020\n'}"
2817,"{'code': 'e07fb263aef0dec3060c82ac8836a4f01661abc7', 'message': ""Fix comment typo in Maps: 0,75 -> 0.75.\n\nThis may have been correct in the original author's locale, but it's at\nodds with the standard Java syntax.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=83948565\n""}"
2818,"{'code': '651774d3734a0f72dd7bccab9e57bd9579cfff0e', 'message': 'Pass a Locale to String.format calls.\nThen, run Guava tests in locale hi-IN to catch future dependencies on the default locale.\nFinally, as a convenience in debugging problems, write Maven logs in UTF-8 rather than ASCII. (This is likely already the case in ""normal"" Maven runs, but our guava_moe_test target was stuck on ASCII.)\n\nThis CL covers all the String.format calls in Guava, fixing <https://github.com/google/guava/issues/1567>. There are many other calls in internal com.google.common code. We may want to consider additional testing and avoidance strategies, e.g., a RootLocale.format convenience method and an error-prone check for no-Locale calls.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=83859950\n'}"
2819,"{'code': 'a94c53e0ebafa03384d174aad024fa74430640f5', 'message': 'adding MediaType for Dart files\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=83819730\n'}"
2820,"{'code': 'a9fdfa85e81d033f91843b6810d8df0fee6d05f8', 'message': 'Up the buffer size used in copies to the JDK 7 default buffer size.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=83625926\n'}"
2821,"{'code': 'f1f674b0eff8f55d99e2ad6e0752c684294fc95f', 'message': 'Optimize containsAll and equals for ImmutableEnum* when compared to another ImmutableEnum*\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=83622617\n'}"
2822,"{'code': '59407b6991ef621327b26d1783ed47e62d16076d', 'message': 'Adds a small clarifying comment to the Javadoc of common.cache.RemovalListener.\n\nMy team was previously assuming that calls to CacheLoader.load and RemovalListener.onRemoval would always be paired, but we found out this is not the case.\n\nIn retrospect, the existing Javadoc already hints at this, but I think it can be made a bit more explicit.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=83610070\n'}"
2823,"{'code': '52bd26004ad769bb698e649ff88fb70b47e12567', 'message': 'Standardize that Functions.foo().toString() returns ""Functions.foo()."" (I\'ve preserved two existing exceptions: compose(b, a) (which returns ""b(a)"") and forMap(map, default) (which returns ""Functions.forMap(map, defaultValue=default)""). I don\'t know whether that\'s ideal, but it doesn\'t feel worth spending too much time worrying about.)\nThis matches what Predicates.foo().toString() and Ordering.foo().toString() return.\n\n(Also, remove some unnecessary toString() calls from Predicates.java. Those changes would have been made in CL 58115976 (successor to CL 56242188) except that that change was made concurrently with a CL just like the one you\'re reading but for Predicates (CL 59050444).)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=83539256\n'}"
2824,"{'code': 'ea262b98b9913b16364a25e4f5b9a9d074693f08', 'message': 'setFuture documentation tweaks:\n- Describe cancellation propagation.\n- Stop referring to setFuture as though it *always* ""sets asynchronously.""\n- Small tweak that I\'m not sure actually helps: change ""previously been set or cancelled"" to ""already been set or cancelled."" Somehow I feel like this is marginally clearer that it refers to ""done at the time of the setFuture call"" rather than ""done at the time the supplied Future completes."" Am I crazy? Maybe I should just say ""done at the time the supplied Future completes?""\n- Maybe other stuff I\'ve forgotten.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=83537510\n'}"
2825,"{'code': '85e89f39452fbd2c3c5b5ecfc2c0a97fc50af9cb', 'message': 'Update public-suffix list.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=83479451\n'}"
2826,"{'code': 'aa8233e7f6c7e8a64a3516c44870d05022072093', 'message': 'Add @CheckReturnValue to Strings.nullToEmpty(). For more information, see attached bug.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=83453191\n'}"
2827,"{'code': '0d25cbbb48d9c7a169a43a8ad4f28a357506fd30', 'message': 'Add @CheckReturnValue to Iterables.elementsEqual(). For more information, see attached bug.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=83453102\n'}"
2828,"{'code': '573a69a30a1898866933a60ae383650d37731e03', 'message': 'Set default GWT log level to WARN.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=83447444\n'}"
2829,"{'code': '146e1f88021bb405fa57611ca787678559d32319', 'message': 'Add @CheckReturnValue to Collections2.transform(), Iterables.transform() and Lists.transform().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=83443729\n'}"
2830,"{'code': '542d9336fcd198f03d650f2d19f21bf10e56701b', 'message': 'Add @CheckReturnValue to Futures.successfulAsList().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=83431953\n'}"
2831,"{'code': '8206ecfbf6ff3aa19e50c940fcfcc1c088e1511d', 'message': 'Add @CheckReturnValue to Lists.reverse().\n\nSee https://github.com/google/guava/issues/1931\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=83347495\n'}"
2832,"{'code': 'ce79d2997f80dae7e7ae4b3dd449a15a25e89408', 'message': 'Add @CheckReturnValue to *.filter() methods in c.g.c.collect.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=83340841\n'}"
2833,"{'code': '5081e2928eeee8090470b0ef81d99088ddf09498', 'message': 'Add @CheckReturnValue to Futures.immediate*Future().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=83340815\n'}"
2834,"{'code': '3dc7aa2ce4b836b731a15dcd56db1b400124a504', 'message': 'Shuffling from internal change.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=83280657\n'}"
2835,"{'code': 'e370ddeb7558f0028302c5aada1f89b469417b25', 'message': 'Hide Utf8Benchmark, which has taken on some internal-only code.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=82987350\n'}"
2836,"{'code': '99d2816f0a099430f28b69639e9f6f5aae388812', 'message': 'Create TrustedListenableFutureTask so that our listener executor services can produce futures compatible with the new setFuture optimization.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=82743827\n'}"
2837,"{'code': 'b480594c212d7664412dcb7880fa33e40b21239d', 'message': ""Create TrustedFuture (name TBD) a trusted 'less abstract' subclass of AbstractFuture that we can use to optimize setFuture and try to use it everywhere in util.concurrent.\n\nAlso, introduce AbstractFuture.done() a template method to aid in clearing state after a future completes.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=82683934\n""}"
2838,"{'code': '77ccd12bd901f83637293ddf760253ef57c305a5', 'message': 'Add oraclejdk8 to the build matrix for Guava on Travis CI.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=82532082\n'}"
2839,"{'code': '118ac49cddb47362b28cfd893f67791809d60679', 'message': 'Specify source level 1.6 for GWT.\n\nThis fixes failures in guava-gwt when building/testing under JDK8.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=82526985\n'}"
2840,"{'code': '0244717a95293374bdb99cbde51c95bb7a6558e4', 'message': ""Removed test on url(). It's partially testing ClassLoader, and it sometimes fails.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=82525887\n""}"
2841,"{'code': 'f607e3c49a1d615bc869a355d1fbb59e3d96c7e3', 'message': ""Disable doclint when building under JDK8.\n\nBecause it complains about everything and fails the build.\n\nAlso fix something that my IDE was marking as an error: the <overWrite> element from the configuration for the maven-dependency-plugin isn't valid for the unpack-dependencies goal (there's <overWriteIfNewer>, but it's true by default), so I removed it.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=82468188\n""}"
2842,"{'code': '207dcb8706476005759f05f2584432c2b9ab6c0b', 'message': ""(1) Don't use a lock for seen exceptions field; should help speed a little (saves space in the non-error state)\n(2) Track not only seen exceptions, but also the causal chain.\n\nGood example of unnecessary logging from this is a CancellationException, which is wrapped in another CancellationException on list futures.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=82368457\n""}"
2843,"{'code': 'b6da8fef9cc01bb439483664a94350a695efdbbc', 'message': 'Make implicit narrowing compound assignments explicit.\n\nCompound assignments to variables with type byte, char, short, or float hide\ndangerous narrowing conversions.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=82265189\n'}"
2844,"{'code': '59373217a53a416d614dac67b2cb531abe418291', 'message': ""Add a more efficient implementation of Sets.symmetricDifference.\n\nBackground: was looking through the Guava code and came upon a TODO.\n\nAn even more efficient implementation could involve using a special consuming iterator to first return the items that are in set 1 but not in set 2, and then add the items from set 2 that weren't consumed (because they aren't in set 1); however, that would either modify the original set or have to use more space.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=82161404\n""}"
2845,"{'code': '0dba7a9e1e52776c91eeba52f0e149412c442947', 'message': 'Mention splitToList explicitly in the doc comment for Splitter.limit.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=82160580\n'}"
2846,"{'code': '14b12a5b24c410544d8f6d14087bb7550935d7d3', 'message': 'Fix typo in Splitter.limit.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=82158244\n'}"
2847,"{'code': '06e5db276be4bc28decf24879509c911f4be2bd9', 'message': ""Fix example description which is no longer accurate.\n\nAlso, adjust sample code. Let's assume activeInLastMonth is a predicate, rather than a call that returns a predicate.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=82153708\n""}"
2848,"{'code': 'e3f1626770e087d90215620f175d76973b8f07b8', 'message': 'Fix the reference to Utf8#encodedLength.\nGratuitous reformatting.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=81819384\n'}"
2849,"{'code': 'f4aa25e74a9466c2f93a2147a7cf9b01850dd41f', 'message': 'In com.google.common.reflect.Types, implement the TypeVariable interface using a dynamic proxy rather than an explicit implementation.\n\nThis is to work around a compatibility problem introduced by Java 8. See https://github.com/google/guava/issues/1738.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=81817139\n'}"
2850,"{'code': '1ab659d452ecddb90b508f6fba9e5ef5bde97d63', 'message': 'Fix a class loading ordering bug on android.\n\nApparently in some android versions (and/or testing environments, maybe?) Unsafe.getFieldOffset(Field) will trigger initialization (not just loading) of the class that declares the field.  This causes an ordering bug where when the Waiter class is initialized ATOMIC_HELPER is null.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=81812260\n'}"
2851,"{'code': 'ea9c9915bc9f0455b33e15aeeba55e2827ebb538', 'message': ""Fix extendsFromClass().\n\nChecking only the primary upper bound isn't sufficient for purposes like <A extends Foo&Bar>.getSuperType(Bar.class)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=81782225\n""}"
2852,"{'code': 'ac579e0d20dd45ac8a713789e4708858a19fa894', 'message': 'Fix some bugs related to calling Preconditions.checkNotNull on expressions\nthat are definitely non-null.\n\nCreated via a work-in-progress error-prone check for unnecessary null checks.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=81594383\n'}"
2853,"{'code': '002f39f8c165bbf1581fab6fc585dcdf976eb96d', 'message': 'Optimize UriParameterMap.parse() by making fewer passes when parsing and by checking requiresByteLevelDecoding() more efficiently.\n\nThe new code is ~25-42% faster in caliper.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=81584621\n'}"
2854,"{'code': 'c0b37db12875fe340dbf82fabfea8264f7c61de6', 'message': 'Rollforward the previously rolled back AbstractFuture change.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=81501035\n'}"
2855,"{'code': 'c828c438355896e16cfae49c8c044403d19d3377', 'message': 'Do not propagate cancellations to children if it was a result of a child being cancelled\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=81457128\n'}"
2856,"{'code': '8ffa41f28347579fbd3363543fd9afae89ef0b48', 'message': 'Rollback previous change.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=81455024\n'}"
2857,"{'code': 'b5eb4953579952edd753540e2919463a3ac1630d', 'message': 'Increase the guarantees about what happens when you call setFuture with a completed future.\n\nPreviously it was possible to have setFuture return true and for the future to not be completed with the future due to a racing cancel.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=81446929\n'}"
2858,"{'code': 'a70f009926809b9a37ebbc16ebbc9cf71030be11', 'message': 'Skip unnecessary presizing.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=81367572\n'}"
2859,"{'code': 'd585b1b7a5d307b8b800cb25adb558a5d21faae4', 'message': 'Refactored the overloads of isAssignable*() methods to instance methods with simpler signature\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=81364016\n'}"
2860,"{'code': '81b23cdc840018da4fc07ccfcd55c78391f44df0', 'message': 'use Map<File, ResourceInfo> instead of Map<URI, ResourceInfo> to work around the problem mentioned in https://github.com/google/guava/issues/1899\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=81339582\n'}"
2861,"{'code': 'e152cfd14c610c68341de805bcf71589652f6133', 'message': 'Rewrite nonCancellationPropagating to take advantage of setFuture\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=81244943\n'}"
2862,"{'code': 'c239c19f92b118b7afa33894a743c8c54de44adc', 'message': 'Delete AsyncSettableFuture.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=81197333\n'}"
2863,"{'code': '269d98573f4e6eed051a8ae2cdb392a7b606e939', 'message': 'Fixed isAssignableFrom() for <? super T> wildcard types, as pointed out by Guava issue 1898.\n\nIn a nutshell, here\'s what we have in the current implementation:\n\nList<? super String>.isAssignableFrom(List<Object>) == true // Correct\n<? super CharSequence>.isAssignableFrom(String) == false // Wrong!\n<? super String>.isAssignableFrom(<Object>) == true // Wrong! Not assignable\n\nTo show why they are wrong, consider the following three code snippets where the first two compile and the third doesn\'t compile:\n\nvoid okay(Receiver<List<? super String>> receiver, List<Object> objects) {\nreceiver.accept(objects);\n}\n\nvoid okay2(Receiver<? super CharSequence> receiver) {\nreceiver.accept(""1"");\n}\n\nvoid notOkay(Receiver<? super String> receiver, Object obj) {\nreceiver.accept(obj);\n}\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=81180102\n'}"
2864,"{'code': '5f9fd1479fcae935fb89f8c1127074c41e2751cf', 'message': 'Steer some consistentHash users to WeightedConsistentHash.\nSteer all weightedConsistentHash users to WeightedConsistentHash.\n\n(WeightedConsistentHash is internal only at this point.)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=81155544\n'}"
2865,"{'code': 'f8d4d38d5fc0bcfba725a7daf32aeea797468534', 'message': 'Add benchmark for BaseEncoding.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=81099316\n'}"
2866,"{'code': '3d0512c9e7cf138add01a594a21ec4d46f836515', 'message': 'Strip some internal-only GWT modules.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=81083376\n'}"
2867,"{'code': 'd6ddbb7981b9e5b5c07231f8895bcda133019c63', 'message': 'fix potential npe in ChainingListenableFuture.cancel\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=80832292\n'}"
2868,"{'code': 'ab9fa8fd1d22e3bf5d345ac2d464e973b664b757', 'message': 'Shuffling from internal-only change. Will be reverted soon.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=80831887\n'}"
2869,"{'code': '0b760748d06ffd0b191b253190f1f83fd304329a', 'message': 'Handle addListener throwing\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=80787198\n'}"
2870,"{'code': 'c276708d1fed199dae6724921670b9c380744590', 'message': 'Shuffling from internal-only change. Will be reverted soon.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=80747845\n'}"
2871,"{'code': '2a7a3634f562f2a473850ff0373db66bc3b23cbf', 'message': 'Two quick followups to take (minor) advantage of the new setFuture implementation\n\nDeleting AsyncSettableFuture should be pretty easy after this\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=80658233\n'}"
2872,"{'code': '353ae349a24fb6c9b3e233ca03e4012761c7f3d8', 'message': 'Rewrite AbstractFuture to fix the following issues\n\n1. set,setException and cancel are all potentially blocking methods\n2. using AbstractQueuedSynchronizer is overkill for a future\n3. the lack of a setFuture method leads to a lot of repetitive code\n4. abstract future is fat\n5. timed get() calls will always succeed if the future is done when the blocked thread wakes up, even if the deadline has passed.\n\nThe approach is to directly implement the interface using Unsafe and LockSupport.\n\nExecutionListBenchmark is written to essentially generate as much thread contention as possible... im not sure how useful it is.  Also, the more i try to run multithreaded (micro) caliper benchmarks the less confident i am that any of the data is reliable.  The main point is that the future is definitely much smaller and also faster in most scenarios.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=80505365\n'}"
2873,"{'code': '44eac674e407b95698625bbd4a402805264d3287', 'message': ""Migrate from Truth's deprecated iteratesAs(...) to containsExactly(...).inOrder().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=80491240\n""}"
2874,"{'code': 'a2508dae5397713c4a8bd464d0014233c742f733', 'message': ""Migrate from Truth's deprecated iteratesAs(...) to containsExactly(...).inOrder().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=80490101\n""}"
2875,"{'code': '7fee898cf7f23a9e9c9ca5f6f20fc0bd1e199ce4', 'message': 'Remove AUTHORS file.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=80416702\n'}"
2876,"{'code': '0f9774d76fa6b0d7353b24e0550af519e936da07', 'message': 'Fix shutdown issue in AbstractScheduledService.\n\nThe issue is that if stopAsync() was called after an interation had been\nexecuted (but before it had actually run) then we would fail to unlock\nour lock and then shutdown would hang forever.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=80236732\n'}"
2877,"{'code': '1a7ecdee7b51e7b77a2518320525faf92fbf9c49', 'message': 'Remove unnecessary null checks.\n\nGuava pull request #1892\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=80232609\n'}"
2878,"{'code': 'e48c7a16d26a52249e338dea9f1153e7136daeb4', 'message': 'Remove references to AsyncLoadingCache from CacheBuilder docs.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=80227076\n'}"
2879,"{'code': '7ac551423cddb0c81f1307e3b101c0b41cf34883', 'message': 'Add a constructor to VerifyException to permit a cause to provided alongside a message.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=80128106\n'}"
2880,"{'code': 'c633d07f26e9859529e79e7da4057ad097d9f5f4', 'message': 'Remove the rethrow on failure behavior from all the threaded service implementations.\n\nguava-discuss thread: https://groups.google.com/d/msg/guava-discuss/k_69XGQFPuk/jqTwIRlyP0wJ\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=79991294\n'}"
2881,"{'code': '72ae31fcc225cea1184ed75d82892a0d06339a19', 'message': ""Link to one templating system as an example.\nOn issue 1887, I said that we try to steer people to templating systems, but that's kind of a weak claim at present.\n\nhttps://github.com/google/guava/issues/1887\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=79954411\n""}"
2882,"{'code': '69b1352ae9dc7183fdea8bcd1d5ca85c0f671eed', 'message': 'Add AsyncLoadingCache internally.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=79901718\n'}"
2883,"{'code': '149f052a790d7a1722a5b652e4faacc5e354ff14', 'message': 'Test that far-future scheduling means ""effectively never"" rather than overflowing.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=79870651\n'}"
2884,"{'code': '63e9a0eccaca49df91e06e6397f496588b60e859', 'message': 'Use TransformedIterator instead of ForwardingIterator.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=79673799\n'}"
2885,"{'code': 'b98c1f96240f3a4fbb4557c0b8498ea46f017808', 'message': '[]\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=79611585\n'}"
2886,"{'code': '92801fd18d29072116bff0014a0365b8dc9ba4c5', 'message': 'Add CONTRIBUTING.md file to tell users how they can contribute and what to expect.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=79583464\n'}"
2887,"{'code': '6603fcdeed1e8277a4cecbc1d2051b4510de1b45', 'message': 'Remove references to on-demand computation of values.\n\nGuava issue #1885\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=79582498\n'}"
2888,"{'code': 'f78ba14b0e1012184b67f2fe1a27d4d5aa3eb689', 'message': 'Use features from GWT 2.6.0:\n- Use Class.getSimpleName() instead of our custom implementations.\n- Mark test that uses StringBuilder.appendCodePoint() as working under GWT.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=79579791\n'}"
2889,"{'code': '39d4b2140ad4a40f7eb91ed70cd97ddb0c88f9b2', 'message': 'Remove AsyncSettableFuture.isSet\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=79569901\n'}"
2890,"{'code': 'ff4513325162b835b98cbbe4b7c1ad7aa9282a5a', 'message': 'Make GWT logging even quieter for Travis build.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=79441097\n'}"
2891,"{'code': '5d730e9f3d9977644cd2f2e0b5b2539e795ba509', 'message': 'Set explicit -Xmx for Guava tests in pom.xml.\n\nAlso remove attempt to set the heap size in the Travis configuration\nand change it around a little so Javadoc is generated in the install\nstep and not in the testing step.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=79437983\n'}"
2892,"{'code': '2ba0fa47fd72c932c9f74e9beeb1abd09773e7c6', 'message': 'Attempt to increase max heap space for Travis builds, since the new test for BloomFilters with a large number of insertions is currently running out of space.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=79372034\n'}"
2893,"{'code': 'dc6f49925d3e93e3e7d2f52be292a454ae8346eb', 'message': 'Remove openjdk6 as a platform to build Guava on. It fails due to a weird generics issue.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=79358423\n'}"
2894,"{'code': '727f62163b685f720a8c001532271f648e250fa2', 'message': 'Allow expectedInsertions to be up to Long.MAX_VALUE.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=79352147\n'}"
2895,"{'code': '6e62f36aaeda5b0340727a48859a2dca81550c75', 'message': 'Make GWT less spammy for Travis CI builds by changing its log level to INFO.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=79291520\n'}"
2896,"{'code': 'a1b884dd4bc5688fcbdbd2f837dca4fa65bfd2c7', 'message': 'Make log level for GWT configurable for Maven builds.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=79283169\n'}"
2897,"{'code': '124e573c32b9ae3d39a7e59664855a4821783904', 'message': 'Add support for Travis CI.\n\nGitHub pull request #1877.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=79275478\n'}"
2898,"{'code': 'b6bd84874df9f0fd43b923f3991f409127e40be9', 'message': 'Replace Google Code URLs with corresponding GitHub URLs.\n\nGitHub pull request #1876.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=79275279\n'}"
2899,"{'code': '00b05b0989a2612e950536feb3f19b25f58018ef', 'message': ""Add a .gitattributes file to control line ending normalization, which is otherwise a mess that depends on each git client's settings. (See http://schacon.github.io/git/gitattributes.html and http://adaptivepatchwork.com/2012/03/01/mind-the-end-of-your-line/ for more about that.)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=79186519\n""}"
2900,"{'code': '36faf58a85d384fe4f2f66d2382c77ac1da44c55', 'message': ""Remove mvn-deploy.sh and jdiff.jar, which aren't really needed.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=79183142\n""}"
2901,"{'code': '1b82532af11ff285c0aaa712a262d4e50bd81099', 'message': 'Fix ByteArrayDataInput javadoc (GitHub pull request #1874).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=79122254\n'}"
2902,"{'code': '11005bda31c7369437b61fb7813fcd8fbedeaeee', 'message': 'Use Truth for isNotInstanceOf.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=79090103\n'}"
2903,"{'code': '870ad023f6dbd77e7867021eabecc34b0c68e907', 'message': ""Make GWT's LocalCache.values() not be a Set, since it may contain duplicate values.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=79088720\n""}"
2904,"{'code': 'fa95e381e665d8ee9639543b99ed38020c8de5ef', 'message': 'Change README to README.md and make it reference GitHub locations rather than Google Code.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=78948385\n'}"
2905,"{'code': 'd14649091d1f368c326125fdbe70c0d1dac58495', 'message': ""Migrate from Truth's deprecated iteratesAs(...) to containsExactly(...).inOrder().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=78848834\n""}"
2906,"{'code': '1c5554dedb0924689285a34489ec1d6b57d076e9', 'message': 'Add an IteratorBasedAbstractMap class to simplify map implementations in common.collect.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=78776528\n'}"
2907,"{'code': '366efb31c4b5f1a04490d76d2c1405de6bfe1697', 'message': 'Introduce Multimap convenience methods (k0, v0, etc.), and migrate to them.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=78763814\n'}"
2908,"{'code': '86e4a8d67b1898c3a947f24c59c5ae720c86b975', 'message': 'Use Map convenience methods in a few more places.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=78763717\n'}"
2909,"{'code': '7eed0f95640eed8d068a46ade7fc0a13f226c422', 'message': 'Replace instances of CollectionSubject with IterableSubject (the former has\nbeen deprecated and will be removed soon).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=78759479\n'}"
2910,"{'code': '9370140be0c19cb27d47c6185fe232ef9000a6b8', 'message': 'Add convenience methods for e0().getKey(), etc., and migrate to them.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=78756685\n'}"
2911,"{'code': '730a5d308a4e5e3423ff3f3eea1209072a8e6e75', 'message': 'Add convenience methods for samples.e0(), etc., and migrate to them.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=78756024\n'}"
2912,"{'code': 'e052e3edf713c0c20dc5ab8ee98d3fde09473727', 'message': 'Migrate off of deprecated CollectionSubject.has().exactly(...).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=78755738\n'}"
2913,"{'code': 'd6a9346dd6ca7170756a2a6d939d7b55384229ac', 'message': 'Hide samples.e0, etc. behind methods.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=78677562\n'}"
2914,"{'code': 'b8515f3f490f3f9d3127570e9ac21c4a7c59d586', 'message': 'Clean up usages of deprecated Truth has() Collection methods:\n-has().item(...) -> contains(...)\n-has().allOf(...) -> containsAllOf(...)\n-has().exactly(...) -> containsExactly(...)\n-has().exactlyAs(...) -> containsExactlyElementsIn(...)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=78667656\n'}"
2915,"{'code': '069cd931ef9fca21860217fea540fff6fc9530de', 'message': 'Clean up usages of deprecated Truth has() Collection methods:\n-has().item(...) -> contains(...)\n-has().allOf(...) -> containsAllOf(...)\n-has().exactly(...) -> containsExactly(...)\n-has().exactlyAs(...) -> containsExactlyElementsIn(...)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=78667341\n'}"
2916,"{'code': '50169063389b5dede9fba4f36895d66f9f479c80', 'message': 'Clean up usages of deprecated Truth has() Collection methods:\n-has().item(...) -> contains(...)\n-has().allOf(...) -> containsAllOf(...)\n-has().exactly(...) -> containsExactly(...)\n-has().exactlyAs(...) -> containsExactlyElementsIn(...)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=78667251\n'}"
2917,"{'code': 'e12c62dc17ad21c2fc8a9a918c159f661ee2f202', 'message': 'Clean up usages of deprecated Truth has() Collection methods:\n-has().item(...) -> contains(...)\n-has().allOf(...) -> containsAllOf(...)\n-has().exactly(...) -> containsExactly(...)\n-has().exactlyAs(...) -> containsExactlyElementsIn(...)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=78666537\n'}"
2918,"{'code': 'da04fede442227bba94623e0a184f4dbed68552d', 'message': 'Clean up usages of deprecated Truth has() Collection methods:\n-has().item(...) -> contains(...)\n-has().allOf(...) -> containsAllOf(...)\n-has().exactly(...) -> containsExactly(...)\n-has().exactlyAs(...) -> containsExactlyElementsIn(...)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=78664552\n'}"
2919,"{'code': '6d55c174c91f5ff4c9a26956227b111c1fc15e7e', 'message': 'Add comment to apparently unused line in LongAddables.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=78588590\n'}"
2920,"{'code': '2a35e947679a898d86ee9f655f6b121b3c75d1f4', 'message': 'Migrate off of deprecated Truth methods (created using Refaster)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=78472045\n'}"
2921,"{'code': '810e9ec4d94baff856d12905ec26390c6be09eee', 'message': 'Migrate off of deprecated Truth methods (created using Refaster)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=78471461\n'}"
2922,"{'code': '9113082b77c6f80e0d4d80b24eb16bcee1a23a08', 'message': 'Migrate off of deprecated Truth methods (created using Refaster)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=78471417\n'}"
2923,"{'code': '582bce8560ea41d8adbbfc5d6ce7fbed5b9fdf66', 'message': 'Migrate off of deprecated Truth methods (created using Refaster)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=78470770\n'}"
2924,"{'code': 'd4c5140a957592d78bd66c40751cb1bcc9cac198', 'message': 'Added Ping-From and Ping-To headers associated with <a ping>.\n\nThe spec for <a ping> adds two new HTTP headers that may be sent with\na ping request. See\nhttp://html.spec.whatwg.org/multipage/semantics.html#hyperlink-auditing.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=78456250\n'}"
2925,"{'code': '24c27151be5afdcf58c03565e56d27f8a84e1407', 'message': 'Remove the array copy from Fingerprint2011.hashBytes(byte[], int, int) method.\n\nConclusion: for hashFunctionWithOffset the improvements are visible in terms of bytes used, but also in terms of execution speed (before: 297,340; after: 173,506). Interestingly enough, there are small improvements for the hashBytes without offset version (before: 184,860; after: 164,804).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=78433787\n'}"
2926,"{'code': '2c7ff3dc85e60e86d78283d46f7d1c8546a6aaca', 'message': 'Roll-forward of: Change CountingInputStream and CountingOutputStream to require a non-null delegate stream, as reported in...\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=78358518\n'}"
2927,"{'code': '533a9460e0b2fec39fe74e7a3cd9a0ea353b1453', 'message': 'Rollback of: Change CountingInputStream and CountingOutputStream to require a non-null delegate stream, as reported in Guava issue #1869.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=78356364\n'}"
2928,"{'code': 'ca9e7f9c32762531c134afef7f6f40e53b96a8b7', 'message': 'Change CountingInputStream and CountingOutputStream to require a non-null delegate stream, as reported in Guava issue #1869.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=78355152\n'}"
2929,"{'code': '945a200eabe24528307f08a51689f54c12a25053', 'message': 'Improve error message.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=78174362\n'}"
2930,"{'code': 'cef87687204b7cf2a6dfb49f5fcdad7e613281a8', 'message': 'Update public suffix patterns.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=78130620\n'}"
2931,"{'code': '6e5761cf8f64cfb78e44d50851dace43ededcbc1', 'message': 'Update Guava to Truth 0.24\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=78118999\n'}"
2932,"{'code': '809807e352656f02b422e44ed22cca9dee5d5ecd', 'message': 'Fix @since documentation tags.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=78101179\n'}"
2933,"{'code': 'bece9ef0a577758f8f973de1cdee5853f60df468', 'message': ""Avoid importing BitSet for Javadoc-only usage.\nWe've gotten reports that this breaks things in GWT: https://code.google.com/p/guava-libraries/issues/detail?id=1824\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=77957959\n""}"
2934,"{'code': 'af3f8d18044ae5854deaa16fd534731490b49d97', 'message': ""This CL fixes null annotations in com.google.common.primitives\n\nThe annotations on the tryParse() methods are inconsistent. Many of them don't have @Nullable annotations. This is problematic, because: a) the method can return null; and b) the package itself is annotated with @ParametersAreNonnullByDefault. This causes Eclipse to display dead code warnings when checking the return value from these methods.\n\nI've included the @CheckForNull annotation, since I saw you guys using it already. Technically, this isn't required and @Nullable by itself should be fine. But it doesn't hurt to have both. Also Eclipse doesn't understand @CheckForNull.\n\nI also threw in a few @Nullable on equals() methods that were missing.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=77896210\n""}"
2935,"{'code': 'f2a818b2890f8df36b02387a36e18a5152662d73', 'message': 'Ensure that using a rate of Double.MIN_VALUE (the smallest positive double value) results in an effectively zero rate. It currently seems unlimited.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=77276457\n'}"
2936,"{'code': '12a130a3b37b3a4917ade78e16954ca668e5b980', 'message': 'Small step first: rename and clarify the meaning of ImprovedAbstractMap, now ViewCachingAbstractMap.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=76723220\n'}"
2937,"{'code': 'd0a0c8fb1c7df372e617878c1d8414861558637d', 'message': 'Add copyOf(Iterable<Entry>) to ImmutableMap, ImmutableMultimap, and their subtypes.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=76459632\n'}"
2938,"{'code': 'f7e4a609d40d6ff422e5c90c860525b45b526250', 'message': 'Move indexMap to a more logical location.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=76448806\n'}"
2939,"{'code': '366da0b7956e2ae3e794c0d600d21e5dc7a404f0', 'message': 'Dedup logic in ImmutableEnumMap that is available elsewhere.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=76375623\n'}"
2940,"{'code': '5f62e2b41cbbcc3191d2c021b56d2f1a9d4a41b2', 'message': 'In ImmutableMap.keySet().iterator(), transform the entrySet iterator rather than transforming its asList view, for the cases where that is not efficient.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=76351252\n'}"
2941,"{'code': '4ce29b4cec61bb122cdbf833b487f90f250c4a55', 'message': 'Inline Maps.valueIterator(UnmodifiableIterator<Entry>) into its one call site\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=76350780\n'}"
2942,"{'code': '055f93996fe9dba92972a7a1742b182fd80ed133', 'message': 'Add a common superclass for ImmutableMap implementations that create a custom Iterator to iterate, reducing the total number of nested classes.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=76350704\n'}"
2943,"{'code': '1c73b2d932d3951ebee432c11c0f5aac9ea1b696', 'message': 'Establish RangeMap iteration order, as per Guava issue 1842.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=76272760\n'}"
2944,"{'code': '3308540179837605b325eaff23c7af4bcf1668ec', 'message': 'Reuse ImmutableMap.EMPTY_ENTRY_ARRAY in other ImmutableMap types\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=76267320\n'}"
2945,"{'code': '8aa58da247d453622e39a979d3194eb3352c2b0d', 'message': 'Eliminate varargs-accepting create() method, which was never called with multiple arguments.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=76264541\n'}"
2946,"{'code': '7f63fa933180d475bb39f7bd73f100ae0278c544', 'message': ""Return to scrubbing cgdecker's username, which we temporarily stopped doing in 69045357f5b4.\nWe will finally stop scrubbing it again when the standard MOE binary is rebuilt with CL 75843182.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=76253324\n""}"
2947,"{'code': '77f624b3851403ee2714616513457df9e1b04325', 'message': 'Simplify ImmutableMap.asMultimap().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=76196628\n'}"
2948,"{'code': '842efacbd00611778a4b33d917be6f71542259a8', 'message': 'Dedup conflict checks and get(Object) implementation between RegularImmutableMap and RegularImmutableBiMap.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=76194662\n'}"
2949,"{'code': '544b57a25702ee58b9b87c3673b8748352a429e3', 'message': 'copyOfEnumMap only gets called with an EnumMap, so narrow its parameter type from Map to EnumMap.\n\nThis also makes it clearer that copyOf on an empty EnumMap will succeed.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=76190743\n'}"
2950,"{'code': '95f7a46fe582c870be38b3bc6d4a1bf9938593f3', 'message': ""TerminalEntry's constructor already calls checkEntryNotNull; no need to do it again.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=76188203\n""}"
2951,"{'code': 'c2748c69b3a77f55990486130a139a161b3e12b2', 'message': 'Factor out an array-backed ImmutableMapEntrySet to use in RegularImmutableMap and RegularImmutableBiMap.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=76182964\n'}"
2952,"{'code': '0bb9c27ab75205ffefba86cbb6cc4a3b4ceec988', 'message': 'Investigate possible deduplication between RegularImmutableMap and RegularImmutableBiMap.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=76176371\n'}"
2953,"{'code': 'eec87b8bc4844859756ccaf88a405836e5e561da', 'message': 'Delete unused SingletonImmutableBiMap(Entry) constructor.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=76173755\n'}"
2954,"{'code': '7ae4ac4474915b4b8d4ec419c93aa93829ec464a', 'message': 'One last (?) round of presizing builders where possible in common.collect.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=76105103\n'}"
2955,"{'code': '8061999c2ae5a914ae765c1bdc373b9cc4ee70d0', 'message': 'Refactor the three places in common.collect that we convert a List<E> to an ImmutableMap<E, Integer>.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=75926603\n'}"
2956,"{'code': 'f2fb1352a5ee1b808635f699b93311698d9c5bef', 'message': 'Refactor ImmutableSortedMap construction paths.  The previous implementation did some redundant copying.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=75853973\n'}"
2957,"{'code': '390198de59b9c782b6749eab0af8d55a20e965a5', 'message': 'Presize the ImmutableMap.Builder used in ImmutableMultiset construction.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=75851783\n'}"
2958,"{'code': 'a25328617843ad6faf88fdd20634a68d8b8267b8', 'message': 'Make ImmutableCollection.contains abstract, and fix some embarrassing oversights of where it should have been overridden.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=75849013\n'}"
2959,"{'code': '620e1ea516dd68329a0cf8c4dfffdc28f527927c', 'message': 'Add ImmutableBiMap.Builder.put(Entry) overload, which had previously not been overridden from ImmutableMap.Builder.  Now, it correctly returns ImmutableBiMap.Builder.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=75833810\n'}"
2960,"{'code': '770d751a62053a9bea928e42823c42dcd6a4e2d2', 'message': 'Expand and improve uses of Ordering.immutableSortedCopy in common.collect.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=75744632\n'}"
2961,"{'code': '01b8a2c4d4cfb32ced9143560b75f26fd2923e67', 'message': ""Don't frontload CharMatcher.toString() computation, that's silly.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=75555670\n""}"
2962,"{'code': '3b47a3006a9ee32731107b080923d718444ad0fd', 'message': 'Actually, LocalCache.getIfPresent _does_ increment the hits counter.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=75546548\n'}"
2963,"{'code': 'e7f902c768e974552f954a1a55970d6ef39dc6fb', 'message': 'Fixed a FreshValueGenerator bug that causes failure in generating fresh values recursively when there are finite number of distinct values provided by user.\n\nThe fix is to make sure the ""freshness"" AtomicInteger is only incremented at the end of generating a fresh value for user code. Recursive generation of values for nested types (such as generating the K and V for a Map<K, V>) doesn\'t increment the freshness.\n\nThis ensures that for finite set of distinct values, we don\'t ever skip distinct value.\n\nAlong the way, the special casing for Optional had to be changed. So I just spent extra effort supporting an @Empty annotation that can be used to generate ""empty"" value for any arbitrary type.\n\nOriginally, I tried to return empty collections. But some existing tests failed because the classes don\'t always like being injected with empty collections or maps (they may have a precondition check to reject empty collection).\n\nSo @Empty is only applied to Optional, Range and ConcurrentMap.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=75542159\n'}"
2964,"{'code': '0b4e7e5df7f985026f731f10f2c37a44543a5355', 'message': 'Modify SmoothRateLimiter so that the ratio between maximum-permits-per-second and minimum-permits-per-seconds can be specified -- currently this ratio is hard coded to 3.\n\nThis makes it much more flexible as ""ramp up limiter"" aka ""acceleration limiter"".\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=75381543\n'}"
2965,"{'code': 'bf6a7fe2ec6c516bc7a1b6c2968db4666dca2b66', 'message': 'Use presized ImmutableList.Builder in ImmutableSortedMap creation.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=75327745\n'}"
2966,"{'code': '70abca0b7e5f21d4e6e8686c7a2098f28f1a58cd', 'message': ""Fix @GuardedBy annotations with invalid lock expressions.\n\n- fix typos\n- qualified 'this' accesses can only be used for enclosing classes: the\ndeclaring class is accessed as 'this', enclosing classes are accessed as\n'OuterClass.this'\n- replace annotations being used for general documentation with comments\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=75324114\n""}"
2967,"{'code': 'e3ee2cb617d0381c2464dd75a28460d832e92a2a', 'message': ""Fix @GuardedBy annotations with invalid lock expressions.\n\n- fix typos\n- qualified 'this' accesses can only be used for enclosing classes: the\ndeclaring class is accessed as 'this', enclosing classes are accessed as\n'OuterClass.this'\n- replace annotations being used for general documentation with comments\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=75302901\n""}"
2968,"{'code': '67448d5dd766c461c7fdb41c39085fdd00f37a2e', 'message': 'Stop using MapSubject.hasKey() and .lacksKey().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=75211614\n'}"
2969,"{'code': '64658a320272c1ca4154a45681155283f4d9c42d', 'message': 'use getAvailableCurrencies() under Java 7 to get fresh currency instance\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=74986782\n'}"
2970,"{'code': '69045357f5b4c33a14d29e5792e6a74c76c2c4dd', 'message': ""Temporarily avoid scrubbing cgdecker's username.\nThis change will be reverted when we stop using my custom-build MOE binary, which already contains CL 75843182.\nLater, it will come back when the standard binary is updated.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=74887544\n""}"
2971,"{'code': 'df0e460606f116a041e441584026dbfa2a0b2ee1', 'message': 'GWT: Better error checking, logging, and documentation.\n- Error checking: I had been trying to enable compilation with -strict (<https://gist.github.com/Abdennebi/2828230>). However, while the GWT compiler parameter is ""-strict"" and the Maven system property is ""gwt.compiler.strict,"" the Maven parameter is ""failOnError:"" <http://mojo.codehaus.org/gwt-maven-plugin/compile-mojo.html#failOnError>. Additionally, while the compilation goal supports failOnError, the test goal does not: <http://mojo.codehaus.org/gwt-maven-plugin/test-mojo.html>. Maven had been ignoring the unrecognized names.\n- Logging: Turn up the logLevel to make any future problems easier to diagnose.\n- Documentation: Explain the presence of some scary ""Ignored 53 units with compilation errors"" warnings.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=74868684\n'}"
2972,"{'code': 'ac25c5019e61dae7a993562235b8de4fdada0394', 'message': ""Integration of Justin Sampson's fixes to Monitor and addition of extensive tests.\n\nJustin is original author of Monitor and heroic volunteer xoogler.\n\nThere was significant additional work by myself (martinrb) while preparing this CL.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=74829983\n""}"
2973,"{'code': 'ffe2d77c9d3b349d72bc1ebec39345ff0833a43e', 'message': 'Add of() factories for ImmutableClassToInstanceMap for n=0,1.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=74815130\n'}"
2974,"{'code': '13800999134027e799b9250d261dd2c2a969183d', 'message': 'Fix hash map ordering bug.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=74779605\n'}"
2975,"{'code': '6c9f886357a277e0fde19b87556eb7c0fa617e14', 'message': 'Temporarily duplicate Ascii.truncate() for internal build-system reasons.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=74746985\n'}"
2976,"{'code': '8ec4c42646f590daf72bed88a92db6f4ac2de65e', 'message': ""Strip <resource> lines from .gwt.xml. They are not yet supported by a release version of GWT. (Support was added in internal CL 62367280, which imported <https://gwt.googlesource.com/gwt/+/f39e11150ef0ea635a7f7d30154221907775efc6>. I'm not sure when our build was changed to generate the new elements.)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=74705447\n""}"
2977,"{'code': 'c8dadc4e635c6fce132e8c7d0a0ceff4cfcb9207', 'message': 'Delayed fallout from build-system changes of CL 74684238, which adds <resource> elements to some .gwt.xml files.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=74686661\n'}"
2978,"{'code': 'f26af757bb6045da98785dc435edc1b0e4ff4125', 'message': ""Changes AtomicLongMap#removeAllZeros to use iterator for removals.\n\nAlthough ConcurrentHashMap doesn't throw ConcurrentModificaitonException, the GWT emulation in gwt/corp/emul uses HashMap and we are submitting a change that will start making GWT's HashMap to throw ConcurrentModificationException which breaks this code.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=74631176\n""}"
2979,"{'code': '1f5af9bda144a0a4344ef954ab55a1b507035e28', 'message': 'Fix javadoc typo: wrapTask\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=74092956\n'}"
2980,"{'code': 'f5d24b9c0bc6a5f6b203e52626a44d40c7fa04d5', 'message': 'Generalize the javadocs on CacheBuilder.ticker()\n\nSee https://code.google.com/p/guava-libraries/issues/detail?id=1836\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=73901400\n'}"
2981,"{'code': '654bc1eb3c3a93f46427f958839eacd6dd24f1a3', 'message': 'Stop using now-internally-deprecated Truth APIs (which are not yet pushed to open-source Truth), and leave a todo to migrate to the newer Truth apis once they are released to maven, or after Guava 18 is released and we can rely on snapshots.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=73722570\n'}"
2982,"{'code': '3b246131c2f100530989b3630ca1ab78198f0060', 'message': 'Update tests to cope with the fact that ""google"" is now a public suffix. This fixes today\'s test failures.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=73721981\n'}"
2983,"{'code': '4e6028d0cf2c91e71eba7da98000a61350b61c87', 'message': 'Update public suffix patterns\n\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=73686076\n'}"
2984,"{'code': '627049c4d72f3f4de4b9b6168e243ad86b56f92d', 'message': 'Stop using isBetween and isInclusivelyInRange in preparation for the (not yet released to open-source) assertThat(4).isIn(Range.open(2, 5)); etc.\nCleanup the stragglers.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=73545684\n'}"
2985,"{'code': '4015f4d1abe34428a2e99bfa1767fbb4d5657e21', 'message': ""Incorporate Justin Sampson's wording improvement in\nhttps://code.google.com/r/jsampson-guava/source/diff?spec=svn965c15345482203be7f4af3ce2c44488bc0ff9ec&name=jsampson/monitor-fixes&r=965c15345482203be7f4af3ce2c44488bc0ff9ec&format=side&path=/guava/src/com/google/common/util/concurrent/Monitor.java\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=73540789\n""}"
2986,"{'code': '0605e099723b57777c67e306bbb5f3d50d6723aa', 'message': 'Add more tests for Futures.immediateCancelledFuture() to essentially document\nwhy two chained CancellationExceptions are thrown.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=73186288\n'}"
2987,"{'code': '36265a5acc5e9a6307b06b2c931763595e349f30', 'message': 'Rewrite ServiceManager to use MultimapBuilder\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=73173782\n'}"
2988,"{'code': '4ef414f5b0610b540a1837f214b30d6424e99761', 'message': 'Add AbstractPackageSanityTests.UNDERSCORE_IN_NAME to make it easy to exclude generated classes like AutoValue_Foo from testing. The issue is that these classes typically do not apply @Nullable to the argument of equals(Object), so that they will work when Nullable is not on the classpath. But NullPointerTester requires @Nullable on this argument because otherwise it will fail when equals(null) follows its contract and does not throw an exception.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=73169035\n'}"
2989,"{'code': '1c384d3f1bbc51d153f3bece2c70008fcb04cf51', 'message': 'Update Truth dep to 0.23. (https://code.google.com/p/guava-libraries/issues/detail?id=1830)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=73072462\n'}"
2990,"{'code': 'ba64bdfc7d46c84fb47e17edcc0261b38600efd6', 'message': 'Update Iterators.emptyIterator() @deprecated Javadoc to specify the replacement as ImmutableList.<T>of().iterator() rather than just ImmutableList.of().iterator(). The latter will basically never compile.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=73064832\n'}"
2991,"{'code': 'd39692070af2dc23b7a985f8a16d684c096654e2', 'message': 'Update Javadoc in Futures and other classes to reference directExecutor or newDirectExecutorService rather than sameThreadExecutor. Also change the references to inline execution or an inline executor to use the term ""direct"" instead.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=72669239\n'}"
2992,"{'code': '16734985d58a13ca49765915aeb835f0c754b36c', 'message': 'Fix documentation error in DoubleMath.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=72665652\n'}"
2993,"{'code': '65d998cdcbddf8f3dc71e0415851311c31ac7c8e', 'message': 'Remove system property control for the default strategy to use for BloomFilters. This was only supposed to work for Guava 17.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=72664539\n'}"
2994,"{'code': '3e15a2b37c7efbf577a5116a00b2d6ca47ed6121', 'message': 'Update Guava versions to 19.0-SNAPSHOT.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=72661640\n'}"
2995,"{'code': '7c85e1303b7a506d500652d608329adf5dd90813', 'message': ""Major refactoring of EventBus, in preparation for further changes.\n\n- Make an Executor a property of all EventBuses, not just AsyncEventBus. A normal EventBus uses a direct Executor by default. Executors are stored per-subscriber.\n- Pull out the event dispatch strategy into a Dispatcher class. This handles how events are queued (or not) as they're posted. EventBus and AsyncEventBus each use strategies that should match their old behavior exactly.\n- Pull out the subscriber registration code into a SubscriberRegistry class. At the same time, switch back to using a ConcurrentMap<Class<?>, CopyOnWriteArraySet<Subscriber>> to store subscribers in order to allow lightweight, copy-free immutable snapshots of all subscribers to an event.\n- Rename EventSubscriber to Subscriber and make some changes to it. Move most code related to actually invoking a subscriber method to it.\n- Expose the EventBus's identifier.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=72652483\n""}"
2996,"{'code': '7378c5c2c1736900d4c67ea338e20dc4dca81abd', 'message': 'Fix Maps.newHashMapWithExpectedSize for JDK8.\n\nTwo changes to HashMap in JDK8 have affected this test:\n- First, the table field is set lazily, so it is null until you add\nelements to the Map.\n- Second, the resize() calculations have changed in JDK8, so we adjust\nthe predicted size accordingly.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=72650895\n'}"
2997,"{'code': 'c20d7397dd89acc5e27e33bf5aff0ca0f316d587', 'message': 'Open source Hashing.crc32c().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=72569582\n'}"
2998,"{'code': '166bff55633bf814bc6d7827f93c8578c4091d48', 'message': ""Finish open-sourcing tests for Monitor.\n\nA previous CL open-sourced MonitorTestCase, but this class is abstract\nand its two subclasses also need open-sourcing!\n\nOur release processes didn't notice that we had tests that were never\nrun, but original author and Xoogler Justin noticed!\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=72519095\n""}"
2999,"{'code': '492cb0404d0b1017a1f1bc84182aaed099d59107', 'message': 'Update Truth location from org.truth0 to com.google.common.truth.\n(internal CL 72431224)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=72437171\n'}"
3000,"{'code': '8cc7ba1a9e41b3dd21bea4d5bf30a5cebc0f18c2', 'message': ""Migrate usages of Truth's Subject.is(Object) to isEqualTo(Object). The former is being removed.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=72319735\n""}"
3001,"{'code': 'f031a751150e474f9f55bc6b23eba7cc9a31dccf', 'message': 'Fix generic types in BloomFilter public API.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=72265659\n'}"
3002,"{'code': 'd77a109189f137c5b1403656f16d05e9266c9928', 'message': 'Migrate guava to directExecutor now that it will be in the next release.\n\nMostly trivial, the only possibly interesting one was in LocalCache.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=71753284\n'}"
3003,"{'code': '495f60836c95faa28955a1183a92b0ecd3b50365', 'message': 'Open source directExecutor and newDirectExecutorService, deprecate sameThreadExecutor\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=71699710\n'}"
3004,"{'code': '875f8ee6168b5822169f47273fb700271e43c744', 'message': 'Fix CollectionFeature.ALLOWS_NULL_QUERIES to MapFeature.ALLOWS_NULL_KEY_QUERIES.\n\nFrom leventov.ru: https://code.google.com/p/guava-libraries/issues/detail?id=1649#c10\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=71683488\n'}"
3005,"{'code': 'eb2675f808de4e564b93e09208670c852460ae71', 'message': 'Allow overriding of entrySet() and values() derived suites. This is similar to the existing support for keySet().\n\nFrom leventov.ru: https://code.google.com/p/guava-libraries/issues/detail?id=1801\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=71670585\n'}"
3006,"{'code': '04b2c7afbe586ca8178ac8a17f4be0bb3a6673c9', 'message': 'Make the timing assertions more forgiving.\n\nOriginally I just changed it to be within 50ms of 203ms and that was still too\ntight (flaked at least 0.001%) so I abandoned that and just asserted that we have a timing for service\nb.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=71662833\n'}"
3007,"{'code': '26cc1dad451e5c3075a107247e116f25876e8318', 'message': 'Add failure causes as supressed exceptions for each failed service in the exception thrown by\nawaitHealthy.\n\nTechnically these supressed exceptions are already logged, but putting the\nexceptions in the exception that is actually thrown is slightly more useful\nsince it will get picked up properly by some tools which expect to\ninterrogate causes.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=71661495\n'}"
3008,"{'code': 'a757aba0992b7b0450c90715f9c44750f21fa956', 'message': 'Denigrate Lists.newLinkedList() following examples set for newArrayList.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=71382856\n'}"
3009,"{'code': 'd39130651d8a90f5ebe066de7f0b2311806e5152', 'message': 'Add decrement function to InetAddresses\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=71368911\n'}"
3010,"{'code': '150713cb8346a20c89c6bb1a23176942ee7beafc', 'message': 'Fix timing race in ServiceManagerTest.testServiceStartupTimes and add another\ntest for the actual behavior.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=71364623\n'}"
3011,"{'code': '83c473ce186fb647cb5a46a4a2ea0454c37d6ee6', 'message': 'Inline some test logic to support some torturous internal build cases.\n\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=71364170\n'}"
3012,"{'code': '91cdb2b7ed631bd3cb4e93783b087d52ab8ce82c', 'message': 'Update to new Truth package.\nUse assertThat() instead of ASSERT.that()\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=71286559\n'}"
3013,"{'code': 'db57e5ee43bc3d8eb16091e28aaa060e68bf9c93', 'message': ""Upgrade truth's gwt library to a more recent snapshot and upgrade OptionalTest to verify.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=71278153\n""}"
3014,"{'code': '855eb994b782e3a901d29e451c6824e7b14bac42', 'message': 'Update the public suffix list.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=71219810\n'}"
3015,"{'code': '0f28b41318d3adcd702fcb1fca88fa11b7146a42', 'message': 'Remove specification of behavior when the number of arguments does not match the number of ""%s"" in the format string from Preconditions javadoc.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=71201390\n'}"
3016,"{'code': '10695e272674ce32fe6a6486c2904a65ef3db4b1', 'message': 'Rename SameThreadExecutorService to DirectExecutorService.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=71178008\n'}"
3017,"{'code': '00512e5a16832c9ea983ae0894fc9f47025291d5', 'message': 'Fix errors in @GuardedBy annotations.\n\n@GuardedBy(""Segment.this"") refers to an enclosing class named \'Segment\';\n@GuardedBy(""this"") refers to the current class.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=70991665\n'}"
3018,"{'code': 'db59832ed7f0e81c9e9184242ae50c3eac4ed957', 'message': ""Fixed a java 8 compatibility issue in ForwardingWrapperTest. Can't use isDefault() because this code needs to compile under Java 7\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=70779175\n""}"
3019,"{'code': '7de7f6aef5fb14cc3f2ce7322e47f792523ecbad', 'message': 'Add @Beta to methods we just open sourced in FluentIterable.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=70732653\n'}"
3020,"{'code': 'b2c6fb17ab4fbac8cd4014fe68799166f015a2c3', 'message': ""Fix: NullPointerException in getAllPresent().\n\nCurrently when some of the keys aren't cached, getIfPresent() returns null and ImmutableMap throws an exception as it doesn't allow neither null keys nor null values.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=70704051\n""}"
3021,"{'code': '5ed9f04a7613fb9501ea7e1a3952429c0daf74d0', 'message': 'Upgrade Truth to 0.22\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=70679145\n'}"
3022,"{'code': '0f91c0fe460a9a753d7040a5691c38cee31dad92', 'message': 'Open-source tests for Monitor (which is already open-sourced as part\nof guava) by removing @GoogleInternal, removing the dependence on\nTearDownTestCase, and also open-sourcing the helper class TestThread.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=70653606\n'}"
3023,"{'code': '2c785e44b9cf071b86d5196ee0a41a494d5946ed', 'message': 'Remove javax.inject from OSGi package imports and from dependencyManagement in guava-parent.\n\nGuava issue: https://code.google.com/p/guava-libraries/issues/detail?id=1798\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=70642363\n'}"
3024,"{'code': '5699d3fddf5bb59fb86a9bc49527fec0fc0f9422', 'message': 'Expand contract for Futures.makeChecked().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=70433012\n'}"
3025,"{'code': 'f38d9efdb0ea1f41b800c471cf5d8d4350844f07', 'message': 'Reenable EnumMap tests, which work as of JDK7: http://bugs.java.com/view_bug.do?bug_id=6312706\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=70423146\n'}"
3026,"{'code': 'bb404bd1cace448d992fb661f12691eaf0e0e6b5', 'message': 'Release FluentIterable methods for Guava 18 and remove @Beta from toSortedList.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=70420650\n'}"
3027,"{'code': '20bb6c3c898185ca87294a7e5405415b0e337543', 'message': 'Suppress ConcurrentHashMap.entrySet().add() tests, which fail now that JDK8 permits those calls.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=70418657\n'}"
3028,"{'code': 'e71db9539b962ab50305b481698c372ad218b643', 'message': 'Add x-apple-aspen-config mediatype for Apple .mobileconfig file serving.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=70333950\n'}"
3029,"{'code': 'e4c9e35f4fa98b9b704b97429589f02b94ea0ac3', 'message': 'Benchmark should build in JDK 6.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=70264278\n'}"
3030,"{'code': '5b8c0498f4e37f5c3b5d96b981bd049a8e754b24', 'message': 'Add ""unless noted otherwise"" to the README section about the serialized forms of objects.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=70263802\n'}"
3031,"{'code': '425fb8cd77631b0f83f4e1d0a84de178d5920960', 'message': 'Update the Guava README.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=70258669\n'}"
3032,"{'code': '39af3cd42607507b7948fd1a6aab067a2ded0249', 'message': ""Crude hack to make ForwardingMapTest pass in JDK8.\n\nThe proxy idea is probably fine, but I'm using very suspect logic to\nmake it work.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=70251894\n""}"
3033,"{'code': '24b497e94f138792ccba0a284dada2c49f12296a', 'message': 'Prevent bursty RateLimiters from getting stuck at an infinite rate if they spent any time with one.\nhttps://code.google.com/p/guava-libraries/issues/detail?id=1791\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=70235429\n'}"
3034,"{'code': '4232450e7bb7c46c08868f699323db3e787507c8', 'message': 'Use @Nullable on public *methods* consistently for Guava classes of common.base\n(plus StringUtil, given how erratic its null-friendliness is). Of course,\nnothing is *proving* that these are correct or complete (and probably nothing\nshort of moving to full JSR308ness can?).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=70026461\n'}"
3035,"{'code': '2929b111d677c539cb03a4f22b95cbc8944ce3fa', 'message': 'Update the suffix patterns.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=70001122\n'}"
3036,"{'code': '5680a472a27a1974f90cd20024879539b52ae300', 'message': 'Call size() once.\n\nSee https://code.google.com/p/guava-libraries/issues/detail?id=1790\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=69946558\n'}"
3037,"{'code': 'ac99efc013c258bfedfb1b5a49fcbd626163f66d', 'message': 'Make doHash() protected in Equals Equivalence.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=69899412\n'}"
3038,"{'code': 'a4c2141a9d293cb1227f8c72aa31fed522878886', 'message': 'More strictly restrict when fields are added to the set of relevant fields, only supporting non-synthetic String fields.\n\nRollback of a rollback, reverting changelist 69845543\n\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=69877432\n'}"
3039,"{'code': '1c285fc8d289c43b46aa55e7f90ec0359be5b69a', 'message': 'Remove methods scheduled for removal in Guava 18.0.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=69856875\n'}"
3040,"{'code': '5ffb527b53a698f39224c0a5511556dba63d441f', 'message': 'Automated g4 rollback of changelist 69842250.\n\n*** Reason for rollback ***\n\nBreaks tests\n\n*** Original change description ***\n\nMore strictly restrict when fields are added to the set of relevant fields, only supporting non-synthetic String fields.\n\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=69845543\n'}"
3041,"{'code': 'e66a92029726b00a095125e50c4b24ca4afb25f5', 'message': 'More strictly restrict when fields are added to the set of relevant fields, only supporting non-synthetic String fields.\n\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=69842250\n'}"
3042,"{'code': '2493492f5bfb3e95edb48cc44dae1bd79bcc5254', 'message': 'Move implementations from Objects methods into MoreObjects.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=69783878\n'}"
3043,"{'code': '7063d584345e6a84355da277f9832ad8195a67ac', 'message': 'Add scheduled deletion date of June 2016 to deprecated methods in Objects.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=69770246\n'}"
3044,"{'code': 'a31a6efd80b13cf96b2decafd16b96b662a71933', 'message': 'Replace usages of deprecated Objects.toStringHelper() with\nMoreObjects.toStringHelper().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=69572761\n'}"
3045,"{'code': '62f45b187bbc25d87d4b24ae7c225a905c2d6d51', 'message': 'Use MoreObjects.firstNonNull instead of Objects.firstNonNull.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=69552363\n'}"
3046,"{'code': '74d2b4b6a3e37050abbf8886b10db794f722bd22', 'message': 'Make Converter.andThen() final.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=69490364\n'}"
3047,"{'code': '8988ec0278a4ffe0e1e5b9979e98ccbf0dc8faa3', 'message': 'Guava issue 1768: FilteredEntryNavigableMap should short-circuit isEmpty() queries.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=69479092\n'}"
3048,"{'code': '6cec4d23f05c6482649ce364fe792af10db4ed46', 'message': 'In HashCode#equals implementation, avoid creating new byte arrays when it can be avoided:\n- first, check that the 2 hash codes have the same number of bits\n- if the number of bits is 4 or 8, compare the results of #asInt() or #asLong()\n- otherwise, use HashCode#getBytesInternal() instead of HashCode#asBytes()\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=69395204\n'}"
3049,"{'code': 'f1e5de9761dca6f12714bd96deef2c9a634b06d3', 'message': 'Disable incorrect @GuardedBy annotations.\n\nThe @GuardedBy annotations in this CL did not follow the JCIP semantics: either\nthey referred to locks that did not exist, or they were being used for general\ndocumentation.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=69311266\n'}"
3050,"{'code': '39534cb20b1ae63e5a516ceacd9ba71fddeaa8c5', 'message': 'Open source base.MoreObjects and add appropriate @since tags.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=69310042\n'}"
3051,"{'code': '8ace44c43ce4074e1d4fb91d1df0b1e3d9aac64a', 'message': 'Update to Truth 0.20 to match the internal version and to eliminate non-fatal compile errors. (AbstractArraySubject used Pattern and Matcher from java.util.regex.)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=69308900\n'}"
3052,"{'code': '9a65cd8d3c88634a2b21235c7d9c89680384ed56', 'message': 'Document that the allAsList Future fails immediately when an input fails.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=69300816\n'}"
3053,"{'code': 'ce4db5dc3797f9a4718e696602f97bf7d593e3cd', 'message': 'Fix BloomFilter.optimalNumOfHashFunctions calculation.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=69297820\n'}"
3054,"{'code': '16c5320c6d809c9ca03e839d1d795d6f46a8f09e', 'message': 'Avoid using a constructor that is available only in JDK6+.\nThis lets the mainline code work for the Guava backport.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=69296675\n'}"
3055,"{'code': '3d41e3afdd6406c6a178d5c67625ef09ca5fee81', 'message': ""Update tests broken by CL 69197766's update to the public-suffix list.\nThose tests used nic.uk as an example of an exclusion, and it no longer is one.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=69295926\n""}"
3056,"{'code': 'd15c02db4cf7c2c48bfd8b93f6cbc5340fcf3039', 'message': 'Update PSL to pick up *.uk changes: .uk TLD is now available for public\nregistration http://www.nominet.org.uk/uk-domain-names/introducing-uk\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=69197766\n'}"
3057,"{'code': '62d17005a48e9b1044f1ed2d5de8905426d75299', 'message': 'Release BloomFilter#writeTo and #readFrom, which provide custom serialization that is more compact than standard Java serialization.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=69172238\n'}"
3058,"{'code': 'e74918e47be511c7da2035b968d6c4967fbd1f05', 'message': 'Graduate Queues.synchronized{Que,Deq}ue from @Beta.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=69169032\n'}"
3059,"{'code': '0bcaddf02a2df28e5a66aad4038355c7c909e552', 'message': 'Update the Public Suffix files.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=69140019\n'}"
3060,"{'code': 'cd997b58a6e34cb0222339bc11cc99451b0a8632', 'message': 'Disable incorrect @GuardedBy annotations.\n\nThe @GuardedBy annotations in this CL did not follow the JCIP semantics: either\nthey referred to locks that did not exist, or they were being used for general\ndocumentation.\n\nThe annotations are being replaced with comments in preparation for enabling\nstatic analysis of @GuardedBy annotations.\n\nTested:\nTAP presubmits for global presubmit queue\n[]Some tests failed; test failures are believed to be unrelated to this CL\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=69093384\n'}"
3061,"{'code': '99437ee96716f7dc38e671370a7da53d03276d1a', 'message': 'Withdraw application/x-protobuf from Guava, and document it.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=69015118\n'}"
3062,"{'code': '17e878cb1baf997bbd1327577702f568c3f6f4bb', 'message': 'Update @since to reflect the change in parameter types.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=69014933\n'}"
3063,"{'code': '3eae0e582a600d4b3e48d2542a91d37030d9c2a6', 'message': 'Replace meaningful Javadoc with GWT-emulation boilerplate.\n\nI have two main reasons for this:\n1. Meaningful Javadoc is sure to get out of sync between the two versions.\n2. Boilerplate helps to distinguish the two in searches, e.g., http://jsearch.[]/search?jq=immutablecollection\n\nThere\'s also the implicit third reason ""We do it this way in the other classes."" If we instead want to include real Javadoc, it would be nice to do so consistently.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=69014555\n'}"
3064,"{'code': 'b0194a8b0ac5437df8da9404b6232a1811936b7e', 'message': 'Strip isPrime benchmarks from Guava, since isPrime itself is @GoogleInternal.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=69012929\n'}"
3065,"{'code': '4ce83d12b9061510f6993fbff800f91a97457d0c', 'message': 'Shuffling from internal-only change.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=69004612\n'}"
3066,"{'code': '08242ab96a7b866aa57e409a4ce0f59b6229c6ac', 'message': 'Add application/x-protobuf.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=68866844\n'}"
3067,"{'code': '1a8ec5098d5dc075c88e4b9ae4af846905c3ee23', 'message': 'Add a benchmark for [Google-internal -- this CL will be rolled back in Guava] isPrime on positive inputs.  The input distribution is logarithmic.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=68733770\n'}"
3068,"{'code': '78ca8b54b85878a77cb20026ab39c857e74f1275', 'message': 'Make ImmutableCollection.Builder public in the GWT emulation.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=68729337\n'}"
3069,"{'code': '32d7dc732dfee93c82942e2d776adbbc02bd85ba', 'message': ""Fix EventBus to not include bridge methods when registering subscribers under Java 8. Annotations are included on bridge methods in Java 8 where they weren't before.\n\n(Guava issue 1549.)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=68654467\n""}"
3070,"{'code': '15fc460351c5943ec19d383a01700119f19fbedc', 'message': 'Shuffling from internal-only change.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=68641973\n'}"
3071,"{'code': '03234c13341be586e7cd2b5b40c6ceed2099fb42', 'message': 'Updating comments to fix statements that MoreExecutors.sameThreadExecutor is used if an Executor is not supplied, which is no longer actually the case since we switched the defaults to the internal INLINE_EXECUTOR.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=68506380\n'}"
3072,"{'code': '740d97c32ff8edd8d840f898e7660ac8a99b26cc', 'message': 'Add default instances of ByteSource, ByteSink, CharSource and CharSink to ArbitraryInstances. (Guava issue 1770.)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=68417594\n'}"
3073,"{'code': '9218b25f220ebee470f6361f6f25b252fa3f4c28', 'message': 'Shuffling from internal-only change.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=68416232\n'}"
3074,"{'code': '979f434b706282947614ec0ef1abe067e4396a6a', 'message': 'Add ""et"" as an effective TLD.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=68415393\n'}"
3075,"{'code': '050aca81c004448a4a86c2541466828e83d12ffb', 'message': 'Widen Multisets.removeOccurrences to accept Iterables.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=68409485\n'}"
3076,"{'code': '38fd9b0f676de144217176dea045ab2e2221e4e8', 'message': 'Increase the symmetry of the Javadoc changes to Multimap.hashCode().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=68397956\n'}"
3077,"{'code': '579d87ca2fe1bbbaffe9ce70c7ef8044bfaac7fa', 'message': 'java/com/google/common: CL generated with data from dead-code analysis\nusing //devtools/scythe:remove_dead_code\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=68103937\n'}"
3078,"{'code': '50d4f3cebad5187b2f812f116ee207627cd45d3f', 'message': 'Expand Javadoc of Multimap to clarify unusual hashCode implementations, as per Guava issue 1722.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=68093584\n'}"
3079,"{'code': 'adcd9984bb9a93db4ab94ceba0583520745e2b01', 'message': 'Fix overflow issues in LocalCache, as per Guava issue 1761\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=68007129\n'}"
3080,"{'code': '75bcf0a64563396d55e997b017c5640e8a1ff6e5', 'message': 'Shuffling from internal change.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=67842017\n'}"
3081,"{'code': 'c8bfc0ae63bdcaea19adf0d02b435365e2bebe2e', 'message': ""Test that it's possible to attach a callback to a ListenableFuture<?>.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=67713851\n""}"
3082,"{'code': 'be016c7ff468c6bdb347f8d4104c50846b18a821', 'message': 'Release FutureCallbackTest to Guava.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=67707789\n'}"
3083,"{'code': '42e607b8d299d4ee79d4952becd964fb2238aebf', 'message': 'Update Truth version to 0.18.\n\nThis version includes primitive type arrays, improved String support, renaming of the object under test, as well as custom error messages.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=67639126\n'}"
3084,"{'code': 'd2269a6df6fac904849017795360abe8b6d11dad', 'message': ""Add OSGi Bundle-DocURL to Guava MANIFEST file.\n\nDespite the name, it doesn't seem like it should point to the Javadoc (based on what http://wiki.osgi.org/wiki/Bundle-DocURL says), so I just pointed it to the Guava project page.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=67036360\n""}"
3085,"{'code': '351d53fd2e07cfe5c6d008a8e45403cb4e2b0a13', 'message': 'Split RateLimiter implementations off into separate files.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=67034085\n'}"
3086,"{'code': '477abc4b8e5f256592f79f00a67d7579cd7c0cbe', 'message': 'Extend mocking tests to cover EasyMock.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=66920336\n'}"
3087,"{'code': '04846be2de2d3841f2ea4f756588af8b1470635f', 'message': 'Fix Guava issue 1751\n\nhttp://code.google.com/p/guava-libraries/issues/detail?id=1751\n\nThe bug is that this test depends on listener ordering. I believe that this race was technically introduced by [], since our strategy for invoking listener callbacks was sufficiently serialized prior to that cl, such that this was safe even though it violated the spec.\n\nAs it is, it takes some seriously bad luck to observe the race (thanks cpovirk!)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=66902563\n'}"
3088,"{'code': '7811f97b5dd9b75762f6868a8b0098d826139332', 'message': 'Add Google-internal ManualRateLimiter and (as part of that work) public Uninterruptibles.tryAcquireUninterruptibly.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=66895167\n'}"
3089,"{'code': 'cb6c9ba6a85a7d759eb4fb6efe279dd498385d55', 'message': 'Reduce differences between ""when is the next permit available?"" and ""request a permit"":\n- Standardize the method name format.\n- Standardize on returning the next available time (rather than the wait time that one of the two currently returns).\n- Standardize on allowing the return value to indicate a time in the past (rather than requiring it to be a present/future time as one of the two currently does).\n\nAlso, improve tests and documentation around all this, particularly the ""in the past"" part.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=66891133\n'}"
3090,"{'code': '3ba3d53f4d16117e74d1aed5786887dd8dab4ce6', 'message': 'Revert base.Objects -> j.u.Objects deprecations until we do the bulk of the migrations ourselves (blocked: see bug).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=66815987\n'}"
3091,"{'code': 'ba5a4dd85f77a334d85942076893229846d99258', 'message': 'The example is below, not above.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=66659338\n'}"
3092,"{'code': '3afc6e45c39504ece02d14f4a462f65acfa98652', 'message': 'Add documentation to all versions of Lists.newArrayList methods to discourage their usage; all the other collection factory methods to follow (Sets.newHashSet, etc.). Tweak verbiage of other obsoleted-by-Java7 methods to match.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=66644002\n'}"
3093,"{'code': '9c681417c3681d4a09cc72298f5c12eecd1e7be1', 'message': 'Remove buggy future workarounds from ChainingListenableFuture (a.k.a. the future returned by Futures.transform)\n\nThis should only affect users who are passing buggy future implementations to Futures.transform, the most likely culprit is com.google.net.rpc.util.{RpcListenableFuture,RpcCheckedFuture}.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=66523545\n'}"
3094,"{'code': '4c681e15832bdfd968c1baee91f46e0b54e230b8', 'message': 'Shuffling from internal-only change.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=66426194\n'}"
3095,"{'code': '2754fe0f5f487dd3eff71d88c06e95835015a621', 'message': 'Add David E. Wheeler to Guava AUTHORS\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=66319030\n'}"
3096,"{'code': '91fe49bfefa687e8ee236b3a0602b2cb732f0b6c', 'message': 'Give date-based deletions a stay of execution (24 months, not 18).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=66299916\n'}"
3097,"{'code': 'f90e759efa0f068b43085fa3ce763b59053480a3', 'message': 'Deprecate Iterators.emptyIterator() in Guava, because it always has a decent replacement even when not on Java 7.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=66299891\n'}"
3098,"{'code': '6e89e79abd493481268c4868b5a7f76a451da8aa', 'message': 'Add more tests for known BF false positives when using UTF8.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=66295364\n'}"
3099,"{'code': '1103846afa237b6c9432259c10daa95033ec8578', 'message': ""Disable PackageSanityTests null-pointer testing for LongAdder, as we don't want to patch Striped64 to include @Nullable annotations.\nAlso, remove that annotation.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=66293925\n""}"
3100,"{'code': 'aca38f2aee4e9769495a728e417f7d01dd73b217', 'message': 'Sync with latest upstream jsr166e changes.\nFixes ""classloader leak"".\nhttps://code.google.com/p/guava-libraries/issues/detail?id=1553\nhttp://comments.gmane.org/gmane.comp.java.jsr.166-concurrency/12659\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=66247344\n'}"
3101,"{'code': '6b71edb939effd32b26809663a0fc989fdf9d5d5', 'message': 'Use a MatchResult created by a successful match, as required by Harmony (used on Android):\nhttp://goo.gl/5VQFmC\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=66096434\n'}"
3102,"{'code': '197e6e88f63f5b31725d87c929735b5863cfa413', 'message': 'Beef up documentation and validation of parameters.\nAlso, fully hide/remove some unusable methods, and fix up a return type.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=65883612\n'}"
3103,"{'code': '987f4dbffa66a90dfe83bade31d993cb3127c57c', 'message': ""Test mocking of RateLimiter to avoid regressions like that of CL 65383672.\nIdeally we will make all non-final methods mockable, but for now, I'll settle for not breaking any new ones.\n(The real fix may be a bigger project, e.g., converting RateLimiter to an interface. I don't know yet.)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=65821400\n""}"
3104,"{'code': 'cdcc5397439b2e7441180a4712d7163afa451a6d', 'message': 'Migrate calls to Annotation.getClass() to Annotation.annotationType().\n\nAnnotation.getClass() returns a proxy class generated at runtime that is not particularly useful -- it returns false for isAnnotation(), for example -- where annotationType() actually returns the type associated with the annotation (e.g. MyAnnotation.class for @MyAnnotation).\n\nTested:\nTAP --sample for global presubmit queue\n[]\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=65806476\n'}"
3105,"{'code': '14d8ae4015e5e686f45d428c7e1879e689f818ff', 'message': ""Make Ints.tryParse available under GWT.\n\nIt already works, thanks to careful avoidance of overflow in checks against |cap| and MIN_VALUE.\n(Contrast the previous (Android) version, which may or may not have worked under GWT because GWT integers don't wrap when they overflow. (I think that our workaround for this was successful, but it's hard to be confident.))\n\nAlso, enable the tests for *Longs*.tryParse under GWT.\n(I also added a few more tests to both versions just to be paranoid.)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=65806393\n""}"
3106,"{'code': 'bf0c83465f77ae6cbea51c45969572b1dbbf3ecf', 'message': 'Shuffling from internal-only change.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=65733547\n'}"
3107,"{'code': 'd2abdda543647ddeccb42cbbe6fee9142737585c', 'message': ""Remove the callAllGets 'feature' of CombinedFuture.\n\nThis should only be necessary for buggy future implementation\n\nThis is a rollfoward.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=65725521\n""}"
3108,"{'code': 'fc2081c91447a8f74aaeca6ebc1e0a96f16da9b9', 'message': ""Automated g4 rollback of changelist 65602026.\n\n*** Reason for rollback ***\n\nThis commit caused several test failures, so rollback until a forward-fix can be integrated.\n\n*** Original change description ***\n\nRemove the callAllGets 'feature' of CombinedFuture.\n\nThis should only be necessary for buggy future implementation.\n***\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=65624847\n""}"
3109,"{'code': '3446741f88956b40e904c766242c2075b1ea3b7f', 'message': ""Reimplement Throttle as a passthrough to its reimplementation under the new RateLimiter API.\nI've attempted to leave the behavior untouched (aside from fixing an unsynchronized access to maxTime).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=65604449\n""}"
3110,"{'code': '3ee51a718ae9905c4643029ca3728081fb99b6e6', 'message': ""Remove the callAllGets 'feature' of CombinedFuture.\n\nThis should only be necessary for buggy future implementation.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=65602026\n""}"
3111,"{'code': 'a2abf8960ea9e0936eb024ff171f4cd58d871220', 'message': ""Change the implementation of Futures.combine to be faster!\n\nAlso, replace all uses of sameThreadExecutor with a cheaper implementation. (IMHO, this should be _the_ implementation of sameThreadExecutor with a new sameThreadExecutorService for those who want it, but since that wouldn't be backwards compatible.... sadness)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=65564280\n""}"
3112,"{'code': 'a2bd644d2f49b2c7a24d8916627ab8d0aba975c5', 'message': 'Handle overflow and negative timeouts:\nhttp://code.google.com/p/guava-libraries/issues/detail?id=1622\n\nSome discussion of each:\n- Overflow is of course impossible to prevent entirely with fixed-size number types, but we\'re less likely to see overflow with the new ""available - timeout"" than with the old ""now + timeout\': The latter can overflow almost immediately if given MAX_VALUE timeout. (Compare the advice at <http://docs.oracle.com/javase/7/docs/api/java/lang/System.html#nanoTime%28%29>.)\n- Negative timeouts are supported by java.util.concurrent APIs. For similar behavior in RateLimiter, we need to be sure that a request to ""wait up to -1 seconds"" is treated identically to ""wait up to 0 seconds"" -- specifically, that it works right if the permit has become available within the last second. (Another potential problem, albeit one much less likely, is overflow when subtracting an input of MIN_VALUE.)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=65540333\n'}"
3113,"{'code': 'a45226a2169b0da4d1f28f5b89351f99798dbddc', 'message': ""Reimplement legacy RateLimiter as a passthrough to its reimplementation under the new RateLimiter API.\nI've mostly attempted to leave the behavior untouched, but there are a few changes:\n- Fixed a bug that would arise with a negative nanoTime() (probably unlikely, but it could happen).\n- Removed logging.\n- Stop swallowing interrupts.\n\n(Retry of CL 65383672, which was rolled back in CL 65402625 because of breakages in mocks, fixed by lazily initializing the mutex field.)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=65446945\n""}"
3114,"{'code': '6543d89f2a8b6d3230eae8eb4a1a3760f3ffaceb', 'message': 'Propagate RejectedExecutionException to transformed/combined futures.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=65412634\n'}"
3115,"{'code': '3d8c430e2c047aa400512e4eaee8d3dd25a0ad09', 'message': ""Rollback of changelist 65383672, which broke a test that mocks RateLimiter.\n\n*** Original change description ***\n\nReimplement legacy RateLimiter as a passthrough to its reimplementation under the new RateLimiter API.\nI've mostly attempted to leave the behavior untouched, but there are a few changes:\n- Fixed a bug that would arise with a negative nanoTime() (probably unlikely, but it could happen).\n- Removed logging.\n- Stop swallowing interrupts.\n\n***\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=65402625\n""}"
3116,"{'code': '4e0e95864d462825eef27a864c8db181b0430276', 'message': 'When \\FFFE, \\FFFF, or ASCII control characters are found in the input, replace them with \\FFFD.\nThe behavior prior to this CL is to include them in the output (for \\FFFE and \\FFFF) or to strip them (for ASCII control characters).\nThe characters are not valid in XML: http://www.w3.org/TR/2008/REC-xml-20081126/#charsets\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=65400047\n'}"
3117,"{'code': 'e7f1daf9ef218a4c7fefc6d356c2119a8f04c629', 'message': ""Reimplement legacy RateLimiter as a passthrough to its reimplementation under the new RateLimiter API.\nI've mostly attempted to leave the behavior untouched, but there are a few changes:\n- Fixed a bug that would arise with a negative nanoTime() (probably unlikely, but it could happen).\n- Removed logging.\n- Stop swallowing interrupts.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=65383672\n""}"
3118,"{'code': 'd0dd545e2d27ed374bbc33d14d76abbd283832a2', 'message': ""Remove Platform.classGetSimpleName() in favor of calling class.getSimpleName() directly.\nThe method isn't used under GWT, so it doesn't make sense for it to be emulated in Platform.\n(Coincindentally, it turns out that getSimpleName() is available under GWT nowadays, anyway.)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=65377305\n""}"
3119,"{'code': '9c460b53dd4c17174871bc9629487b743b2fecc6', 'message': 'Tweaks necessary to make common.collect build in Java 8.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=65201740\n'}"
3120,"{'code': 'c4ccf9a89c83e17b11aee0f352a348e4a3f6ddbd', 'message': 'Fix test that will fail in an upcoming patch to GWT.\n\nThe semantics for String.toUpperCase() are that of the JavaScript browser implementation and might not conform to their JRE specification.\n\nIn FF ""pa\\u00dfword"".toUpperCase() is not ""PASSWORD""; however the test was succeeding in GWT due to a pass of static evaluation that was done in the GWT compiler. The GWT compiler is removing all optimizations from -draftCompile and in that scenario the test fails.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=65192347\n'}"
3121,"{'code': '18842509caded0e5314dc34caea3dd684f871c8d', 'message': ""Change @since on some methods in reflect.Parameter to 18.0 since the changes didn't make it in to 17.0.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=65147685\n""}"
3122,"{'code': '2b3b26449f7c641bc81accc03f9a7193fde9c623', 'message': 'Add notes for external Guava users re. JDK 7 APIs.\nDeprecate obsoleted Objects APIs.\nReplace <b>Note</b>: with <b>Note:</b> in Guava.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=65135062\n'}"
3123,"{'code': '07f99e57570b6e81d89c86f4f36fb9a6784d34b3', 'message': 'Push current RateLimiter implementation down into a subclass.\nThis will make it easier to provide alternative RateLimiter implementations to replace our legacy rate-limiting APIs.\nAlso, random cleanup:\n- Static import stuff.\n- Use Stopwatch instead of reimplementing it.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=65119596\n'}"
3124,"{'code': 'a3145339d95331cf948a9da2030b65762127f28a', 'message': 'Use ImmutableSet.of().iterator() instead of Iterators.emptyIterator().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=65059838\n'}"
3125,"{'code': '9e4248b2c0c5fd3a1dc3235a6af0d93278eff6fd', 'message': 'Use ImmutableSet.of().iterator() instead of Iterators.emptyIterator().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=65046437\n'}"
3126,"{'code': '01572c00d3f0ced8f7ad899182ee74b1a397a313', 'message': 'Replace usages of deprecated IterableSubject.iteratesOverSequence(...) with iteratesAs(...)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=65045496\n'}"
3127,"{'code': '07d24eb4decacd7d9f03a0b7e4d3a0c337aeb201', 'message': 'Use Double.compare() instead of Doubles.compare().\nUse Float.compare() instead of Floats.compare().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=64999716\n'}"
3128,"{'code': 'aa42c2b167a0643a48f61aa9b919887ade288bb2', 'message': 'Remove workaround that was required by the <T extends Object & Iterable<?> & Iterator<?>> method.\nThat method was removed.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=64996669\n'}"
3129,"{'code': 'bc9c0fb23c88fb4a2ec626929887baa001c9bcf7', 'message': 'Use ImmutableSet.of().iterator() instead of Iterators.emptyIterator().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=64993582\n'}"
3130,"{'code': 'd1a0cf330d77f5265bc1115cc320724323c040e0', 'message': 'Allow disabling of guava gwt tests from command line.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=64929463\n'}"
3131,"{'code': '555e872a0b8341d95c62f9d8a21777de5d1f67a8', 'message': 'Roll-forward:\n\n*** Original change description ***\n\nMake common.reflect build and pass tests against both Java 7 and Java 8.\n\nIn particular, Java 7 had both the TypeVariable and AnnotatedElement interfaces, which were unrelated.  In Java 8, TypeVariable extends AnnotatedElement, and gained a method getAnnotatedBounds(), returning an AnnotatedType[], where AnnotatedType was an interface introduced in Java 8...\n\n***\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=64921461\n'}"
3132,"{'code': '0a291554ff41e68d0437321c726f43da09f8e3bf', 'message': 'Update Guava versions to 18.0-SNAPSHOT.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=64904324\n'}"
3133,"{'code': '0434c5199c83c3f43b8b6a86c62e121d518fe7d0', 'message': 'Fix busted code tag in @return for MoreExecutors.shutdownAndAwaitTermination\nUpdated javadoc in response to https://code.google.com/p/guava-libraries/issues/detail?id=1725\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=64893877\n'}"
3134,"{'code': '7fd6f71bf73857b40e07127c76ce8dcd74e78148', 'message': 'Add @since 13.0 to Ordering.allEqual().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=64777126\n'}"
3135,"{'code': 'f510d9bc51715c4d583e0b152e5d0265c44c982f', 'message': 'Remove entrySet() redundancy between AbstractMultiset and ConcurrentHashMultiset.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=64720096\n'}"
3136,"{'code': 'a736c9c9888c00f388e371b33266e587769f631f', 'message': 'Shuffling from internal-only change.\nTo be used for a temporary migration aid only!\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=64716281\n'}"
3137,"{'code': '0dc1684fd14dcda25be4dc5ee9fcc1a680c3fb22', 'message': 'Rollback of changelist 64659484 (""Make common.reflect build and pass tests against both Java 7 and Java 8"").\n\nOur internal build changes seem to be causing problems.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=64665073\n'}"
3138,"{'code': '6c2d78402229cc267bddb26f174078d1353337d0', 'message': ""- For a Collection<T> parameter that we don't know how to generate, fail the test. Previously, we would sometimes generate a Collection<String>, since the value is usually used only for equals() and hashCode() testing. (All this also applies to most other JDK and Guava collection types.) http://code.google.com/p/guava-libraries/issues/detail?id=1665\n- For Optional parameters, generate Optional.absent() before generating any Optional.of(...) instances.\n- Deprecate setSampleInstances in favor of setDistinctValues.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=64661899\n""}"
3139,"{'code': '2ec1b12a1af770e39d7a837858097a6470c4516a', 'message': 'Make common.reflect build and pass tests against both Java 7 and Java 8.\n\nIn particular, Java 7 had both the TypeVariable and AnnotatedElement interfaces, which were unrelated.  In Java 8, TypeVariable extends AnnotatedElement, and gained a method getAnnotatedBounds(), returning an AnnotatedType[], where AnnotatedType was an interface introduced in Java 8.\n\nWe now have TypeVariableImpl extend a class NotAnnotatedElement, which provides an implementation for AnnotatedElement where no annotations are present, and throw UnsupportedOperationException on TypeVariableImpl.getAnnotatedBounds().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=64659484\n'}"
3140,"{'code': '6138e53e53f25b68427c7aeec917875270b45e2e', 'message': 'Change default BloomFilter strategy to be controllable by a system property for Guava.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=64657125\n'}"
3141,"{'code': 'b32b16b814e12cd483626108c509122e3c9f5536', 'message': ""This CL is to fix EnumMultisetTest that would otherwise break with the new FreshValueGenerator that doesn't generate raw Iterable for Iterable<T>.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=64631310\n""}"
3142,"{'code': '845b0e8deee44d2da12e8aac00e7a95c4e88a9e9', 'message': ""Temporary fix to ClassSantityTester.\nWe cannot remove the fallback to Iterable.class generation yet, because doing that would break some teams' tests. They need to be fixed with extra setDistinctValues() before we remove the fallback.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=64603381\n""}"
3143,"{'code': '5d004b642817d40c6919291c20028827b4b46742', 'message': 'Shuffling from internal-only change.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=64574375\n'}"
3144,"{'code': '47fabd3be08b8703ad5a4715f0ff687d15fa9cf9', 'message': 'Shuffling from internal-only change.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=64573579\n'}"
3145,"{'code': 'eb68100cc9a30cb7cca03dbe0eebad8d5e76b5b1', 'message': 'Fix flaky ServiceManager test\n\nGuava issue 1715:\nhttp://code.google.com/p/guava-libraries/issues/detail?id=1715\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=64565848\n'}"
3146,"{'code': 'cbb55be43e7d21aa42f3c46d442a088386e66cf5', 'message': 'Generates fresh value for Range. It was an oversight not adding it in the first place.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=64481937\n'}"
3147,"{'code': '2ad3463f7715fef432bad3778af5125d9863352c', 'message': 'Migrate to setDistinctValues().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=64399927\n'}"
3148,"{'code': 'a832c682a712f53fd89789f18cd3be17df2d4c9b', 'message': 'Added setDistinctValues() to ClassSanityTester and AbstractPackageSanityTester.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=64398568\n'}"
3149,"{'code': 'a358bac42c732ef8349c8dfb5df2cfd92a2d5d98', 'message': 'Change default BF strategy for Guava to MURMUR128_MITZ_64.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=64156827\n'}"
3150,"{'code': '0ddefed78b631124bfc2ee3695ab0798b94b16c6', 'message': 'Fix minor Javadoc error in CharStreams.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=64151790\n'}"
3151,"{'code': 'ab799a93c797ae14725ec0a643001a574acf6323', 'message': 'Improve BF serialization documentation.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=64144815\n'}"
3152,"{'code': '9ed4e220859fde04f6d1f009adfb16a356aca31e', 'message': ""Rollback of changelist 63979311, which changed the default BloomFilter strategy.\n\nThe caused problems for teams that sent BloomFilters from new binaries to old binaries, as the old binaries could not read the new binaries' BloomFilters.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=64114639\n""}"
3153,"{'code': '4c6149be9d768642afecb70c0c63d9dfbb605837', 'message': 'Add koeln TLD.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=64111945\n'}"
3154,"{'code': '3216a1bb5e1a9cb57d65cfbc5ba9a604f0562a64', 'message': ""Don't allow repeated calls to hash() on a MessageDigest-based hasher.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=64080687\n""}"
3155,"{'code': 'c413ba4581a8eac5c8dfe663660c6ad8e1f682d4', 'message': ""Add tests to make sure classes don't get exported to JS by accident/mistake.\n\nThis happened once with SafeHtmlBuilder and I nearly did it again recently. We can export classes that make use of @CompileTimeConstant if we make sure we export only specific methods, but for now it's simpler to blank disallow any class with @CompileTimeConstant.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=64052070\n""}"
3156,"{'code': 'b115d6fd5934792162f6ec5b3e6dfdc5a03b19ea', 'message': 'Switch default BloomFilter strategy from the broken MURMUR128_MITZ_32 to the\nnew MURMUR128_MITZ_64.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=63979311\n'}"
3157,"{'code': '585d047130811ba07af552c3e16158640a1e6406', 'message': 'Clean up misuses of Truth where proposition values are passed into ASSERT.that() instead of the object under test.  This leads to patterns like:\n\nASSERT.that(myMap.values().isEmpty());\n\nThe above will do exactly nothing, because Truth is a fluent API and expects a value and returns an object with custom proposition methods on it, i.e.\n\nASSERT.that(myMap.values()).isEmpty(); is the appropriate fix.\n\nThis is in preparation for an upgrade to Truth which includes @CheckReturnValue on methods like .that() in order to let error-prone flag these as a compile-error.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=63974750\n'}"
3158,"{'code': 'd38a0105039a1802478f8844afc191804050cc57', 'message': ""Init combinedHash to hash1 as per 'Less Hashing, Same Performance:\nBuilding a Better Bloom Filter'\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=63973319\n""}"
3159,"{'code': '41828f6247e33a29730f9fd1cf892c3faf48d37f', 'message': 'Add a new BF strategy. The old one is subtly broken. For more information, see: https://code.google.com/p/guava-libraries/issues/detail?id=1119\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=63970075\n'}"
3160,"{'code': '353b6e69db0e6538adf6a6ecd773883207b0633c', 'message': ""Fix a typo in CacheBuilder's docs.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=63969189\n""}"
3161,"{'code': '6620388972a07f33d44497c62128ba9c88f46649', 'message': 'Add HashCode.getBytesInternal() for package-private direct access to the\nunderlying, mutable byte array (for byte-based HashCodes).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=63906429\n'}"
3162,"{'code': 'e6888aadc42b1f3181a09b5c18a55f65218d5a0d', 'message': ""Change the behavior of Service.Listener and ServiceManager.Listener such that we guarantee that listener callbacks (for a single listener) will never be called concurrently.  Previously, the only semantics we guaranteed was about the order in which callbacks were submitted to executor.execute.  This significantly strengthens those guarantees.\n\nThis is being done to resolve the flake that cpovirk@ identified here:\nhttps://sponge.[]/target?id=58fc52ba-a5f8-4619-83d3-ea0a28b9ee72&target=//javatests/com/google/common/util/concurrent:MediumTests\n\nThe flaky test could be fixed either by using a SerializingExecutor in the test\nor by changing the semantics of Service/SeriveManager.addListener to guarantee\nserial callback execution.  I've opted for the latter since this is a very rare\nand confusing race and it is unlikely that any user would actually want their\ncallbacks to execute concurrently.\n\nTo implement this I've deleted ExecutionQueue and introduced a new object\ncalled SerialListenerQueue that is essentially\nExecutionQueue+SerializingExecutor.  I've implemented it this way rather than\nby combining ExecutionQueue with SerializingExecutor since:\n1. ExecutionQueue\trelies on poorly documented features of ConcurrentLinkedQueue\n2. ExecutionQueue is itself quite complicated\n3. that would introduce an extra queue operation per callback execution\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=63836415\n""}"
3163,"{'code': 'a401007f557ab438dffe6ae5b5f36bc455884a65', 'message': 'Fix up .gwt.xml file as a part of some internal changes.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=63544353\n'}"
3164,"{'code': '8f14f12f1a6bc1c903909c9c21fb7b500c55b53f', 'message': 'Pick up a whole lot of TLD changes.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=63499305\n'}"
3165,"{'code': '6de004aebed935dfa060e76e1c2db23041ae3df5', 'message': 'Change bitCount from int to long.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=63498264\n'}"
3166,"{'code': 'af946dd3100624cf9df64a9bc61f43161e8b9b70', 'message': ""Remove redundant 'public' modifier from StatsCounter interface methods.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=63486708\n""}"
3167,"{'code': '965c296fb6fb394e9724b9056bfb95d2e1080e4d', 'message': 'Make Enums.getIfPresent ~16 times faster for 80% hit rate, ~72 times faster for 20% hit rate.\n\nSee: https://goto.google.com/benchmark:enums.getifpresent\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=63478563\n'}"
3168,"{'code': 'f3a3c4d96c54558f6c1f2fe328bf2c977c06d0bd', 'message': ""Add missing <inherits> to modules.\nThe result is that we don't have to manually include User in our compilation tests, and other users won't have to include it, either.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=63444626\n""}"
3169,"{'code': '92dd28a4fcfec1a6cb52a1d0ca6c93dba3dc5c78', 'message': 'Shuffling from internal-only change.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=63436180\n'}"
3170,"{'code': '172f9c9f6c58c6ae3652f4b76c61787127df0929', 'message': 'Make AtomicLongMap tests work under GWT.\nSee the comments added to the .gwt.xml files for the sordid details.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=63401251\n'}"
3171,"{'code': '26ad5e4e1bbf6f419ace3ac31943fe0ede56a44a', 'message': 'Add missing modules.\nThis ensures that the open-source build compiles all packages and has everything it needs to run all tests (or so I will claim until I find my *next* oversight :))\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=63359056\n'}"
3172,"{'code': 'f23c66556b7cd1eba781aa071a16111a6e39d9e5', 'message': 'Prevent our rollup modules from including any ""real"" source files from c.g.c subpackages.\nThis should make no difference unless we forget to list a module, in which case it will prevent us from seeing the module\'s .java files without its .gwt.xml.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=63357986\n'}"
3173,"{'code': '83884f9847ee0b809376fcc0705c6db75ad56878', 'message': ""Guava publicsuffix .gwt.xml fixes:\n- Use the Guava-munged .gwt.xml files rather than the Google-internal versions. (The versions are currently identical, but this will change in CL 63334981.)\n- Put the .gwt.xml files under guava-gwt instead of guava. (I'm not 100% sure whether this fixes any concrete problems or just removes the .gwt.xml files from the main guava jar, where they clearly don't belong.)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=63357956\n""}"
3174,"{'code': '70784731274a3ca222430857f68aca8254009130', 'message': 'Mark DoubleMath as @GwtCompatible, allowing these methods to be used from GWT code:\n- log2(double x)\n- factorial(int n)\n- fuzzyEquals(double a, double b, double tolerance)\n- fuzzyCompare(double a, double b, double tolerance)\nThe other methods are marked as @GwtIncompatible due to aspects of their implementations not being GWT-compatible.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=63356280\n'}"
3175,"{'code': 'fa8103a40cab574bad32779d45c38118adfed092', 'message': 'Override close() in all subclasses of FilterOutputStream to ensure they do not swallow exceptions thrown when flushing the delegate stream.\n\nhttps://code.google.com/p/guava-libraries/issues/detail?id=1651\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=63289125\n'}"
3176,"{'code': '05263c826c166215db935bb4b1ea89dd54b5685a', 'message': 'Remove inaccurate claim of GWT compatibility.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=63262539\n'}"
3177,"{'code': 'ad2474572cd3becd882fd6366a8fd16e0e9e3bda', 'message': 'Run some common.collect.testing tests under GWT.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=63261660\n'}"
3178,"{'code': '54d74f6ba8e8aeb1108a307c8e00aed3a764afb2', 'message': 'Remove GWT copy of ImmutableSortedSet.of(E[]) from Guava.\nThe non-GWT version has been gone since CL 24279246.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=63077177\n'}"
3179,"{'code': 'b0171601101a650bcfc1e53c88220f6e6a708558', 'message': 'Release Converter.from(Function, Function) for Guava 17.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=63073973\n'}"
3180,"{'code': '6652c5f1f624ae3c524123ab277df6993cb300d1', 'message': ""Fix Maven warning from duplicate Animal Sniffer reference:\n\n[WARNING] Some problems were encountered while building the effective model for com.google.guava:guava:bundle:17.0-SNAPSHOT\n[WARNING] 'build.pluginManagement.plugins.plugin.(groupId:artifactId)' must be unique but found duplicate declaration of plugin org.codehaus.mojo:animal-sniffer-maven-plugin @ com.google.guava:guava-parent:17.0-SNAPSHOT, /usr/local/google/home/cpovirk/clients/guava-white/guava-libraries/pom.xml, line 184, column 17\n[WARNING]\n[WARNING] Some problems were encountered while building the effective model for com.google.guava:guava-parent:pom:17.0-SNAPSHOT\n[WARNING] 'build.pluginManagement.plugins.plugin.(groupId:artifactId)' must be unique but found duplicate declaration of plugin org.codehaus.mojo:animal-sniffer-maven-plugin @ line 184, column 17\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=63030073\n""}"
3181,"{'code': '4be45420671b59f417961b5849230799fd425ba9', 'message': 'Adding stream based factory methods for ByteArrayDataInput/Output and tidying up to minimize actual constructors.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=63021371\n'}"
3182,"{'code': '1511c17c0621f3a21921aed4b655c5b1306eaf32', 'message': 'Add Futures.inCompletionOrder.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=62970544\n'}"
3183,"{'code': '4061b1a8ce5b668b076bb0877091e1c4322ee539', 'message': 'Open source base.Verify in Guava 17.0\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=62936772\n'}"
3184,"{'code': 'e52de0d4ab9a66b30d75bc4d96ad4269551e9884', 'message': ""Add a test case to EnumsTest that ensures that the Enums.getIfPresent method doesn't cause a reference to the Enum class parameter to be held indefinitely.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=62564526\n""}"
3185,"{'code': 'c927c61d98550f1bbb0fdf8d7d36f7f695af92c7', 'message': 'Remove ""<add-linker name=\'std\'/>"" workaround, which is no longer necessary.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=62490843\n'}"
3186,"{'code': 'e8a99494cf370daf93880c99fc69c5d52bbaaa46', 'message': ""Automatically add <inherits> for java.* emulations to Guava.\nRemove the manually added <inherits>.\n\nThis change applies only to java.* emulations: Normally <inherits> are added automatically as part of the build.\nThe problem here was that the java.* <inherits> added were for internal-only modules that only transitively pulled in the public modules.\nThis change rewrites the internal-only module names to match the public module names.\n\nThe result is mostly a no-op, but, in addition to some theoretically irrelevant reordering, the automation also produces a few <inherit> fixes:\n- Remove net -> util.\n- Remove collect/testing -> util.\n- Add collect/testing -> truth.\n- Add collect/testing/google -> truth.\n\nAdditionally, the automation identifies that cache was missing a BUILD dependency on util.\n(It got away with it because the dependency was pulled in transitively through base. (This worked because strict Java deps doesn't fully apply to GWT.))\nI have added the appropriate dependency.\n\n(This CL redoes *most* of CL 62235637 (which was rolled back in CL 62240733), and it also touches other packages that that CL did not.)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=62345986\n""}"
3187,"{'code': 'be7bbf61201a88518d0ff007e8b3a29d0b548526', 'message': ""*** Reason for rollback ***\n\nRemoving the rest of the .gwt.xml references to java.* breaks open-source compilation of files like Suppliers, so Suppliers probably needs the java.* references; it just happens to be getting them now from other targets also on the classpath.\n\n*** Original change description ***\n\nCleanup unnecessary gwt.xml's from c/g/common/base and c/g/common/collect.\n\n***\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=62240733\n""}"
3188,"{'code': 'd11e1f07803e29744e2f285af9abe602413fe482', 'message': ""Cleanup unnecessary gwt.xml's from c/g/common/base and c/g/common/collect.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=62235637\n""}"
3189,"{'code': 'deff3845959d6be8b6eeb802d76b2b7637d1cc02', 'message': 'Changed ArbitraryInstances to use public constant instance if present.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=62232146\n'}"
3190,"{'code': 'ca1bb340d73748ddd91038b258a16cf361eb8262', 'message': 'Adding precise control over types of null queries allowed by MapFeatures.\nAlso, propagate ALLOWS_NULL_VALUES to Multimap.values() features.\nFrom leventov.ru: https://codereview.appspot.com/58760044/ https://codereview.appspot.com/65730044/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=62226066\n'}"
3191,"{'code': '95cb6b7f77f71021919539cdffbeec756ad97118', 'message': 'Override toString() in Iterables.consumingIterable() and\nIterators.consumingIterator().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=62154162\n'}"
3192,"{'code': '3380a6d184b8ab76da22e9b9da4286c015305254', 'message': 'Remove javacomp_package\n\nLeaves a couple of empty builddefs files in place to avoid breaking\nprojects that still subinclude them.  Those files will be removed\nonce the subincludes are all cleaned up.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=61607971\n'}"
3193,"{'code': '6fdaf50644feec6e6261f78b2d494af2e1d212d2', 'message': 'Add a new HostAndPort.fromHost() factory, which behaves like fromParts()\nwithout the port number.  This is useful for converting a host into\npossibly-bracketed form, so that a port may be appended afterward.\n\nAlso, the correct buffer size is ""length + 8"", due to the 5-digit port,\ntwo brackets, and a colon.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=61830506\n'}"
3194,"{'code': '8491703e0a4689080ff829fc2c63297a8b3e3a2f', 'message': 'Fix a minor nit in Futures.dereference() documentation: the listener runs in either the thread that called dereference() OR the thread the completes the input future.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=61801821\n'}"
3195,"{'code': 'a7dda1a8b5d412a74f6e461feca02292adf7d58a', 'message': 'Deprecate the primitive compare() methods internally.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=61755619\n'}"
3196,"{'code': 'b1e7d2416a21c6ad73321ee7db22ad8f4f61c078', 'message': 'Minor docfix in Iterators.java.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=61749084\n'}"
3197,"{'code': '9542aece4a723ecdb73e5e6e7fe57041e8b42dc1', 'message': 'Increase timeouts that are expected never to expire.\nUnder current timeouts, the test is flaky.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=61742992\n'}"
3198,"{'code': 'b321e8aadca131d89c08bc5e4fc8ee76ac302933', 'message': 'Improve the error message thrown from MediaType.parse().\n\nReport as https://code.google.com/p/guava-libraries/issues/detail?id=1667\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=61538444\n'}"
3199,"{'code': 'f38aa29944527b56013694ab4751f99abca463af', 'message': ""Clarify javadoc of Files.move; it doesn't work just like mv.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=61519547\n""}"
3200,"{'code': '6deed714387e2f32e2bc07ba79ff94c555553112', 'message': 'Mark ImmutableMultiset toArray() tests as flaky.\nThe best way I know to do that for our suite-generated tests is to mark all ImmutableMultiset/ImmutableSortedMultiset tests as flaky.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=61395617\n'}"
3201,"{'code': '2ef20bd51537777015f845709bfd24efecd18ff3', 'message': 'grow the destination buffer more aggressively to avoid excessive array copying in escapeSlow\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=61330434\n'}"
3202,"{'code': '316bf60b25eb3bb5b65dd7d25b698c9f9ef5cc5c', 'message': 'Add Follow-OnlyWhenPrerender-Shown http header constant.\n\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=61312752\n'}"
3203,"{'code': 'ff9bf6d8eee80fcee46bdb3da4fdbd00d8381d44', 'message': 'Method to shut down an ExecutorService in two phases included in j/c/g/common/util/MoreExecutors.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=61230873\n'}"
3204,"{'code': 'b3cf6a14b776a4973191318d9008a489018c89a7', 'message': ""Add a more descriptive error message when AsyncFunction.apply returns null.\n\nAs it currently is, the NPE gets thrown several lines later in a very confusing function which, at first glance, should not be able to produce an NPE (since outputFuture is not @Nullable).  And since outputFuture looks like (but isn't) a field, one has to search the entire class to determine how it was set to null in the first place.  This adds a very clear message to the NPE saying that AsyncFunction may not return null.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=61228632\n""}"
3205,"{'code': '0a3e1294848712557ccbfade7075921d90e004c4', 'message': 'Correct code example in Funnel Javadoc, that uses the old deprecated-then-removed PrimitiveSink#putString(String) method.\n\nhttp://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/hash/Funnel.html\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=61134562\n'}"
3206,"{'code': 'c24034b8d8d9b7f676d33e90c3d8eb7914860d00', 'message': 'Deprecate the constants in com.google.common.base.Charsets for internal users. Internal users should prefer the constants in java.nio.charset.StandardCharsets.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=61098351\n'}"
3207,"{'code': 'f6f3aab8605bd368ef37ce82298d8896a358f669', 'message': 'Add closeQuietly(InputStream) and closeQuietly(Reader).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=61085980\n'}"
3208,"{'code': '1fad9ae5cd05bbbd9549fac199ddd2881bea97f1', 'message': 'Delete AndroidInteger.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=61067964\n'}"
3209,"{'code': '1e2a1b645d743a350f8ebf260ad6bf847219285d', 'message': 'Mozilla TLD update.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=61013135\n'}"
3210,"{'code': '67f87819dc4934b9023c08812d811d172d6509b8', 'message': 'Run Animal Sniffer on guava-testlib and guava-test in addition to guava itself.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=61001284\n'}"
3211,"{'code': '1ee4b0ab38263aeaea7fc840a8d0a6ea3e2b7d83', 'message': 'Reshuffling from internal change.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=60993826\n'}"
3212,"{'code': 'bf37714cb4480fc2c52b759bb755f6aa617cb347', 'message': 'Belated nitpicking and comment revisions for TypeResolver change.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=60944582\n'}"
3213,"{'code': '5f913f5e6411698a4e50a0593ea4db4632e2c912', 'message': ""Change TypeResolver to not construct new TypeResolver when all the bounds remain the same. This is to work round the change in JDK TypeVariableImpl.equals().\n\nIn summary:\n\n1) When <A> resolves to itself <A> (i.e. all bounds resolve equal to themselves), uses the original TypeVariable instead of the Guava artificial TypeVariableImpl, which doesn't compare equal with JDK TypeVariableImpl.\n\n2) In order to do 1), we need TypeVariableImpl.equals() to compare bounds too.\n\n3) Uses TypeVariableKey as key in the map from TypeVariable to Type, during resolution. This ensures that during type resolution, despite the change of equals() in 2), the same type variable with or without partially resolved bounds is always mapped to the same resolved type.\n\n4) Since JDK's TypeVariableImpl no longer compares equal with our custom TypeVariableImpl. We need to change equals() to do the same to ensure symmetry.\n\n5) All of the above are done conditionally only under the new JDK.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=60778041\n""}"
3214,"{'code': '7a8148a7bbd7aaa5e9e157118c824ab502f9b052', 'message': 'Promise at least weakly consistent iteration for asMap().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=60762175\n'}"
3215,"{'code': 'b42368ce50632c78886dc369f79265b1114668a2', 'message': 'Fix tests that break when Stopwatch constructors are hidden.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=60761955\n'}"
3216,"{'code': 'fd0cbc2c5c90e85fb22c8e86ea19630032090943', 'message': 'Hide deprecated Stopwatch constructors in Guava.\nThe constructors are scheduled for deletion in Guava 17.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=60668113\n'}"
3217,"{'code': 'af5afeffaddbd3de5b44d3f1b49c2462e19795f8', 'message': 'Rewrite Ints.tryParse(int) with a copy of the Longs.tryParse implementation, which accepts only ASCII digits.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=60660931\n'}"
3218,"{'code': 'f24f6eea4e07858b9715b5c8afde081944c4f00b', 'message': 'Added Media types for the following font formats: EOT, SFNT, WOFF.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=60484333\n'}"
3219,"{'code': '447e7a41c22bcaba75bef99eebae179bc15f2894', 'message': 'Fix a call to checkArgument in SimpleTimeLimiter.newProxy to use string substitution.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=60440806\n'}"
3220,"{'code': '81bb550f568b53840682bd00784db4528ca56c22', 'message': 'Also benchmark creating SortedSets, which predictably fare worst, but at least\nwe can observe by how much.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=60385622\n'}"
3221,"{'code': 'eb89cdb025ca9e5498e51f0aa1303f0dbfa09d5c', 'message': 'Stop using assertSeededHashFunctionEquals for goodFastHash.\nThe problem is that goodFastHash(n) is sometimes equal to goodFastHash(m) even when n and m are different.\nBasically, the value is rounded up to a multiple of 128.\n(It\'s a size, not a seed as it is for the other Hashing methods.)\n\nCurrently the test passes because of the specific values that the test Random generates.\nHowever, which specific numbers are used for goodFastHash is dependent on the order in which the Hashing methods are tested, which is dependent on the JVM.\nThe methods are reordered with the latest JDK7 build, breaking the test (at least in Guava, which has a slightly different set of methods than internally).\n\nWe could ""fix"" this by sorting the methods before testing them, but the fundamental problem is that assertSeededHashFunctionEquals makes sense for seeds but not sizes.\n(This basic fact is hinted at by a comment that already existed in the test.)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=60202745\n'}"
3222,"{'code': '8aa3e7438d0d2e294976c8045c59259f4dae5c4b', 'message': 'Shuffling from internal-only change.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=60101894\n'}"
3223,"{'code': '5216a57b07b9e249dfcbf076aadf3c9cd5433633', 'message': 'Use string substitution for MapMaker checkNotNull.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=60034674\n'}"
3224,"{'code': '698bed9c310d07bc0e0af8ff9585a9fbba8e34a3', 'message': 'Remove the deprecated Service methods.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=59981888\n'}"
3225,"{'code': 'edfbb7e5f5b7d64c8e4a4eeeb49f17030de178b8', 'message': 'Update Guava version to 17.0-SNAPSHOT.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=59979307\n'}"
3226,"{'code': 'acdc6a0b86d8795cc31e521e7241869bcb05ebf7', 'message': 'Shuffling from internal-only change.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=59954427\n'}"
3227,"{'code': '6a122f12efebc6c79e539b2ede91514eb2e21103', 'message': 'Add some performance enhancements to Striped:\n\n1. Enhance bulkGet to not call getAt() for runs of identical stripes\n2. Introduce a new Striped implementation for LazyWeak Striped instances with\nsmall numbers of stripes\n\nTo justify this I also added a caliper benchmark.\n\nIt is a minor runtime improvement in all but cases where there are a small\nnumber of stripes where it is a major improvement\n\nThe LAZY_SMALL appears to be superior in all cases until the stripes size gets very large where the large array size becomes a potential issue.  Due to this i have introduced a static integer LARGE_LAZY_CUTOFF at 1024 so that lazyWeak striped instances with more than that many stripes use the legacy implementation.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=59821299\n'}"
3228,"{'code': '39a4f96687c910b5194007a0bb499a9ccb41f0ce', 'message': 'Fix LocalCache.asMap().values() to not implement Set.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=59806114\n'}"
3229,"{'code': '4055585a29cb4396e5c101fb5842409ff4eef2f1', 'message': 'Allow for the possibility of the CacheLoader load not taking enough time for the system clock to tick in LocalLoadingCacheTest.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=59799155\n'}"
3230,"{'code': 'a7f8095a888651f3fd7b7dc573b287f4aeb11fd3', 'message': ""Change SortedMapTestSuiteBuilder and DerivedCollectionGenerators to correctly handle SortedMaps whose keySet()s are not SortedSets--the spec of SortedMap.keySet() doesn't require that it return a SortedSet, and it apparently didn't at least for TreeMap in JDK5.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=59756355\n""}"
3231,"{'code': '9363dbdb80620b000ae439240b7f91cf84dbd021', 'message': 'Remove deprecated, unused, Google-internal Futures.transform overload that accepts a plain Future.\nThe ListenableFuture overloads appear to be serving users well.\nFor those users who are stuck with a plain Future, we still provide Futures.lazyTransform, which has similar but not identical behavior to Futures.transform. Specifically, lazyTransform does not cache the result of the transformation. This could in principle result in Futures whose value changes over time. This, along with the potential costs of repeated function application, is a reason to prefer Futures.transform when possible.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=59754254\n'}"
3232,"{'code': '0a355043906514163253d50ad68a1a419159a373', 'message': 'Fix a number of test failures running the backport under JDK5.\n\n- Sets.testPowerSetIteration seemed to be relying on the order of elements in a HashSet.\n- ImmutableSortedSetTest.testDifferentComparator_serialization was relying on Collections.reverseOrder() deserializing to the singleton instance of it.\n- ImmutableSortedMultisetTest.testCopyOfDefensiveCopy and testCopyOfSortedDefensiveCopy were relying on the JDK calling toArray(), while JDK5 is calling toArray(T[]).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=59749873\n'}"
3233,"{'code': 'd115ed28283c47d57532552f18195d2063325a51', 'message': 'Cache the reverse Converter view to avoid allocating every time reverse() is\ncalled.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=59697492\n'}"
3234,"{'code': 'bbdac75eb17feb528fa8020ddead73d767ec62ed', 'message': 'Add SortedCopyBenchmark and document its findings in the Ordering javadoc.\nFirst rename away the existing benchmark for measuring comparator delegation\noverhead.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=59694095\n'}"
3235,"{'code': '3b2035d0abf57f1cf434ed6b90b4e131543ced46', 'message': 'Fix up ExecutionQueue docs.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=59677053\n'}"
3236,"{'code': '68c83489321042f5c49f7bd88ce0caf6c99a53a6', 'message': 'Clarify the relationship between Iterables.toString(collection) and collection.toString().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=59586049\n'}"
3237,"{'code': '3f7122a3bca7876728e9bc4f4c3d388af751b590', 'message': 'Javadoc tweaking.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=59531412\n'}"
3238,"{'code': '16c64dd29ccbd4c1f497c56ba8dd4cafc25c3f3d', 'message': 'Add tests for inserting null values into a Multimap.\nI was unable to reproduce the behavior reported at http://stackoverflow.com/questions/21078379/guava-null-pointer-on-multimap-with-multiple-null-values\nMaybe it depends on the JRE version, since, as you noted, old JREs had a TreeSet bug.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=59522383\n'}"
3239,"{'code': 'cb8c67aa2142f4d22d4b87dacfa0ffdb57790b59', 'message': 'Change a couple of usages of Deque.push() and pop() to addFirst()/removeFirst(), reducing the delta for the JDK5 backport slightly.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=59415987\n'}"
3240,"{'code': 'ce26183f63fdcf9abe361aafc62b7d37c55424bd', 'message': 'Add iteration order discussion to SortedMultiset doc.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=59412449\n'}"
3241,"{'code': 'b6696b5c436f84fbd31cebc2e919b4eb0977bcbc', 'message': 'Some changes to CharMatcher.WHITESPACE implementation.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=59409460\n'}"
3242,"{'code': 'd4dea3bae554e0b188c713e4b4727f3e8e344e9a', 'message': 'Remove use of JDK7 API in ServiceManagerTest.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=59402724\n'}"
3243,"{'code': 'd19890d58909d158e9fea8cf76b3cdc128316633', 'message': 'Shuffling from internal-only change.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=59362873\n'}"
3244,"{'code': 'f6352ab67808dbf6d94242e9d7851a2c2046dd05', 'message': 'Functions.forMap and Maps.asConverter should have cross-references in their documentation, as well as the two forms of Functions.forMap with each other.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=59349470\n'}"
3245,"{'code': '470743ddff22ab6f9d6ff519743a2ea4af16dfbd', 'message': 'Replace ""fail(...); return x;"" with ""throw new AssertionFailedError(...);""\nThis eliminates some unreachable code that the compiler couldn\'t prove was unreachable.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=59341803\n'}"
3246,"{'code': 'ae7f2bcd60a0e7196ed016f94d82ff11ef1825e8', 'message': 'Remove unused private nested class from SortedMapInterfaceTest.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=59335399\n'}"
3247,"{'code': '5f0c227364a48603a4e8bb560ce407c33f090a99', 'message': 'Add @CheckReturnValue annotation to Objects.equal() so that error-prone\nenforces that the return value is used.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=59280111\n'}"
3248,"{'code': '4ef3a687731998dda5fe99d91c5937c3fef201c6', 'message': 'Create a Google-internal RateLimitingExecutorService.\n\nThe only thing needed from RateLimiter was a pair of methods to get a permit without sleeping.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=59264619\n'}"
3249,"{'code': 'bbe977e2d2bedcfdc3bfee4025e4493fed756138', 'message': 'Cleanup from rename of asyncReload() to asyncReloading().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=59229767\n'}"
3250,"{'code': 'bfe1f6028ffd2bedce58909c385d7760d1711f6e', 'message': 'Rename CacheLoader.asyncReload to asyncReloading.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=59214974\n'}"
3251,"{'code': 'aaea478b92c3daf4909b5403901a67cb302784d6', 'message': 'Update Converter javadocs:\n-added a link to Maps.asConverter()\n-added a note saying do not call the SPI methods directly\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=59155849\n'}"
3252,"{'code': 'be834cf947a7655cef0d6b6e29705400d2390eba', 'message': 'Change CharSource.wrap(...).toString() to use Ascii.truncate and increase the maximum number of characters to truncate at. Also change ByteSource.wrap(...).toString() to truncate the hexadecimal representation of the byte array.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=59155734\n'}"
3253,"{'code': 'f18ec39405a76ee6c5ef68e4d9da2266f796a9a4', 'message': 'Release CacheLoader.asyncReload() in Guava 17.0.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=59050926\n'}"
3254,"{'code': '426c4422430609b4d63a35d66b014643b621139d', 'message': 'Change toString() methods of returned Predicate instances to consistently use the ""code-like"" style.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=59050444\n'}"
3255,"{'code': '33e370a64e217f946250cf2398ce1133c54bc10e', 'message': ""Move configuration to the constructor.\nThat's where we do it in other packages.\nPlus, it's ever so slightly less code.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=59041814\n""}"
3256,"{'code': '27995f7621764a7e6f8b51ce57ad1846a4640982', 'message': 'Optimize BigIntegerMath.sqrt(BigInteger, CEILING), which needs to test if the square root is exactly an integer, by doing a quick check in int arithmetic first.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=59039597\n'}"
3257,"{'code': 'c81e4fa9760107230b1670bf74b334533a0302e8', 'message': 'Clarify the relationship between the two wrapTask methods.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=59003211\n'}"
3258,"{'code': 'b7f128cfc9bf01e1b5d62af7640927fafdd07619', 'message': 'Miscellaneous cleanups:\n- Remove unused ImmutableSortedMultiset.Builder.comparator.\n- Change @link to @linkplain where appropriate, and fix a couple busted @link tags seen along the way (based on a search for \'{@link\\b[^}]*([ *]+[^ *}]*[^ *}]*[^ *},]){3}\'). (Change one @link in ServiceManager to @code.) In a couple cases (TimeUtil, ServiceModule), the text ought to be *partially* code font, but I haven\'t taken further action\n- Strip Converter.from implementation from Guava, since Converter.from itself is stripped.\n- Run trivial RunnablesTest under GWT.\n- Remove a few instances of ""$inheritDoc,"" which should have been ""@inheritDoc"" and wasn\'t necessary anyway.\n- Remove per-method @GwtIncompatible annotations from SmallCharMatcher, which is entirely @GwtIncompatible.\n- Remove stray blank line in AbstractMapBasedMultimap.\n- Insert missing space in UninterruptiblesTest failure message.\n- Remove extra space in WrappingExecutorService.wrapTask Javadoc.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=59001342\n'}"
3259,"{'code': '9f96c78c0411ced56d1d8ef303fd5913a1171239', 'message': 'Make some minor simplifications in common.base.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=58996623\n'}"
3260,"{'code': '955e3d5f01af31f22dacf2fcff15fe88453fcba6', 'message': ""Remove use of JDK 7 language feature from a Guava benchmark. Guava hasn't\ndesupported JDK 6, and even when it does we may still want benchmarks to be\nrunnable against older vms.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=58938655\n""}"
3261,"{'code': '4b0e869014db10f62a6efec866a0a2fcccee52ad', 'message': 'Mark isSmall as @GwtIncompatible.\nIt references the @GwtIncompatible type SmallCharMatcher.\nThis works fine in prod mode, but it breaks in dev mode.\nSee https://code.google.com/p/google-web-toolkit/issues/detail?id=8510 and the discussion on linked CL 39931458.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=58906855\n'}"
3262,"{'code': 'cf2221405b339b4ce7b4d7b10d56da9de79046be', 'message': 'Add benchmark methods to determine efficiency of map iteration using both entry set and key set.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=58904951\n'}"
3263,"{'code': '6369b1e9d4930c2f805a653433deb1524705efc5', 'message': ""Remove Platform.charBufferFromThreadLocal layer of indirection, which existed for GWT purposes.\nIt hasn't been used from GWT code since the escapers were moved from common.base to common.escape.\nIts one remaining (Google-internal) caller was never GWT compatible, so the caller didn't actually need to use the method (though it has done so since its creation back in CL 24637091).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=58904453\n""}"
3264,"{'code': 'e7887ccb996ac5d36bc22714671767e80a24a5a8', 'message': 'Small Converter cleanups:\n-move all @annotations to individual lines\n-fix some @Nullable annotations\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=58824450\n'}"
3265,"{'code': '82f5fb1d81269201546b02b093a568830a60e0c3', 'message': 'Remove null boilerplate from Converter subclasses.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=58787043\n'}"
3266,"{'code': '4ab391e4924ef436da8e3d1363bc5d57e3b75514', 'message': ""Converter.from(forwardFunction, backwardFunction). This will be essential in\nJDK 8. It's probably not that useful before then, but... why not?\n\n(Converter.from is Google-internal currently, but we've accidentally released the implementation. We'll strip it out later.)\n\nSneak in a few javadoc tweaks.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=58786360\n""}"
3267,"{'code': '4d6d964435561584e3860640a28bdc409648ab5b', 'message': 'Shuffling from internal-only change.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=58655362\n'}"
3268,"{'code': '16a5f3264b8139f06aad13a65bfc1e4501667a03', 'message': 'Update common.io package-info.java to refer to Sources and Sinks rather than Input/OutputSuppliers.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=58567579\n'}"
3269,"{'code': 'c8eab9594d01d3992dae52732651446ed43ecf0b', 'message': 'Slightly adjust Ordering.from() doc to be more amenable to the jdk 8 future.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=58558868\n'}"
3270,"{'code': '032fcbc8f8c83f9779df0b697ae238468ba0335d', 'message': 'Remove doc references to the deprecated service methods.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=58500316\n'}"
3271,"{'code': '37e50544094d3f9ccd8d6efacf201a5a7dcb3275', 'message': ""Compile Guava GWT tests with -strict.\nWe already compile the prod code with -strict.\nI assume that I just didn't realize that -strict was valid for the test goal.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=58499115\n""}"
3272,"{'code': '00caedba5f5f1a16be7b7b63fb6d833c8ea750e9', 'message': 'Make some changes to MultimapBuilderTest to make it build in GWT (2.5.0-rc1, which Guava is using currently).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=58497528\n'}"
3273,"{'code': 'ee211636ee9bc983338f76732e87cd730f0ce022', 'message': 'Fix arrayListValues(int) in MultimapBuilder to actually throw IAE when expectedValuesPerKey is negative.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=58491662\n'}"
3274,"{'code': '1b890d1bd2937634df2c5d57e5d649cca7f16ef3', 'message': 'Open source HashingInputStream and HashingOutputStream.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=58485637\n'}"
3275,"{'code': 'fe592e08dd536532a18cb35eb2a706dd6af7b254', 'message': 'Open source Runnables.doNothing().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=58481831\n'}"
3276,"{'code': '2a8a6a72d8f274d2b77e3b092197288bb5cebf86', 'message': 'Open source MultimapBuilder.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=58480935\n'}"
3277,"{'code': 'a54908de3a64640f33c26349bef5a6b8b81d2d0e', 'message': 'Open source tests for ByteSource.read(ByteProcessor) and CharSource.readLines(LineProcessor).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=58426058\n'}"
3278,"{'code': 'b05363dc42ed0be66f83a2dda182265c062bc754', 'message': 'Remove Closeables.closeQuietly in Guava.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=58425087\n'}"
3279,"{'code': '4f37c83bb0dc8abc03144b9a03e0e2613666eb01', 'message': ""Deprecate InputSupplier, OutputSupplier and all public methods in common.io that use either type. Also release methods on Byte/CharSource that take ByteProcessor and LineProcessor so that the equivalent methods in Byte/CharStreams can be deprecated reasonably.\n\nSchedule InputSupplier and OutputSupplier to be removed in June 2015 (they weren't @Beta apparently) and schedule the deprecated methods to be removed in 18.0, to give plenty of time for conversion.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=58420238\n""}"
3280,"{'code': '4d75431608106c4e7a25bff35e22d2474ed30689', 'message': 'Make CaseFormat.converterTo(), Enums.stringConverter(), and Maps.asConverter()\nreturn serializable converters with reasonable equals(), hashCode(), and\ntoString() representations.\n\nWeakly deprecate Enums.valueOfFunction().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=58359600\n'}"
3281,"{'code': '5313166b8407e06bf63c8fea4531bd57c3039f54', 'message': ""Import publicsuffix.org's test data.\nRun the tests as part of the tests of InternetDomainName.topPrivateDomain(), suppressing those that fail.\n(Plus miscellaneous no-op changes to the test.)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=58354304\n""}"
3282,"{'code': '75fda2a9fea9e3415c661e8688332c24ffddc940', 'message': 'Open source Converter and friends in Guava 16.0\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=58300985\n'}"
3283,"{'code': '4ea03a82b9e8e8a679758d7f15d1a88c634d3524', 'message': 'Improve some javadoc in Preconditions.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=58300765\n'}"
3284,"{'code': '412824abd116810f0468d560e6cf655f326048a6', 'message': 'Rewrite type conversion to be acceptable to not only JDK8 but also Eclipse.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=58300702\n'}"
3285,"{'code': '8f062a880a3102d6d8f909c0754d3d2cd468c9dd', 'message': 'Remove DI annotations from ServiceManager.\n\nIf this breaks your server due to a missing @Inject constructor on ServiceManager, please install a com.google.common.util.concurrent.ServiceModule in your injector to provide an identical binding.\n\nTap global presubmit has been run with this change multiple times to try to identify all servers that would break when this constructor is deleted, all those injectors/servers have been fixed.  However, if your injector does not have a tap test that would expose this issue, this cl may break your server.  The fix is simple, please let me know and i can send advice/followup cls.\n\nThis is the final step of a Large Scale Change ([]across [].  See https://docs.google.com[]document/d/1HxavPxi9152BGIhWhfpwXhrj2Roagq4rgj5f-PiBGl0/edit?usp=sharing for more information.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=58291439\n'}"
3286,"{'code': '3958664f3818520c899268dcbfe508354a6a4e62', 'message': 'Reformat file to 100 columns, except the class docs which will be completely\nreplaced by []\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=58284754\n'}"
3287,"{'code': '9039e31abe100dfb9820e83e03d9e022c80e6a3c', 'message': ""Link to JDK7 Javadoc instead of JDK6.\nI'm not sure where the JDK6 default is coming from, but this is sufficient to override it.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=58277660\n""}"
3288,"{'code': '845f87592875faaa9c4b561fbe96da44565a29c6', 'message': 'Simplify EqualsTester/EquivalenceTester/RelationshipTester by pulling the common assertions up into RelationshipTester.\nThis reduces duplication and removes the need to rewrite exception messages.\n\nWhile there, tweak a few other things, notably making itemReporter a final field.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=58110002\n'}"
3289,"{'code': 'bdd5652fd300a866ca74c48b9cc36f22b2bd85f5', 'message': 'Stabilize the UncaughtExceptionHandlers against exceptions thrown in\nlogging. Quoting from the Java manual: ""Any exception thrown by this\nmethod [uncaughtException] will be ignored by the Java Virtual Machine.""\nThis seems slightly paranoid, but doesn\'t cost us much and avoids stupid\nnon-terminations in OOM situations or other logging failures.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=58086612\n'}"
3290,"{'code': '569c6ea5cf53fe20b669d34efe980920aa8a2482', 'message': 'Fix tiny javadoc syntax mistake.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=58069740\n'}"
3291,"{'code': 'c5e6cac3e22d79e47dace66b656f8aa26d5aeda1', 'message': 'Shuffling from internal-only change.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=58069096\n'}"
3292,"{'code': '7baaf16e09876f6ab3d7d182decae37f810d0195', 'message': 'Temporarily strip testCleanupOnReferenceCollection from Guava.\nIt fails when run under Maven in a 64-bit JVM, probably because it tries to fill up the presumably larger heap.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=58051028\n'}"
3293,"{'code': 'c0aa102b72b345d8c49cd58c0ebc63e770aec7aa', 'message': 'Improve the example in FinalizableReferenceQueue. Previously it would always ""log a message about how nobody called close"" even if somebody did in fact call close.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=58001245\n'}"
3294,"{'code': 'd4844526f5abebf27b5bda179e6fa639e467dc13', 'message': 'Add an example to the javadoc for FinalizableReferenceQueue.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=57993804\n'}"
3295,"{'code': '660435fa8b9bb8fa96a2e66e0338c5beb044c50a', 'message': 'Change TypeToken.method() and TypeToken.constructor() equals implementation such that List<Integer>.get() is unequal to List<String>.get() and List.get()\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=57989174\n'}"
3296,"{'code': '74f36d8a00469aae7c179b5c7001c4f17d611e20', 'message': 'Clarify the performance improvements of Ordering.sortedCopy over alternative implementations.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=57924772\n'}"
3297,"{'code': 'd266057ce4eff7a0ba1b5e0cf23c639ce803629b', 'message': ""Attempt to fix AbstractInvocationHandler's equals implementation that may fail for JDK type proxies, after reserialization.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=57918440\n""}"
3298,"{'code': '4787c23dce0f5ac856d8d398225828971a93a3ff', 'message': 'Ensure that Lists.transform preserves IndexOutOfBoundsExceptions thrown by the transform function.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=57916083\n'}"
3299,"{'code': 'a6c0a1babcde36af1010ef36a3aa9fa2bfc9e3c4', 'message': 'the the -> the\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=57915223\n'}"
3300,"{'code': '5097fbaf1ae749d60864855982bff6b244acbe37', 'message': 'Deprecate implementations of Predicate.apply that should never be invoked directly.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=57908208\n'}"
3301,"{'code': '2501cceb9f8059153cacda024843b8969e2851d8', 'message': 'Include the key in the recursive load exception, to make debugging easier.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=57905649\n'}"
3302,"{'code': 'd660cc4a89e987d3377a2e1aa81bee2953fda987', 'message': ""Multimap method javadocs: a few improvements. This doesn't by any means complete the job of perfecting all the docs in this interface.\n\nI've removed @param and @return clauses that add no value (which was all of them in the former case).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=57822103\n""}"
3303,"{'code': '80280954a43bfb813f8a019774e06c2a88842ede', 'message': 'Automated g4 rollback of changelist 57771110.\n\n*** Reason for rollback ***\n\nBreaks some tests who are depending on a specific toString() implementation.\n\n*** Original change description ***\n\nChange toString() methods of returned Predicate instances to consistently use the ""code-like"" style.\n\n***\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=57776968\n'}"
3304,"{'code': 'f86cc3b3fbabe619ece14621d543133b44933614', 'message': 'Change toString() methods of returned Predicate instances to consistently use the ""code-like"" style.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=57771110\n'}"
3305,"{'code': 'd1270e046449afe3a12ac525de255f7a8e2bfb67', 'message': 'Stop ignoring http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6529795 in iterators now that the bug has been fixed in the JDK for a while.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=57745078\n'}"
3306,"{'code': '7dace6d0ab8c850bca14c217dc4fc81592889bf2', 'message': 'Make CombinedFuture stop logging identical exceptions multiple times\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=57675851\n'}"
3307,"{'code': '257148b2901c8b8ec1b06d9c10804300ac3d06d0', 'message': 'Rename common.collect methods named removeIf, to prevent shadowing in JDK8.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=57673689\n'}"
3308,"{'code': 'ed45f47ed0708b618055a9ec3574aed4c84d34b2', 'message': 'Rename Splitter.spliterator to splittingIterator, to proactively prevent name shadowing with Java 8.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=57671698\n'}"
3309,"{'code': 'ab29b173055a1ff647516848b176265fc6792ba0', 'message': 'Move GenerateTldPatterns to a new directory.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=57607554\n'}"
3310,"{'code': 'c2b87dfc444952ba159da9f16e26f1921e5367fc', 'message': 'Adding equalsIgnoreCase for ASCII only. This exists because there\'s generally no good reason to use String.equalsIgnoreCase() with non-ASCII data (you should be using proper unicode normalization).\n\nIdeally we would migrate anyone calling\nequalsIgnoreCase(""<ascii only>"", x)\nequalsIgnoreCase(x, ""<ascii only>"")\nto use this and provide an error prone check for things like:\nstring.toLowerCase().equals(""<lower case ascii>"")\nstring.toUpperCase().equals(""<upper case ascii>"")\n\nAlso provide benchmark (4x-5x faster than String.equalsIgnoreCase()).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=57357299\n'}"
3311,"{'code': '7de3cbca3854ae0d9e9f7973a8f3cfe855a2407a', 'message': 'Javac 8 clean-up.\n\nJavac 8 places additional restrictions on generic type inference, and will\noccasionally report an inference error in situations where javac 7 would have\nbeen more permissive. This change allows compilation with javac 8 to succeed.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=57309921\n'}"
3312,"{'code': '76288a4e5b510494d0991b43fb697bf24dd5f66e', 'message': 'Deprecate implementations of Function.apply that should never be invoked directly.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=57308600\n'}"
3313,"{'code': '952ea2a5afa82239d572786eb62dc9758c0984eb', 'message': 'Rewrite the Tld Pattern generator, take 2.\nThis CL adds the possibility to reuse the pattern generator for other template files. Also now the generator keeps track about which tld patterns are from the official ICANN list, and which patterns are private.\n(Roll forward of CL 56906311, which was rolled back in CL 56996630, with a fix for the multiple internal-only GWT modules in com.google.common.net.)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=57258531\n'}"
3314,"{'code': '38586b409895a183f879831b0f1fede693bcbe3d', 'message': 'Remove the ServiceManager constructor that used to be annotated with @Inject.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=57132730\n'}"
3315,"{'code': '73730b90eec6314b6c2dbf764bd2ccdf5d9c2a24', 'message': 'Removed unnecessary static imports as they are pulled in through\njunit.framework.TestCase.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=57073259\n'}"
3316,"{'code': '4c91448410b3e4c8b566c0fa4bf9ae047f5294e6', 'message': 'Some documentation improvements for Ascii.truncate.\n\nAlso remove the overload that used ""..."" as a default truncation indicator because:\n- Some people might assume that it used no truncation indicator ("""")\n- It\'s easier to understand when reading if the indicator is passed explicitly\n- No need to warn people about ""..."" not being what they want to use for some locales\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=57067405\n'}"
3317,"{'code': 'f799ed7f2fe50f259c29bf39fd0d26c2c537dfd0', 'message': 'Make the constructors on Source/Sink classes protected.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=57057612\n'}"
3318,"{'code': 'fbb1e5ed85319343489b13f233d8bea631a77bf9', 'message': 'Retrying changelist 56687027. RateLimiter: make the acquire() methods return the time slept (instead of void).\nRationale: allow clients to keep track of whether they are rate-limited; useful to update e.g. Varz/Streamz.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=57014398\n'}"
3319,"{'code': '6ffec35127b4004a5540c416c9ff66020c9287d0', 'message': 'Inline checkNotNull call.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=57011958\n'}"
3320,"{'code': 'c9dbad0480d28e7cc5b3918945b0d14bd6ac3528', 'message': 'Remove ByteBuffer usage in ConcatenatedHashFunction.makeHash() method and use HashCode.writeBytesTo instead.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=57005557\n'}"
3321,"{'code': 'ae72667664a9da3940975b9bf04b2d7b794ea477', 'message': 'Minor improvement to Ascii.truncate implementation.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=56999832\n'}"
3322,"{'code': '78f29ce2cc5a71253073a3ffb2c1ee52fb295429', 'message': 'Add Ascii.truncate methods, which truncate a string to a maximum length, appending a string such as ""..."" as an indicator if the resulting string was truncated.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=56998047\n'}"
3323,"{'code': '5e6f89d817aa9d7f1c54c0fa7d17ce3bed5d7be8', 'message': 'Rollback of changelist 56906311.\n\n*** Original change description ***\n\nRewrite the Tld Pattern generator.\n\nThis CL adds the possibility to reuse the pattern generator for other template files. Also now the generator keeps track about which tld patterns are from the official ICANN list, and which patterns are private.\n\n***\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=56996630\n'}"
3324,"{'code': '351689a60bfb2c754c7f24e5d673d5d3ef183856', 'message': ""Don't use Preconditions.checkArgument in primitives checkedCast methods, as it boxes for what should be a very fast method.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=56995761\n""}"
3325,"{'code': '7065d8d868f0794065a9472e7a93660fb17a5481', 'message': 'Minor changes to TearDownStack:\n- Changed logger to be private and removed explicit static reference.\n- Removed t.getMessage() in logging statement as this is duplicated\nwhen t is printed.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=56992155\n'}"
3326,"{'code': '2bab5a67a8e074cfa17ce7737f5b393a9e5b9b11', 'message': ""Belatedly add Justin's comments from an old email exchange.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=56987273\n""}"
3327,"{'code': '837d163fef75c1062d4c1d0becb31c7b54f01561', 'message': 'Specify that behavior is undefined for non-ASCII input.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=56954960\n'}"
3328,"{'code': 'b9d7edb0aac03395ac2d5db55612462053f1c104', 'message': 'Remove checkNotNulls in MapJoiner that existed to satisfy NullPointerTester before it accepted UnsupportedOperationException\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=56953505\n'}"
3329,"{'code': 'f37e8d9ef242311094907d540616efc119879d3d', 'message': 'Add warning to CharMatcher.DIGIT\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=56937982\n'}"
3330,"{'code': '95ce1df9aac3f643767db2a03f06bc1bd070ba66', 'message': 'Remove Stopwatch.elapsedTime and elaspedMillis\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=56909797\n'}"
3331,"{'code': '986b8f55615df073fd190e7dfd19c605dc4a3587', 'message': 'Fix some typos in Equivalence.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=56907469\n'}"
3332,"{'code': '7b006c485b0774137c05f17dbf29de7e59efd8ce', 'message': 'Rewrite the Tld Pattern generator.\n\nThis CL adds the possibility to reuse the pattern generator for other template files. Also now the generator keeps track about which tld patterns are from the official ICANN list, and which patterns are private.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=56906311\n'}"
3333,"{'code': 'a4a491611174be8cfb37e816f06f32e32b3b4414', 'message': 'Shuffling from internal-only changes.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=56868933\n'}"
3334,"{'code': '9c85f48ed7ba09315feda7784f1d5f686dd63711', 'message': 'Update Mozilla public suffix list from 2013-06-06 to 2013-11-07.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=56847666\n'}"
3335,"{'code': 'a22e901ee37aaa555d1351a48fe294f3b795c203', 'message': 'Mark a test that uses StringBuilder.appendCodePoint as GwtIncompatible.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=56553406\n'}"
3336,"{'code': '8923e48737bb4dc5d4ceea7d09926cff1bc50af4', 'message': 'Optimize Utf8.encodedLength even more, at the cost of increased complexity.\nI continue to be surprised by the size of the branch-mispredict penalty.\n\nI added tricky overflow logic to remove the need to use longs.\n\nDiscussion on guava-discuss\nhttps://groups.google.com/forum/#!msg/guava-discuss/cMMsMJ8SGD4/vjmklk0kenIJ\n\nBenchmark notes:\n\n(for client in vanilla Utf8 Utf-3; do g4d $client && g4 sync && [] run --java_cpu=k8 -- javatests/com/google/common/base:Utf8Benchmark -DmaxCodePoint=0x80,0x90,0x100,0x800,0x10000 --trials=2 --benchmark=lengthOfString,lengthOfStringBuilder; done)\nhttps://caliper.googleplex.com/runs/607baae7-a24a-40b7-a3d0-6892c129f1fe # vanilla\nhttps://caliper.googleplex.com/runs/71ac4495-1d70-4265-ab58-23e61095ff27 # Utf8\nhttps://caliper.googleplex.com/runs/124a69f7-d87b-48c6-95d4-22cbbafe774d # Utf-3\n\n5x faster for 0x100 !\n\nSee []\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=56498817\n'}"
3337,"{'code': 'b33a527769bf0b2866289143879dbed7fcfe8fd3', 'message': 'Add EvictingQueue.remainingCapacity().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=56474670\n'}"
3338,"{'code': 'c04ce8993e4af2467e43636ec67068bf90b9a7fd', 'message': 'Lots of minor cleanups and simplifications.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=56467585\n'}"
3339,"{'code': 'db10165f367fe754b81731ff5ac87896b65f4823', 'message': 'Lazy-initialize all the things (in Hashing). For some of these this may be overkill but we have reports of major <clinit> slowness on Android.\n\nhttps://code.google.com/p/guava-libraries/issues/detail?id=1574\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=56406847\n'}"
3340,"{'code': 'e45d675657f1df34ceb9e84c5f998ee9856e8614', 'message': 'Make ImmutableClassToInstanceMap serializable.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=56232403\n'}"
3341,"{'code': 'adc5bb87fb2948b24ec57d99f96f54140132890f', 'message': 'Use CollectPreconditions.checkNonnegative more widely in common.collect.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=56097311\n'}"
3342,"{'code': 'dece9b43b0fcaf9ffc509e7d9b348bd4e9ffd130', 'message': 'Fix incorrect reference to in javadoc. Iterator should be iterable.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=55950925\n'}"
3343,"{'code': 'cff5df6b48b892574975dc045f6ed3552d4b3d1d', 'message': 'Remove beans.xml from Guava.\n\nIt no longer serves any purpose now that there are no JSR-330 annotations in\nGuava, and it was a problem to begin with.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=55883109\n'}"
3344,"{'code': '53a99310959a8d91420162a1116225acce5082dd', 'message': 'Remove the jsr-330 annotations from ServiceManager and remove javax.inject from\nthe guava pom.xml since this was the only use.\n\nSee https://code.google.com/p/guava-libraries/issues/detail?id=1433 for the\nhilariously depressing rationale.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=55868332\n'}"
3345,"{'code': '516d029c5b65f833df58c3cc0cdd0f8e3b06c6a8', 'message': 'Fixed incorrect placement of { in Iterables.contains method.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=55810948\n'}"
3346,"{'code': '27e38e746eec4835d71a94a83532e5a5d1bc8c6b', 'message': 'Remove deprecated methods that had been hanging around without specified removal dates / Guava versions:\n- ImmutableSet.of(E[]), which has been replaced by copyOf(E[]) and which was removed from the ""plain Java"" code long ago but has hung around in the GWT version.\n- InternetDomainName.fromLenient() and name(), which have been replaced by from() and toString().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=55803460\n'}"
3347,"{'code': 'ba7eac07eb85fa67168c56b2c7aa0e8172f9c7e6', 'message': 's/delimeter/separator/. We converged on ""separator"" a while ago, but missed fixing this one because it\'s misspelled.\n\nA ""delimeter"" is a unit measuring one\'s current distance from sandwiches. I am hereby not allowed to use that joke again for at least five years.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=55638928\n'}"
3348,"{'code': 'fc8c61cf703155f85b00b30cd11fc11b53947953', 'message': 'Warnings-related cleanup to c.g.c.base and its tests. Ruthlessly standardizing the comment we use so these can potentially be replaced with string constants one day. In some cases I have actually removed unjustified suppressions.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=55637082\n'}"
3349,"{'code': 'ec0554c2e39714da35a95615787645ad4b611337', 'message': 'Migrate from deprecated InternetDomainName.name() to equivalent toString().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=55556636\n'}"
3350,"{'code': '2e9fc05479a392533a4e048d00a9599a8bd71df6', 'message': 'Ensure that failures get logged before transitionService is called.\n\nSee the bug for context, but the tldr is that a server was exiting in response to startup failure and this happened before the root cause was logged.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=55509012\n'}"
3351,"{'code': '7f7904ad8ebab1cf62ec453a771e347cb831783a', 'message': 'Fix Equivalence#wrap documentation to match the appropriate usage of the method (and the javadoc on the Wrapper class)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=55467018\n'}"
3352,"{'code': 'aacd053ab2b26b11fb35ee6384dc2ce39b386a05', 'message': 'Explicitly test that BREAKING_WHITESPACE is a subset of WHITESPACE.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=55422871\n'}"
3353,"{'code': '233bcf9e6e2f620d1ef1c25c019a09be66e73232', 'message': 'Improve mod javadoc even more.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=55375877\n'}"
3354,"{'code': 'bc1f5d201af24828ddc3382003851f19bf6e5e3a', 'message': 'Improve the javadoc for mod.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=55370624\n'}"
3355,"{'code': 'c01ebc3fc2df3b6fe1384fe987505def08c891f6', 'message': 'Fix a flaky test.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=55362090\n'}"
3356,"{'code': '4ba03ac7acad8f1d24e88e65b2aa9c721e6f6d11', 'message': 'Add benchmarks for Utf8.length.\n\nThe biggest surprise for me was seeing how much performance of\nthis micro-benchmark is dominated by branch-prediction\npenalty - 0x100 is twice as slow as either 0x90 or 0x800.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=55358109\n'}"
3357,"{'code': '6b3b405c4a1da01f308851207970248803b6d807', 'message': 'Micro-optimize, especially for runs of ASCII.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=55130107\n'}"
3358,"{'code': 'f83bd3a20f06dd9b3ab788f8ae8f661555ba49c8', 'message': 'Mark CartesianList as RandomAccess.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=54897081\n'}"
3359,"{'code': '0200297294546709ca6d6c028651a297451046fd', 'message': 'Shuffling from internal-only change.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=54791037\n'}"
3360,"{'code': '0ca8ce566c15916295bd1301c32640be12192714', 'message': 'Remove the use of deprecated Service methods from the Abstract*Service test cases.\n\nThere are hardly any callers left! In fact i think these tests account for >50% of remaining callers.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=54784808\n'}"
3361,"{'code': 'aeeec807bd606f5db4845ec95a788857bb2cc4c9', 'message': 'Fixed the javadoc of RangeSet.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=54694622\n'}"
3362,"{'code': 'a3c6d2e03dd0afa4d13574094611639675dbc576', 'message': 'Instead of just tracking our state via 2 integers in ServiceManager.State track all current service states via a Multimap<State, Service>.\n\nThis enables some features.\n\n1. servicesByState() returns a consistent snapshot\n2. TimeoutExceptions report on the services that caused the timeout\n3. IllegalStateExceptions from awaitHealthy report on the services that are not running\n\nAlso, this slightly simplifies the relationships between our 3 objects (ServiceListener, ServiceManager.State and ServiceManager) since ServiceManager no longer holds a reference to the Listeners directly.\n\nThis should also fix b/10734437 because it simplifies the way that the stopwatches are handled and we also use a weak reference between the Listeners and ServiceManagerState to ensure that if the service manager is only partially constructed the listeners will become no-ops.\n\nI am not super tied to using the weak reference to solve this problem but it seems weird to keep updating this state object when there are no references to it.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=54239479\n'}"
3363,"{'code': 'a9ab3b8fcedba375d8f64e89a4aeba02a508de95', 'message': ""And let's rename Utf8.length() one more time, this time to Utf8.encodedLength().\nFrom here on out we really should rename this method no more than once a week.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=54213513\n""}"
3364,"{'code': '433f64828909352f32b20450880824b52f947e35', 'message': ""Port protobuf's UtfDecodingBenchmark for Utf8.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=54140446\n""}"
3365,"{'code': '1062b4a17750aff3005ce5a57ec6a8002cc840ad', 'message': 'Document compare() methods to point out their JDK equivalents.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=53930986\n'}"
3366,"{'code': 'ae827772191979fab74a46f64425187d747d1aa5', 'message': 'Rename methods in the new Utf8 class, rewrite some javadoc, and a few very small code improvements.\n\nutf8Length -> length\nisValidUtf8 -> isWellFormed\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=53921068\n'}"
3367,"{'code': 'd339b8b42b44c4f11f6a74cc127b38132d1034df', 'message': 'Delete ForwardingService.  it has been deprecated for two guava releases now so i think it is time to drive the stake through the heart of this beast.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=53861773\n'}"
3368,"{'code': '7f6521c18e86cc7467b9a8aed8fb6a77342fd8b9', 'message': ""Fix failure in MapsTest with coming-soon jdk.\nI couldn't restrain myself from renaming sizeOf.\n\njdk_into_perforce /auto/buildstaticnorep/projects/java/sun-jdk/linux-i586/jdk7-google-trunk-latest\n[] test --host_javabase=//testjdk --javabase=//testjdk --java_langtools=//testjdk:langtools --javac_bootclasspath=//testjdk:langtools-bootclasspath //javatests/com/google/common/collect:SmallTests\n[]\n1) testNewHashMapWithExpectedSize_wontGrow(com.google.common.collect.MapsTest)junit.framework.AssertionFailedError: expected:<0> but was:<1>\nat com.google.common.collect.MapsTest.testNewHashMapWithExpectedSize_wontGrow(MapsTest.java:124)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=53835727\n""}"
3369,"{'code': '57e66d83a43c65827468ba2a7f5af550097d1bc3', 'message': 'Added more javadoc to AbstractPackageSanityTests for Guava bug 1535\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=53743498\n'}"
3370,"{'code': '1b81d3d68f71026fb81acc923e7424707ae50f95', 'message': 'Fix low-hanging rawtypes warnings in javatests.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=53733108\n'}"
3371,"{'code': '8c7fbd6d742eefad76a61442f4d78d37d9e5079c', 'message': 'Remove or hide APIs scheduled for deletion in Guava 16.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=53732502\n'}"
3372,"{'code': 'd88df71d5ff0dfdda5e2cb557fca81164df0578b', 'message': 'Clone c.g.protobuf.Utf8 to c.g.common.io.Utf8 and add new utf8Length(String) static method. Callers will be migrated in future changes. It is currently unknown whether protobuf itself will be able to depend on Guava.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=53696008\n'}"
3373,"{'code': '10e33c03a6d68fe1404aa721a4a7e37c1e63c43b', 'message': 'Add a couple @since tags for recent additions.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=53671037\n'}"
3374,"{'code': 'b29b2638d82f57433f2cc5fcf7ecf6d6b3f4c419', 'message': 'Add function to return the number of boolean values that are true from a variable length boolean input.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=53643457\n'}"
3375,"{'code': '5979791fe88d3b5c6aaa265e20ad40701aa4aff4', 'message': ""Include common.xml's package-info in Guava.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=53568852\n""}"
3376,"{'code': 'ed3d044ad485fa09b424f26810b123b872a9270f', 'message': 'Update ChainingListenableFuture docs to explain why the UndeclaredThrowableException special case exists and why it is no longer necessary.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=53489160\n'}"
3377,"{'code': '8cabed4d21b40949aa6a9fd9f34ced54c6445a6a', 'message': 'Move htmlEscaper to the top.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=53344665\n'}"
3378,"{'code': 'f53fc5e4b2d8d53ba04cc4c07d1fd894b02f40ef', 'message': 'Followup javadoc changes.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=53298273\n'}"
3379,"{'code': 'e301bb7064b1c7f23485060408c48149cf9e8374', 'message': 'Make it possible to use class path to retrieve non-top level classes.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=53297583\n'}"
3380,"{'code': '7fbd3fa9fa13234e1d11d69df0366125f2fdede2', 'message': 'Ensure that AbstractIterator does not hold onto its next reference after it has been returned by next().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=53283705\n'}"
3381,"{'code': 'c3c3bad0804af06d390856b5a6c468ca2b54ac2f', 'message': 'Verify that listeningDecorator does not decorate simple tasks submitted with execute():\nhttp://stackoverflow.com/a/19009309/28465\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=53264107\n'}"
3382,"{'code': '0df4992de1bb83630e13594410b0ad73409d1948', 'message': ""Optimize Ascii#toUpperCase and Ascii#toLowerCase. Don't recreate a String if the input String is already upper-cased/lower-cased.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=53066382\n""}"
3383,"{'code': '9ac12a96ec8d14c925ee9ad145fe17dbc3078d63', 'message': 'Fix argument order in Futures sample code.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=52670595\n'}"
3384,"{'code': '778a05680b6b0695214799dbb95f08d29223ec27', 'message': 'Make EvictingQueue serializable.\nSee https://code.google.com/p/guava-libraries/issues/detail?id=1537\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=52532527\n'}"
3385,"{'code': 'af79a1939d2900ecaae92a5538760369eaa60b9b', 'message': 'Change all the reference to event handler to event subscriber.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=52404442\n'}"
3386,"{'code': '95f8cde53603cd02c212e279c64f87caa5c6dc94', 'message': 'Fix medium-hanging rawtypes warnings.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=52391647\n'}"
3387,"{'code': '7d9ac453a5fdea0e0a0b99500814107b4fa47098', 'message': 'Add @since tags and nitpick Javadoc formatting from CL 52250001.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=52286822\n'}"
3388,"{'code': '578686226d7245be5f72dc3007c8e29217ecbfc8', 'message': 'Introduce the SubscriberExceptionHandler.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=52250001\n'}"
3389,"{'code': '23bdab2632a91b8a731f5ae977e617d5edb80d75', 'message': ""Change PathByteSource in MoreFiles to not use Files.readAllBytes() for its read() method, as Files.readAllBytes() creates 2 unnecessary copies of the byte array the file is read into in the normal case where the file doesn't change size.\n\nIn the process of doing that, a few other changes:\n- Change both PathByteSource and FileByteSource to delegate to a new package-private method ByteStreams.toByteArray(InputStream, int) which handles reading to a byte array when you have an expected size.\n- Also change both implementations to get the expected size for the file from the size() method on FileChannel/SeekableByteChannel instead of reading the size attribute before opening the stream.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=52120076\n""}"
3390,"{'code': 'd56e501e83d6c17b3a2cf0524f797a4b5f38fdbd', 'message': 'Use @link and @linkplain in Objects.firstNonNull() javadocs.\n\nSee https://code.google.com/p/guava-libraries/issues/detail?id=1526\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=52109962\n'}"
3391,"{'code': '12d6c72b83c3253b84d3c02e12be884d0930f5c3', 'message': 'Update Guava pom.xml files to version 16.0-SNAPSHOT.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=51967518\n'}"
3392,"{'code': 'f995641f6ef5f09c5484f5ce5bd2a805608491f9', 'message': 'Make it obvious that RateLimiter can handle < 1 qps.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=51961102\n'}"
3393,"{'code': 'ef35fa6ce1d48e12c3e98fa8587758209cf6509c', 'message': 'Remove compare(boolean, boolean), which has been renamed to compareFalseFirst.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=51892007\n'}"
3394,"{'code': 'd0f71799a44d004a1ce837b2ffa434699dd59c4b', 'message': 'Avoid array allocation in HashCode.writeToBytes().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=51848312\n'}"
3395,"{'code': 'cc75db0727f283900fe601fc2905fa0b220c46b2', 'message': ""Second guess CL 43477677's de-@Beta-fication of allAsList and successfulAsList.\nThere are still issues to settle: http://code.google.com/p/guava-libraries/issues/detail?id=1519\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=51620880\n""}"
3396,"{'code': 'e0909001c161a50dd4d1dbb754b12d15dfda99b6', 'message': 'Change ByteSource.concat and CharSource.concat to not blow up on infinite Iterables. This also helps users whose Iterables actually eagerly load data to create sources when iterated, though ideally they shouldn\'t be doing that.\n\nAlso fix some javadoc formatting and suppress a couple ""possible heap pollution"" warnings.\n\nSee Guava issue: https://code.google.com/p/guava-libraries/issues/detail?id=1516\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=51552427\n'}"
3397,"{'code': '1174bca02b652b051007b51c6a7b6ef44561e6de', 'message': 'Bring @GwtCompatible annotations into line with reality.\nFuture CL 51540044 will add tests to verify this automatically.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=51547670\n'}"
3398,"{'code': '04b19402351c764c7c8d915d98783db02444724c', 'message': 'Miscellaneous cleanups:\n- Add spaces between keywords and parentheses (e.g., ""for("" -> ""for (""), fixing up some indentation and missing braces along the way.\n- Declare Platform classes as |final|, and add private constructors.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=51540900\n'}"
3399,"{'code': '482848d14e77c09a3b91750b465ff599bcbd9915', 'message': 'Adding missing dependency.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=51434507\n'}"
3400,"{'code': '31e1f16989ec41b360b074caebdc58e0117ecf68', 'message': ""Replace CharMatcher.WHITESPACE by a much faster implementation as it doesn't deserve to be slowed down by division.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=51342342\n""}"
3401,"{'code': 'c8fb5480bf698f28da3f1b3836d7c71e5e56d504', 'message': 'mark AbstractService.startAndWait()/stopAndWait() as non-final due to test breakages\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=51323441\n'}"
3402,"{'code': 'ba0e833f2e84baa310583f75b71ae727bea5183a', 'message': 'Fix broken test name that prevents test from running.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=51318709\n'}"
3403,"{'code': '9457b83c2e4498cdbe0346fc8e246f0ccb35aab6', 'message': 'Mark the new Service methods as final in AbstractService,\nAbstractExecutionThreadService, AbstractIdleService and\nAbstractScheduledService.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=51305735\n'}"
3404,"{'code': '5844882acdeff159efcb40f5a9e7cb0f00910b5e', 'message': ""Make WrappingScheduledExecutorService's constructor protected, rather than package-private. (This is consistent with WrappingExecutorService.)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=51273229\n""}"
3405,"{'code': '1908e9db5c671f0ef95202b8b0aab1ade954bd0f', 'message': 'Make the supersource for GWT version of com.google.common.collect Java 7 compatible.\n\nThe non GWT version of the collection classes were made Java 7 compatible in CL 13495337.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=51266213\n'}"
3406,"{'code': '5be6693339c4699cbb2856b799d2ef8b40ee3c34', 'message': 'Fix documentation for c.g.common.collect.Maps.transform{Values,Entries}.\n\nIt used to refer to methods that no longer exist.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=51253115\n'}"
3407,"{'code': '047cb293a9b86494cbe1c712861aebf879886bea', 'message': 'This CL fixes usage of equality operators for subclasses of java.lang.Number. Comparing numeric objects using ""=="" tests for reference equality, when most likely value equality is intended. This an automated fix using error-prone.\n\nWe intend to make this a compilation error in Google\'s Java compiler, so it is necessary to fix existing occurrences first to avoid breaking builds.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=51251971\n'}"
3408,"{'code': '53811089cf234fd2aacffa9d8f7aaa321f8c798c', 'message': 'Add DoubleMath.mean. (Includes a few drive-by lint fixes on DoubleMathTest.)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=51173415\n'}"
3409,"{'code': '1756a9478ef5c5545a72080d2db39db8a2bc6bc3', 'message': 'Shuffling from internal-only change.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=51147719\n'}"
3410,"{'code': '52e17592f42b4beed14e7f356616bc1ed7ef12e8', 'message': ""Fix TreeTraverser's class javadoc to the correct result for a breadth-first traversal.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=51145407\n""}"
3411,"{'code': '9de0ce12f1648ee4f190e2ce706f26088727ff89', 'message': ""In the FinalizableReferenceQueue code, remove the unnecessary nested exception\nclass Finalizer.ShutDown, which could cause problems if the URL for the\nclassfile of Finalizer was not related in the obvious way to the URL for the\nclassfile of Finalizer.ShutDown. This is Guava issue 1505\n<https://code.google.com/p/guava-libraries/issues/detail?id=1505> reported by\nJesse Glick <jglick@cloudbees.com>, and the fix is based on the patch he linked\nto there.\n\nAlso add a test to ensure that Finalizer doesn't acquire other nested classes\nin the future.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=51090847\n""}"
3412,"{'code': '6bd126800bda431b5c92031860a0218005281868', 'message': 'Shuffling from internal-only change.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=51059733\n'}"
3413,"{'code': 'be863aad5ebb288314281db5c3a45a0a5f04fbe3', 'message': 'Update Mozilla PSL.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=50980142\n'}"
3414,"{'code': '9b6903b54fef23d73b62db546efd5ab772f2d8ef', 'message': 'Add ""text/tab-separated-values; charset=utf-8"" as constant MediaType.TSV_UTF_8\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=50964188\n'}"
3415,"{'code': 'd1d35776eeda1a3441a0990b5764fabd637faec7', 'message': ""Ensure that CharMatcher.precomputed() doesn't change description.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=50957795\n""}"
3416,"{'code': '037c25513fd8a08b84778f5a7fe167a2bbf48d5e', 'message': 'Fix a wrong description in CharMatcher.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=50956932\n'}"
3417,"{'code': '29364e0193a91f91b62d8f08db771c1efd4194b0', 'message': ""Add documentation that SetMultimap and mutable values don't get along, as per Guava issue 357.  https://code.google.com/p/guava-libraries/issues/detail?id=357\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=50924610\n""}"
3418,"{'code': '47afc85796c53a48f2ef6e236ee3f1ac41c0133e', 'message': 'Small simplifications to LocalCache to extend AbstractReferenceEntry where possible.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=50778090\n'}"
3419,"{'code': '3a534d35b632476ca1a01520005a63914168d24c', 'message': ""Actually fix tearDown handling that was made worse in CL 50062431.\n- The behavior before that CL was to ignore exceptions thrown by tearDown.\n- The behavior currently is to exceptions thrown by tearDown unless there was another exception thrown by the test itself, in which case we overwrite the test's exception with the tearDown's exception.\n- The new behavior is to respect the exception from tearDown unless an exception from the test itself exists to override it. This matches the JUnit behavior. Really.\n\nThis time, I've added (internal-only) tests.\nI also improved some error logging in the tests while I was debugging.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=50778046\n""}"
3420,"{'code': 'c2a4be676394146b6416bea267d13c38d36fed8d', 'message': ""This CL fixes invalid self-referential collection operations (c.addAll(c), c.removeAll(c), c.retainAll(c), and c.containsAll(c)). Such cases are either no-ops, undefined behavior, or unnecessarily complicated, and often reveal bugs. This an automated fix using error-prone.\n\nWe intend to make this a compilation error in Google's Java compiler, so it is necessary to fix existing occurrences first to avoid breaking builds.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=50739321\n""}"
3421,"{'code': 'ac76a7e81f43e2a9394f3a935b1758b665e355de', 'message': 'Fix a race condition in\nAbstractServiceTest#testListenerDoesntDeadlockOnStopAndWaitFromTerminated.\n\nThe race condition is triggered due to a slight difference in the behavior of\nstartAsync().awaitRunning() vs. startAndWait()\n\nstartAndWait() would return RUNNING even if the service in question was\nalready TERMINATED whereas awaitRunning() will throw if the state is\nTERMINATED when it is called.\n\nThe service in question here very quickly transitions from\nSTARTING->RUNNING->TERMINATED so depending on thread timing awaitRunning\ncould observe the service as RUNNING or as TERMINATED, the fix is to have the\nservice shutdown be triggered by a call to stop rather than happening\nautomatically.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=50639385\n'}"
3422,"{'code': '6b3dd12bb8960885afedb1807660d923fe3bfce8', 'message': 'Fix division bug in HashCode.writeBytesTo()\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=50635321\n'}"
3423,"{'code': '3c09dbf36b034c6b60f1ad9d0e1a30f6435e3756', 'message': 'Service rewrite!  Add new methods to service so that we can move users away from the confusing ListenableFuture based methods.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=50634823\n'}"
3424,"{'code': 'da7157938e5ff11b46f9ffe713ee4dd96eb6a786', 'message': 'Move hashCode() implementation into abstract parent class instead of\nsubclasses.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=50632699\n'}"
3425,"{'code': '5de36fdaf41f71d04478de0cb074ff83953dc2e3', 'message': 'Extract CollectPreconditions with some common checks.\nUse those checks more widely, especially checkRemove.\nMore importantly, use checkEntryNotNull to include the key and value in ""null key/value"" NPEs of ImmutableMultimap and GWT-only ImmutableMap/ImmutableBiMap.\n(Non-GWT ImmutableMap/ImmutableBiMap already got this right.)\nPlus, make ImmutableMap.copyOf(enumMap) and ImmutableMultimap.put(Entry) resilient to entries whose keys or values become null midway through construction.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=50631776\n'}"
3426,"{'code': '32113144f6be3fecf033f34f019d99c71a8f7778', 'message': 'MOE insert public for com.google.common.hash.HashCodes.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=50582094\n'}"
3427,"{'code': 'f7055ea833e87697ec0c42b5c25031a38a93b218', 'message': 'Fix small LocalCacheTest bug\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=50580565\n'}"
3428,"{'code': '6e21d471651c79e182120605f3f795887d0e03a4', 'message': 'Add fragment escaper.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=50515561\n'}"
3429,"{'code': '8d2d036e4eab9730c22014083940e3c7c9c4d0af', 'message': 'Update javadocs for HashCode.fromString().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=50463690\n'}"
3430,"{'code': '88e7a44f78968bcac26550166dec81a6176cb22d', 'message': 'Add HashCode.fromString(String).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=50449901\n'}"
3431,"{'code': '5b19db451f68be2d4707174492ecad58467e6983', 'message': 'Copy static factory methods from HashCodes to HashCode.\nDeprecate the old methods in HashCodes.\nUpdate usages in com/google/common/hash to use new methods.\nMove the tests from HashCodesTest to HashCodeTest.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=50448177\n'}"
3432,"{'code': '62fad0aca86ea8385261bb7ca62f023cf84d25f1', 'message': 'Add test demonstrating perhaps incorrect behavior of\nHashCode.hashCode().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=50390060\n'}"
3433,"{'code': '69aef6bc78879184a48c767e1f9963464a1e1ca7', 'message': 'Small javadoc tweaks to Stopwatch based on external Guava issue #1492.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=50384056\n'}"
3434,"{'code': '9e513787c859c6ea922574ef30c66f17eb9158f1', 'message': 'Elements of Sets.powerSet should support contains() in O(1).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=50069151\n'}"
3435,"{'code': '8ea0f20aac47a603c01c1fe895777df0f3afbedf', 'message': 'Javadoc improvements:\n- Minimize the importance of ""short circuiting"" in ComparisonChain.\n- Fix copypasta ListenableFuture doc to refer to ""this Future"" instead of ""the input Future.""\n- Specify the exit status used by UncaughtExceptionHandlers.systemExit.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=50066092\n'}"
3436,"{'code': 'af87e6536353841a280a1d73d6a70cc4460c2ead', 'message': ""Don't ignore exceptions thrown by tearDown() (unless they would mask exceptions from the test itself).\nThis puts our generated GWT tests in line with what JUnit normally does.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=50062431\n""}"
3437,"{'code': '728c1d5d82ebd313d049831456585968ae32ab85', 'message': 'Tiny simplifications to HashBiMap.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=50050765\n'}"
3438,"{'code': '1b9eef548d75db78fb9edab1b2ad3449a0bbfbd7', 'message': 'Make generic type <E extends Comparable> instead of <E> for priority\nqueues.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=49949075\n'}"
3439,"{'code': '2a7b489484c763e5df5af678d9705a33af8b30e4', 'message': 'Added constants for HPKP (public key pinning) headers.\n\nSee http://tools.ietf.org/html/draft-evans-palmer-key-pinning-08\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=49911987\n'}"
3440,"{'code': '5b3d25198e03796bb1db21f86be399413f759154', 'message': 'Added constant for Strict-Transport-Security header as defined in http://tools.ietf.org/html/rfc6797#section-6.1.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=49905943\n'}"
3441,"{'code': '3757a700a89638e5747d966bdaa8266b62c974c8', 'message': ""Fix BaseEncodingTest#testBase16UpperCaseIsNoOp to actually test what it's meant to test.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=49905873\n""}"
3442,"{'code': '95466d0c4b6f4db596676de7fd9fc8004c8610c5', 'message': 'Overhaul of the Queues javadocs on the static factory methods.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=49900450\n'}"
3443,"{'code': '78a5053adfbe5fd3f6a166463bae40d1c51bbc66', 'message': 'Shuffling from internal-only change.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=49835144\n'}"
3444,"{'code': '0802228cd7df2c0c8fdcbb6c2fecea117cc2e74f', 'message': 'Change AbstractListeningExecutorService to extend AbstractExecutorService.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=49779273\n'}"
3445,"{'code': 'bfec5b3a3e7ab0cbb7202902378a2e7d9d4ee28e', 'message': 'Mark some of the worst-performing tests on GWT as @GwtIncompatible, to speed up tests slightly.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=49627900\n'}"
3446,"{'code': '196edb139d49d373abbce013008da0206b83f0ca', 'message': 'Provide JDK sources when generating Javadoc.\nThis enables Javadoc to inherit documentation from JDK supertypes.\nhttp://code.google.com/p/guava-libraries/issues/detail?id=1181\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=49615231\n'}"
3447,"{'code': '34f10a20f9610af1b3f1c05af981c34c96706e64', 'message': 'Add publicApiOnly (shuffling resulting from internal-only change).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=49600551\n'}"
3448,"{'code': '043300690bf6417534f6506e74493b91d599e4d6', 'message': 'Give a removal date for PrimitiveSink.putString(CS).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=49578904\n'}"
3449,"{'code': 'd9a2e8c7539219651bc809a6d1d0c7086d464e9a', 'message': 'Add some missing @since 15.0 tags.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=49577247\n'}"
3450,"{'code': '03cb97cf4d29f5daed7e89400e76ed2e6150299f', 'message': 'Add DiscreteDomain.bigIntegers(), which was in fact already implemented and tested.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=49576220\n'}"
3451,"{'code': '6d51dfed9da1f104353eaa20cfb2940f274254c2', 'message': 'A few small Javadoc changes.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=49575019\n'}"
3452,"{'code': 'f2204c8fe19b973fc26d7e4ed2a147c08a538410', 'message': 'Removing unnecessary index bounds check for lazy striped when\nall bits of the hashcode are to be used.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=49571072\n'}"
3453,"{'code': '651c628d515dbfe6614d8b3e23b47a389a3d9d1c', 'message': 'Delete DiscreteDomains for Guava 15.\nRemove erroneous @since 15.0 on deprecated method InternetDomainName.name().\nUnstrip a couple of classes that are now public in collect/package-info.java.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=49570015\n'}"
3454,"{'code': 'fe3680db04a0874a86ebb6e91ce2b76c07380f06', 'message': 'Note that arrays get no special treatment in Objects.hashCode javadoc.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=49561753\n'}"
3455,"{'code': '87c758892b137a647fdb975c79443519ff25828e', 'message': ""Fix a couple of issues with JDK7 javadoc style by using a slightly customized version of the default stylesheet in Guava. Specific issues this fixes:\n\n- Huge text with a slightly misaligned first line in <pre>{@code} blocks in Guava javadoc (for example, see http://docs.guava-libraries.googlecode.com/git-history/v14.0.1/javadoc/com/google/common/io/Closer.html). Both <pre> and <code> were increasing the font size. This changes the <code> block to inherit the font-size of the <pre> block.\n- No blank line before <pre> blocks in class-level javadoc. A CSS class rule for a div surrounding the class level javadoc set <pre>'s margin-top to 0.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=49515875\n""}"
3456,"{'code': '952d4e85528e725a9e9851d4b262f4c9e1037d8d', 'message': 'Add Queues.synchronizedDeque(Deque<E>).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=49514053\n'}"
3457,"{'code': 'ae6bc9be431d7601b1f4713679efea126673378e', 'message': '- Move close of <pre>{@code} blocks (i.e. ""}</pre>"") that are on a separate line up to the last line of the block contents, eliminating an extra blank line between the pre block and what follows.\n- Change a number of <pre> blocks to <pre>{@code} blocks.\n- Remove @Override from methods inside several <pre>{@code} blocks. When they\'re preceded by a {, they cause javadoc to screw up by thinking they\'re an invalid javadoc tag, even though it doesn\'t interpret tags inside {@code} blocks....\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=49513507\n'}"
3458,"{'code': 'f8350ebc99849dc78d16580905dc9ed214606cf8', 'message': 'In com/google/common javadoc, add explicit <p> before paragraph text following other block level closing tags (</h*>, </pre>, </table>). Without the <p>, a blank line may not be added between the text and block level elements such as <ul> that follows it.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=49494081\n'}"
3459,"{'code': '2c9f00e5b801ce69742712437b1bc50d2c2fbb93', 'message': 'Add explicit <p> at the start of paragraphs following an </ol> or </ul> tag in com/google/common javadoc. JDK7 javadoc without the <p> does not show a blank line after the list.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=49461463\n'}"
3460,"{'code': 'c400582feea741917725f9d6e52242ff798a3419', 'message': 'Add isEmpty() to ByteSource and CharSource.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=49444816\n'}"
3461,"{'code': '928b47f0c8d2a4112505e2759215de2b8fc220e3', 'message': 'Random javadoc spruces for Maps.asMap/toMap and Ordering.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=49401524\n'}"
3462,"{'code': 'efb63c5b066f880d9b6a8482be5f291685f99b5f', 'message': 'Fix a small typo in Multimaps.transformValues Javadoc.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=49382729\n'}"
3463,"{'code': 'aa3881c473473b26c81100e04804769f414ba4f2', 'message': 'Miscellaneous cleanups.\n- Remove ""final"" from ""static final"" methods, as it has little meaning there.\n- In ""Expired entries may be counted in Cache.size,"", change ""in"" to ""by"" to match similar change to MapMaker.\n- Remove line-starting @ so that AbstractInvocationHandler code snippet isn\'t truncated.\n- Insert some spaces after casts in PopulatedCachesTest.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=49192494\n'}"
3464,"{'code': '6328442d5b19af1048f3ee2177f90f129df70520', 'message': 'Detect symbolic link cycles in ClassPath\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=49168430\n'}"
3465,"{'code': 'de8f4e8d1076b412a975f5ce940b49b1d1a45628', 'message': 'Add a beans.xml file disabling CDI bean discovery to META-INF/ in the guava jar. See guava issue: https://code.google.com/p/guava-libraries/issues/detail?id=1433\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=49166428\n'}"
3466,"{'code': '3d1299c5d302b7242d70103c1fc015b2baaf5776', 'message': 'Clarify the behavior of Map.size() in a MapMaker-built Map with weak or soft references, borrowing phrasing from CacheBuilder.\n\nMotivated by http://stackoverflow.com/questions/17559629/why-does-guavas-mapmaker-report-an-incorrect-size-for-my-map-when-using-weak-ke\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=49138369\n'}"
3467,"{'code': '3db9f5251829ee55fec7974d0b90959069f980eb', 'message': 'Small formatting change from internal change.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=49112717\n'}"
3468,"{'code': '9acc76ba49891400a3bca063eadae3e56759a731', 'message': 'Strip out weightedConsistentHash reference from public JavaDoc.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=49100661\n'}"
3469,"{'code': '35df6e874f188730e5f16441607999715615760a', 'message': 'Open source Hashing#sipHash24() and Hashing#sipHash24(long, long).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=49085958\n'}"
3470,"{'code': 'b4d0b679c1f67f895b92cc5ff456e22b55a9c03d', 'message': ""Verify that the RegularImmutableAsList constructor doesn't check for nulls, to help verify that ImmutableSet.asList() is O(1).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=49062366\n""}"
3471,"{'code': '3eb2b0066287b41687c0fbeb952675aec7aaf168', 'message': 'Fix some formatting in Closer javadoc.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=48904048\n'}"
3472,"{'code': '9f7b2061de289f7167dbabf8fd48870b6f22f78d', 'message': 'Redo: Use the context class loader in Resources.getResource(String), instead of\nthe class loader of the Resources class. Continue to use that loader if the\ncontext class loader is null, though.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=48888869\n'}"
3473,"{'code': '10c89fa1f17a4f5d7b79318ccb8f8438d3d11222', 'message': ""Replicate CL 47862236's clarification to sameThreadExecutor-using methods.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=48838767\n""}"
3474,"{'code': '32859ffb8f3eb98771c6974b9c2208e1b84059a4', 'message': 'Some additional Multimap doc clarifications in re: Guava issue 1458:\n\nhttps://code.google.com/p/guava-libraries/issues/detail?id=1458\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=48811159\n'}"
3475,"{'code': '045be6e5700cfba46d8409459f7318138703607e', 'message': ""Change MediaType to add constants to the known types map as they're created, eliminating the need to explicitly add them all after they're created.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=48801732\n""}"
3476,"{'code': '8ac2bbf85c9599ddbf553a8f06d531b573680d3c', 'message': ""Include failing parameter index in exception - useful for inherited classes where it's\nnon-obvious which parameter is failing null check.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=48801694\n""}"
3477,"{'code': '7c3a7b17ff193720dc57ccf21aaa5525a75b3ffb', 'message': 'Add test for roundtripping HashCode#toString.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=48688256\n'}"
3478,"{'code': '721f17976199f1636e86447370b2caa96a226a39', 'message': 'Fix low-hanging rawtypes warnings for common.collect.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=48684234\n'}"
3479,"{'code': '065330f23b151aeeb9269cf202507107283f6db8', 'message': ""Score one for javac7's rawtypes warning: surely we just overlooked the proper generics on these signatures?\n\nTogether these have only one outside caller, which looks safe.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=48653001\n""}"
3480,"{'code': 'fb45d57b44e2efe2e746f223976c48109bd15cb6', 'message': 'Add EPUB MediaType\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=48636026\n'}"
3481,"{'code': '5aba95c099a945c9e7db23a991cee262ec0453f2', 'message': 'Re-document goodFastHash, with the (hopefully) appropriate amount of scaretext.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=48602073\n'}"
3482,"{'code': '7eb5f329410c413ca9d19fadf60cb18f294d4597', 'message': 'Get rid of usages of TestUtil from common.io test classes and open source most of FilesTest.\n\nThis includes several changes:\n\n1. Replacing the use of TestUtil.getSrcDir() to get at resources in the testdata package as Files. This is handled by creating a File from the URL path directly if it\'s a file:// URL and copying the resources to a temp dir on demand if it\'s not.\n2. Replacing the use of TestUtil.getTmpDirFile() with a temp dir created in a manner similar to Files.createTempDir(). Also, IoTestCase\'s tearDown() should ensure that any temp dirs/files created during tests are deleted afterwards.\n3. Changing some file paths in FilesTest to be built dynamically from their parts so as to hopefully work correctly on Windows as well as Unix systems. For example, instead of ""/foo/bar"", file(root(), ""foo"", ""bar"").\n4. Fixing a few things with the testdata resources in the BUILD file.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=48592858\n'}"
3483,"{'code': 'da6eb34410a1fb324a5d6c0655c6720dcc173f3f', 'message': 'Delete AbstractSetMultimapTest, whose remaining tests are all covered by SetMultimapTestSuiteBuilder.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=48590510\n'}"
3484,"{'code': 'fab8b9744496a0ebca5232863ab186b7ac63c8e0', 'message': ""The fact that ClassPath does a lot of I/O in its creation makes the two added methods unnecessarily expensive.  They still make sense, but perhaps not on this class.\n\nRollback: Update ClassPath to expose the URIs that comprise the classpath.  Also add an asClassPathString method that lets you quickly go from ClassLoader to a classpath suitable for Java's -classpath flag.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=48583016\n""}"
3485,"{'code': '1feb507ee7bc2febd26ab8af061c19741c72d01d', 'message': 'Migrate the remaining Multimap.values() tests from AbstractMultimap to MultimapTestSuiteBuilder, and delete AbstractMultimapTest, which no longer contains any tests.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=48537940\n'}"
3486,"{'code': 'e9dc7846c13cec948c52099c2e8c25a7840275f6', 'message': 'Update open-source Guava to Truth 0.13, and tighten up tests from allOf->exactly and allFrom->exactlyAs.\n\nI started with an unconditional textual substitution.\nThen I went back and reverted false positives: EnumSet.allOf, EnumFilter.allOf, Matchers.allOf, IterablesTest.testSkip_allOf*.\nThen I reverted any tests that failed (all of which looked like they ought indeed to stay as allOf/allFrom.)\nI gave all the remaining automated changes a sanity check, and they all passed.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=48536664\n'}"
3487,"{'code': 'd20b08ea72dc8fc16e040fd9d86c3b307d826135', 'message': ""Update ClassPath to expose the URIs that comprise the classpath.  Also add an asClassPathString method that lets you quickly go from ClassLoader to a classpath suitable for Java's -classpath flag.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=48519216\n""}"
3488,"{'code': 'cd9b3291a91b3b802930ebad062ed35b6d3d6347', 'message': 'Remove com.google.common.collect.Ranges (the static methods have been\nmoved to com.google.common.collect.Range).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=48509690\n'}"
3489,"{'code': '16829e682639508f5d018dddfab9c979bdf21434', 'message': 'Improve an error message.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=48472965\n'}"
3490,"{'code': '7acf92913329c2df23f86402477a89e744e675b9', 'message': ""Add a mechanism to ForwardingWrapperTester for when the forwarded interface contains methods that are defined to 'return this'.  In this case straight delegation doesn't work since the wrapped methods should return the forwarding object and not the delegate object.\n\nThe strategy is to detect this situation by inspecting the return value of the forwarded method and if it is assignable to the interface type then we allow the forwarding method to return either the return value of the delegate or the wrapper itself.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=48461760\n""}"
3491,"{'code': '71e08b2de575c87e8f51f8e0cd678f782e87eb07', 'message': ""Remove JUnit4 @Test annotations from JUnit 3 tests, where they're no-ops.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=48455067\n""}"
3492,"{'code': '5027441c818d9b1737982fce55e0bdb7973eef2b', 'message': 'Remove deprecated appendTo(Object&Iterable&Iterator) overloads.\nThese methods existed only to support classes that implement both Iterator and Iterable.\nIf you need to add such a call in the future, cast the argument explicitly to Iterator.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=48293496\n'}"
3493,"{'code': '31b625a38cf0967e155ac1f4b1c288f31dd885ca', 'message': 'Typo fix.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=48205733\n'}"
3494,"{'code': '03ae95e3f18d44bb9ae9b6fe4fd054b4ec8a78f1', 'message': 'Change MultiInputStream and MultiReader to work with ByteSource and CharSource rather than InputSuppliers. Change Byte/CharSource#concat to no longer delegate to Byte/CharStreams#join and change join to delegate to concat instead.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=48146409\n'}"
3495,"{'code': 'eed0c3203f42b170899c5a2237963a5b37123f0e', 'message': 'Fix rawtypes (and some unchecked) warnings.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=48127404\n'}"
3496,"{'code': 'c3738d987ab1a481f8b9721bb33a9060a3a57526', 'message': 'Reduce the visibility of ForwardingService internally.\n\nForwardingService has been deprecated for a while, but I\'m not sure if it\nsafe to delete from guava yet (""@Beta means never having to say you\'re sorry""?)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=48122716\n'}"
3497,"{'code': '3374b1ace7fbb9f2780d506ccb2abd2fdd618008', 'message': 'Adding a helper class for adding Content Security Policy headers to a HttpServletResponse.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=48037766\n'}"
3498,"{'code': 'b4c04c1ab7cd2804ff1f4d27aa8c3c857d76280f', 'message': 'Create sameThreadScheduledExecutor().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=48036849\n'}"
3499,"{'code': '83cc342cfcea485f312baaeaa348970430e1db5c', 'message': 'Add @since for KEY_ARCHIVE.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=48031735\n'}"
3500,"{'code': 'd34814fd4e8f13c1c78603bc620b251313ba10e9', 'message': 'Annotate FutureCallback.onSuccess parameter as @Nullable.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=47989392\n'}"
3501,"{'code': '230c68caf4e520c7de21facbdea55d5b9945cdd8', 'message': 'Annotate safeContains and safeRemove parameter as @Nullable.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=47980950\n'}"
3502,"{'code': '208522b2022a967827ee6e26d989b29f51c73fb1', 'message': 'Add KEY_ARCHIVE.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=47874734\n'}"
3503,"{'code': 'ad581bedc004e942be77bab68d36fcd43a1edb99', 'message': 'Clarify statement in addListener documentation.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=47862236\n'}"
3504,"{'code': 'a1c2b84baed4ba3a8c0fffa81765c24a17a55f47', 'message': 'Change x == x to equivalent isNaN() in preparation for making it a compile error.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=47811494\n'}"
3505,"{'code': '8e7d357e239696a1b7674447a72958027a1ec332', 'message': 'Delete AbstractListMultimapTest, which no longer has any tests not already part of ListMultimapTestSuiteBuilder.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=47674443\n'}"
3506,"{'code': '99754ca7d31a8f11cafb0b7fe72e84c3feb3d9e0', 'message': ""Delete AbstractCollectionTest, which is now only being used in multiset implementation tests, and which has no remaining tests that aren't already part of MultisetTestSuiteBuilder.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=47666389\n""}"
3507,"{'code': 'b8dc3cf5402498ec452f5d427122ae3686563ebc', 'message': 'Some internal changes in RateLimiter.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=47663162\n'}"
3508,"{'code': 'dac081ddbe0bffe8423bfd051ff03f90a558d401', 'message': 'Migrate Synchronized{,Navigable}SetTest to the SetTestSuiteBuilders and off of AbstractCollectionTest.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=47662426\n'}"
3509,"{'code': 'd085a922d99276ad5a965030ca6c5ffc58d228a1', 'message': 'Kill AbstractMultisetTest.  All its remaining tests are tested elsewhere by MultisetTestSuiteBuilder.\n\n(In the process, we kill off several other implementation-specific tests that are still just duplicating MultisetTestSuiteBuilder tests.)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=47557844\n'}"
3510,"{'code': '6ca2091f598a6427b3075c7cc4a7ba00b31ebbb3', 'message': 'Migrate remaining Multiset.elementSet() tests to MultisetTestSuiteBuilder.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=47554296\n'}"
3511,"{'code': '05bf2d68025bfd054f430ef02453c14ebbda9d4e', 'message': 'Migrate the remaining Multiset.entrySet() tests from AbstractMultisetTest to MultisetEntrySetTester, fixing a few genuine bugs encountered in the process.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=47552716\n'}"
3512,"{'code': '92d3b5e287634d7254ae823544dcc1611bd0fade', 'message': 'Add MultisetEqualsTester to MultisetTestSuiteBuilder.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=47550101\n'}"
3513,"{'code': 'be16c8a4d33fa0e519f53bc07b66d514911c9ba6', 'message': 'Added support for days, hours, and minutes to chooseUnit and abbreviate\nmethods.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=47548131\n'}"
3514,"{'code': '1e53ba78519220d8780d7542471cb5a8698fc604', 'message': 'Finish migrating Multiset.remove() (and removeAll, and retainAll) tests to MultisetTestSuiteBuilder.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=47547148\n'}"
3515,"{'code': '212e5bb0ab79a02ac3ccbfd306191730ef99e71e', 'message': 'Remove tests of Multiset.entrySet() from AbstractMultisetTest that just duplicate tests from the entrySet() SetTestSuite generated by MultisetTestSuiteBuilder.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=47545853\n'}"
3516,"{'code': 'efdc4065a1c234beaa61120c753d0a8cc991c84e', 'message': 'Remove tests of Multiset.elementSet() that are redundant with the SetTestSuite generated for Multiset.elementSet() by MultisetTestSuiteBuilder.  (Some tests will still need to be migrated.)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=47543353\n'}"
3517,"{'code': '59c28bb1365a31cd22bf42b74764bd7508ee3fd1', 'message': 'Migrate tests for Multiset.add from AbstractMultimapTest to MultisetAddTester, split off from MultisetWriteTester as part of MultisetTestSuiteBuilder.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=47542388\n'}"
3518,"{'code': 'de16613436dacf69aa5d1216da24ac3c5de7a569', 'message': ""Remove redundant Multiset.contains() tests from AbstractMultisetTest, which are already covered in CollectionContainsTester as part of MultisetTestSuiteBuilder, and add a couple more multiset-specific tests.\n\nIn the process, fix a genuine bug where RegularImmutableSortedSet.containsAll assumed that a nonempty sorted collection with the same comparator didn't have multiples of an element.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=47540950\n""}"
3519,"{'code': 'e90e3c84968b4dd67ca4a07f8db0e645b43eedfc', 'message': 'Remove Multiset.iterator() tests redundant with the CollectionIteratorTester tests from MultisetTestSuiteBuilder.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=47509316\n'}"
3520,"{'code': '21a6374ff7c3d2675e69795d8788c78714c2c5cd', 'message': 'Migrate Multiset.remove() tests from AbstractMultisetTest to MultisetRemoveTester, split off from MultisetWritesTester, as part of the MultisetTestSuiteBuilder.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=47508469\n'}"
3521,"{'code': 'ddf4239134e1ab7cf41560044bf782d900d1e762', 'message': 'Delete Multiset.count() tests from AbstractMultisetTest that are redundant with MultisetCountTester in MultisetTestSuiteBuilder.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=47507664\n'}"
3522,"{'code': '2b3e4dc71d31eaf168d9881f23061e35f6b01d6d', 'message': 'Optimize UnsignedBytes.lexicographicalComparator() by using Long.numberOfTrailingZeros instead of an explicit binary search to identify the first byte where the two inputs differ.\n\nReported externally: https://code.google.com/p/guava-libraries/issues/detail?id=1435\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=47391350\n'}"
3523,"{'code': 'bf56054562666d43b275579cd4012c3e82448dfc', 'message': 'Use a radix trie approach to serializing TLDs for TldPatterns.java to minimize code size.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=47356985\n'}"
3524,"{'code': '86f50adc5e6a3b1b9c39a02a162c1570942f473f', 'message': 'Clean up most usages of Input/OutputSupplier in tests in common.io.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=47348463\n'}"
3525,"{'code': '2118534d13aafd68eac74c43111b6cc6081f3dd8', 'message': 'Delete tests from AbstractListMultimapTest that duplicate ListTestSuiteBuilder tests automatically generated by MultimapTestSuiteBuilder\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=47341744\n'}"
3526,"{'code': 'f6a5641740f84e4dd08557061632c4d8325e3763', 'message': 'Remove tests from AbstractSetMultimapTest redundant with tests from SetMultimapPut(All)Tester.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=47338686\n'}"
3527,"{'code': '4975140c1cf16da2ff3a25eabaed9adf4bb7701a', 'message': 'Use assertNotSame(x, y) in place of assertTrue(x != y)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=47307058\n'}"
3528,"{'code': '90b6dbd70736b4426170f8fbab2e4a3c0a5b5a10', 'message': 'Add FileBackedOutputStream.asByteSource(), a ByteSource-returning method to replace getSupplier().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=47293826\n'}"
3529,"{'code': 'f9e80f84404a1bb1fcae31ee325e6661e74e6790', 'message': 'Deprecate BaseEncoding methods that use Input/OutputSupplier and hide them internally.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=47292279\n'}"
3530,"{'code': '2653e5bbecfee0dc8bf502c48975740e3a6453eb', 'message': 'Add CollectionFeature.SUPPORTS_ITERATOR_REMOVE to MapTestSuiteBuilder for MutableTypeToInstanceMap.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=47287341\n'}"
3531,"{'code': '0cc0c30a58251b5e48655c368bde3b17867ef46e', 'message': 'Migrate tests for Multimap.keySet() from AbstractMultimapTest to MultimapTestSuiteBuilder.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=47283976\n'}"
3532,"{'code': 'ef05341d7de489e653e4abac4294ccff409704a2', 'message': 'Migrate Caliper benchmarks from the old, superclass-based API to the new, annotation-based API.\n\nMore information: LSC: Caliper Benchmark API migration (https://docs.google.com[]document/d/15KUhmIsTVn0EA9u2S5es4Otn5k3Lo_ZHhkDsT9LYRKc)\n\nATTENTION REVIEWERS: This is a (mostly) scripted, behavior-preserving change. It should have the following effect:\n- No longer extend c.g.caliper.legacy.Benchmark\n- setUp method overrides are now annotated with @BeforeExperiment\n- tearDown method overrides are now annotated with @AfterExperiment\n- time methods are now annotated with @Benchmark and the time prefix has been removed\n\nTested:\nran test_all_benchmarks\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=47282574\n'}"
3533,"{'code': '2a0b2600f4a01d67856177c7a03fcd8b979dcb3f', 'message': 'Clean up the last Multimap.entries() test in AbstractMultimapTest\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=47274767\n'}"
3534,"{'code': '8e796ca3f7146f6929f711f35e03983e6e71f468', 'message': 'Migrate tests for Multimap.keys() from AbstractMultimapTest to MultimapTestSuiteBuilder.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=47273152\n'}"
3535,"{'code': '1eb9f7dc7ae032be53db39d107e0b74dbc810f26', 'message': 'Instead of suppressing iterator().remove() tests, make iterator.remove() support an independent property of a collection implementation.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=47238893\n'}"
3536,"{'code': 'a912609acc77b5694c05d53270fcb00c61f4ad7b', 'message': 'Remove no-op main methods from Caliper benchmarks.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=47194759\n'}"
3537,"{'code': '36bef97796fa79d49a4d8592a599b520acdaf3e9', 'message': 'Migrate AbstractMultimapTest tests for Multimap.asMap() to much more exhaustive and detailed MultimapTestSuiteBuilder testers.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=47111812\n'}"
3538,"{'code': '292320335ac395b15352881bb4f5f3a0e6d3e43b', 'message': 'Preserve SortedSet-ness of value collections across serialization.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=47106820\n'}"
3539,"{'code': 'dd2d69a8eed71e0404350c31d6ba16cea496279d', 'message': 'Make sure all implementations being tested by SortedMapInterfaceTest are also tested with SortedMapTestSuiteBuilders, and remove tests from SMIT that are redundant with SortedMapNavigationTester.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=47103324\n'}"
3540,"{'code': 'bb81dac792bbbaa3072a0a49f91cb66d63e0894c', 'message': 'Somewhat trivial cleanups:\n- Use Sets.removeAllImpl in Maps.EntrySet.removeAll.\n- Work around bogus unchecked warning: ""required: Iterator<?> / found: I""\n- Remove derived size field from ReverseImmutableList.\n- Override builder() in ContiguousSet to supply more appropriate Javadoc.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=47102093\n'}"
3541,"{'code': '791e4add29fa08a760816173a41a4e92b9a7f62d', 'message': 'Migrate AbstractMultimapTest tests for Multimap.entries() to a MultimapTestSuiteBuilder tester.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=47101119\n'}"
3542,"{'code': 'b95fcde29c1ab99cfd08fabeb1005bde6f060f94', 'message': 'Add MapTestSuiteBuilder tests for MapConstraints.constrainedMap.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=47100566\n'}"
3543,"{'code': 'b14e334fd2cc3377470e02dea7b7f189ef5be776', 'message': 'Add TestSuiteBuilder tests for Maps.transform*\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=47098965\n'}"
3544,"{'code': '3d0bd8ca07c9bfd7605cc703e61c5637cf16e0c5', 'message': 'Trivial cleanups:\n- Remove stray paren in Ordering Javadoc.\n- Fix runnable/executor confusion in ExecutionQueue Javadoc.\n- Fix MockingModuleTester and FastStackTracer links that refer to type parameter T instead of its valid name, the erased type Object. Fix a few @see errors while there.\n- Remove ""This class is GWT compatible"" comments, which have been redundant since we began using @GwtCompatible in testlib code.\n- ""unreasonable slow"" => ""unreasonably slow""\n- Fix continued-line indent in Invokable.\n- Insert spaces in cast expressions.\n- Add missing spaces before open braces.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=47059317\n'}"
3545,"{'code': 'b48bd8cb219892d07c40abef4fa11ac892b92d4b', 'message': 'Add application/protobuf mime type, from\nhttp://tools.ietf.org/html/draft-rfernando-protocol-buffers-00\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=47014458\n'}"
3546,"{'code': '79d4012841dd3ec708a50b97924dd833ebed162d', 'message': 'Delete completely unused ConcurrentMapInterfaceTest.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=47004919\n'}"
3547,"{'code': 'c84d0031c8af6e00a9bb25a86bade4cf1d5af9ed', 'message': 'Guava issue 1423: fix TreeMultimap.asMap().headMap to properly register inclusivity argument\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=47004337\n'}"
3548,"{'code': '76f33bbfb9c0f5954461ce705a5c4b7f71e26ef9', 'message': 'Remove tests for Multimap.get from AbstractMultimapTest that duplicate tests in MultimapTestSuiteBuilder\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=46990147\n'}"
3549,"{'code': 'ad68eedd50815c0b1f11aa5cdc26f6c033096979', 'message': 'Add test suites for Multimap.equals to MultimapTestSuiteBuilder\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=46989151\n'}"
3550,"{'code': 'd09f9c94653ae470050f55032df7ad81eb7aef3f', 'message': 'Migrate Multimap.clear() tests (and tests to clear Multimap views) to MultimapClearTester.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=46987144\n'}"
3551,"{'code': '73365e53f81c02e231c9e3a68276d74a61408373', 'message': 'Remove tests from AbstractMultimapTest that overlap with MultimapRemoveTester and MultimapRemoveAllTester in MultimapTestSuiteBuilder.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=46986379\n'}"
3552,"{'code': 'ae2c37b1ba5de61df02e1f018e294f255c071c32', 'message': 'Add MapToStringTester and MultimapToStringTester, and fix ForwardingNavigableMap.StandardDescendingMap.toString() to correctly iterate in descending order.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=46952541\n'}"
3553,"{'code': '91305e4d1ebee9da5de58e1fac09293db154f1eb', 'message': 'Remove get().subList() tests from AbstractListMultimapTest that are redundant with ListSubListTester in the derived test suite for ListMultimapTestSuiteBuilder\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=46951757\n'}"
3554,"{'code': '12f610ed3f6e78289505fe102b27075954f941f4', 'message': 'Add explicit type parameters in FilteredMultimapValues to make JDK6 happy.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=46951071\n'}"
3555,"{'code': '80f11e8ca15c1080d962c372f3a30457a8649671', 'message': 'Delete Multimap.contains{Key,Value} tests from AbstractMultimapTest that are redundant with MultimapContains{Key,Value}Tester.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=46951020\n'}"
3556,"{'code': 'af700bf70e22351bacafea3525b9d3bb494b3559', 'message': 'Remove tests from AbstractListMultimapTest that are redundant with ListMultimapPutTester.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=46950561\n'}"
3557,"{'code': '9faddd05f325ad1e885abafc9f6d96eb9844bd58', 'message': ""Delete tests from AbstractMultimapTest of the multimap views in isolation, that is, tests that initialize the multimap, get the view, and don't reference the multimap afterwards.\n\nThese tests are redundant with the derived TestSuiteBuilders in MultimapTestSuiteBuilder.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=46949401\n""}"
3558,"{'code': '6a80b2ed3b2f841dbb67e73bd268af21b5cf651a', 'message': 'Migrate all remaining Multimap.replaceValues tests from AbstractMultimapTest to MultimapReplaceAllTester\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=46948091\n'}"
3559,"{'code': '16cbef3e29addf218fa6872282575c7840eb8ca4', 'message': 'Add tester to MultimapTestSuiteBuilder for Multimap.putAll(Multimap)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=46946989\n'}"
3560,"{'code': '2b96e112a9383ee72c957a15012ece829abbbbec', 'message': 'Replace Multimap.putAll(K, Iterable) tests from AbstractMultimapTest with more exhaustive tests in MultimapPutIterableTester\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=46945862\n'}"
3561,"{'code': '1feb7a1a7bc73ca4b23ce576559775ffb8ff364c', 'message': 'Add the TestSuiteBuilder for Multimap.values(), and fix Multimaps.filterXXX to pass those tests properly.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=46945446\n'}"
3562,"{'code': 'ad6a935e15ca12b3c429b753efa6876e549a7c29', 'message': 'Remove tests of Multimap.get() from AbstractMultimapTest that are duplicated in MultimapGetTester\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=46942143\n'}"
3563,"{'code': '2aa76241fb4d27b78d4eaa074c6f1f502e68056a', 'message': 'Delete tests from AbstractMultimapTest that duplicate tests in MultimapSizeTester.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=46940075\n'}"
3564,"{'code': 'a829dfef2d7ef2df54212d8fca416f4a3efdcef4', 'message': 'Add Multimaps.asMap() helpers that return a Map with more\nstrongly-typed values than ListMultimap#asMap(), etc.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=46939830\n'}"
3565,"{'code': 'f585a2ee4c14ddcdcee3f48b370c05a6fe5ecc2b', 'message': 'Add tests to the asMap() views of ListMultimap, SetMultimap, and SortedSetMultimap to verify that the asMap().values() are of the correct type (List, Set, SortedSet) at runtime.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=46939057\n'}"
3566,"{'code': '04f34ed3e87104aaefb17d3da6ef57ca9aa720a4', 'message': 'Change return type of openBufferedStream() on ByteSource, ByteSink and CharSink to the base stream type rather than the Buffered* type to allow implementations to avoid unnecessarily adding additional buffering to streams that do not benefit from it.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=46926342\n'}"
3567,"{'code': '21f726080b3d6d5ce8662271364b0971b2dc6734', 'message': 'Reshuffling from internal-only changes.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=46885542\n'}"
3568,"{'code': '4855582f6264aa7bae5b430d9ebf79f40235b35e', 'message': 'Shuffling from internal-only changes.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=46844311\n'}"
3569,"{'code': '4c48f32b7a9edb93de049ea2ca2b4bad83d386f2', 'message': 'Give removal dates for Stopwatch ctors.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=46791249\n'}"
3570,"{'code': '007c622ab7d2e691172cc6b3251d79c4411efd6f', 'message': 'Improve error messaging in EqualsTester.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=46753546\n'}"
3571,"{'code': '7f1c522ef811e207367e974bf1c93e327e9b4dfb', 'message': 'Implement Object#equals() and #hashCode() for stateful HashFunctions.\nAdd tests to verify the behavior.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=46751376\n'}"
3572,"{'code': '542600dcff42f6846f662ac3a946348a7cf8ed3c', 'message': 'Override ImmutableBiMap.containsValue() to use the O(1) implementation, as per Guava bug 1416.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=46744049\n'}"
3573,"{'code': '5a7005987321b0392484f7bd42385c8b5c3826f9', 'message': 'Give removal dates (releases) for HashFunction#hashString(CS) and\nHasher#putString(CS).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=46638784\n'}"
3574,"{'code': '15ed775e5e27bf12b6ffe7cf49debd2029295672', 'message': 'Add reference to Funnels from Funnel javadocs.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=46629147\n'}"
3575,"{'code': 'd5f00005a2215ecbee0f8e1efc5eb90417c7a604', 'message': 'Change SynchronizedEventHandler to use a synchronized block rather than just synchronizing the method. Since the method body does nothing but call the super method, it (and its synchronization) was apparently being optimized away under a certain JVM: https://code.google.com/p/guava-libraries/issues/detail?id=1403\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=46627764\n'}"
3576,"{'code': '7a4b20a23965944cdcf97bc67643be5672816df2', 'message': 'Use com.google.caliper.legacy.Benchmark instead of com.google.caliper.Benchmark. This CL facilitates the move from a superclass-based API to an annotation-based API. Benchmark and legacy.Benchmark are equivalent classes, so this is NOT a behavior changing CL.\n\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=46556497\n'}"
3577,"{'code': '8a7df009f544f19f7538cfdd03e9dabed2660e51', 'message': 'fixed NPE caused by inaccessible directory, as reported by Guava issue 1407.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=46478011\n'}"
3578,"{'code': '0aa888b199bc12eae29633c71a424bd28750961b', 'message': 'Fix the logging in Futures.CombinedFuture such that:\n\n1. Errors are always logged (even if they were put into the output future)\n2. If allMustSucceed is true then all failures after the first are logged\n3. if allMustSucceed is false then all failures are not logged.\n\nIn the prior implementation (except for in rare races) exceptions were only logged if allMustSucceed was false.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=46470009\n'}"
3579,"{'code': '049475ece6864ddcff3f337373e33a0c49d719df', 'message': 'Some whitespace edits\n\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=46404300\n'}"
3580,"{'code': 'ab384d44a6e6c14671d5c5a5345a9ddd14052162', 'message': 'Update Mozilla PSL.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=46368166\n'}"
3581,"{'code': '65be1c541649612d6fe3aeac68da57a24521efe3', 'message': 'Add some missing dependencies in a GWT module.\n\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=46363258\n'}"
3582,"{'code': '1e3cad3fb5bfce262e045a852591d886f7801afd', 'message': 'Add Funnels#unencodedCharsFunnel (and deprecate Funnels#stringFunnel()).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=46350462\n'}"
3583,"{'code': 'ceadf9a57ade329799f0bb61fafe77c5dc98d1dc', 'message': 'Remove the rethrow Error behavior from AbstractFuture.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=46315153\n'}"
3584,"{'code': '50c376c305a85881acb049b09dd5edeb854739ba', 'message': 'Add a test for hashInt() vs. a loop w/ putByte().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=46295877\n'}"
3585,"{'code': 'c565dcbdafed1ccc65582e6bf1f2245c8a6be7d0', 'message': 'Change ServiceManager.Listener to be an abstract class with empty implementations of its callbacks instead of an interface.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=46244288\n'}"
3586,"{'code': 'dc931f9621ab1865e67fbf026590b6371e4a19f3', 'message': 'Guava issue 1322: deal with a potential overflow issue in ImmutableTable.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=46160775\n'}"
3587,"{'code': '69f6172fe06f1d48036bfbe20c99a7616b299353', 'message': 'Fix typo in Maps.immutableEnumMap. See https://code.google.com/p/guava-libraries/issues/detail?id=1397\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=46145330\n'}"
3588,"{'code': 'dedbc1ba5baa4f6210323e78587cf23651a185f3', 'message': 'Change Service.Listener from an interface to an abstract class with no-op implementations of all the callbacks.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=46026613\n'}"
3589,"{'code': '1b9f08d9523a9999f95d340863d91b010d010088', 'message': 'Allow a max size of 0 for EvictingQueue\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=46003229\n'}"
3590,"{'code': '826bfdcdcb4d07dc7483a03de70b09a37c5d4024', 'message': 'Use hashFoo() shortcuts instead of newHasher().putFoo().hash().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=45995812\n'}"
3591,"{'code': '9a36716497512f94c99c88d3c2c17c995ea0348b', 'message': 'Remove incorrect test using UTF_16LE.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=45985871\n'}"
3592,"{'code': '3a03624df74595b4dd953a4ca9fed43408249ca4', 'message': 'Changed Invokable.from(constructor).getReturnType() to return ParameterizedType instead of raw class when the class is parameterized. This makes constructor invokable more consistent with factory method invokable.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=45912432\n'}"
3593,"{'code': '7a844bbe7806a613d3500df616f7283d72f85453', 'message': 'Sort and removed unused imports in com/google/common.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=45827926\n'}"
3594,"{'code': '24b19640d83ad02145e6cef5d6adf1d87e912ed4', 'message': 'Allow HashCode#padToLong to work with hashs that have <32 bits.\nFix a small typo in Hasher javadocs.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=45717814\n'}"
3595,"{'code': 'e758192597c410ffed5ff2603ed15f6e6fdb74dc', 'message': 'CHANGE: Make HostAndPort GwtCompatible by getting rid of a regex.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=45669298\n'}"
3596,"{'code': '6c3884a677d2e4194be338367cd5d3b0da4ee73a', 'message': ""Change FileByteSource.read() to not unnecessarily copy the byte array in the normal case where the file size doesn't change.\n\nIt was incorrectly assuming that if the first read loop filled the original array, the last read() call would have returned -1 if it was done, which is not the case.\n\nGuava bug: https://code.google.com/p/guava-libraries/issues/detail?id=1376\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=45616868\n""}"
3597,"{'code': 'b1cd575950858c4c831e9260b4a710ca79de9c1a', 'message': 'Fix apparently harmless but still incorrect references to module name.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=45613704\n'}"
3598,"{'code': '4a0a5de238d5f562133552f7ee01a521771a061f', 'message': 'Remove unused HTML dependency.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=45608957\n'}"
3599,"{'code': 'e5097404cee4415cb39185dc157b311f017c6c76', 'message': 'Fix @since for EscaperAsserts.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=45601740\n'}"
3600,"{'code': '134fe75cbcfc2fbc319ab31d0a4a1e7dcd372bba', 'message': 'Add links to the hash function comparisons to the Hashing javadocs.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=45527021\n'}"
3601,"{'code': '580fdcd57e5b1eb7fe860be0fe7c03f41d39b267', 'message': 'Add a test to demonstrate that hashBytes(Ints.toByteArray(i)) ==\nhashInt(Integer.reverseBytes(i)).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=45476839\n'}"
3602,"{'code': '953e11352bbcb297987c81d1158f0c46f16cc054', 'message': ""Fixed a bug in rejectTypeVariable() where we failed to account for the owner type's type variables. For example:\n\nabstract class From<K> {\nclass To<V> {\nTypeToken<To<V>> type() {\nreturn new TypeToken<To<V>>(getClass()) {};\n}\n}\n\nstatic <K> TypeToken<From<K>.To<?>> cheat() {\nreturn new From<K>().new To<String>() {}.type();\n}\n\nTypeToken<From<String>.To<?>> notReallyString = TheClass.<String>cheat();\nnotReallyString.rejectTypeVariables(); // Should throw\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=45444012\n""}"
3603,"{'code': 'cafb21d020445be9819d047961b2c8c3d8b956db', 'message': ""Added TypeVisitor to make it easier to navigate type hierarchy, and used it to replace a few code duplications.\n\nTypeVisitor might be able to become something that's releasable for users to check on individual sub-components of a Type. Or, if after learning use cases, all that's needed are hasTypeVariables() and hasWildcards(), we'll just add the higher level APIs.\n\nSee Guava issue: https://code.google.com/p/guava-libraries/issues/detail?id=1362\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=45443595\n""}"
3604,"{'code': '2f3fc9c4c2952acad8ba0159cbf426528de5631c', 'message': 'Add tests for common aliases of SHA1.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=45427688\n'}"
3605,"{'code': '18cb0eeb06aadd86101b6fe20be7f7d896231bd7', 'message': 'Remove Platform.clone(), along with various supersource versions.\nThe last non-test caller was removed in CL 45290173.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=45408889\n'}"
3606,"{'code': 'f331dcf67a97ab7853076e56cd62a1d6bbeb25c1', 'message': 'Reshuffling from removal of internal-only method.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=45408398\n'}"
3607,"{'code': '0beafad032035936df0898c71229d63acd57a0ac', 'message': 'Release base escaper classes, HTML escapers, XML escapers, and URL escapers into Guava.\nKeep the source-code escapers internal until we figure out which ones to recommend and what to name them.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=45374049\n'}"
3608,"{'code': 'a257c66ce0695b9052cccfffd51d5dc063d4b092', 'message': 'Added code example to AbstractInvocationHandler to suggest users to use Reflection.newProxy().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=45317940\n'}"
3609,"{'code': '74f261f7f205ed04e528a6591e85cd6b11eb238f', 'message': 'fix some docs in ExecutionQueue\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=45311589\n'}"
3610,"{'code': 'fb49505b676b1ec84eda8dd430ee04d848f17f62', 'message': 'add csiro.au as TLD since is not listed on Mozilla PSL\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=45307952\n'}"
3611,"{'code': '31978328af5af66bc67bcbdda12b20710c2cfcad', 'message': 'Run ""normal"" GWT tests in public Guava.\nWe still don\'t run the suite-builder tests, so the run is incomplete, but at least it\'s fairly quick:\nTests run: 6667, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 155.218 sec\n\nAmong the steps of this process covered by this CL:\n- Export the generated GWTTestCase files into Guava.\n- Add dependencies in guava-gwt on the guava (and guava-testlib) test sources.\n- Treat the GWT portion of guava-testlib as though it is part of the guava-gwt tests (to sidestep the issue that we should really have a separate guava-testlib-gwt artifact analogous to the separate guava-gwt project). (Mainly this means putting its files under guava-gwt/tests.)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=45160153\n'}"
3612,"{'code': 'f03c9d816c1c5d149a983db8097543ad845dafff', 'message': 'Use the renamingDecorator to ensure that Services always run in appropriately named threads.\n\nAbstractIdleService and AbstractScheduledService encode the current state in the name so you should see something like\n\nMyService (STARTING|RUNNING|STOPPING)\n\nAbstractExecutionThread service just uses the serviceName() (so it would be ""MyService"")  I could additionally try to encode the state but it didn\'t seem worth it.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=45135687\n'}"
3613,"{'code': 'e4ddb97b0403cf90f18ea70823e2224c93234d8b', 'message': 'Provide ExecutorService decorators that will rename the threads in which its tasks run for the duration of the task.\n\nOpen issues:\n1. should any of these be public?  Currently I am only planning on using them for some of the Service base classes so package private is fine, but we may want to make them public.\n2. I needed/wanted to use WrappingExecutorService but it was marked GoogleInternal, so i removed @GoogleInternal.  Is this ok? or should i use a similar private class? moe-strip public from it?\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=45121293\n'}"
3614,"{'code': '8cc057266b0704e98678df6d595affca17b59299', 'message': 'Apply test.include to testlib tests as well as main tests.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=45103307\n'}"
3615,"{'code': 'cf569f9cdea18b258aade8a268603fa6113cb184', 'message': 'Closer.register supports null closeable\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=45058002\n'}"
3616,"{'code': 'f8d47319ee710ecbf55eab44016a8f3355c6d7b1', 'message': 'Internal refactoring to make it easy to expose a factory method that configures the burst size\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=45016791\n'}"
3617,"{'code': '09f11c0477dc918147cafbc70268d7b4f9f4df5c', 'message': 'Convert GWT-only tests into normal tests.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=44698403\n'}"
3618,"{'code': '4c27d5012bf6cb2605bcc9f5fca398351c72cb7e', 'message': 'Add ByteSource.empty() and CharSource.empty().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=44815909\n'}"
3619,"{'code': '8768c424f9809dd34ded53b222610ff4d0992b86', 'message': 'Add nullWriter(), a Writer that discards everything written to it.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=44805209\n'}"
3620,"{'code': '0863294405ea8c7ba302e25626703cf8db318c14', 'message': 'Mention the use of slice(offset, length) for viewing a range in the array to the ByteSource.wrap javadoc.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=44798251\n'}"
3621,"{'code': 'edbbda5f140e5347819e6202de274f353dac8ffd', 'message': 'Fall back to countByReading if InputStream available always returns zero.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=44796829\n'}"
3622,"{'code': 'efa4d2b38592c8ab69b560733eac47d3914e78e7', 'message': ""remove the queuedListeners lock from both ServiceManager and AbstractService.\n\nThe original idea of splitting the queuedListeners queue into one queue per listenerInstance didn't pan out because it didn't actually solve the issue of not holding a lock while submitting the listener to the executor.  So this is a different strategy.\n\nI pulled all the listener execution logic into a new class called ListenerQueue which is analogous to ExecutionList (not sure about the name though...) which cleaned up both AbstractService and ServiceManager.\n\nThe approach is two-fold\n1. do not remove a listener from the queue of listeners until it has definitely been submitted to its executor\n2. ensure that submitting a listener to its executor happens no more than one time (using a lock).\n\nN.B. we are still vulnerable to a weird or buggy executor implementation. If calling execute(runnable) runs for a long time without calling runnable.run then we can still deadlock.  I don't believe we can actually solve this problem without giving up on the ordering guarantees.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=44709344\n""}"
3623,"{'code': '36bdd84d73ea42ce598240bd3167a8660d7f66e8', 'message': 'Convert GWT-only tests into normal tests.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=44698403\n'}"
3624,"{'code': '357dea3f21b11b054727df3a6e551b7988ec3b70', 'message': 'Fix a copy/paste mistake in CharSource javadoc.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=44648058\n'}"
3625,"{'code': '59e9ebc364323a38926869268f0528cdc94bbf2a', 'message': 'Add isPrimitive(), wrap(), and unwrap() methods to TypeToken\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=44620879\n'}"
3626,"{'code': '5f2671256b389097c0712875936df4f29a1b7237', 'message': 'Fix typo in javadoc: the name of the method to override is ""compare"", not ""compareTo"".\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=44580155\n'}"
3627,"{'code': '9775718339e7cfe0c0c562230eef10ff5c08a070', 'message': 'A few small hash changes.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=44571077\n'}"
3628,"{'code': '6e7895aefec0dc661ee8caf10c73da7f45ec080e', 'message': 'Deprecate the constructors in com.google.common.base.Stopwatch and Stopwatch#elapsedMillis and #elapsedTime.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=44568679\n'}"
3629,"{'code': '470f9b72db9a335df1b17146898caef346bc814f', 'message': 'Reduce redundant iterator creation in Multimap.putAll(K, Iterable<? extends V>)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=44559924\n'}"
3630,"{'code': 'dbfb72a685141c6f5aab70fb9d1ba64428a2ac36', 'message': 'new Stopwatch(); -> Stopwatch.createUnstarted();\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=44556107\n'}"
3631,"{'code': '0eafd7694a41c40f3dee6c3e8c1cae0acd6a2dc7', 'message': 'Change ByteStreams.asByteSource calls to ByteSource.wrap and deprecate it.\nChange CharStreams.asCharSource calls to CharSource.wrap and deprecate it.\nChange both deprecated methods to delegate to the replacement method.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=44516201\n'}"
3632,"{'code': '6066b33620f52cb4a8d30c272527f8118c94881f', 'message': 'Replace new Stopwatch().start() with Stopwatch.createStarted().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=44515274\n'}"
3633,"{'code': '09997a5005a53577084dd70da30e46bdf608d0a1', 'message': 'Nullability fixes.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=44514905\n'}"
3634,"{'code': '2643ac3c65213b1bb222d6eb971d1f282c6d2e8e', 'message': 'Copy ByteStreams.asByteSource(byte[]) to ByteSource.wrap(byte[]).\nCopy CharStreams.asCharSource(String) to CharSource.wrap(CharSequence).\n\nAdd package-private CharSequenceReader and tests, for use by the CharSource.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=44506727\n'}"
3635,"{'code': 'c6c66536dc903ef9e870d3c8562d25808bbe66b2', 'message': 'Add Class-Path cycle detection to avoid StackOverflowError\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=44466033\n'}"
3636,"{'code': '8914ff92b9e8e788a16b56f95dc0f0377c43f5c0', 'message': 'Throws UOE in MutableTypeToInstanceMap Entry#set()\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=44465568\n'}"
3637,"{'code': '90a9774f3bfde1d0354368592e36814235cb12d5', 'message': 'Add static factory methods to Stopwatch: createStarted() and\ncreateUnstarted().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=44465501\n'}"
3638,"{'code': '525185ecd37d23e9f509faad549a248243b97137', 'message': 'Fix up some javadoc in TypeToken re: TypeLiteral.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=44411479\n'}"
3639,"{'code': '5401a778bfddd5ff34a3902d6c756479149602e4', 'message': ""Some more refactoring of TypeResolver.TypeTable. I was in a hurry. The TypeTable code wasn't in a form I'd LGTM.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=44403308\n""}"
3640,"{'code': '3212103020bedd2abf04927204f61f87bfcf8745', 'message': 'Make TypeResolver public in Guava.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=44329762\n'}"
3641,"{'code': '56244f6d37cc6d99cd9b68cfd50445e556b8f4de', 'message': 'Fix bug in statistics benchmarks implementation of Knuth algorithms.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=44319466\n'}"
3642,"{'code': '58fc10825fd1add23d5631aa1d587de942363507', 'message': 'Change Futures.allAsList and .successfulAsList to return an unmodifiable list.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=44306369\n'}"
3643,"{'code': '7bcb8e4836be241f88b4467a39cf8a0a686afdf2', 'message': 'Hasher#putString(CharSequence) to Hasher#putUnencodedChars(CharSequence)\nHashFunction#hashString(CharSequence) to HashFunction#hashUnencodedChars(CharSequence)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=44304885\n'}"
3644,"{'code': '8f7edd23d144c9886a3258c95e1915b598cd95fe', 'message': ""Updated AbstractPackageSanityTests javadoc to replace 'public' with 'visible' since by default package-visible classes and methods are also tested.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=44268725\n""}"
3645,"{'code': '0013fd3b1536ee4fc6ae5b4028f9e750a66b8729', 'message': 'Guava issue 1337: fix potential race with Cache.refresh.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=44213416\n'}"
3646,"{'code': '80d067b049456d9c13951bd7726e69a65e635d65', 'message': 'Typos.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=44212313\n'}"
3647,"{'code': '04314940cc5cf73c9aa638764edfd4261d2ebe17', 'message': 'Release Funnels.sequentialFunnel in Guava 15.0\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=44211868\n'}"
3648,"{'code': '7fc6a0651ad62ff8670a6f0b5cce74af50d8f4f1', 'message': 'Migrate users of the deprecated HashFunction#hashString(CharSequence) to HashFunction#hashUnencodedChars(CharSequence).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=44204656\n'}"
3649,"{'code': '597cceece45bb4f7e05fe1bb764064f472febd35', 'message': 'Add Resource Timing CORS header: Timing-Allow-Origin.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=44198561\n'}"
3650,"{'code': '776e8a68fb9180f23abfe9cb508b3cd6f856e56e', 'message': 'Add Hasher#putUnencodedChars and HashFunction#hashUnencodedChars.\nDeprecate Hasher#putUnencodedChars and HashFunction#putUnencodedChars.\nUpdate callers to add overries/delegations where necessary.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=44090897\n'}"
3651,"{'code': 'b9fb572927249d885c631ceba20a2198da53de3d', 'message': 'Modify recordStats to not accept a value in same manner as setWeakKey\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=44016270\n'}"
3652,"{'code': '81cc624e0695dcf5133f57256e3263abbe18266c', 'message': 'Update the hashing benchmark to include all of the different hash\nfunctions.\n\nDelete HashBenchmark.java (nearly the same as HashFunctionBenchmark)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=44010255\n'}"
3653,"{'code': 'a94293f5e2b131267792bd3af67af71c019ebc79', 'message': 'Automated g4 rollback of changelist 44002262.\n\n*** Reason for rollback ***\n\nBreaks more ImmutableMap mockers.\n\n*** Original change description ***\n\nMake ImmutableMap extend ImprovedAbstractMap.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=44008499\n'}"
3654,"{'code': 'd8b765c09c121ba16994df9084002bad6c620d57', 'message': 'Make ImmutableMap extend ImprovedAbstractMap.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=44002262\n'}"
3655,"{'code': '29bcd86f4fbb1ef2a47cf96ef2b6ec941843ba0d', 'message': ""Remove the synchronized keyword from the ServiceManager.ServiceListener.startupTimes() method.  It is unnecessary and potentially dangerous (I'm pretty sure it could actually cause a deadlock due to lock ordering!).\n\nSee https://code.google.com/p/guava-libraries/issues/detail?id=1340\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43975294\n""}"
3656,"{'code': 'c4a6f8f55e0f07b2413540371025bb9aacee15eb', 'message': 'Add boolean parser to cache builder. add flag for record stats.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43956416\n'}"
3657,"{'code': 'd0a148bac00eebe5659bd9a33871b3a878237611', 'message': 'Update version number, factor out common config, plus a few nits, specifically:\n* 15.0-SNAPSHOT is the new release target\n* Plugin-management for commonly configured plugins moved into the parent.\n* Dependency management into the parents (for version and scope)\n* Make findbugs/javax.inject from provided to default (compile) scope, but mark optional.\n* Move Resources and sources paths into parent leaving exceptions in children.\n* Add a few helper comments for maintenance.\n* Add exclusions from Truth and Caliper to force use of guava being built.\n\nThere are a few ways this could be locked down more, plugin versions implicitly pulled, etc., but not really necessary - just the ones we explicitly use and configure are important. There are other checks we could do, including pulling in errorprone or checkstyle to help developers building locally submit conformant patches, but this is a further evolution that can wait.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43918640\n'}"
3658,"{'code': 'ecf812dffbaa93ac9e4bf7e8484b24f02abb05ae', 'message': 'Refactor out some common functionality in the HttpHeadersTest.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43918498\n'}"
3659,"{'code': 'adc8f1c5585c43023390030bc056465cac18b921', 'message': 'Deprecate ForwardingSortedMap.standardRemove, which has been discovered to interact badly with a bug in JDK6, and was never used in Google.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43914919\n'}"
3660,"{'code': 'c8a3113091ba181971969da60898439e18812b6b', 'message': 'Add Funnels.stringFunnel(Charset) overload.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43908416\n'}"
3661,"{'code': '68591abad922e0fc89c96c52ed5be39ecac09365', 'message': 'Fix SafeTreeSet so delegate.tailSet() is wrapped by a new SafeTreeSet as is headSet() and subSet()\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43905970\n'}"
3662,"{'code': '9418fd9a18a0aedc38033fd6d967c34b5467c6e0', 'message': 'Remove Google specific headers from HttpHeaders.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43894977\n'}"
3663,"{'code': '357053240d33103fb8a4669ebd2d4cf26789bd18', 'message': ""Make GwtPlatform available to server-side applications.\nIt's not actually used there, but dev mode clients do use it, and it won't be available to them unless it's compiled by javac as part of our GWT targets.\n\nOne complication: The obvious way of doing this requires the server-side code to depend on the GWT target containing @GwtScriptOnly.\nThis might be OK (though we'd have to check with at least one project, whose tests flag the new dependency), but it turns out to be unnecessary:\n@GwtScriptOnly has an effect only on the supersource class (which makes sense, since it's the supersource version that's the one being used in JavaScript only -- the GwtPlatform files I'm editing here are more like @UseThisInsteadIfNotGwtScript).\nThus, I can remove it from these versions of GwtPlatform.\n\nhttp://code.google.com/p/guava-libraries/issues/detail?id=1328\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43892696\n""}"
3664,"{'code': 'e624382dadd8eb2b1bcf66c30572a8d519e5d8c8', 'message': ""Test and document LoadingCache's behavior in the face of InterruptedException (mostly by linking to the new <http://code.google.com/p/guava-libraries/wiki/CachesExplained#Interruption>).\nAlso, update some unrelated broken links: http://web.archive.org/web/20090301165914/http://java.sun.com/docs/books/jls/third_edition/html/lexical.html#101089 => http://docs.oracle.com/javase/specs/jls/se7/html/jls-3.html#jls-3.10.6\n\nExternal bug: https://code.google.com/p/guava-libraries/issues/detail?id=1122\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43892475\n""}"
3665,"{'code': 'becf0f62ce7620fc5b76c307527e5863ba231c9e', 'message': 'Simplify StandardTable implementation in common.collect.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43866642\n'}"
3666,"{'code': '0202617129f4c0132f3285ac9d5db36439b73dd8', 'message': 'Add benchmarks to determine the overhead of the various stats calculation algorithms.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43849595\n'}"
3667,"{'code': 'aac56f9bb9f71a5cee93888663de0a63e469da3e', 'message': 'Fix FunnelsTest to @GI Funnels.sequentialFunnel tests\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43846130\n'}"
3668,"{'code': '656d79bc8b0b7b4320367c9b30606db98a19944d', 'message': 'Add Funnels.sequentialFunnel, an Iterable funnel wrapper, to Funnels.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43840825\n'}"
3669,"{'code': '5ab1057e772803f72c168db4e3c9efc461410fdc', 'message': ""Add calls to flush() after writing to streams in ByteSink and CharSink.\n\nIt turns out that, under JDK6, FilterOutputStream.close() calls flush() and ignores any IOException it throws. This seems like pretty bad behavior, but we can work around it by manually flushing first. Doesn't seem like this should add much overhead for streams that don't require flushing before close either.\n\nOn the other hand, this only applies to:\n- subclasses of FilterOutputStream\n- for which flush() does something\n- which do not override close() themselves\n- not running under JDK7+\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43795021\n""}"
3670,"{'code': 'e7d0000cb29ff9f2b9cbbb98b2964aeeef3fcf63', 'message': 'Document the simplest way to get a List<ListenableFuture> from ListeningExecutorService.invokeAll.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43643475\n'}"
3671,"{'code': 'c959e7d9bac0ee88adad17be15cc237ac1ba4608', 'message': 'Rename BloomFilter#mergeWith to #putAll\nRename BloomFilter#canMergeWith to #isCompatible\nRename BloomFilter#size to #bitSize\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43618412\n'}"
3672,"{'code': 'fb46f84b0b91ee35aa9b3e9f7beddc01a649e35f', 'message': 'Actually run some tests that claim to be @GwtCompatible under GWT, stripping out the @GwtIncompatible parts.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43617179\n'}"
3673,"{'code': '9a762763962df4b2f5011857f317237a2bff5763', 'message': 'Open source Splitter#splitToList.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43611289\n'}"
3674,"{'code': 'ad8f5749d69b6590303d1b68175d2b0d90631415', 'message': 'Minor javadoc touchups.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43575540\n'}"
3675,"{'code': '65b963bd5333df6ea04884d62afc548364223c13', 'message': 'Fix presidential history, a.k.a. - the Multimap javadoc.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43563199\n'}"
3676,"{'code': 'd6b1760bff541fb6935748ffcdb10c00ead2b4b0', 'message': 'Expose Lists.cartesianProduct inside Google.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43553359\n'}"
3677,"{'code': 'c86668adacd756bc040c3fb668a96757290e268e', 'message': 'Open source Futures#nonCancellationPropagating\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43477677\n'}"
3678,"{'code': '6b0f80d75843cd7b8623861198a9b7eee4d3eb6b', 'message': ""Automated g4 rollback of changelist 43443903.\n\n*** Reason for rollback ***\n\nPeople are mocking ImmutableMap, and will need to get fixed..\n\n*** Original change description ***\n\nAutomated g4 rollback of changelist 43314514.\n\n*** Reason for rollback ***\n\nRoll forward now that Grubby's fixed\n\n*** Original change description ***\n\nAutomated g4 rollback of changelist 43310565.\n\n*** Reason for rollback ***\n\nDirty Grubby hacks are getting broken again.\n\n*** Original change description ***\n\nCommon out ImmutableMapEntrySet implementation\n\n... description truncated by g4 rollback ...\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43454441\n""}"
3679,"{'code': '6ff6acf5bb62084118b6a613928643138b7cf731', 'message': 'Simplify the implementation of LongMath.sqrt.\n\nThe combination of an exhaustive test on all longs from 0 to FLOOR_SQRT_MAX_VALUE -- which takes under 90 seconds to run -- and a short proof manages to tighten the bounds from the previous proof, and simplify the reasoning at the same time.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43446198\n'}"
3680,"{'code': 'e89537bade715f1962b8f358c53b3cb36899ab10', 'message': 'Improve exception messages for HostAndPort.fromParts\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43445669\n'}"
3681,"{'code': 'a07134858ae51e4caee1ff56fc475b0a4a0dc8cb', 'message': 'De-GoogleIternalify some APIs for Guava 15.0:\n-c.g.c.collect.TreeTraverser\n-c.g.c.collect.BinaryTreeTraverser\n-c.g.c.io.File#fileTreeTraverser\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43443966\n'}"
3682,"{'code': '3e2950b1da46e4c976d2f79907bf61373770587e', 'message': ""Automated g4 rollback of changelist 43314514.\n\n*** Reason for rollback ***\n\nRoll forward now that Grubby's fixed\n\n*** Original change description ***\n\nAutomated g4 rollback of changelist 43310565.\n\n*** Reason for rollback ***\n\nDirty Grubby hacks are getting broken again.\n\n*** Original change description ***\n\nCommon out ImmutableMapEntrySet implementations.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43443903\n""}"
3683,"{'code': 'e6949fd57066ac483f173c71af32ff266258e69f', 'message': 'Open source ServiceManagerTest\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43414005\n'}"
3684,"{'code': '60509b7d4f785b4b3dded5a1dcfeb51b28a9ad97', 'message': 'Release ForwardingSortedMultiset into Guava 15.0.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43412779\n'}"
3685,"{'code': 'b8282012c5e03e349c926eebd68e16800e5f56f4', 'message': 'Open source Sets#newConcurrentHashSet() and\nSets#newConcurrentHashSet(Iterable).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43412565\n'}"
3686,"{'code': 'a1940dd06109feacb7b72fed17726c329a3f54f5', 'message': 'Simplify Multimaps.AsMap implementation, pulling up common logic from its subclasses\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43412108\n'}"
3687,"{'code': '83eeba6538e1b871a2f522fc2a9570eaf029bc41', 'message': 'Open source Files#isDirectory and Files#isFile\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43409856\n'}"
3688,"{'code': 'ecce54f4fbb9d34fb4c903055fd93c4d496b6a5d', 'message': 'Factor out common logic in ImmutableMultiset.EntrySet implementations\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43407517\n'}"
3689,"{'code': '9056840286b235c0a9bef8ca757e0817c954d6ba', 'message': 'Simplify and refactor the logic to ensure that Immutable(Bi)Map.Builder and friends create entries that can be reused by RegularImmutable(Bi)Map to avoid redundant copies.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43407355\n'}"
3690,"{'code': '56df0274a4a5ab8f37789eabaec0a419a4aed98a', 'message': ""18 months from Guava 15 will be September, not August.\nWe'll see if we end up needing to bump it to October because *somebody* doesn't get his Escapers work done in time for a March release ;)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43398394\n""}"
3691,"{'code': '3bc46110f41082510dff11df9c9fef8d514acad1', 'message': 'Add Content-Security-Policy header.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43393773\n'}"
3692,"{'code': '50a7e39a635b6e60332810eb286c4967c3849a4a', 'message': 'Automated g4 rollback of changelist 42665747.\n\n*** Reason for rollback ***\n\nAll the broke tests have been fixed... i think.\n\n*** Original change description ***\n\nAutomated g4 rollback of changelist 42655638.\n\n*** Reason for rollback ***\n\nBroke tests relying on previous empty service manager behavior.\n\n*** Original change description ***\n\nProvide a potentially more reasonable behavior for an empty ServiceManager. This is a situation that typically only arises in testing situations (but could theoretically happen w\n\n... description truncated by g4 rollback ...\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43389638\n'}"
3693,"{'code': '9a37e924161f131c79a814da407601d0a88e0b46', 'message': 'Add BloomFilter#canMergeWith(BloomFilter) which determines whether the\ngiven bloom filter can be safely merged into this one.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43357881\n'}"
3694,"{'code': '21d3cddf5a11f2f708f1d6a94f3536d907da95d5', 'message': 'Automated g4 rollback of changelist 43310565.\n\n*** Reason for rollback ***\n\nSome dirty hacks are getting broken again.\n\n*** Original change description ***\n\nCommon out ImmutableMapEntrySet implementations.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43314514\n'}"
3695,"{'code': 'fea5c4ad7429590a49cce01ce6ff226b6f15dc18', 'message': 'Common out ImmutableMapEntrySet implementations.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43310565\n'}"
3696,"{'code': 'bff94c6599b1a1a53cfadcc11bb2829ff244e430', 'message': 'Extend AbstractCollection where appropriate in common.collect\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43309776\n'}"
3697,"{'code': '3f948ef892b1207193cd73b213fb06e55bd30178', 'message': ""Automated g4 rollback of changelist 43265767.\n\n*** Reason for rollback ***\n\nadsapi has fixed their problematic LinkedListMultimap usage\n\n*** Original change description ***\n\nAutomated g4 rollback of changelist 43258188.\n\n*** Reason for rollback ***\n\nRollback until adsapi can delete their dirty hack that depended reflectively on LinkedListMultimap's inheritance hierarchy\n\n*** Original change description ***\n\nSimplify and deoptimize LinkedListMultimap\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43303012\n""}"
3698,"{'code': '1a3a560da39ad9c737af0d22df34ce7e42817546', 'message': 'Eliminate nondeterminism in memory consumption tests by forcing lazily computed views of the empty immutable collections.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43298195\n'}"
3699,"{'code': '3bd2dd34618a38a7f823dd72a603c5a47905b5b1', 'message': 'Add BloomFilter#size, which returns the number of bits in the underlying\nbit array.\nFinally remove BloomFilter#expectedFalsePositiveProbability\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43298086\n'}"
3700,"{'code': '0f5ac1191e8b258e747328b82f633938595e43cc', 'message': 'Remove Unsigned{Integer,Long}#asUnsigned from Guava 15.0.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43292361\n'}"
3701,"{'code': '6122e688a7549b4e164ed23720f2a5b5ac0a266c', 'message': ""Automated g4 rollback of changelist 43258188.\n\n*** Reason for rollback ***\n\nRollback until adsapi can delete their dirty hack that depended reflectively on LinkedListMultimap's inheritance hierarchy\n\n*** Original change description ***\n\nSimplify and deoptimize LinkedListMultimap\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43265767\n""}"
3702,"{'code': 'a1858510da0d99dfc3e3622741d2134fb22e18c1', 'message': 'Adds BloomFilter#mergeWith(BloomFilter).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43265147\n'}"
3703,"{'code': 'e17ee922de0d2285ff8bf8212823c33d8589512d', 'message': 'Simplify and deoptimize LinkedListMultimap\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43258188\n'}"
3704,"{'code': '155728d070ac6f2d2ca22644f5c5affea72d7feb', 'message': 'Simplify filter() implementations in common.collect\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43252637\n'}"
3705,"{'code': '39942eb70a09fbc879892fe4b240b6974843abc3', 'message': 'Deoptimize Iterators methods.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43251260\n'}"
3706,"{'code': '252e992199fdb7735e6303b289c7afde4fb2d797', 'message': 'Add AbstractTable, a skeleton implementation-agnostic Table implementation, and factor out code in common between Table implementations.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43250483\n'}"
3707,"{'code': 'ccbc3f6770998e4f795cf6ee4887120e5a2b81ab', 'message': ""Deoptimize Lists methods where overrides aren't clear wins.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43250163\n""}"
3708,"{'code': 'cb54c20bedf257f2eeec7e9f61105b2585ab0752', 'message': 'More simplification and refactoring of common code in common.collect.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43236585\n'}"
3709,"{'code': 'ee32a2dd64cce9318cef8b2a0e2c582118a2d236', 'message': ""Delete EmptyImmutableTable, which isn't clearly worth the code complexity.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43207266\n""}"
3710,"{'code': '791e34c93f643597c70b747e615d9ac41c8d7f21', 'message': ""Delete EmptyImmutableMultiset, which isn't clearly worth the code complexity.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43202169\n""}"
3711,"{'code': '8a6a477c15925ac0af861bb18cca13a1cec24d0a', 'message': 'Remove the following methods from\ncom.google.common.primitives.UnsignedInteger and UnsignedLong: add, subtract, multiply, divide, remainder\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43201569\n'}"
3712,"{'code': 'a7e66bb0852eba579b7b3dc8228b55e2a8124c7c', 'message': 'Remove com.google.common.io.{LimitInput,NullOutput}Stream.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43198122\n'}"
3713,"{'code': 'a8e4dd38cfae3e31ddd270e7f97ce283bf2c15f2', 'message': 'Promote StandardSystemProperty to @Beta in 15.0\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43197237\n'}"
3714,"{'code': 'b2f0d0fad93f11bb86a2ce1770bcb43fd014fa06', 'message': 'Delete EmptyImmutableList, replacing it with a singleton instance of RegularImmutableList.  This makes the common case for ImmutableList bimorphic instead of trimorphic, resulting in significant improvements to benchmarks.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43197187\n'}"
3715,"{'code': 'd2cfd91e0d557bba565e2c8dadd0b5b3f475f790', 'message': 'Remove Stopwatch#toString(int) as promised in Guava 15.0.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43194646\n'}"
3716,"{'code': 'd78a229d82448bb5dacf5f58b3c60a2b7d029843', 'message': 'Delete the Ordering.from(Comparator) and Ordering.natural() overrides of sortedCopy and immutableSortedCopy, since benchmarks suggest any speed increases are minimal at best.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43178753\n'}"
3717,"{'code': '7766079f27aa546315dc59a2742350e136060c7e', 'message': 'Add DecodingException and decodeChecked to BaseEncoding\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43138785\n'}"
3718,"{'code': '208def9719a79cf22f2788e808c33893726a1fbd', 'message': 'Make a few small changes to ServiceManager\n1. use the Monitor.enterWhen* instead of Monitor.waitFor* methods, as they are more efficient.\n2. rewrite servicesByState to sort a list of Map.Entries instead of constructing a Map and sorting a copy of the EntrySet\n3. Add an addListener convenience overload for when you want to use the sameThreadExecutor.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43135325\n'}"
3719,"{'code': '48efcd7ce82737d88abd2f8cb9db2c32f0878ce5', 'message': ""Manually check for nulls in more places.\nOur GWT tests would flag some of these, but it's looking like some of them aren't running.\n[]will fix that, breaking the tests.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43133605\n""}"
3720,"{'code': '843916e3258925b14ec8a1f97514f45c9b4692c0', 'message': 'Fix a bug where if Service.stop() was called multiple times while the Service was in the STARTING state the stopping() listeners would fire once for every call to stop() violating the contract that listener methods should be called at most once.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43133059\n'}"
3721,"{'code': '6f061fe5defc9b45957be13e86052c2db3cb0bbf', 'message': 'Minor collections cleanups.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43079662\n'}"
3722,"{'code': '6b6e0dd3e1bf1bf5ae32838490b0b6942ea237b4', 'message': ""Adds @CheckReturnValue to chainable methods of FluentIterable. Thanks to error-prone, this will cause [] to refuse to build any code that doesn't store the return value from these methods.\n\nIt will prevent subtle bugs where code is treating FluentIterable as though it is mutable, when in fact it is immutable.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=43045750\n""}"
3723,"{'code': '7f6596b3fa7472c23d0de18f8e509bbbb60f964b', 'message': 'Add two static MediaTypes\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=42979449\n'}"
3724,"{'code': '6487f52fabf979c6260ea652660e49ded05bbba3', 'message': 'Deprecate GenericMapMaker.\nRemove unused loadFactor() from GWT MapMaker (removed from non-GWT version in 1.0-rc4!), and make the class final (as the non-GWT version is).\nUpdate ConcurrentHashMultiset to accept MapMaker instead of GenericMapMaker.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=42970216\n'}"
3725,"{'code': 'f6defe0ba1f27626e7373b080bd407465b08735f', 'message': ""Fix serialization of GWT SingletonImmutableBiMap.inverse().\nThere is a self-assignment that went undetected because (a) we don't run error-prone against GWT-only code and (b) we can't use a final field without breaking serialization even worse.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=42969994\n""}"
3726,"{'code': 'a06826b92b151b3e4229eff9ceeeaf69031b9451', 'message': 'Reduce visibility of Range#asSet (internally).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=42968510\n'}"
3727,"{'code': 'abedc669bf43491e5c723576e014a35b6259fd2d', 'message': 'Deprecate softValues, not weakValues.\nI got this right in GenericMapMaker but wrong in MapMaker.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=42924061\n'}"
3728,"{'code': '3765a143332e3989589dc5a789d4cfc4225c9266', 'message': 'Remove reference to UTF_16LE equivalence.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=42919674\n'}"
3729,"{'code': '45db748d4c1ac8cd1215256ebbf3a1d645461cef', 'message': 'Make ExecutionList smaller and faster by using a manual queue instead of a LinkedList.\n\nWith these changes:\n* An empty/executed ExecutionList is now half the size (20 vs. 40 bytes), it is also smaller after execution as well.\n* The new ExecutionList takes 16 fewer bytes per listener added also there is only 1 object allocated instead of 2.  Also, if the list has already been executed there is no longer any allocation in add.\n* There were also performance gains between 0 and 20% across the 4 benchmarks I wrote.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=42915090\n'}"
3730,"{'code': '1740aac1bae09f0a2b8e7345ddfc90a10a84709b', 'message': 'Deprecate softValues.\nMake makeComputingMap package-private in Guava, and stop using it in the example code. (It is the only method scheduled for deletion in February or March.)\nReimplement out-of-package Guava makeComputingMap callers with the traditional putIfAbsent pattern.\nRemove methods scheduled for deletion in Guava 15.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=42902921\n'}"
3731,"{'code': '3e4c4a3affbc1be871dcfa503f5fd1c5da260626', 'message': 'Hide Constraint+Constraints internally, deprecating them in Guava.\nUpdate remaining callers in a behavior-preserving way.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=42901728\n'}"
3732,"{'code': '8751ff625db5cf46db0abb0a680b6dbb194ce21d', 'message': 'Migrate users of deprecated Range#asSet(DiscreteDomain) to\nContiguousSet#create(Range, DiscreteDomain).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=42868160\n'}"
3733,"{'code': '8b930104c5944d019536f7f419fc9c89ab2b9046', 'message': 'Update truth to 0.11\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=42845267\n'}"
3734,"{'code': '47e9a30a4a4388458127caadeb9b6318dfea509c', 'message': 'Replace ""throw Throwables.propagate(checkedEx)"" with equivalent ""throw new RuntimeException(checkedEx).""\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=42786068\n'}"
3735,"{'code': '756d91f4b64a573328cbbb6b8d507669af6dbc58', 'message': 'Replace ""Throwables.propagate(alreadyTriedToPropagate)"" with equivalent ""throw new RuntimeException(alreadyTriedToPropagate).""\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=42782638\n'}"
3736,"{'code': 'e66c84b101f674401ffd4c5264b15a980f48e749', 'message': 'Open source some more benchmarks.\nThe Monitor benchmarks were left as internal when the class was migrated from Labs.\nMy guess is that that was nothing more than ""Caliper benchmarks can\'t be open-sourced yet.""\nI notice that earlier CLs didn\'t open-source them, either.\nMy guess is that that\'s just because they were excluded from the BUILD rule entirely and not merely marked with @GoogleInternal.\nMy guess is that the same is true of the EventBus benchmark.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=42749026\n'}"
3737,"{'code': '3775da660d35229a7574e5ef8b131293e3305269', 'message': 'Move Byte/CharStreams.concat into Byte/CharSource.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=42657113\n'}"
3738,"{'code': '392d2a538ddc28a69d37759a1328677cc124e046', 'message': 'Fix flaky test: Wait for the Future listeners to execute and not just for the Future to complete.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=42581734\n'}"
3739,"{'code': '7699e6c883a0d17e6ca129d8636d5437805a9c6d', 'message': 'Open-source known hashes for crc32, triggered by our new automated test that expects to find them.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=42547175\n'}"
3740,"{'code': '50eb4ccbae5cb9366f689db4e52c67b55549fe1c', 'message': 'Hashing.consistentHash: Add more tests to test that the C++ and Java implementations are equivalent.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=42533999\n'}"
3741,"{'code': '8c8c78960c5b01053c2771c3576f6931bb507ebf', 'message': 'Add a test that ensures any new HashFunctions must have an entry in\nKNOWN_HASHES.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=42508143\n'}"
3742,"{'code': '8f9ff19c23591e1371b96ae2076239cc2a28e812', 'message': 'listenInPoolThread didn\'t use to support a custom executor, but it has for a while.\nUnfortunately, I never updated it to acknowledge that an InterruptedException is now possible.\nWe don\'t really have any good options, so we\'ll go with ""keep blocking.""\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=42487946\n'}"
3743,"{'code': '26c72b73505e1f45ffdd25614d4c9bfc165b5b3d', 'message': 'Factor out more common code in Maps.filter and Multimaps.filter implementations\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=42449971\n'}"
3744,"{'code': '779fd55bd1de1e9408beca88c773298331cceccd', 'message': 'Simplify Multimaps.transform logic by sharing more implementation with Maps.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=42445381\n'}"
3745,"{'code': '56cc7ff9d3ffd4f3e5510fdd56cf1535d884a4d1', 'message': 'Simplify implementation of Multimaps.unmodifiableMultimap\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=42395522\n'}"
3746,"{'code': '9062bf938fde15436adddd8daf9359b033205081', 'message': 'Optimize AbstractMapBasedMultimap.values().iterator() to avoid going via entryIterator() and allocating entries which get immediately discarded.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=42383138\n'}"
3747,"{'code': 'efc75f97069f3cfff48cad998801ba99c126908b', 'message': 'Fix typo in MoreExecutors#listeningDecorator\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=42369458\n'}"
3748,"{'code': 'bb91f4e888b438d2c6bb071bfb826b229dc09faf', 'message': ""A rewrite of Monitor internals.\n- use a linked list of active guards instead of an ArrayList\n- never signal next waiter while this thread still counted in active guards\n- optimize away excess signals\n- other stuff rewritten to Martin's taste\n\nLike lukes, I got bitten by the Improve Monitor bug, in part\nalso as a learning experience.\n\nThis class really needs more tests.\n\nI got carried away, and now have a new appreciation for how\nhard it is to get this kind of code correct.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=42348803\n""}"
3749,"{'code': '6950e2c5f033d256910e615ad701b969b07dbd9a', 'message': ""Don't rewrite Multisets.equalsImpl in ImmutableMultiset\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=42277117\n""}"
3750,"{'code': '35ca2ccdb761de615df2f32b30ef497595f93a68', 'message': 'Rewrite the ImmutableCollection.toArray() methods in terms of a package-private ""copyIntoArray"" method, which also lets e.g. ImmutableMultimap.values().toArray() use arraycopies, etc.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=42276632\n'}"
3751,"{'code': '4c376a212781ad5f8afe1e901e3668f7db50b395', 'message': 'Promote EvictingQueue from labs.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=42276397\n'}"
3752,"{'code': '5fd86618cac019676e7fab7cce847c1fd29198ff', 'message': 'Rewrite ImmutableMultimap.values().iterator() not to go via the entries, so as to avoid allocating entries that promptly get discarded for the corresponding values.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=42275929\n'}"
3753,"{'code': 'f69200fa67f143bc9fbe4bbdb36650e6aa57a8fc', 'message': 'Make ImmutableMultimap.values().contains() redirect to ImmutableMultimap.containsValue, which for e.g. ImmutableSetMultimap takes O(#keys) time, instead of the old implementation, which takes O(#entries) time.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=42243991\n'}"
3754,"{'code': '07d29cba7e7efe70525b8ca94641fbc031f56939', 'message': 'Complete a TODO to write a proper ImmutableSet view for ImmutableSetMultimap.entries() rather than doing a full ImmutableSet copy of the entries.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=42243829\n'}"
3755,"{'code': 'a37ebc6eb5f242ccfa90cc11eef369979e932685', 'message': 'Use specialized entry types for ImmutableMap, and use these in the builders to avoid redundant copying of entries.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=42095809\n'}"
3756,"{'code': 'acca567031e047e14f965de4bfa3e2c0f80d43b6', 'message': 'Guava Issue #1276 http://code.google.com/p/guava-libraries/issues/detail?id=1275\n\nChange ServiceManagers INFO logs to FINE and guard them.  Along the way clean up some random things.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=42041878\n'}"
3757,"{'code': '638fcb8c799c53f55471201a639e001120b19815', 'message': ""Don't use exceptions in the control flow of AnnotatedHandlerFinder.  (Related: public Guava issue 1196.)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=42040968\n""}"
3758,"{'code': '9129e5e50020f84c7a859726b42ce211d2e37e5f', 'message': 'Miscellaneous documentation fixes and internal cleanups.\n- Remove potentially misleading ""it cannot be started/stopped more than once"" from Stopwatch exception messages.\n- Fix TreeTraverser ASCII art.\n- Remove inaccurate @GwtCompatible annotation from FeatureUtil.\n- Fix mistaken duplicate words (""the the,"" etc.).\n- Strip *all* of benchmark running instructions from CharMatcherBenchmark, and preemptively strip instructions from internal escapers benchmarks.\n- Remove test <echo> from ant section of pom.xml.\n- Add @Nullable to StandardBaseEncoding\'s other constructor\'s paddingChar parameter.\n- Remove stale comment from Futures. (UninterruptibleFuture is long dead.)\n- Update name of Truth GWT module.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=42036409\n'}"
3759,"{'code': '39524718ff5f501d5333955715c4bf02fd155a33', 'message': 'Automated g4 rollback of changelist 41959970.\n\n*** Reason for rollback ***\nCL is breaking aw3_cawfe.targeting, and aw3_cawfe.dtt builds:\nhttps://sponge.[]/target?id=d0b34600-250a-4d59-a7d4-0853fca21c18&target=//javatests/com/google/ads/apps/displayads/construction/webdriver:WebdriverTests_firefox-esr-linux#shard=1|run=1|attempt=1|page=-1\n\nhttps://sponge.[]/target?id=d0b34600-250a-4d59-a7d4-0853fca21c18&target=//javatests/com/google/ads/apps/displayads/targeting/webdriver:DisplayTabWebDriverTests_firefox-esr-linux#shard=1|run=1|attempt=1|page=-1\n\n*** Original change description ***\n\nLog the default charset once during Charsets class initialization.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=41990650\n'}"
3760,"{'code': 'c65fdbc3f931b34da5d7261609ad88bbefb7afd4', 'message': 'Conservatively simplify Tables and ImmutableTable implementations.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=41963659\n'}"
3761,"{'code': '6687d01aee3a8485fa33b9b98c16d8d2fdccb244', 'message': 'Log the default charset once during Charsets class initialization.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=41959970\n'}"
3762,"{'code': '5fd69e2b6cb3b9e6748dea92099ee319ba46a187', 'message': 'Scythe //java/com/google/common again.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=41918585\n'}"
3763,"{'code': '86bcc6fc5c9ddb872cdc345145ddfc4bd60ca297', 'message': 'Add a simple unit test for AbstractCache#aggregate.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=41904843\n'}"
3764,"{'code': '73946cea36084dd24100b93ef0dee54cbd632fc7', 'message': 'Added support for META-INF back. Now any resource loadable from a ClassLoader should be returned by ClassPath.getResource().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=41869216\n'}"
3765,"{'code': '82c959fe44eb4af14e44229c2c4ad6fface6defb', 'message': 'Change EventBus to remove the thread local Queue after dispatching events. (Guava issue 1263: https://code.google.com/p/guava-libraries/issues/detail?id=1263)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=41857158\n'}"
3766,"{'code': 'ce8e7a22b5486e77888a4b4bb54af693fb59184e', 'message': 'Add a simple test that shows why US_ASCII is usually a bad choice.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=41853734\n'}"
3767,"{'code': '249afc740edc8a3dcff81ccf35f334ef6e2dd946', 'message': 'Allow FluentIterable.transformAndConcat() to accept a Function<A, Iterable<? extends B>>.\nhttp://code.google.com/p/guava-libraries/issues/detail?id=1260\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=41841084\n'}"
3768,"{'code': '964373863f66752a8d653926e7733dc9ff7fa579', 'message': 'Correct two typos in IDN doc.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=41796838\n'}"
3769,"{'code': 'c8131b0236c38b19a9fd6ab8b5f7be94918239e0', 'message': 'Optimize IntMath and LongMath by using a branch-free helper implementation of the expression (foo < bar) ? 1 : 0.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=41793002\n'}"
3770,"{'code': '86cc26487f7e57201b0ac9a6d3c64571ac9f7bd3', 'message': ""Rollback\n\n*** Reason for rollback ***\n\nRolling forward now that the users depending on the error message have been migrated.\n\n*** Original change description ***\n\nRollback\n\n*** Reason for rollback ***\n\nPeople depend on the exact error message.  (They should feel bad, and they'll need to get fixed.)\n\n*** Original change description ***\n\nSimplify and organize various Map implementations.  Specifically:\n\n* factor out Hashing.smearedHash\n* organize the CompactHash collections'\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=41788418\n""}"
3771,"{'code': '2be342881ace329a9ebdc31990f719301de5f7c0', 'message': 'Add NullPointerTester.acceptIllegalArgumentException().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=41744871\n'}"
3772,"{'code': '7ecd1184ef08c07a1130f2949773a1760708b654', 'message': 'Move timeout start to before tryLock().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=41700665\n'}"
3773,"{'code': '4674468e300cb6242762228402733fda1ab3e7ee', 'message': 'Enable command-line filtering of tests with, e.g., -Dtest.include=**/ClassPathTest.java\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=41635188\n'}"
3774,"{'code': 'f8783704cc3d1b72a2def5cda476ac9a62e4a8f3', 'message': 'Fix sourceDirectory, restoring compiled serializers to guava-gwt jar.\nI accidentally removed the serializers\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=41634343\n'}"
3775,"{'code': 'fc6a72e81f6cbf81de64105105f296f0c84abdd0', 'message': '- Fix scheduleWithFixed(Delay|Rate). As originally implemented, scheduleWithFixed(Delay|Rate) would submit a Callable/Runnable wrapped in a FutureTask to the delegate ScheduledExecutorService and fail to run more than once due to run-once nature of FutureTask.\n- Implement cancel(boolean) on the returned LSFuture.\n- Omit FakeScheduledExecutorService changes.\n\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=41598013\n'}"
3776,"{'code': '1dc60fa85852708754ba0c394d223f5eef6f7f97', 'message': 'Rollback\n\n*** Reason for rollback ***\n\nWe may want to change these methods to return FluentFuture very soon.\n\n*** Original change description ***\n\nDe-betaify lots of methods in Futures.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=41594182\n'}"
3777,"{'code': 'a0c67ad3ac5ace5960e422abf3d4b103075521b2', 'message': 'Fix toString() of Resources.asByteSource to match method name.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=41591180\n'}"
3778,"{'code': '61d7db20077933bfac8ba1aec1965383a5da262a', 'message': 'Incorporate latest mozilla tld changes.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=41590242\n'}"
3779,"{'code': '1a518b598b43486cd36cc510bf89d5b60720a4c4', 'message': 'Migrate callers of caliper.Runner to caliper.runner.CaliperMain directly.\n\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=41579793\n'}"
3780,"{'code': 'd08271f2cb67c1c659247327f0e5ca3bfe04b48e', 'message': 'Added cw to TldPatterns.java\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=41558410\n'}"
3781,"{'code': '372a94bfa7992a98698affc08fc523d0b77e1bc3', 'message': ""Rollback\n\nPeople depend on the exact error message.  (They should feel bad, and they'll need to get fixed.)\n\n*** Original change description ***\n\nSimplify and organize various Map implementations.  Specifically:\n\n* factor out Hashing.smearedHash\n* organize the CompactHash collections' implementations better\n* use consistent error messages for ImmutableMap and subclasses when rejecting duplicate elements\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=41543614\n""}"
3782,"{'code': 'f8a94b9999e42a2eb1431948ebb57ab8533eaaa5', 'message': ""Simplify and organize various Map implementations.  Specifically:\n\n* factor out Hashing.smearedHash\n* organize the CompactHash collections' implementations better\n* use consistent error messages for ImmutableMap and subclasses when rejecting duplicate elements\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=41539237\n""}"
3783,"{'code': '445460f37ae3ceddd43e18cac7fade59640f2347', 'message': 'Remove redundant tests and open source it.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=41527580\n'}"
3784,"{'code': '6addb1f214c02b8f1de65cc564f5fa1e29da59ea', 'message': 'Make ImmutableTable serializable.\nAlso, reduce duplication across existing Table serializers.\nhttp://code.google.com/p/guava-libraries/issues/detail?id=1264\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=41522037\n'}"
3785,"{'code': 'd08905e9fc562c1f4d1ae0acfe6f9fb98d10f4f8', 'message': 'Deprecate name() and make toString() return name of domain.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=41514739\n'}"
3786,"{'code': '81b34a9fee52a8e4f4c878aeabbb404f5dd5337a', 'message': 'Make ImmutableMap.Builder fail atomically on null keys or values\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=41476478\n'}"
3787,"{'code': '1d11559a8d86ee5f7909a293e5063689fb8b0f30', 'message': 'Guava issue 1001: stop reimplementing Sets.newSetFromMap, now that the backport is in place.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=41471300\n'}"
3788,"{'code': 'f0321c523ce5450b3c8c22af39a6eaefbada0a40', 'message': 'Disable compilation of benchmarks, which have been updated to require a version of Caliper that has not been publicly packaged.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=41469652\n'}"
3789,"{'code': 'f1dfc6181adb562966a7937d64e1d4b0e8c48099', 'message': ""Change Sources/Sinks to implement Input/OutputSupplier temporarily, to make migration of usages easier (make it possible to change an InputSupplier to a ByteSource without changing an API that takes an InputSupplier at the same time). The getInput/Output methods are @Deprecated since they shouldn't be called directly. Also make public methods for viewing Input/OutputSuppliers as Sources/Sinks.\n\nAlso add Byte/CharStreams.concat, providing concatenation functionality equivalent to join for Sources.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=41360226\n""}"
3790,"{'code': 'cc34329792125a962b7b5f800fdb1d1874631aa7', 'message': 'Add automatic subSet tests in {Sorted,Navigable}SetTestSuiteBuilder, and override various SortedMap implementations in common/collect to return SortedSet keySets.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=41348783\n'}"
3791,"{'code': '61ac739d660eaeeec397938a6879c0c10f94a279', 'message': 'Migrate benchmarks from SimpleBenchmark to Benchmark and update the runner to accept Benchmark.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=41343581\n'}"
3792,"{'code': '5f3e5b82ce5e62b9d52041c79f2f3b997f0f68be', 'message': 'Hide deprecated FluentIterable.toImmutable* methods internally.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=41302220\n'}"
3793,"{'code': '16eac2df5395257ad039cad1c336c41bb55bb42a', 'message': ""Minor bug fix and simplifications in common.collect, including:\n\n* Iterables.skip(iterable, size)'s iterator would wrongly remove the last element of the input if the user called [next(), remove()].\n* In Iterators.concat, instead of using checkNotNull and Arrays.asList, just use ImmutableList.of\n* Use Itera{tors,bles}.addAll instead of for loops in Sets factory methods\n* Simplify Lists.charactersOf implementations\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=41300544\n""}"
3794,"{'code': '883fcd89d25adcc0f6e8ab7655c99b9f5b790b61', 'message': ""Fix ImmutableMap.copyOf's null checking on a singleton map with a null key or value.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=41297381\n""}"
3795,"{'code': 'f90d07978c10519b3c73e8a0801df30122ad06b9', 'message': 'Complete a TODO to avoid redundant copies of entry arrays in ImmutableMap construction pathways.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=41289454\n'}"
3796,"{'code': '1da5e0cf3f30aa1eeee8c0160977b00e0a9f58e6', 'message': 'Bias CharMatcher.precomputed() implementation towards BitSetMatcher, as per http://code.google.com/p/guava-libraries/source/detail?r=7218498c1e19a789a5064ae750db7e929e2e8287 comments\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=41247243\n'}"
3797,"{'code': '2a29d59da0266a6e5401e5a32ab30e812dd898c6', 'message': 'Broaden Maps.immutableEnumMap generics\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=41237787\n'}"
3798,"{'code': 'bfbd39e75b56c8bc552c2c83960afbf81eeffcb0', 'message': 'Optimize Monitor.leave.\n\nNo reason to check for whether we hold lock - lock.unlock will\nthrow IMSE for us.\n\nNo reason to signal if we are leaving a lock occupied with depth > 1.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=41204492\n'}"
3799,"{'code': 'af28f2bdd449716c4d6f6206873a356d99253f11', 'message': 'Add documentation to the remaining isPartialView methods.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=41191330\n'}"
3800,"{'code': '40ab4e481cfab78b02a6a1d41c66ff7d4c79462e', 'message': 'Simplify Maps.  Specifically,\n\n* factor out common code between mapDifference for Map, SortedMap\n* deabstractify Maps.KeySet and Maps.Values, since most (even if not all) implementations just return a specific Map\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=41190675\n'}"
3801,"{'code': 'b99b83e93dd3f0a448db8f0284c14b0ae759d85b', 'message': 'Split off Multimaps.filterXXX overloads for SetMultimap (and filterKeys(ListMultimap)).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=41190071\n'}"
3802,"{'code': 'a072275f7ec6cd71835baef23020a766ba0497e6', 'message': 'Simplify ImmutableCollection implementation and related code.  Specifically:\n\n* Redirect ImmutableCollection default serialization to ImmutableList, which it was basically emulating before\n* Factor out ""handwritten ArrayList"" logic from Immutable{List,Set}.Builder\n* Be more organized in ImmutableList creation pathways about where and when null validation is done\n* Use default List iterator implementation in ImmutableList.ReverseImmutableList\n* Use default List implementations for RegularImmutableList.{equals, toString}\n* Push down ArrayImmutableSet logic to its one and only subclass, RegularImmutableSet\n* Optimize ImmutableSortedSet creation paths, e.g. to avoid creating any garbage in duplicate-free common case\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=41188291\n'}"
3803,"{'code': '0071d72213c47537f79355468eb7b855af532340', 'message': 'Simplify Iterators and Iterables.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=41186453\n'}"
3804,"{'code': 'f9c1a637a439f4534b6d2cb8bb534b19a4e6efcc', 'message': 'Minor simplifications to Multimaps.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=41184579\n'}"
3805,"{'code': '02e459aacc3b534a580cd656b2e5d167b8b45026', 'message': ""Reconcile @GwtIncompatible (and @GoogleInternal) annotations with the build-system lists of GWT-compatible (and GWT-compatible emulated) files.\nThe main effect of this is to make InternetDomainName available under GWT in Guava. (It somehow seems to have worked anyway inside Google.) http://code.google.com/p/guava-libraries/issues/detail?id=1253\nIt's also necessary to make UnsignedInteger.multiply() (which is already deprecated) unavailable under GWT, since it is a simple passthrough to the times() method, which is also unavailable under GWT.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=41134674\n""}"
3806,"{'code': '33c8b01c890c778c1b18c260c7b83001a587e5b4', 'message': 'check that forAllPublicStaticMethods() at least covers one method, ot avoid the case that user forgets to add public static modifiers to the factory methods.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=41125051\n'}"
3807,"{'code': '8485330b17d5cd0b93fbb2f1429c09bf2a4155ab', 'message': 'Trim lots of unused and redundant code.  In particular,\n\n* refactor hash table size computations into one place\n* use Maps.safeGet and friends where appropriate\n* eliminate code duplication between the two skeleton implementations of NavigableMap.descendingMap()\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=41052812\n'}"
3808,"{'code': '95cf7a7e14c39fda1585127b83dd2e5ee974875d', 'message': 'It\'s January 2013!\n- Remove MapMaker.softKeys.\n- Remove AsynchronousComputationException (slated for November 2012 deletion).\n- Change Unsigned* methods\' expiration from a month to a version, since ""one version"" is what we try to do, anyway, and we had scheduled them for ""January"" rather than ""15.0.""\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=41046796\n'}"
3809,"{'code': '90a75c93246f0a403fc20275cb80d60e79978933', 'message': 'MOE stripping fixes:\n- Put ""MOE:{begin,end}_intracomment_strip"" in HTML comments so that it does not appear in internal Javadoc.\n- Turn scrub_sensitive_comments off so that MOE gives errors instead of silently stripping comments that contained sensitive words.\n- Where necessary, manually strip out sensitive words, remove them, or replace them with non-sensitive words.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=41038153\n'}"
3810,"{'code': 'f39c916b07d47fb4633e9c7603f093acae1735da', 'message': 'Fix toString() of some Source/Sink implementations to match method names.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=41036419\n'}"
3811,"{'code': '01c33a7487d8c3f90608ae5cd05debf62794c25b', 'message': 'Rollback of controversial c423bec3cc53 (""Trim gratuitous code from ImmutableList implementations"").\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=41031096\n'}"
3812,"{'code': '601991395f9ec427d999ffd739984052807f5688', 'message': 'Reduce unnecessary code in Multisets and Multimaps\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=41030309\n'}"
3813,"{'code': 'b1b1560643ddbbb315a05164be60fc2e1dd32caf', 'message': 'Added Invokable#getOwnerType()\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=41008711\n'}"
3814,"{'code': 'f4f946ad3cf7c34f8934d469319805c5c5e0b3b1', 'message': 'Excluded META-INF/ from ClassPath\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=41003993\n'}"
3815,"{'code': 'ba826a40b92a03e26d03b497a0cc01ab24c886a0', 'message': 'Add ""application/binary"" media type.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=41002328\n'}"
3816,"{'code': '3b460f53252fc3331703da458648d4e33795ed00', 'message': 'Remove unnecessary code from *Immutable*Map implementations\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=40999290\n'}"
3817,"{'code': 'a7456bd0f0059e6ed9e99d5157550adaff96d601', 'message': 'Simplified attempt to fix common issues with Unsafe in common libs\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=40999025\n'}"
3818,"{'code': 'c423bec3cc53943b947e13ceb81c527fb3b8e1c2', 'message': 'Trim gratuitous code from ImmutableList implementations\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=40997992\n'}"
3819,"{'code': '02e6a77a1f6d8e40002209236ea237ae47e7da24', 'message': 'TypeParameter reshuffling.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=40994611\n'}"
3820,"{'code': 'd8a45836174deafb860c0bba74faa673ba3c5ca0', 'message': 'Added javadoc to ClassSanityTester about a pattern to test builder equality. Added invokable.setAccessible(true) to allow public factories of non-public classes to be tested.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=40993798\n'}"
3821,"{'code': '471a8d749b1b4bf64877907077f767a0024697bb', 'message': 'Fix typo in UsingToStringOrdering javadocs.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=40988923\n'}"
3822,"{'code': '9398520c291d579463240f5d0be1d7fd32127a98', 'message': 'Include test.txt in Guava to fix ClassPathTest.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=40980832\n'}"
3823,"{'code': '61c6b00569b9dbe5e9d042bb106c1ca03c5a288f', 'message': 'Cleans up HashingTest.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=40973196\n'}"
3824,"{'code': '28f3cd2759061207c89c25a2635154c3adaabc2b', 'message': 'Added ClassPath.getResources(). See http://code.google.com/p/guava-libraries/issues/detail?id=1214\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=40960937\n'}"
3825,"{'code': 'c9a720a063fa22d293dcbb329eef97402ea0319d', 'message': 'Use a for loop instead of a switch in Murmur3_32.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=40945029\n'}"
3826,"{'code': '9cdeded80d341af98160f8a877fca628c12f247a', 'message': 'Fix OSGI metadata creation in Guava build.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=40892296\n'}"
3827,"{'code': 'eeba07cda24c0e85198dd52a071991377f695b61', 'message': 'Guava issue 1245: fix generics for BaseEncoding streaming encoding/decoding\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=40878894\n'}"
3828,"{'code': '0a848bd9a88aaba5f5a69d7dde0989e501d5fb3a', 'message': 'Add new MediaTypes for use by WebFinger\n(https://code.google.com/p/webfinger).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=40829323\n'}"
3829,"{'code': '6a27957798dc10be458dcd617579a5f61a82b846', 'message': 'added tests to cover non-jar file case\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=40779626\n'}"
3830,"{'code': '73836461de66c6b4c973947871d5192610852d01', 'message': 'See http://code.google.com/p/guava-libraries/issues/detail?id=1215 Catch IOException thrown by new JarFile(). Sometimes there may be non-jar files in the class path, for example, .jnilib files\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=40754214\n'}"
3831,"{'code': '32e00d4c8b2359c36d43d1945bd822c688b444fb', 'message': 'Add Invokable.isVarArgs().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=40749218\n'}"
3832,"{'code': 'a54825110de5b5238304280a3be259d9e237e0a7', 'message': 'Add application/xml to MediaType.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=40684914\n'}"
3833,"{'code': 'b97963f83cb44583ec31104b517215a8e6cb195a', 'message': 'Deprecate ForwardingService.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=40646316\n'}"
3834,"{'code': 'f237e1e015fecb13e34739858300508dac235117', 'message': 'Write a more compact ImmutableTable implementation.\n\nInstead of maintaining explicit Cell objects and an ImmutableSet<Cell> cellSet implementation, we keep iteration-ordered pointers into the main lookup structures to avoid keeping two hash tables for the same data.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=40531451\n'}"
3835,"{'code': '313f93c8c4ec073158317473dfbfb2aff29b1d65', 'message': 'Fix calls to deprecated Stopwatch.elapsedTime(TimeUnit) by inlining that method\'s implementation (""elapsed(TimeUnit)"").\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=40480378\n'}"
3836,"{'code': '864435a71cd9e8b0dec4150284ee43372167b091', 'message': 'Fix calls to deprecated Stopwatch.elapsedMillis() by inlining that method\'s implementation (""elapsed(MILLISECONDS)"").\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=40472379\n'}"
3837,"{'code': 'fd6e6dc5922fcbf058911c6b72e21bf8c9c4ed50', 'message': 'Give removal date for Stopwatch deprecation.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=40466574\n'}"
3838,"{'code': 'dfa609596b9a92a1df96f53b5252b080b6763185', 'message': 'StandardSystemProperties -> @GI\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=40464798\n'}"
3839,"{'code': '7e10a8b03b0a87508de4beb78e427fd5ac409bbc', 'message': 'Add a method to Uri that allows us to get the port (via HostAndPort).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=40360770\n'}"
3840,"{'code': 'be47eb2c23d8a47d92b471618007e283a0289e31', 'message': 'Fix comment in AbstractMapBasedMultiset reported in Guava issue 1234.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=40349870\n'}"
3841,"{'code': '9ede30c33a1ad7e79b54a601a79af53526a40d4f', 'message': 'Changed ClassSanityTester.testEquals() to check against use of == on objects. We assume that the implementations should call equals()\n\nTested: []\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=40349360\n'}"
3842,"{'code': '84f80c5e683af7f2ed69e7f47a41e858fe62f413', 'message': 'Add base.StandardSystemProperties\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=40325631\n'}"
3843,"{'code': 'af568193e6ee1015f38fb7c2bfed6228529f43b9', 'message': 'Make Closer public and @Beta. Also, change Closer.rethrow(Throwable) to propagate IOExceptions by default and change all calls to rethrow(e, IOException.class) to rethrow(e). Add a pointer from Closeables.closeQuietly deprecation text to Closer.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=40308996\n'}"
3844,"{'code': '75085833f67d07b9dcc071e0703cb1027e6c0b28', 'message': 'Take steps to fix Cache.refresh race condition.  Specifically, do a racy check outside the lock to see if the value is already being refreshed, and do an optional check inside the lock to eliminate the race condition entirely.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=40301328\n'}"
3845,"{'code': 'b1b0baa96f590f462acdeb19d436045c2c285512', 'message': ""Undeprecate Closeables.closeQuietly for the moment. We'll deprecate it on the 14.0 release branch.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=40268076\n""}"
3846,"{'code': '619211e04c130fbee8bdb57ebe39f296c2920ba9', 'message': 'Remove extraneous semicolon.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=40263424\n'}"
3847,"{'code': '39d3234f2e2130fd0f3725d4f545bf97638be412', 'message': 'Override HashFunction#toString() where possible.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=40255702\n'}"
3848,"{'code': 'd0186c29fa50b3cbf5823ba7c6d6e02e0b6eb9d9', 'message': 'Add tests for known defaults for all HashFunctions.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=40223497\n'}"
3849,"{'code': 'dba37ce4fc0444ba2640eb66f4552cb3bc4bea23', 'message': ""Put that coffee down. Coffee's for closers only.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=40220880\n""}"
3850,"{'code': '1bfbc64ee02ecb3b03c2d19c5bd3bebcda19c67a', 'message': 'Reorganize LinkedListMultimap to avoid the three redundant hash maps, saving a fair amount of memory.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=40210587\n'}"
3851,"{'code': '2e04ac2c85300d5a95c142c402199125b466ed1a', 'message': 'Add default clause to every switch statement in our code.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=40168064\n'}"
3852,"{'code': '31b9eb2653a5cc398eec53a4b1b8ef1cf011a657', 'message': 'Make our code a little closer to obeying the ""every switch must have a default"" rule.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=40165739\n'}"
3853,"{'code': 'b3cb0e6ae8c8525323014263a0561d33958efc16', 'message': 'Add {Byte,Char}{Source,Sink} streaming APIs to BaseEncoding.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=40155178\n'}"
3854,"{'code': 'ca5d718d02f2dfc04bb09937f12a58267f4781cb', 'message': 'Add BiMapMemoryBenchmark\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=40154710\n'}"
3855,"{'code': '6162f3a87e733aed4308f5110528c2e4da89ed18', 'message': 'Minor optimizations for BaseEncoding.\n\nSpecifically, we compute the exact size of the decoded byte array in the absence of a separator by trimming away padding characters before estimating the decoded size.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=40128625\n'}"
3856,"{'code': 'd6da7d86a2cab91bb3d33d983ccf5b07de14cc20', 'message': 'Ensure that recordStats works on Android, GWT, and environments which may restrict the use of sun.misc.Unsafe, as per Guava issue 1228.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=40113906\n'}"
3857,"{'code': '4b29948bbb7a21754223dba744ceec22a162abe4', 'message': 'Revert accidental doc changes.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=40085671\n'}"
3858,"{'code': '85efe36d23543385541fd76b44833cd35c9283bb', 'message': 'Add more doc to BaseEncoding\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=40048053\n'}"
3859,"{'code': '7eb5783b70ffe7a5a2b47717327d78ef104f9aff', 'message': 'Deprecate Stopwatch#elapsedTime, Stopwatch#elapsedMillis, and Range#asSet.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=40031578\n'}"
3860,"{'code': 'ca36f308785f8a9780a10ea48a76bd026b202fa9', 'message': 'Add subRangeSet to the RangeSet interface, and add the TreeRangeSet implementation.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=40028620\n'}"
3861,"{'code': '39b6a72246fcde454321b03823f4981f6394a63f', 'message': 'Rewrite TreeRangeSet.complement() to be implemented in the same way as TreeRangeSet itself -- as a NavigableMap<Cut<C>, Range<C>> mapping lower bounds to ranges.\n\nThis is a prelude to implementing TreeRangeSet.subRangeSet, which -- itself implemented as a NavigableMap<Cut<C>, Range<C>> -- will be chainable with complement() operations.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=39984398\n'}"
3862,"{'code': '2e0a1563c8d7f3197f76180ff9e905243aceede2', 'message': 'Rollback LinkedListMultimap change.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=39937742\n'}"
3863,"{'code': '7218498c1e19a789a5064ae750db7e929e2e8287', 'message': 'Optimize CharMatcher as described in Guava issue 1223.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=39931458\n'}"
3864,"{'code': 'a1cecc41594dd2b63c474337d3cf922b6d184854', 'message': 'Add MultisetMemoryBenchmark.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=39931320\n'}"
3865,"{'code': '01223bd8c610024f743b1759fc64b2e0c01ff9ff', 'message': 'Reducing some critical sections\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=39926253\n'}"
3866,"{'code': 'd87ab445579e88079f321dc8af79d8688fec7b2c', 'message': 'Reorganize LinkedListMultimap to avoid the three redundant hash maps, saving a fair amount of memory.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=39925816\n'}"
3867,"{'code': '5a2e0bc809a9ea9801364595f1c7681a9ac7f509', 'message': 'Hides the mutex that is used by RateLimiter, so clients can\'t interfere with it.\nNote that the only current (and accidental) exposure of the fact that the RateLimiter\nuses ""this"" for synchronization, is the setRate/getRate methods, which have ""synchronized""\nin their signatures.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=39921152\n'}"
3868,"{'code': '43a8a98499e2782c31e489de7df682fe9def4bf5', 'message': ""Add ByteStreams.readBytes(InputStream, ByteProcessor). It was requested by a Guava user and I actually already added the equivalent to CharStreams for LineProcessor. It also is a case where we should provide an InputStream equivalent so that users don't create single use InputSuppliers/ByteSources.\n\nAlso add a missing @since tag and fix a few line lengths.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=39918353\n""}"
3869,"{'code': 'f50cb14843d77c4bd58bfe920a103cb7f6fec8a6', 'message': 'Minor cleanups to BaseEncoding\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=39881805\n'}"
3870,"{'code': '4e32ac7716d2e0fcd66eb0ba0cad320a1dcfd827', 'message': 'Remove @Beta from UnsignedInteger and UnsignedLong.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=39871896\n'}"
3871,"{'code': 'e3dccb37908923f7bb6c88421082ce0ebccaac6d', 'message': 'Deprecate DiscreteDomains.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=39870832\n'}"
3872,"{'code': 'caf4fc4fe94090803e9c7e634d9004d82b60fe3e', 'message': 'Expand Ascii.to{Lower,Upper}Case to take a CharSequence instead of a String\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=39870574\n'}"
3873,"{'code': '00444687b364f0d7cb3d6111767169e5646d4462', 'message': 'De-betaify lots of methods in Futures.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=39869967\n'}"
3874,"{'code': 'fe6043a4eb4f665b235c0faca9710dbee4ab3bd8', 'message': 'SuppressWarnings for more tests ignoring return values.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=39866774\n'}"
3875,"{'code': 'eefaec7200fc869e750ae6faa19d13885f757ee0', 'message': 'Remove logging from ServiceManager.isHealthy. People who want the detailed information can easily get it from servicesByState().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=39860721\n'}"
3876,"{'code': '130a4f835c313d73158365aed80a2c0195d91472', 'message': 'Change uses of DiscreteDomains methods to DiscreteDomain.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=39844275\n'}"
3877,"{'code': 'bf0fb34c412629d8f2b32095ee0524b732ed6410', 'message': 'Make SortedMultiset.elementSet() return a NavigableSet outside GWT.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=39834726\n'}"
3878,"{'code': '8b5f8e0945ee9e0bbd7048945f17d2fdc2b108e0', 'message': 'De-@Betaify AtomicDouble and AtomicDoubleArray.\nFix javadoc typo in a href tag.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=39797368\n'}"
3879,"{'code': '1baad1a2de7635fbe22c273d3cec83c72a1e795f', 'message': 'Add TableMemoryBenchmark implementation.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=39795607\n'}"
3880,"{'code': '2cd9a6a7dc9b9097de02838ec25957a2234ae934', 'message': 'Add MapMemoryBenchmark and SortedMapMemoryBenchmark.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=39793649\n'}"
3881,"{'code': '83c496dd2363e839b582d73dd41f4d869abd3f7e', 'message': 'De-Betaify a slew of APIs in math, net and util/concurrent.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=39793528\n'}"
3882,"{'code': '581bda3236c66b003cbf834f5aeb8dcf3a6dbe1a', 'message': ""Add SuppressWarnings for a couple places where a return value that shouldn't normally be ignored is ignored.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=39777104\n""}"
3883,"{'code': 'b4cf74aa3a56751f25ae09eb79b68e0656d40618', 'message': 'Optimize collapseFrom and trimAndCollapseFrom so that they\nonly allocate if necessary.  Add a few tests.  Remove the GWT\nworkarounds for GWT bug 4491 since it appears to be fixed.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=39757514\n'}"
3884,"{'code': '57b068ec5d8cc962be3e90e173710091620ac626', 'message': 'Shuffling in benchmark classes due to internal-only change.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=39747316\n'}"
3885,"{'code': '6136894f7de5e93cfc355dd25f8174c2abc363f7', 'message': ""New implementation of Objects.ToStringHelper:\n\n- More efficient, doesn't create a list of temporary holders.\n- Some javadoc improvements.\n- New benchmark.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=39701659\n""}"
3886,"{'code': '5add864185a9582bebbb30f2566a6a466cbd75ea', 'message': 'Add SetMemoryBenchmark\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=39700123\n'}"
3887,"{'code': '824719231c4358700e669014a86987dea7341e3e', 'message': 'Mark ServiceManager as Beta.  Service is Beta so it makes sense for this class.\n\nAlso, tweak a few docs.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=39684054\n'}"
3888,"{'code': '133ffd3dd0d4967cb7f2d6f745b6661585c67b6b', 'message': ""Add GWT compilation test.\nSeparate testlib GWT files into guava-testlib/blackhole-gwt, where they can be ignored for the time being.\n(testlib already doesn't work under GWT.)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=39671586\n""}"
3889,"{'code': '7002f6efa3a10d614063c8e4333c249c89425247', 'message': 'Remove @Beta annotations from definitely stable standardXXX methods from ForwardingXXX classes.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=39629391\n'}"
3890,"{'code': 'f7bcd87198cdbaf9cad86ff9f5619654ac7d02ec', 'message': 'Add Stopwatch#elapsed in prep for migration from elapsedTime() and\nelapsedMillis().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=39620819\n'}"
3891,"{'code': '52bef6730688f74c0312ab396fcc6c6931070af6', 'message': 'Mention ""hexadecimal"" in BaseEncoding.base16().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=39617876\n'}"
3892,"{'code': '42eec0d2dfb20f5695babe0583bf27a248391c98', 'message': 'Improve exception message for Stopwatch start() and stop().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=39593299\n'}"
3893,"{'code': '31d35bb6dd5cbb958d71bf5e0a38fc19aa35eb80', 'message': 'Merge DiscreteDomains into DiscreteDomain, in advance of migration.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=39581939\n'}"
3894,"{'code': '8e124bdca98fd41cae908fe07cf1fecfc8625379', 'message': 'Reformatting from internal-only change.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=39581002\n'}"
3895,"{'code': '170f192dea1a2b232b7fae8f5230a1dd502b441b', 'message': 'Remove @Beta from:\n-Objects.ToStringHelper#omitNullValues\n-Optional.or(Optional)\n-Optional.transform\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=39495606\n'}"
3896,"{'code': '147609aad19beeb4e98e8d19a258101e62d05833', 'message': 'Remove @Beta from:\n-BoundType\n-FluentIterable (except toSortedList())\n-Range (except asSet())\n-SortedMapDifference\n-Immutable{Set,List,}Multimap.inverse()\n-ImmutableMultimap.Builder.order{Value,Key}sBy\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=39495506\n'}"
3897,"{'code': '824a535f4fec7e2c9dedfd6b4192bb76a362a2a5', 'message': 'Remove @Beta from:\n-Ordering.{lea,greate}stOf(Itera{ble,tor})\n-Ordering.max/min(Iterator)\n-Sets.synchronizedNavigableSet\n-Maps.synchronizedNavigableMap\n-Maps.filter{Values,Keys,Entries}\n-Maps.transform{Values,Keys,Entries}\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=39495484\n'}"
3898,"{'code': '997ea518b02d5fc82d749355873830ecc5da2a67', 'message': 'Small fixes to some incorrect @since tags.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=39494615\n'}"
3899,"{'code': 'ebdcde108db6ebb6c92537c36a86eaa71a429ea1', 'message': 'Forwarding classes out of @Beta (except standardFoo() methods).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=39494356\n'}"
3900,"{'code': '444e072ffe3c91da19f6e09474e05cc06536e024', 'message': 'Change HashCode from 32-bit to 8-bit minimum in docs.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=39493754\n'}"
3901,"{'code': '2459638f76d1e57824acfc013a3b7a018ba74de1', 'message': 'Change (most) methods in common.io that either return or take Input/OutputSuppliers to delegate to Sources/Sinks by wrapping suppliers as sources/sinks and vise versa. This also deprecates ByteStreams.getChecksum() and Files.getChecksum().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=39480085\n'}"
3902,"{'code': '160a3a2362b8a76a6b832f1ed7a894a18158190f', 'message': 'Add an example to the javadocs for ThreadFactoryBuilder#setNameFormat\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=39429195\n'}"
3903,"{'code': 'dd05d2a900ad1da6a5b2d87e38c25e70e3bef80f', 'message': 'Opensource ServiceManager!\n\nSpecifically:\nremove @GI from Service.failureCause (and implementors/referencing tests in util.concurrent)\nremove @GI from ServiceManager and its tests\n\nadd javax.inject as a compile dependency to guava/pom.xml\nadd the javax.inject jar to maven_local_repository.tar.gz\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=39407518\n'}"
3904,"{'code': '2eabf213074afc5b2483c687598e6a3762c0ec5f', 'message': 'Rewrite Multimaps.filter implementations, factoring out a significantly more efficient Multimaps.filterKeys implementation in the process.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=39394883\n'}"
3905,"{'code': '406d0d589b20a5fea174d5163e4671df18bc04ec', 'message': 'Swap out truth 0.7 (and older source version) and swap in 0.10 with gwt support\nLots of import changes poached from:\nreplace_string ""import org.junit.contrib.truth"" ""import org.truth0""\nreplace_string ""import static org.junit.contrib.truth"" ""import static org.truth0""\nmanual search/replace containsAnyOrder() -> has().allOf()\nmanual search/replace containsInOrder() -> has().allOf().inOrder()\nsometimes s/r contains*Order() -> has().item or has().allFrom(){.inOrder()} as appropriate\nother manual fixes\n\nTested:\nglobal presubmit\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=39392184\n'}"
3906,"{'code': 'f0943b868f667f8f8f2207373eea30989db6e2d0', 'message': 'Implement ImmutableRangeSet.subRangeSet(Range).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=39377650\n'}"
3907,"{'code': '35fbd05c6f9d09db66b98285b00b77bccd3fc468', 'message': 'Add subRangeMap to the RangeMap interface, and an implementation for TreeRangeMap.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=39377500\n'}"
3908,"{'code': '6506c4d1e0237dc5a3c875d2d10c329e902c5523', 'message': 'Implement ImmutableRangeMap.subRangeMap(Range)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=39333730\n'}"
3909,"{'code': '6fe6d5c28d561ad6b830d0945769c8e0a1322b57', 'message': 'Clarify docs on UnsignedLong.fromLongBits/UnsignedInteger.fromIntBits.  Add UnsignedLong.valueOf(long), which rejects nonnegative values.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=39281179\n'}"
3910,"{'code': '1404ead2c8e86628e4a4f3cea9441d80d220bb96', 'message': 'Further LongMath.sqrt optimizations, to show that a simple truncation is in fact sufficient.  (This actually simplifies the proof.)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=39276105\n'}"
3911,"{'code': 'e69bcbf33dcbf5680d232c8f2193a9eb671ffc74', 'message': 'Optimize LongMath.binomial by accumulating into separate numerator and denominator variables whenever overflow is known to be impossible, as in the BigIntegerMath implementation.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=39205160\n'}"
3912,"{'code': '5e2f597c1f2de49630a82c5488da7d5a406b69bd', 'message': 'Minor cleanups: remove a gratuitous StringBuilder in CharMatcher, and up the ImmutableSortedMultiset memory consumption limit, which is causing flaky failures\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=39204961\n'}"
3913,"{'code': 'd982bee516bf929e9d45cd9fe699cbaf72cf62ac', 'message': ""Optimize LongMath.sqrt.\n\nThis optimization depends on the fact that Math.rint(Math.sqrt((double) longValue)) is at most 1 away from the true value of sqrt(longValue), so there is no need for Newton's method iterations, or indeed any loops at all.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=39162111\n""}"
3914,"{'code': 'c1d642e0ceb6106b0e9b35583069e3831b966abf', 'message': 'Make CharMatcher.toString() consistently format characters as \\uXXXX.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=39158530\n'}"
3915,"{'code': '1d10f562e30a1d314ced9d3bdf510891878baad5', 'message': 'Rewrite Multimaps.transform* in terms of AbstractMultimap, and use MultimapTestSuiteBuilder on it directly.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=39050523\n'}"
3916,"{'code': '19d312977252b2f494f6997d5dd881f349af6292', 'message': 'Changed Futures.addCallback() not to call onFailure() when onSuccess() throws.\n\nNote to test owners:\n\nThis change revealed test bugs in your test. The old code swallowed EasyMock ""interaction expected"" exception and passed it to your onFailure() method, which is a usually a no-op.\n\nI didn\'t dig deeply enough into your code to understand if the offending interactions are supposed to happen. The fix is just blindly adding expect() call to make the tests pass.\n\nIf you see a real bug, please let me know.\n\nThanks!\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=38864384\n'}"
3917,"{'code': '5cf5612479b79c6c9ddb76024229119b4dfdf250', 'message': 'LinkedHashMultimap rewrite\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=38863555\n'}"
3918,"{'code': '76067938a74d86021f3577b45b366390c34c4cf4', 'message': ""Clarify what does and doesn't count as a lookup in CacheStats.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=38862581\n""}"
3919,"{'code': '6f169cccf745b91875f33d33bef993d6ce224dc7', 'message': 'Add more class-level documentation and examples for RangeSet.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=38862063\n'}"
3920,"{'code': 'f2055926f98703f09e4f5ef9a6a78f3fca09ddc9', 'message': 'Delete of(E[]) from the GWT copy of ImmutableList.\nThe ""plain Java"" copy has been gone for a long time.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=38793793\n'}"
3921,"{'code': 'a45095a38959a46331f3bdcb18ec37fec835e4f4', 'message': 'Implement Multisets.filter(Multiset, Predicate)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=38740003\n'}"
3922,"{'code': 'f6e694d95fab9147bdc4cef7cd608623d3e6a3de', 'message': 'Cache the upperCase() and lowerCase() results in the Encoding object itself, not the alphabet, so as to save an allocation from each call to lowerCase() or upperCase() after the first.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=38731220\n'}"
3923,"{'code': '50be29b83f7567a13f995dfa1377d315051ebd42', 'message': 'Deprecate old UnsignedLong methods\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=38728092\n'}"
3924,"{'code': '28bad546ee6c6944269622dff02150967cfbe669', 'message': 'Deprecate UnsignedInteger methods that have been renamed.\nAdd @CheckReturnValue to the arithmetic methods.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=38728022\n'}"
3925,"{'code': '5b96fd5a6377e0d0a01b2f2da39196882043e62c', 'message': 'Refactor AbstractMultimap into a separate AbstractMultimap and AbstractMapBasedMultimap.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=38726867\n'}"
3926,"{'code': '4fa056813cc1db3c594f0d0d8560d65c63c81b7d', 'message': 'Add Longs.tryParse.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=38720107\n'}"
3927,"{'code': '4c86ebcbb6d410a405de53a0940065819f1aeaf0', 'message': 'Minor re-ordering of gwt module declarations\n\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=38698087\n'}"
3928,"{'code': 'ae8b5739d3b7650808887b88104e0ed606d0bf7a', 'message': 'Fix up Iterators#cycle(E...) docs.\nAdd equality tests for HexString#encode, ByteArrays#toHexString, and HashCode#toString\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=38654669\n'}"
3929,"{'code': 'e231a8d44703c9e741a8ddd219929807341e6197', 'message': 'Document the current behavior of ImmutableRangeSet.Builder, even if we might change that behavior later.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=38653539\n'}"
3930,"{'code': '0330f712f56cc53633874e95bdc1203cf881eb85', 'message': 'Fix bug in TreeRangeMap.asMapOfRanges().get(absentRange)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=38651843\n'}"
3931,"{'code': 'da4ca2f9535ccf93454ad7dc75165651f1c7e2c6', 'message': 'Add useful toString() for BaseEncoding\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=38649483\n'}"
3932,"{'code': '7396830c4c179496b2cc81d3c2fe86bd6bf675e3', 'message': 'replace UnsignedInteger.asUnsigned() with UnsignedInteger.fromIntBits()\n\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=38638597\n'}"
3933,"{'code': '0f3e338f705291b1f2fad2216fe6dd2bdd3d553a', 'message': 'Stop recommending the use of delimiters when hashing strings.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=38631621\n'}"
3934,"{'code': 'aa602bf241c73f33a7a49cb42916960b52c57375', 'message': 'Test default Charset.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=38579676\n'}"
3935,"{'code': '54ce130a2f1438cd94277d72e5deed843115def5', 'message': 'Avoid rebuilding alphabet lookup tables, etc. in BaseEncoding\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=38575425\n'}"
3936,"{'code': '2b769e0543155ac35b0edb98448d5d2cf4fa4018', 'message': 'Make Crc8HashFunction @GoogleInternal, since Hashing.crc8 already is.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=38565967\n'}"
3937,"{'code': '9e63a9a917369de06ed131c15dccc686808c6cc8', 'message': 'UnsignedLong.asUnsigned => UnsignedLong.fromLongBits\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=38564991\n'}"
3938,"{'code': 'd1d18c945c64c236642223ab0f915ef87597562b', 'message': 'Remove HashCode#padToInt (package-private) and override HashCode#hashCode() instead\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=38560921\n'}"
3939,"{'code': 'b7878163534069f6811e55148629f4d8af820a1d', 'message': 'Prepare for the same renamings for UnsignedInteger as in UnsignedLong\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=38558333\n'}"
3940,"{'code': 'd32629fa8393113714fe7aba16a84c9a5c90a285', 'message': 'Re-write MessageDigestAlgorithmBenchmark using multiple @Params instead\nof different timeFoo() methods.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=38484757\n'}"
3941,"{'code': 'e477a21822c16eeea92195fbd07351a32e2b7263', 'message': 'Adds com.google.common.hash.Crc32cHashFunction.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=38480998\n'}"
3942,"{'code': '2bbd22b0fecd010b73abc423f59879ea9a0679d9', 'message': 'Use MessageDigest#clone() instead of MessageDigest#getInstance().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=38480581\n'}"
3943,"{'code': '33581e9571eb53d1052bf587c9f925092830b721', 'message': 'Rewrite CacheBuilder removalListener docs a bit, removing some stale\nverbiage accidentally left over from GenericMapMaker, and being more\nclear about the requirement to use the returned reference.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=38477912\n'}"
3944,"{'code': 'c61612cdab133e819a311f488f4df5b732d22631', 'message': 'Add ByteSource, ByteSink, CharSource and CharSink abstract classes and factory methods for creating various implementations of them.\n\nThese classes are intended to replace the InputSupplier and OutputSupplier interfaces, providing advantages such as: no generics, a more consistent interface that reduces the need for static methods, and better discoverability.\n\nThis helps pave the way for JDK7 by making it extremely easy to provide the same features for the new file APIs (Path) that we currently provide for Files, etc. All it will require is adding new factory methods to create Sources and Sinks wrapping a Path.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=38458933\n'}"
3945,"{'code': '1365550fd8e9eb3d2f94cf38085c65cbfe447376', 'message': 'Use HashFunction#hashObject shortcut.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=38455777\n'}"
3946,"{'code': '074d64df15d82609b430a79b551b8378fb822128', 'message': 'Add new UnsignedLong methods that we will shortly migrate to.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=38454126\n'}"
3947,"{'code': '633d594394afc9f2da5b1e005bc39c7cb8b10044', 'message': 'Add Crc8HashFunction to compute the CRC8.\nRelax restriction of >= 4 bytes for a HashCode instance.\nAdd HashCode#padToInt\nAdd HashCodes#fromByte\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=38451830\n'}"
3948,"{'code': 'f0859c91b3e7740ba0423198d9c44ac9df72824a', 'message': 'Changed Invokable to always return the source-view of parameters, even for non-static inner class constructors.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=38361864\n'}"
3949,"{'code': '017a5145ed8eaeac92ce997c679061b129f06ef4', 'message': 'Add Maps.filter{Keys,Values,Entries}(NavigableMap, Predicate), since we added Sets.filter(NavigableSet, Predicate).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=38357323\n'}"
3950,"{'code': '4cd9ad88cf9b2522561c1ed69f8f0f673d98897e', 'message': ""This CL fixes method calls that incorrectly ignore the return\nvalue. Method calls with no side-effect are pointless if you\nignore the value returned. Also, this error is triggered if the\nreturn value of a method that has been annotated with\n@CheckReturnValue is ignored. This an automated fix using\nerror-prone.\n\nWe intend to make this a compilation error in Google's Java compiler,\nso it is necessary to fix existing occurrences first to avoid breaking\nbuilds.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=38277360\n""}"
3951,"{'code': '9bfd9e929776a109b30b8796a23cf61d85165ba9', 'message': 'Add a speculative size check to Iterables.elementsEqual, as per Guava issue 1183.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=38262433\n'}"
3952,"{'code': '9b9e688986783d94d61065dfe33bd780f3512d5b', 'message': 'Guava issue 555: EnumMultiset.create(Iterable, Class)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=38260896\n'}"
3953,"{'code': '4ebac77ec8dc2ef20d9c86d829312e673e78df2a', 'message': 'Add @since for withFallback.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=38255463\n'}"
3954,"{'code': 'fd40e3a91e6ef695a5d9db92a386842354b7cfca', 'message': 'Compute CharMatcher constants lazily whenever possible.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=38170514\n'}"
3955,"{'code': '91634b6c9c2d65eae7bdd3928c884e58b86393f7', 'message': 'Add streaming encoding and decoding to BaseEncoding.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=38154034\n'}"
3956,"{'code': 'c0f9bd6b376d6c4c7a2128c3a38a54345d0c663b', 'message': 'Rewrite ImmutableBiMap to save ~35% on memory consumption, following the ideas of our HashBiMap rewrite.\n\nThis should not have significant performance impact, as the implementation is essentially identical -- save that entry objects are shared between the forward and backward maps.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=38148097\n'}"
3957,"{'code': '6b3d0ce887848832ccc7a1c6f8a37f80fef45ffd', 'message': 'Make TreeMultimap.asMap() and keySet() return NavigableMap/NavigableSet, falling back to SortedMap/SortedSet on GWT.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=38143211\n'}"
3958,"{'code': 'f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d', 'message': 'Return a NavigableSet from TreeMultimap.get\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=38054420\n'}"
3959,"{'code': '36abf9172e9abe2eb736cc5cec10d100dbcd0450', 'message': 'Add TreeRangeSet.create(RangeSet) ""copy factory method""\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=38049043\n'}"
3960,"{'code': '4ce0db5ed152547ba298324fbe32cd087cdfd8c7', 'message': 'Add Google-internal memory consumption tests for {Immutable,HashBased,TreeBased}Table.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=38048228\n'}"
3961,"{'code': 'a4bd0dd6fbcc7cd349ebd7c2ded2f5509f7d2ca6', 'message': 'Add HashFunction#hashObject() shortcut.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=38044012\n'}"
3962,"{'code': 'd04f8d430879c4496fb6d7be64000df164dbceb0', 'message': 'renames array fields with positive-length values,\nwhich are mutable, from ALL_CAPS to camelCase\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=38043270\n'}"
3963,"{'code': 'c9413a3729c7d86c36d1f28d14cda3a55360755e', 'message': 'Add Google-internal memory consumption tests for all top-level Multimap implementation types.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=38042089\n'}"
3964,"{'code': '960729e6012e9b310ba8407f85b31243f2679529', 'message': 'Avoid the fragile assumption in SortedMapTestSuiteBuilder that all tested maps are Map<String, String>\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=38041962\n'}"
3965,"{'code': 'ae42810de5790eb2d4e91807e37dd50eb6582c98', 'message': 'Add Google-internal memory consumption tests for Immutable{List,Set,Map,BiMap,SortedMap,SortedSet}.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=38036087\n'}"
3966,"{'code': 'bc8d4dfa32c015c67d0057ce66fc66ac8121b551', 'message': 'Add Google-internal memory consumption tests for all top-level Multiset implementations.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=38035186\n'}"
3967,"{'code': '043e4f75cc56f564a0d0ca3345176e637de8469e', 'message': 'Implement ImmutableRangeSet.asSet(DiscreteDomain).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=38034818\n'}"
3968,"{'code': '7a8e4a867899c77e535eb88250e2df0015b704ed', 'message': 'Eliminate an unchecked cast from ImmutableSortedSet that previously generated unsuppressed warnings.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=38034277\n'}"
3969,"{'code': '7c886b3a863bbd418b8eadab7915618b2cc9abd8', 'message': ""This CL fixes method calls that incorrectly ignore the return\nvalue. Method calls with no side-effect are pointless if you\nignore the value returned. Also, this error is triggered if the\nreturn value of a method that has been annotated with\n@CheckReturnValue is ignored. This an automated fix using\nerror-prone.\n\nWe intend to make this a compilation error in Google's Java compiler,\nso it is necessary to fix existing occurrences first to avoid breaking\nbuilds.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=38025487\n""}"
3970,"{'code': '765ec48ae280f38b1e7996445d9db9914dcdfb3c', 'message': 'Fix generics in Cache which are breaking the MOE build.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=37779427\n'}"
3971,"{'code': '2fceef62aa2a37e656e91993676738233fe0bfda', 'message': ""This CL fixes method calls that incorrectly ignore the return\nvalue. Method calls with no side-effect are pointless if you\nignore the value returned. Also, this error is triggered if the\nreturn value of a method that has been annotated with\n@CheckReturnValue is ignored. This an automated fix using\nerror-prone.\n\nWe intend to make this a compilation error in Google's Java compiler,\nso it is necessary to fix existing occurrences first to avoid breaking\nbuilds.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=37689226\n""}"
3972,"{'code': 'c50a94587b677f2d6f50c41c2d2913b272e6505b', 'message': 'Add RangeSet.span()\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=37651646\n'}"
3973,"{'code': 'fa5250485121df9c316831f37b44d6ece7dfbec9', 'message': ""This CL fixes method calls that incorrectly ignore the return\nvalue. Method calls with no side-effect are pointless if you\nignore the value returned. Also, this error is triggered if the\nreturn value of a method that has been annotated with\n@CheckReturnValue is ignored. This an automated fix using\nerror-prone.\n\nWe intend to make this a compilation error in Google's Java compiler,\nso it is necessary to fix existing occurrences first to avoid breaking\nbuilds.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=37644487\n""}"
3974,"{'code': 'e9d5cc93fe6c07b927bede3dee356030494529e3', 'message': 'Export TestingExecutorsTest to Guava.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=37556826\n'}"
3975,"{'code': '961b89eb28dc4bb7eb38efe9cbbb4202c859980c', 'message': 'Add TestingExecutors.noOpScheduledExecutor to common/util/concurrent/testing.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=37540391\n'}"
3976,"{'code': '69ad96b719d7cd3d872a948d7454f17b816a21c2', 'message': ""Change Hashing.smear to use MurmurHash3's mixK1, which appears slightly faster and more effective for use in open-addressed hash tables.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=37090965\n""}"
3977,"{'code': '4dfc92182081e9695d38772ba528faf7fef75ff6', 'message': 'Add RangeMap.span().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=37068105\n'}"
3978,"{'code': '0dbf979ceacfa3006bd48330aff35e8c4e7fe02f', 'message': 'Add a package-private pollNext helper, using it for a few pollFirst/pollLast methods here and there\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=37066519\n'}"
3979,"{'code': '9857139e4732897f1e269f16bdf1d5a9a513062e', 'message': 'Forbid empty ranges in ImmutableRangeMap.Builder.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=37065199\n'}"
3980,"{'code': 'd81f0133c0a334c381956cc67f595f4a03d0b07e', 'message': 'Re-export testdata files into Guava after CL 36707785.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=37065032\n'}"
3981,"{'code': '92b1048dd979e3af613cb5df38c508cbeeab71bc', 'message': 'Make FilteredCollectionsTest pass under Maven.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=37049722\n'}"
3982,"{'code': 'feba326ca105f08f51b9b2f018859b82d8e6586d', 'message': 'Some javadoc improvement of Invokable.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=37049407\n'}"
3983,"{'code': 'b7bcb4eb4d45aa80136785809f4f92de4c6c6c91', 'message': 'Try to improve Splitter documentation\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=37048099\n'}"
3984,"{'code': '8613d366c1f379a4b75ec16a6e6ed03bb8f9ab4f', 'message': 'Rename com.google.common.io.Io-gwt to ""com.google.common.io.Io"" to follow the pattern used in our other packages.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=37045666\n'}"
3985,"{'code': '5efaa21fd4c318104bd5ef29f9979651f78fc3ba', 'message': 'Add copyright information to ported Murmur hash functions.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=37032710\n'}"
3986,"{'code': 'd980bcf3ccbe39f699637839ad33a69ede574501', 'message': 'Comment seemingly-unnecessary bitwise mask in UnsignedInteger.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=37025851\n'}"
3987,"{'code': 'd96e425a451ee861b29ac9ef50a14513e2d57b44', 'message': ""Reorganize tests for filter methods on Iterables, Collections, Sets, etc.\nNOTE: This CL introduces an empty FilteredCollectionsTest class, which Maven's test runner doesn't like. We'll fix it shortly.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=36708171\n""}"
3988,"{'code': '9dee58b8207f65d4fc9c98ec49417c91fca3a792', 'message': 'Make BaseEncoding @GwtCompatible.\nNOTE: This CL accidentally removes test data files, breaking tests. We will fix this shortly.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=36707785\n'}"
3989,"{'code': 'fde657f56c4d75717ffcce670230782d84906c89', 'message': 'Change ByteStreams, CharStreams and Files to use Closer.\n\nAlso update ByteStreams and CharStreams tests to check for suppressed rather than logged exceptions when running on JDK7, and change Closer to log to Closeables.logger.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=36704557\n'}"
3990,"{'code': '450095182d466a46e67763af2fbfd98399ccb566', 'message': 'Remove ImmutableRangeSet.all()\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=36698163\n'}"
3991,"{'code': 'c1a62df76bea4d050765c6ccdbe2bfe7ec4b748d', 'message': ""Release a couple io test methods.\n\nThey were hidden because TestLogHandler wasn't available, but it is now.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=36693847\n""}"
3992,"{'code': 'b76ffbeab2394774f8e0efc13205b38f63d1513e', 'message': 'Add Closer as package-private in common.io.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=36681931\n'}"
3993,"{'code': 'ba9aa6be61a9de6096a0d571ae9fde97e57d539a', 'message': 'Add RangeMap.getEntry method.\n\nThis appears to be needed by https://cs.[]/#[]/java/com/google/net/security/[]proxy/ProxyConfigFile.java&l=583 .\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=36676148\n'}"
3994,"{'code': '8008df3b0276365523a71e164bf95d84017adb75', 'message': 'Avoid allocating for Multimap.removeAll(absentKey) implementations.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=36667564\n'}"
3995,"{'code': '6fb125be7d839839562d3e9a19c8dc40d6e54265', 'message': 'Make TreeMultiset.elementSet() return a NavigableSet (albeit not in GWT).  Dependent on cl/36499908.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=36545396\n'}"
3996,"{'code': 'be52ad577ab4a5c0ad8aec2a828d611c5bed2516', 'message': 'Write the initial, skeletal BaseEncoding API.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=36544759\n'}"
3997,"{'code': '0bc1a0c0710670c9ef940086c61e70bc4a67f429', 'message': 'Add tests for ImmutableSortedMultiset asList views\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=36537737\n'}"
3998,"{'code': 'acf7e99424c7eecbb85d5e6d64fb76be6f8fb994', 'message': 'Split MultisetCollectionTest suites into the appropriate test classes\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=36537481\n'}"
3999,"{'code': 'ca5b04277d9c2b0606dc6974078ce3b06bab1967', 'message': 'Test SortedMultiset.elementSet() with a SortedSetTestSuiteBuilder\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=36535008\n'}"
4000,"{'code': '85d2e6894a747bbcc39ac5feaecec89226446499', 'message': ""Migrate IRangeMap into RangeMap's position.\n\nCL automatically created by:\nreplace_string  \\\nRangeMap.create\\\\\\(\\\\\\) \\\nTreeRangeMap.create\\(\\)\n\nTested:\nreviewed submit queues\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=36518602\n""}"
4001,"{'code': 'a52dd72a0537366f7a96a9f6ab9e042af1d80ae1', 'message': 'Add elementSet and entrySet tests to MultisetTestSuiteBuilder.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=36498472\n'}"
4002,"{'code': 'f877b7159836ffeb3a66f86e1308bd0b58ae2f8e', 'message': 'Change ImmutableRangeSet.Builder to reject overlaps\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=36498240\n'}"
4003,"{'code': '012065203b428fff0b5a464ba878216805b5da43', 'message': 'Add ImmutableListCreationBenchmark to help evaluate the utility of pre-sized builders.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=36498026\n'}"
4004,"{'code': 'a526a03775b030d15ad29e0629871bf1bbd306ca', 'message': 'Deprecate Closeables.closeQuietly.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=36487308\n'}"
4005,"{'code': '954fb51d70bd165c73f646cc1405ccbeef911c8e', 'message': 'Improve Hasher docs about Hasher.putChar(\'a\').putChar(\'b\').hash() being\nequivalent to Hasher.putString(""ab"").hash().\nAdd a test that demonstrates this behavior.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=36383791\n'}"
4006,"{'code': '7ab7f86540743a8cfa199c79e7725c3423fc7f73', 'message': 'Add tests for ImmutableSortedMap.{entrySet,keySet,values}.asList.\n\nDependent on cl/36166288.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=36374019\n'}"
4007,"{'code': '60a4fc580248199add9059979578f757f32d0b88', 'message': 'Add an InternetDomainName test that confirms proper behavior when ""under"" TLD patterns overlap.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=36371550\n'}"
4008,"{'code': '5d1830f735d38e545fdc495886e66e903f5ad53e', 'message': 'Specify the behavior of Hashers after Hasher#hash() has been called.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=36368626\n'}"
4009,"{'code': '3c7fe205b0bef1eae7a4ce013ae909164bbe9874', 'message': 'Add ImmutableMultiset.asList() tests.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=36363737\n'}"
4010,"{'code': '9c9cb7da27bfcabd87931b46dbd48858ceefb5e7', 'message': 'Fix precondition error message to use %s instead of %d (which is not supported by the preconditions formatter).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=36322003\n'}"
4011,"{'code': '410a86e7c3abb43af53cfbe2be2b706d91ff141a', 'message': 'Sanity test for a known bloom filter and false positives.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=36200843\n'}"
4012,"{'code': 'd8aed8e6507f34de33c89434bcb64f7137112f64', 'message': 'Add tests for ImmutableMap.{keySet,entrySet,values}.asList\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=36194340\n'}"
4013,"{'code': 'e0d14af3151259d3f93ab503099d012c2f90537e', 'message': 'Allow for arbitrary orderings in tests for lists, rather than assuming insertion order.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=36192794\n'}"
4014,"{'code': '8e98c0f9af588a9a6458a68c2d9ddba5452d4f64', 'message': 'Add a message to EOFExceptions thrown by ByteStreams.readFully and skipFully.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=36182453\n'}"
4015,"{'code': 'e75a42193e415add82f5249605254e1a430978ff', 'message': 'Fix up javadocs to say ""{@link Foo} instances"" instead of ""{@link Foo}s"".\n(Same with {@code ...}).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=36168403\n'}"
4016,"{'code': 'cc85d09a69713574da89f12ff881cb91fa15185b', 'message': 'Guava issue 1120. Remove ThreadLocal value in EventBus rather than setting to false.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=36161462\n'}"
4017,"{'code': '0be8ed786405c18b16722621a25219aa3ea95a7c', 'message': 'Automated g4 rollback of changelist 35973933.\n\n*** Reason for rollback ***\n\nBroke megastore tests\n\n*** Original change description ***\n\nMake ListeningScheduledExecutorService.schedule* return a ListenableFuture\n(Originally from CL 23008243 by way of CL 22474051)\nMake FakeScheduleExecutorService a ListeningScheduledExecutorService\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=36011435\n'}"
4018,"{'code': 'ff722c806fd9a7a5710b9b4d30dca4f615b6e0cf', 'message': 'Automated g4 rollback of changelist 35980335.\n\n*** Reason for rollback ***\n\nBreaks megastore tests.\n\n*** Original change description ***\n\nTiny cleanups after cl 35973933. Fixed a spurious character that snuck in and extra spacing.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=36003816\n'}"
4019,"{'code': '08ea2736b4529e3ca5b6bc01b6c580c8c480f3ea', 'message': ""Break up Collection test suites and put tests for a class in...the tests for that class.\n\nWhile we're at it, knock out a couple of redundant tests for TreeMultimap.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=35986812\n""}"
4020,"{'code': '7a6f520ee11370fd5e27f4ac0f87f65ebbbd5e7f', 'message': 'Tiny cleanups after cl 35973933. Fixed a spurious character that snuck in and extra spacing.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=35980335\n'}"
4021,"{'code': '807bf518b883ee1e2fe0d6b859c046e96471f5bc', 'message': 'Make ListeningScheduledExecutorService.schedule* return a ListenableFuture\n(Originally from CL 23008243 by way of CL 22474051)\nMake FakeScheduleExecutorService a ListeningScheduledExecutorService\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=35973933\n'}"
4022,"{'code': '59dbf4eaf7dcf4c07cb6d876c1d7c12e6ef8ba6a', 'message': 'Guava issue 1012: Sets.filter for NavigableSet\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=35956146\n'}"
4023,"{'code': 'dec6db5cab54c56d7ebb86bd309dc49f103b3894', 'message': ""Adding ForwardingBlockingDeque, as it's a natural fit for Guava and something which is currently missing from the library.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=35939897\n""}"
4024,"{'code': 'b0cbbf5aa492b86d67963e3be730164ad8857536', 'message': 'Migrate BiMap-filtering methods out of Labs.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=35880650\n'}"
4025,"{'code': 'f25703b0aac57d3a5fa290d87e90bfe54e635dc2', 'message': 'Allow ImmutableSortedMap.naturalOrder() to accept a <K extends Comparable<? super K>>, since the javac bug appears to be fixed?\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=35876909\n'}"
4026,"{'code': '54a6c77084316f6783f9552fa4dc48a631e15327', 'message': ""Revert GWT emulation of HashBiMap to simpler version using two HashMaps that's better for GWT.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=35829480\n""}"
4027,"{'code': '21b1788ae0640a3c7f12bb6246c7a68b7c9f698e', 'message': 'Second try at adding MoreExecutors.platformThreadFactory().\nNow if ThreadManager.currentRequestThreadFactory() throws, we fall back to Executors.defaultThreadFactory().\nIn particular, this happens when AppEngine is running in this JVM, but there is no AppEngine context for the current thread (i.e. we\'re ""outside"" appengine).\n\n*** Reason for rollback ***\n\nRoll forward after handling leaked system properties more robustly.\n\n*** Original change description ***\n\nAutomated g4 rollback of changelist 35431636.\n\n*** Reason for rollback ***\n\nBreaks puppet tests, where we falsely detect the environment to be AppEngine due to system property leakage.\n\n*** Original change description ***\n\nAdd MoreExecutors.platformThreadFactory(), an AppEngine-aware version of Executors#defaultThreadFactory.\n\nUpdate classes within c.g.c\n\n... description truncated by g4 rollback ...\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=35820196\n'}"
4028,"{'code': '372aa2bc1636fb197107a10452c21dc5d7ff2b49', 'message': 'Add more thorough tests to MultimapTestSuiteBuilder\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=35614504\n'}"
4029,"{'code': '1d7e8094c834ba5468a887e947f1fed941bf35d2', 'message': 'Cancelling a successfulAsList() Future should not produce an exception (even if that exception is merely logged).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=35580495\n'}"
4030,"{'code': 'f75fbdcc8c66deb3da30f809780850a2612de4d8', 'message': 'Remove the State parameter from AbstractIdleService.executor.  This parameter is redundant with the value of the state() method at the times the method is called.  So it can be removed without removing functionality and it brings this method (more) in line with AbstractExecutionThreadService.executor and AbstractScheduledService.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=35573254\n'}"
4031,"{'code': '0e74ad0a205a9dc9925a097ccd4c831af10aea2d', 'message': 'Remove README.maven, which is no longer relevant.\n'}"
4032,"{'code': 'ba0c31c14a7c689334b0f4843b7929eac447679f', 'message': 'Two small service cleanups.\n1. Make AbstractIdleService.getServiceName protected (instead of private) and rename to serviceName\n2. Have serviceManager log service failures at SEVERE and also log service terminations at INFO level.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=35524121\n'}"
4033,"{'code': 'bd0f0134d2b14d8126f91a14d7c1ef98302a0741', 'message': 'Rename AbstractExecutionThreadService.getServiceName to serviceName to be more consistent with other Service methods.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=35510047\n'}"
4034,"{'code': 'e31d42fe93b278a4f44665802e692f5b9e7f7426', 'message': 'Special-case ImmutableMap.copyOf(EnumMap).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=35504772\n'}"
4035,"{'code': '53a2bbfe463d7e91148b206b6debd3caaad93d2f', 'message': 'Adding the IDN ccTLD for Kazakhstan that is implemented by IANA (http://www.iana.org/domains/root/db) but not yet\nin the Mozilla names file.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=35492306\n'}"
4036,"{'code': '15b7359c9765ab222c34e35d20ffde5dc3dc5c2b', 'message': 'A few small cleanups to use utility classes in c.g.c.collect\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=35489898\n'}"
4037,"{'code': '59bf3c9e069e17a3f28dc0ca5d6bb807014deaa3', 'message': 'Add ignoreClasses(Predicate) to AbstractPackageSanityTests.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=35488015\n'}"
4038,"{'code': 'c7151beeaf6399cfe596775f8eab36e4e1640cc3', 'message': 'Rollback MoreExecutors.plaformThreadFactory().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=35478665\n'}"
4039,"{'code': 'b14568dd0d3facf181727b99ffd3950925d2e6cb', 'message': 'Update Mozilla PSL.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=35437775\n'}"
4040,"{'code': 'e23af4d40fb9d2951888369d7ba27f58f64775fa', 'message': 'Give the thread running in the default ScheduledExecutorService for the AbstractScheduledService a name.  This follows the pattern that AbstractExecutionThread uses.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=35433849\n'}"
4041,"{'code': '2769e8fed843ff5fb701fda510d3012bff63e495', 'message': 'Minor javadoc cleanup.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=35431916\n'}"
4042,"{'code': '4e9879bdc324a84617872f9cc2a321b7cde5bce1', 'message': 'Add MoreExecutors.platformThreadFactory(), an AppEngine-aware version of Executors#defaultThreadFactory.\n\nUpdate classes within c.g.common.util.concurrent that create new threads to use this factory.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=35431636\n'}"
4043,"{'code': 'b9e7802ee61a79dac3a698beab94fd5a72ee5cdd', 'message': 'Add GWT src-super for HashBiMap change.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=35367257\n'}"
4044,"{'code': 'f46a285c91b2b08771d3c5e07e1050fc78d4bde1', 'message': 'Basic implementation of ImmutableMap.asMultimap()\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=35373012\n'}"
4045,"{'code': '457c2bc7ff83e9b10d8ece8a53d0dd7d3d734f6f', 'message': 'Give CharMatcher.apply() the same treatment as Range.apply() etc.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=35346388\n'}"
4046,"{'code': '3bf993770c365d6b77688efcd679539a4285e3d5', 'message': 'fix toString, which was missing maximumSize (reported by François Vinassac)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=35325729\n'}"
4047,"{'code': '72a25f66b25db2c957bf8f287c2e54baf418d514', 'message': 'Rewrite HashBiMap to share entries between the forward and backward maps, yielding ~38% savings on memory.\n\nThis imposes a small performance hit in the case of duplicate keys or values -- at most one addition traversal of a hash table bucket -- but no more.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=35322418\n'}"
4048,"{'code': '31eea6c64a866768951935652d824429aeba3e9f', 'message': ""Fix javadoc of ClassSanityTester by replacing 'public' with 'non-private'.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=35290790\n""}"
4049,"{'code': 'd9bff98af8483d76a52fbfd7228a656532aa4532', 'message': 'Try to improve Multimap class docs.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=35290017\n'}"
4050,"{'code': 'ad86ba28f20b0ea39ed2f8accf1b956422809f0d', 'message': ""Add LegacyHashing.fprint96() (aka, the first 12 bytes of the SHA-1 hash).\nAllow a MessageDigestHashFunction to return a subset of it's digest.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=35289881\n""}"
4051,"{'code': '70087c1ce633f5339d709c3ad6335dc37274edd9', 'message': 'Added null tests against return values of MoreExecutors and Futures\n\nTested: []\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=35282579\n'}"
4052,"{'code': 'e025e50d47345efec091ebca84e001143105430d', 'message': 'Add a special case for ImmutableSet.copyOf(EnumSet) delegating to Sets.immutableEnumSet.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=35258318\n'}"
4053,"{'code': 'fedcbe374bd92d99b27f4c398b16fa01292adb78', 'message': 'Remove scope=provided for jsr305.\nhttp://code.google.com/p/guava-libraries/issues/detail?id=1152\n\nPlus, remove type=jar, which is already the default.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=35233240\n'}"
4054,"{'code': 'a91d5ce5b93688a9ec9c1e156fa52c26a959a25d', 'message': 'Remove obsolete maven configuration which used to merge in METADATA.MF files into the jar, but no longer needs to, since maven will just scoop up the created METADATA.MF produced by the osgi bundle generator.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=35231748\n'}"
4055,"{'code': 'ec36ee10cd3b2e9d30b851de9ad8c98cbf194150', 'message': 'Miscellaneous cleanup.\n- Fixed Findbugs @Nullable problems.\n- Fixed Javadoc warnings.\n- Fixed Unsigned* doc copypasta, and generally made it more consistent.\n- Documented exceptions in Uninterruptibles.\n- Used NPT.setDefault instead of an checkNotNull call for newEnumSet.\n- Added Abstract*Service explicit constructors and docs.\n- Fixed <p><b>Note</b></p> in SourceCodeEscapers.\n- Fixed ""to be be"" in cartesianProduct.\n- Fixed }} in RetryingCallable doc.\n- Fixed weird indent on call to createTestSuite.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=35230825\n'}"
4056,"{'code': 'f3ea6b8cc3ce10b4cc825b77592720c6f6b726e9', 'message': 'Add a benchmark comparing CRC32 and Adler32 hashing using the Checksum API directly and using the common.hash API.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=34984248\n'}"
4057,"{'code': '62dbc59f8ddc0ab9d29be7637f650452605da26c', 'message': 'Implement DescendingImmutableSortedSet, a skeleton implementation of ImmutableSortedSet.descendingSet().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=34936379\n'}"
4058,"{'code': '403eedc3226a59bb362269d5bbe27a1e3d8c1b79', 'message': 'Remove ImmutableSetMultimap.SortedKeyBuilderMultimap\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=34927857\n'}"
4059,"{'code': '067c6a6a70ef7247869cd66e658f2a42047e4f3c', 'message': 'Delete TransformedImmutableSet, which was a skeleton abstract class with only one subclass anyway.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=34859558\n'}"
4060,"{'code': '0713c76d622ff2bc814fcf80d46fee281d53e706', 'message': 'Eliminate Iterators.unmodifiableListIterator, which was package-private but never used.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=34641948\n'}"
4061,"{'code': '45feb0e0aeffa0b8f325f25ecf7bd4567fb30d89', 'message': 'Rewrite TreeRangeSet implementation to use its own, smarter complement implementation.  Most notably, complement().encloses(Range) is now a logarithmic-time operation.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=34639480\n'}"
4062,"{'code': '529b84581685a6ee66d6325f725f60d1e416515a', 'message': 'Added getSimpleName() to ClassPath.ClassInfo because some users might want to check on the class name prefix? There is already user who checks on the suffix.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=34629374\n'}"
4063,"{'code': '190e4d8c9124ea68131e7d33898910d5f4876055', 'message': 'Some javadoc improvement of AbstractPackageSanityTests and ClassSanityTester.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=34624992\n'}"
4064,"{'code': '6b97b7b4e2f2b8ab00fe81d7236324a52ab1daf9', 'message': ""Added new API to allow filtering methods by return types:\n\nnew ClassSanityTester()\n.forAllPublicStaticMethods(Iterables.class)\n.thatReturn(Iterable.class)\n.testNulls();\n\nThis better targets the tests against methods that need to be tested, and avoid pointless failures for methods that don't need to be tested.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=34588474\n""}"
4065,"{'code': '419a8d3fa864f78997eaba0b25627e6d894f9339', 'message': 'Applied package sanity tests to common.util.concurrent\n\nTested: []\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=34588014\n'}"
4066,"{'code': '90c5b3cd41a7fb26f3ab6e8d27e6d330944806f3', 'message': 'Add a microbenchmark for c.g.common.base.Joiner and other common implementations.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=34581745\n'}"
4067,"{'code': '47ab2d51c2d3bf4e72e85f597162f987f4702d1f', 'message': 'Specify exact CPP equivalents for murmur3 hashing.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=34580858\n'}"
4068,"{'code': '9e8aa945fd57deec53d37756d0cb14707bf5e4fb', 'message': 'Deprecate Hashing.padToLong(HashCode).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=34579256\n'}"
4069,"{'code': 'e8dcf56da6705e92cad635a31348ca5e13bb59c3', 'message': 'add equals/null tests for HashCodes\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=34563347\n'}"
4070,"{'code': 'dbf40d91e623fd213fb2ea1b6c34910908a923c6', 'message': 'Add equals/hashCode to Suppliers, and tests.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=34552771\n'}"
4071,"{'code': '7d27d54759407ece6af40e20658066f4bf90bc30', 'message': 'Make ListenableFutureTask non-final but not subclassable externally.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=34552583\n'}"
4072,"{'code': 'e860c9f37af77c882572bb13361cbf089e22d613', 'message': 'Fix typo in comment about where test constant came from.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=34551664\n'}"
4073,"{'code': '9b424fd157bb41fab42b4625766f593880e30b1c', 'message': 'Add HashCode.padToLong() to replace Hashing.padToLong(HashCode).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=34550858\n'}"
4074,"{'code': '15cef0c1be23bc6e878b79837174e6674017baa0', 'message': ""Speed up notably slow math tests for GWT's sake.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=34540675\n""}"
4075,"{'code': '567ba59e507379edffd48e29b0de52bd8e79e378', 'message': 'A few miscellaneous changes.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=34536148\n'}"
4076,"{'code': '00ca4574869439d67450b0cc85e45026386be4df', 'message': 'Add Java Checksums (CRC32, Adler32) to Hashing.\n\nThis is done so that we can allow users to easily compute the checksum of some bytes (a file, say) without having to use the Checksum API directly.\n\nAlso add an abstract Hasher shared by MessageDigestHashFunction and ChecksumHashFunction, since they operate basically the same way.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=34509490\n'}"
4077,"{'code': 'ff2ca013a982d14b7faa229d2d93b35efb2331bf', 'message': 'Add Splitter.withKeyValueSeprator(char)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=34504065\n'}"
4078,"{'code': 'e6c7968848997ad1e4ed64db0fd8d22e276b16b8', 'message': 'Applied package sanity tests to common.math\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=34503919\n'}"
4079,"{'code': '507e694274947e3ef4dcecc45695a447330e6456', 'message': 'Fix a bug so we actually store the cause of cancellation in cancelled futures.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=34502625\n'}"
4080,"{'code': '9880403b7b975f377fa4f550ed3239a7cc7b6aa7', 'message': 'Applied package sanity tests to common.io\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=34502521\n'}"
4081,"{'code': '54c7c7039143abfd983c4a30b70d37c714d0d715', 'message': 'Applied package sanity tests to common.eventbus\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=34501606\n'}"
4082,"{'code': '8a1f32cb22777269b18a4111e8bfb7bea71f6814', 'message': 'Remove serializable=true from ArrayTable\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=34500078\n'}"
4083,"{'code': '7a1afaf1673aceddb8eca2e34a04a3ead0c2ed34', 'message': 'Make ArrayTable gwt compatible.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=34495130\n'}"
4084,"{'code': '0896afdf582d0dc281f8419f24c1faa4916c010b', 'message': ""Changed ClassSanityTester to not to attempt to instantiate the class if no instance method needs to be tested for nulls. This avoids unnecessary test failures for classes that don't need null check after all.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=34466316\n""}"
4085,"{'code': '79821ec75ca4f431331acbd10b095ed0d38e52f8', 'message': ""Applied package sanity test to common.cache. I had to add some checkNotNull() to LocalCache and CacheLoader, based on my understanding of the javadoc. Though it does change the contract: some didn't throw NPE on null, some threw UncheckedExecutionException.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=34462784\n""}"
4086,"{'code': '2539c7862c5a2c9c11827a618ee34bb272f397f3', 'message': 'applied package sanity tests to common.hash\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=34460278\n'}"
4087,"{'code': 'b3b6b1d3ceb35de964d6403c5cc291c980f5478f', 'message': 'Implement ImmutableRangeSet.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=34454241\n'}"
4088,"{'code': '2f93b7811a6d05b6c18522f8b0e1f3e9d63bcfad', 'message': 'Added PackageSanityTest to common/primitive\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=34437463\n'}"
4089,"{'code': '783fca80052b1be76ca83150f982eeabfbc821f8', 'message': 'Replace SingletonImmutableMap with SingletonImmutableBiMap\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=34396548\n'}"
4090,"{'code': 'b2a154664ce880b2ccf77ddb00f6a655437ebdf1', 'message': 'Some minor further optimizations to Ordering.leastOf.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=34392353\n'}"
4091,"{'code': 'cd251bcba76af57b67994869c770793955aaeb1b', 'message': 'Guava issue 1154: use the new String(byte[], Charset) constructor directly\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=34385923\n'}"
4092,"{'code': 'decf2b13fab3d23d8aac179c877d2329178a81aa', 'message': ""Remove <E extends Enum<E>> from GWT ImmutableEnumMap, reducing code bloat.\nWe still don't really know why this happens, but the difference is huge.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=34349121\n""}"
4093,"{'code': '835a7397fabb05a764a8008f4151c97f821a29ef', 'message': 'Implement ImmutableEnumMap\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=34322860\n'}"
4094,"{'code': '0cc8b996680f45a294ed3417571a9900c2bb66f9', 'message': 'Applied package sanity tests to common/base\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=34319507\n'}"
4095,"{'code': '86aa9f060deed8a128608e1b16e25a8e188aba7e', 'message': 'Implement Sets.cartesianProduct to iterate in lexicographical order.  In the process, Lists.cartesianProduct has been implemented on a package-private basis.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=34279184\n'}"
4096,"{'code': '79f5075f169470c9b0ea42824ff2cfee521db54e', 'message': 'Change ImmutableClassToInstanceMap#getInstance() to reject null Class\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=34262782\n'}"
4097,"{'code': '2b0034fa7fbc6803a6db7bd2d64a85bf26ef4fe8', 'message': 'Change the HostAndPort.java to support case like ""hostname:""\nHere\'s the string does include a "":"" but does not have the port number, before this CL, HostAndPort.java tries to parse the empty string after "":"" to a number and throws a NumberFormatException.\nIn this case, it should treat the port is undefined instead.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=34245642\n'}"
4098,"{'code': 'cc5366d288560046ba808761a70b8844db0f4115', 'message': 'Applied package sanity test to common/collect. Had to add publicApiOnly() because there are a lot of package-private classes that should either not be tested (the shim classes) or are already covered by another test, like the various *ContiguousSet classes covered by ContiguousSetTest.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=34235956\n'}"
4099,"{'code': 'dd22f0902a1a5dcd04d4d6d997faa486c923627d', 'message': 'Improve consistency of Javadoc for Multisets.union/intersection/sum/difference, highlighting how they differ and the mathematical operation each is based on.\n\nAlso get rid of an unnecessary call to Math.max.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=34230467\n'}"
4100,"{'code': '3b5931ebc2b2e385cf7fa5925b97ba53377c70ec', 'message': 'Add Multisets.union.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=34224294\n'}"
4101,"{'code': '515808097d372fbc3cbb1ea8a42097722ab86707', 'message': 'Add Multisets.sum and Multisets.difference.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=34223499\n'}"
4102,"{'code': 'ea1dee6d01bc1dea52cc2a09140be28f15c7967d', 'message': 'Fix Ordering.leastOf for very large k\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=34196765\n'}"
4103,"{'code': 'a3df035531ff51546466335635e72500a7a95348', 'message': 'Makes FreshValueGenerator more friendly to collection types especially immutable collection types. This reduces false positives and also reduces the need to set sample instances for collection types.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=34163462\n'}"
4104,"{'code': '0cad3f743ebf787cd50d762ca024fc6995df3c40', 'message': 'Add Ordering.greatestOf(Iterator, int) overload, and fix the doc.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=34132823\n'}"
4105,"{'code': 'c49086946f6bc82689d6b1d273de4e7e02091d7f', 'message': 'Optimize Ordering.leastOf().\n\nThis change reduces the temporary memory required by Ordering.leastOf to O(k) instead of O(n) -- typically, astronomically smaller.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=34131161\n'}"
4106,"{'code': '9d265ad9f7814355df061a4a897c95c4544d611d', 'message': 'Fix typo in code sample for ForwardingWrapperTester.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=34069677\n'}"
4107,"{'code': '4ab9205558043640770fa5888c56ff3e639903df', 'message': 'Added testEquals() to AbstractPackageSanityTests.\n\nExtracted some of the code into a new ClassSanityTester class.\n\nAlso added utility to test factory classes such as Predicates, for example:\n\nnew ClassSanityTester().forAllPublicStaticMethods(Predicates.class)\n.testEqualsAndSerialiable();\n\nThis cannot be performed by package sanity tests because there is no reliable pattern to tell that a class is a factory class (using plural is tricky in i18n if not anything else). But I think adding a simple test to PredicatesTest for Predicates is already a lot easier.\n\nAdded javadoc to explain which case are covered by these automated sanity tests and which aren\'t.\n\nAdded ItemReporter to RelationshipTester and EqualsTester so that the error message can be customized. The default ""group i, item j"" message is useless for automated test, since user didn\'t explicitly create the equality groups and the group numbers and item numbers are meaningless to users.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=34054176\n'}"
4108,"{'code': 'b59f363f5a3d8ce18637f4ad1b53a559ad2c5643', 'message': 'Refactor RangeSet into an interface and an abstract skeleton\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=34047917\n'}"
4109,"{'code': '76a9837992dbb4e4509e3445129521cb440db7da', 'message': ""Move a comment that had become out of place.\nThis bothered me when I noticed I'd accidentally done it, so what the heck.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=34035516\n""}"
4110,"{'code': 'd8f98873aa2449c056dc1b145e35e898d128e544', 'message': 'Eliminate EmptyImmutableMap, using ImmutableBiMap.of() everywhere instead.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=34006338\n'}"
4111,"{'code': 'a990ff7317596a86537fbe78f5ee513c05f23c07', 'message': 'Add toString() to DiscreteDomains\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=34006016\n'}"
4112,"{'code': '7579aa7a96bae1951f1cc06cb2819b0d98ef588e', 'message': 'Add documentation in Iterables.getNext(Iterable, Object) that says that if no default value is desired, to use iterable.iterator().next() instead.\n\nThis is a 7 month late CL that I said I\'d do ""tomorrow"" in https://groups.google.com[]d/msg/java-libraries-discuss/nXCh1owtVmw/5w493bgRgp0J .\nSee also these other threads asking the same question: https://groups.google.com[]d/topic/java-libraries-discuss/TTyhA8ifTew & https://groups.google.com[]d/topic/java-users/iA6Kav0D7XM .\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=34002097\n'}"
4113,"{'code': '93f3c9edf377e7bebc55a412c9087abceaba075b', 'message': 'Remove an unused import.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=33904446\n'}"
4114,"{'code': 'fe2df24495ad435f4ae0012e0f0aca8a5f09346f', 'message': 'define strict ordering over ClassInfo so that ordering is deterministic. Also renamed getClasses() to getTopLevelClasses() to be more explicit.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=33904815\n'}"
4115,"{'code': '5016694c81a5f486bb77446e2b97a572bb9c2ceb', 'message': 'Fix a compile error in Java 7:\n\nerror: name clash: apply(T#1) in Predicate and apply(F) in Function have the same erasure, yet neither overrides the other\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=33900718\n'}"
4116,"{'code': '92cd0cca7e9fb9707a7a853de1e3832bc8445184', 'message': 'Rename expandFor in Immutable builders.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=33900350\n'}"
4117,"{'code': '83c46e7ab4ee48c8a6edc697327ecf2c15ef7ee9', 'message': 'Document the NPE in UnsignedLongs.parseUnsignedLong\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=33899913\n'}"
4118,"{'code': 'f26b23aa417b94b872daf38845bca572da8f69ab', 'message': 'External Guava issue 1148: avoid explicitly copying ImmutableEnumSets\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=33899746\n'}"
4119,"{'code': 'c9eb4073459cad31ebdf3b843790c2dd3afa301f', 'message': 'Remove Eclipse-based compiler error ""The method set(int, Optional<V>) in the type List<Optional<V>> is not applicable for the arguments (int, Optional<capture#66-of ? extends V>""\n\nAlso, remove unused import. (!)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=33894774\n'}"
4120,"{'code': '665f712923fcd30e8a35a883ca204a63c356b5e5', 'message': 'Add a single parity test with known output from SMHasher (python).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=33886930\n'}"
4121,"{'code': '3c7ed82d766b4629e08efe894f2701adbfdb93c3', 'message': ""Update javadocs to suggest using a PQ or MMPQ if the entire iterator\ncannot be held in memory at once.\nAdd test for leastOf including null elements (the reason we can't use\nan ImmutableList as a return type).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=33790169\n""}"
4122,"{'code': 'da6c492852c22d8defb38ecba2e001172dc0ed8b', 'message': ""A number of small changes and fixes in EventBus:\n- flattenHierarchy was catching an exception that couldn't be thrown because the CacheLoader doesn't throw a checked exception. Fix it to catch the right exception type.\n- Change eventsToDispatch to use non-thread safe queues since it's a ThreadLocal.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=33790152\n""}"
4123,"{'code': '758d908c92b5a5e0dad3ad7d68a054520d5ee72c', 'message': 'Simplify places in CharMatcher where StringBuilder is used unnecessarily.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=33785205\n'}"
4124,"{'code': '54a16dda14ba2892574f50016a37947784d668b7', 'message': 'Change the default executor of the AbstractScheduledService so that it is shutdown when the service reaches a terminal state.  This ensures that a stopped service cannot prevent the JVM from exiting.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=33759240\n'}"
4125,"{'code': 'c8730f9ef8e5e767e7d6331dcce8ba6ddb808326', 'message': 'Clarify the wording of the exception messages in Optional subclasses.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=33759112\n'}"
4126,"{'code': '60fabfb89bccd3921779226746546a76e9a31c20', 'message': 'Experimental EventBus CL that reduces the overhead of reflection in the\ncase where a lot of EventBus instances are created and the same type of\nobjects are registered on all of them. This makes a difference of about\n4x in one app.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=33742203\n'}"
4127,"{'code': 'ec5a8f11d23c88d9dcac9a7c361e3f5bc7281dce', 'message': ""Extracted FreshValueGenerator from ForwardingWrapperTester to a stand-alone class so it can be reused for automated equals testing.\n\nFixed a bug in freshCurrency() because apparently no all Locale's can be passed to Currency.getInstance().\n\nAlso added Parameter.getInvokable(). I find that not having it forces me to pass around the Invokable together with the Parameter, which is inconvenient. And the backward reference isn't unprecedented, Method.getDeclaringClass() does it too.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=33689642\n""}"
4128,"{'code': '96bf55c5668041ce99b9dbd33d79128304acc2fe', 'message': ""Allow synchronous calls to EventBus.post().\n\nAs we're only reading the set of registered event handlers when an event is posted, it is more efficient to split the lock on handlersByType into read and write locks and only acquire the write lock in register() and unregister().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=33685413\n""}"
4129,"{'code': '4fa019eb30ecddc4790c890dcd2e0992cb8d6806', 'message': 'Fix thread-safety of EventBus.\n\nIn a previous change, handlersByType was converted from a ConcurrentMap to a SetMultimap. However, the SetMultimap returned by Multimaps.newSetMultimap is not threadsafe when concurrent operations update the multimap, even if the map and set factory are. This can cause registered subscribers to stop receiving events because they are dropped from the multimap.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=33680249\n'}"
4130,"{'code': '6e54496483e64309430a0d54cbf24d9440e77bb3', 'message': ""Added AbstractPackageSanityTests to apply automated sanity tests for an entire package.\n\nYaks I needed to shave:\n- move a piece of reusable code from NullPointerTester into a new DummyProxy class.\n- Added a few new default values to ArbitraryInstances. (I'm thinking to change the default value of numbers to 1, in a separate CL)\n\nAdded PackageSanityTests to common.reflect and common.testing, as dogfooding. Had to add some @Nullable and missing checkNotNull() as a result.\n\nSince APST is classpath sensitive, there are a lot of top-level class fixture files in the packagesanity package and each test case corresponds to a single java_test rule. That makes the CL more daunting than it actually is.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=33660554\n""}"
4131,"{'code': '76357ba760c72630dcba79c0164fdbb6b963ff05', 'message': 'Changed AbstractInvocationHandler#equals() and hashCode() to delegate to the invocation handler, to allow customization. I needed it to create dynamic proxies that works for SerializableTester.reserializeAndAssert().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=33639720\n'}"
4132,"{'code': '764dc1c8004cf1ddd9e8571323b54259ce90d0a3', 'message': 'Release Futures.withFallback to Guava.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=33473424\n'}"
4133,"{'code': 'cce57e79b54651567f0fede33f2ad4348a30ff60', 'message': ""Reconcile the cancellation semantics for Futures.combine, successfulAsList, allAsList, and withFallback to be consistent with Futures.transform.  Now, all cancellations are back-propagated to the input futures.  We also expose the interruption state in AbstractFuture with a protected method.  To ensure the interruption state is correct and threadsafe, we add an additional state to AbstractFuture's inner Sync class to atomically distinguish between cancelled and interrupted.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=33468640\n""}"
4134,"{'code': 'ae758e0347c5ca9cee84c5738411852c4960bd2f', 'message': ""Add tests for ConcurrentSkipList{Map,Set} and for a TreeMap with no comparator.\nThe latter requires suppressions for the same reason that our no-comparator TreeSet tests do: The first element is wrongly permitted to be inserted even if it's null.\nAlso, fix up a few misnamed methods and a copy-pasted doc comment.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=33468471\n""}"
4135,"{'code': '9e56171b52b8a6019f488974dfef05603903ee21', 'message': 'Changed NullPointerTester to use Invokable\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=33440442\n'}"
4136,"{'code': 'd024c5066fb410169350f8a62668d9fbf075a3e4', 'message': 'Added  TypeToken#method() and constructor() to return Invokable<> with types resolved;\n\nAlso changed Invokable.from(Method) to return Invokable<?, Object> since now clients can start from TypeToken.from() to get a really invoke()-able Invokable.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=33436645\n'}"
4137,"{'code': '6995e685d84ad06cb8632517fdbc487246183a95', 'message': 'Assorted cleanup:\n- Fix bogus ""ImmutableMap.keySet"" name for ImmutableMap test.\n- Remove unused FeatureUtil manual GWT emulation.\n- Remove one odd whitespace occurrence.\n- Fix Closeables Javadoc code formatting, plus other tweaks.\n- Change @link to @linkplain and Equivalances to Equivalence in Equivalence.\n- Fix various Javadoc warnings.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=33430865\n'}"
4138,"{'code': '7603bab156d498339a2468d24c2917e7ee58f72e', 'message': 'Add ClassPath#getClassesRecursive().\n\nRemoved ClassPath#getClasses(Package) for this subtlety in java.lang.Package\'s javadoc:\n""""""Within each ClassLoader instance all classes from the same java package have the same Package object""""""\n\nI\'m afraid that someone aware of the Package API may get confused by the getClasses(Package) and think that it will only return the classes the share the ""same"" Package object, while in fact it\'s only searching by name, not Package object identity. In other words, this method has the potential to be ambiguous semantically.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=33425579\n'}"
4139,"{'code': 'b84265625c1f685c855cca2458ee99f418f2845d', 'message': 'Graduate labs.reflect.Invokable and labs.reflect.Parameter.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=33397919\n'}"
4140,"{'code': '8f48177132547cee2943c93837d76b898154d722', 'message': 'Change Splitter#on(String) to Splitter#on(char) for single character strings\n- Results in a 10-25% performance improvement see bug for details\n\nCL generated by running the following:\n\n#!/usr/bin/perl -pi\ns,Splitter\\.on\\(\\""\\\\(.)\\""\\),Splitter.on(\'\\\\$1\'),g;\ns,Splitter\\.on\\(\\""(.)\\""\\),Splitter.on(\'$1\'),g;\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=33393713\n'}"
4141,"{'code': 'f1970452c00ab6b8599c2444681b10f19b8dbc68', 'message': 'Fix small javadoc typo in Stopwatch#elapsedMillis.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=33384805\n'}"
4142,"{'code': '7eefee3cd54fa686e617f1446e1b329c5a23cf24', 'message': 'Add getClasses(package) to ClassPath. IO now happens at the time ClassPath.from(ClassLoader) is called, rather than getClasses().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=33383562\n'}"
4143,"{'code': '20ffd6da5a0dbdea592cc9db648bb10ece5941a8', 'message': 'Benchmark Splitter#on char vs String length==1, char wins by a bit\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=33356556\n'}"
4144,"{'code': 'e0dfd519ba1f707f517e5423634371f2f15fcb2b', 'message': ""Added ClassPath for exploring class path from a given ClassLoader. The class.path system property is what the system class loader uses. The 'meat' of the code is actually copied from AbstractModulePackageInfoSource from test suite builder.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=33345052\n""}"
4145,"{'code': '917b46b8e54e554524555e547e9c9c2373104f1a', 'message': 'Trivial fallout from internal-only change.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=33239275\n'}"
4146,"{'code': '42855c535047107bd550a28e30fe5d40f400a97d', 'message': 'Release permutations()-based test.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=33236453\n'}"
4147,"{'code': 'd13f68f9a102bfacedb7bbbc6837b63342966633', 'message': 'Make ServiceManagerTest @GoogleInternal.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=33204393\n'}"
4148,"{'code': 'f765a77000e4a65abadb7073e5282f08c3bc99fb', 'message': 'Implement ServiceManager, the new better CompositeService.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=33185556\n'}"
4149,"{'code': 'aa476d6a91520d3e52f652a3974bce3ac4fb805d', 'message': 'Add an autoIncrementStep to FakeTicker, similar to the autoIncrementStep in FakeClock\n\nfor context: This API change is discussed in https://groups.google.com[]d/topic/java-libraries-discuss/0rNUmTjRz_4/discussion\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=33183758\n'}"
4150,"{'code': 'e0e16abaa961f819426bea28743841222679d4dd', 'message': 'Added forwarder tests for various Forwarding* classes in util/concurrent. Added ForwardingObjectTester to test any subclass of ForwardingObject. Since it has to use EasyMock partial mock, I had to place it under javatests/. Along the way, fixed a few oversights in ForwardingWrapperTester.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=33148165\n'}"
4151,"{'code': 'ce1cff2cc01e8914af1085c0c41ccc4352f22555', 'message': 'Deprecate Ranges now that the majority of callers have been migrated.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=33144339\n'}"
4152,"{'code': 'a8c3b26d3da826429c1d4b1291d1cc55a5f13123', 'message': 'Sorry, forgot to add @since to the methods.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=33141201\n'}"
4153,"{'code': '595d06ebec81b7b695e557f57f5f754e06d390db', 'message': 'Add Futures.allAsMap and Futures.successfulAsMap as analogues to {all,successful}AsList.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=33120330\n'}"
4154,"{'code': '3b9b68187965f2c16f7f3e85ae3cbbff36431dae', 'message': 'Added ForwardingWrapperTester to test forwarders. It lacks guava annotations. Please advise. Thanks\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=33116315\n'}"
4155,"{'code': '1101d3ffa6fb2a74c00258ee9bda9e1b4df0ed1d', 'message': 'Update BloomFilter to implement Predicate.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=33114990\n'}"
4156,"{'code': '9dc16bbe746faf499add4aba449887414888bc21', 'message': 'Added tryAcquire() and tryAcquire(int) to match with semaphore and to simplify client code when wanting to attempt to acquire a permit with zero wait time.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=33098174\n'}"
4157,"{'code': '007bd95bc27a0c10bf59bb0076ec55bd9f18b80b', 'message': ""Migrate callers from Ranges.* to Range using automated search and replace.  The following commands were used:\n1) sed -i 's/\\([^a-zA-Z]\\)Ranges\\./\\1Range\\./g'\n2) []-bin/java/com/google/devtools/javatools/imports/ImportTool --remove=com.google.common.collect.Ranges --add=com.google.common.collect.Range\n\nTested:\nreviewed submit queues\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=33090428\n""}"
4158,"{'code': 'f99a2cbe13cfce32b86d2a37f4ee03e11cffe0da', 'message': 'Fixed JoinerTest by adding back the old setDefault(Object) call. The previous deletion was not tested against moe. Changed the test to cover package-private methods so that moe is covered; changed Joiner to add a missing @Nullable.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=33083585\n'}"
4159,"{'code': 'fa58649127265dd91f3b2b947b4fc27a7fd89c59', 'message': 'Remove final switch from CaseFormat.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=33061765\n'}"
4160,"{'code': 'c399bb5be8c6b477656a31927545dbd46eafbc7d', 'message': 'Fix incorrect @SuppressWarnings annotations:\n\n@SuppressWarnings(""deprecated"")\n\nshould be:\n\n@SuppressWarnings(""deprecation"")\n\nTested:\nTAP presubmits for global presubmit queue\n[]\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=33053189\n'}"
4161,"{'code': '6005ac6c861ca93c8c57239522357318d6cec894', 'message': 'Added null check from NullPointerTester-generated proxies.\n\nIt should be reasonable for the follow method to check null through a collaborator:\n\npublic void foo(String a, RejectNull b) {\nb.rejectNull(a);\n}\n\ninterface RejectNull {\nvoid rejectNull(String s);\n}\n\nBecause RejectNull *should* throw NPE by contract.\n\nIf NPT generates this proxy, it should make sure the proxy checks nulls mandated by the method signature.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=33016839\n'}"
4162,"{'code': '08d3526fc19293cf099e0c50dbf3bbc915f2e3f2', 'message': 'Copy LimitInputStream implementation to ByteStreams.\nDeprecate LimitInputStream.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=33000215\n'}"
4163,"{'code': 'bece04b513ab288376d66fbf6e9999091e364d25', 'message': 'Add method to CaseFormat enum instead of using a switch.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32995795\n'}"
4164,"{'code': '3bb7e198e8a73f4932fa92c679e7a0861480a9d3', 'message': 'Fix CacheBuilderSpecTest (issue 6453130)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32994791\n'}"
4165,"{'code': '1161d53ad0b9da0e9fc14a97607c78f1a0b555eb', 'message': 'Add enough @Nullable annotations to make Findbugs happy.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32971318\n'}"
4166,"{'code': '68f5f79508a87fae6505af9b95d55bb16e005e06', 'message': 'Add @Nullable to methods which take a @Nullable default value.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32966990\n'}"
4167,"{'code': '1548d6345c99114613030ba50bf9ec774846555b', 'message': 'Fix remaining callers of NullOutputStream in c/g/common.\nMOE insert public for c.g.common.io.NullOutputStream.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32965282\n'}"
4168,"{'code': '24e4d09cbd725d76734f10a449d3e2bc60ee62f8', 'message': 'Remove @Beta from Queues (and all of the static factory methods).\nAdd @link tags from Lists and Sets to Queues.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32963365\n'}"
4169,"{'code': '89227baf2fbd3d29c019e3b1daeea49eb1851a70', 'message': 'Swallow unchecked exceptions in immediate future listeners\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32958093\n'}"
4170,"{'code': 'a62c8082b9cd897becaf67550667e427c09efd5a', 'message': 'Add toMap, index and uniqueIndex to FluentIterable.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32953942\n'}"
4171,"{'code': '09c626ed9f63b409692c81c65febedd45e362a14', 'message': 'Point from Function to Functions and from Predicate to Predicates.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32953252\n'}"
4172,"{'code': 'a0069d290f4fb061bd9c8a918357389a25e0025a', 'message': 'Some more tests for MoreExecutors\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32929661\n'}"
4173,"{'code': '1af87fe81cd282cf8593066ca2f9fa690092bd78', 'message': 'Rewrite Futures.immediate*Future with simple immutable Future implementations, and change Futures.immediateFailingFuture to not rethrow on Error.  This speeds up the creation of immediate futures by a factor of 10, which is significant for, e.g. the upcoming asynchronous cache, which uses many more immediate futures, particularly for the translation layer between CacheLoader and AsyncCacheLoader.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32923067\n'}"
4174,"{'code': 'e8959ed0f4f1617c22668e55a7f4989b751b776a', 'message': 'Store the stack trace of the thread that called cancel in AbstractFuture and attach it to CancellationExceptions.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32921728\n'}"
4175,"{'code': '776dbe60960fc16412142001804a427131d9ba05', 'message': 'Add ByteStreams#limit(InputStream, long)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32916484\n'}"
4176,"{'code': '4ff74fe7e9378cf3de1ec5c164ba50dd9db654d8', 'message': ""Delegate the Ranges implementations to Range.  (I don't know why I didn't do this in the first place.)  Also clean up common.collect code to use Range and update the docs throughout.\n\n(Was cl 32690240, but lost my client)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32911950\n""}"
4177,"{'code': 'e276741577ff69f2bd37de5abe4369df65a14edb', 'message': 'Added some tests covering some edge cases in Futures.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32879297\n'}"
4178,"{'code': 'fb8059d8e01b69600ec5f489543742cd09ddae63', 'message': 'Improve Funnel javadocs about using an enum.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32878801\n'}"
4179,"{'code': '83779d1f9b3791811063f486d8742f63d040c57d', 'message': 'Fix a few typos in the javadocs of Queues#synchronizedQueue\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32876603\n'}"
4180,"{'code': '08a93dd79f9b45c50a450e94d3d7c29a8d60166d', 'message': 'Format visibility keywords.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32838713\n'}"
4181,"{'code': 'c9c7b8d84251b04c7cc05fe74a32ce062a22fbff', 'message': 'Used TearDownStack instead of TearDownTestCase for AbstractExecutionThreadServiceTest\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32830069\n'}"
4182,"{'code': '963e8a39ace0e027d2544a5c19c8ca75ee3334c6', 'message': 'Add tryParse implementation for Doubles and Floats.\n\nFrom Louis: http://codereview.appspot.com/6354088/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32829265\n'}"
4183,"{'code': 'd8bba0411227ef89ec2a0553e1a33a3a9f8f6559', 'message': 'Make FluentIterable.toImmutable* package-private and clean up more callers.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32827565\n'}"
4184,"{'code': 'a2504dc46823bec501971201c75fe225c05eb02d', 'message': 'Deprecate FluentIterable.toImmutable*. Change a few references to toImmutableList in FluentIterable javadoc.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32777184\n'}"
4185,"{'code': '99d4056a60fb19b277518bac594bac3415d881c5', 'message': 'Added idempotence test to ExecutionListTest\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32776278\n'}"
4186,"{'code': '10165243c859057a926263a9bffa31d5127881a7', 'message': 'Change callers of FluentIterable.toImmutableSet(), toImmutableSortedSet() and toSortedImmutableList() to call toSet(), toSortedSet() and toSortedList() instead.\n\nTested:\nreviewed submit queues\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32770320\n'}"
4187,"{'code': 'ee75797a03415a1f42c0237fd140691ce9249deb', 'message': ""Fixed a race deadlock bug in AbstractServiceTest: when notifyStopped() is called after getStateHistory(), the latter takes the synchronization lock and also waiting on the latch; the former cannot count down the latch because it can't grab the synchronization lock. Also added missing tests for throwing exception from doStart(), doStop().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32768098\n""}"
4188,"{'code': '4135d369da714b34a293f52bbe81ca28eaab3423', 'message': 'Use object equality instead of reference equality for the Funnel in\nBloomFilter.equals().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32766357\n'}"
4189,"{'code': '557bd5139be6ab5575a8674caa10a2cb54b23ae0', 'message': 'Added tests for stop-while-starting and stop-before-start to AbstractExecutionThreadServiceTest\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32766077\n'}"
4190,"{'code': '6e66293b8d3899ef3b3b3445123a5fe6cb065595', 'message': 'Add exception unit tests for AbstractIdleService.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32745827\n'}"
4191,"{'code': 'b9a4d75354aa1e45021d152e82e6797f84d2e3f4', 'message': 'Add to[Set, etc.] methods to replace the toImmutable[Set, etc.] methods on FluentIterable.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32739379\n'}"
4192,"{'code': 'f7382c77eed0cb9231b73cbe0378987bee18bc5e', 'message': 'Add Files.getNameWithoutExtension\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32734609\n'}"
4193,"{'code': 'bc8ae3f1994aaa292ca23bba7ea10b3c392ee186', 'message': 'Rename FluentIterable.addTo to copyInto.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32731689\n'}"
4194,"{'code': 'bc9b186d3bffa15e775cb4592c5c9ac4a03eb45b', 'message': ""Fix comment bug.\n\nThe comment suggests that the cause of an ExecutionException is passed\nin to 'mapper', but that isn't the case according to:\nhttps://cs.[]/#[]/java/com/google/common/util/concurrent/AbstractCheckedFuture.java&l=84\n\nIt would actually be nice if the comment were true, but I don't know\nthe consequences of updating the code in AbstractFuture.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32725153\n""}"
4195,"{'code': '5e983f3030df67659b3f5ea48dd659173f6cd0a4', 'message': ""Use File API for getting extension rather than simple string parsing.\nAdd NullPointerTester and fixed the surprising number of casings where we weren't checkNotNull'ing.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32708936\n""}"
4196,"{'code': '85cc9fd3ab8fff110d00436778ad3aeb6cfb21da', 'message': 'Adds Queues.synchronizedQueue (@Beta)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32690991\n'}"
4197,"{'code': '4c88a393a8ea0ca9c96ff7b441211326b9379424', 'message': 'Further CharMatcher optimizations, eliminating more unused code and especially identifying when the negation is better to precompute than the matcher directly.\n\nFrom Louis: http://codereview.appspot.com/6351118/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32687304\n'}"
4198,"{'code': 'cc58fac6cd000bcf73f5544d9eb3e23d00573863', 'message': ""Add missing c.g.c.collect.testing manual emulations.\nWithdraw c.g.c.escape manual emulations.\nAdd internal tests that make it less likely that we'll miss manual emulations in the future.\n(It's still pretty likely, though, since the error occurs only if someone creates the fileset and associated test but forgets to update the build rule....)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32681009\n""}"
4199,"{'code': '7a4dbb34caf46ab31b18ba9d944d5c5a86c1baf1', 'message': 'Split CloseablesTest into CloseablesTest and FlushablesTest.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32662484\n'}"
4200,"{'code': 'ae1843743b5771b69961e118ef9b845ef5549c51', 'message': 'Copy NullOutputStream to ByteStreams.nullOutputStream().\nDeprecate NullOutputStream.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32648796\n'}"
4201,"{'code': 'd045e1350b720df1ef880ef855051ad7878d2d1c', 'message': ""Move c.g.c.collect.testing.GwtPlatform to guava-gwt.\nEventually it may end up in a new guava-testlib-gwt.\nFor the moment, though, let's just get it out of guava-testlib so that we don't need a GWT dependency there.\nThis CL also removes that dependency.\n\nI've edited the MOE config to emphasize putting GWT stuff in guava-gwt over all other priorities.\nThis moves some .gwt.xml files, which likewise would live in a guava-testlib-gwt area.\nIt makes a special case for Testing.gwt.xml irrelevant, so I've removed it, though we'll want an analogous special case in a guava-testlib-gwt future.\n\nThis CL also adds missing JUnit inherits.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32638474\n""}"
4202,"{'code': '5fe4eb68ef980694d8cbbeb34a6914c05696cee7', 'message': 'A few small cleanups to BloomFilter.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32612086\n'}"
4203,"{'code': '2b9233884efbf6b5e79a77c61c043a58403157be', 'message': 'The number of bits can reach Integer.MAX_VALUE now, rather than Integer.MAX_VALUE/64\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32540182\n'}"
4204,"{'code': 'ecfa6f67f323c23f10a1ceed7596e095618fa044', 'message': 'Copy factory methods from Ranges to Range.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32544574\n'}"
4205,"{'code': '31149b438ec49d6f98123e11d1666c545ba18f90', 'message': 'The number of bits can reach Integer.MAX_VALUE now, rather than Integer.MAX_VALUE/64\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32540182\n'}"
4206,"{'code': 'aa3ae3bec18db352d23ff77672d066e5b022f056', 'message': 'Expire entries at insertion+duration instead of insertion+duration+1 to be consistent with the GWT emulation and, we hope, with common sense.\nUpdate tests that rely on the current expiration behavior (as identified by global TAP).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32533539\n'}"
4207,"{'code': '6510d48005dd21d67f7655eae0689a6104117642', 'message': 'Add Maps.toMap(Iterator, Function).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32512136\n'}"
4208,"{'code': '8318503d8f7d225f6b98abed7a411a6064144741', 'message': 'Update Guava version to 14.0-SNAPSHOT.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32500914\n'}"
4209,"{'code': '0b11aaacc0a7623675755a30aa1b172ad1150644', 'message': 'Move ComputingMapAdapter to MapMaker.\nThis seems to work around the JDK bug that causes http://code.google.com/p/guava-libraries/issues/detail?id=950\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32499454\n'}"
4210,"{'code': '49eb0f4d7efcd9f2e1c07c4b19f9342457943aec', 'message': '6799892: Add FinalizableReferenceQueue.close method.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32452934\n'}"
4211,"{'code': '26eace75a0b5cb8ce765b4f3f5ebcedaf198bfb4', 'message': 'Open source FluentIterable.addTo.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32438496\n'}"
4212,"{'code': '60b819dc1291788a3dce17cd95d8f4a7d0a8b9bf', 'message': 'Total rewrite of emulated CacheBuilder to emulated LocalCache. Features added include recordStats, expireAfterAccess, ticker, and removalListener.\n\nThis version is updated to include support for values(), keySet(), and entries(), as well as iterators generated by these. These methods are used occasionally and the removal had led to errors in the first submission.\n\nThis version has been tested on failing tests reported last submission and found to have no impact on these tests.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32427476\n'}"
4213,"{'code': '52e80110a3beaf786167ab689ae52aa24f4f4b68', 'message': 'More tests for ObjectArrays.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32321913\n'}"
4214,"{'code': '6d877d9216c9687a4c2065201b3c18e8d43f7e39', 'message': 'Rename expectedFalsePositiveProbability to expectedFpp.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32320997\n'}"
4215,"{'code': '464b0cfab7c3b6713c35e6f3ae7426542668c77b', 'message': 'Guava issue 1049: minor optimizations for CharMatcher\n\nFrom Louis: http://codereview.appspot.com/6353073/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32320841\n'}"
4216,"{'code': '107f0ade32cf19661befb9359159227464ab4065', 'message': 'Automated rollback of dfc51048f549.\n\n*** Reason for rollback ***\n\nNewly unsupported operations causing failures.\n\n*** Original change description ***\n\nChanges implementation of emulated CacheBuilder and instead emulated LocalCache. Features added include recordStats, expireAfterAccess, ticker, and removalListener. RefreshAfterWrite was implemented but removed due to reliance on reload() and returned futures.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32320187\n'}"
4217,"{'code': 'dfc51048f5493eb483f323bb427eef3d76e4685f', 'message': 'Changes implementation of emulated CacheBuilder and instead emulated LocalCache. Features added include recordStats, expireAfterAccess, ticker, and removalListener. RefreshAfterWrite was implemented but removed due to reliance on reload() and returned futures.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32318049\n'}"
4218,"{'code': 'c19946804421d2319eab08987f914dd6536c3beb', 'message': 'Document some possibly surprising semantics of Files.copy(File, File).\n\n(Guava issues 515 and 1063.)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32279885\n'}"
4219,"{'code': '525b9e540acdef1dbccc7f51aa16a6592e57d5e0', 'message': 'Make Maps.asMap and toMap public and @Beta.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32271388\n'}"
4220,"{'code': '7b176de81383878df912e715a2f308550e05d2d1', 'message': 'Add Maps.asMap(NavigableMap, Function) to complete the set of asMap views.\n\nAlso fixed views of SortedAsMapView to not allow add or addAll on their keySets and added tests for Sorted and Navigable asMap views to MapsCollectionTest.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32271281\n'}"
4221,"{'code': '92d87c98a24b147a4290e970288fc1cd4d040e0f', 'message': 'Minor formatting changes.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32270753\n'}"
4222,"{'code': '84f2f1c4e6ffb73f97705ca6b22feecd178748e5', 'message': 'Use normal, compile-time @GwtIncompatible stripping instead of unusual, runtime UOE throwing for getMethod calls.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32236275\n'}"
4223,"{'code': 'bf177f504cc8732d7259980bb067e12f72cd114a', 'message': 'Make the remaining protected method in EventBus package-private.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32234236\n'}"
4224,"{'code': '41301671896d0755f6f04b2b61e7e9a2a8b86410', 'message': 'Expose {Int,Long}Math.mean in Guava 14.0.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32230548\n'}"
4225,"{'code': '81abc0864e77e320c47d16b7da00097c6c87c677', 'message': 'Fix Findbugs warnings.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32228105\n'}"
4226,"{'code': '9dcde66ab9bfcdbe007b69d4912a297894bece59', 'message': 'Remove Iterators.skip.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32199129\n'}"
4227,"{'code': '28ad89ad97af3800cdb335d973e8f2064a1137e4', 'message': 'Remove AbstractLinkedIterator.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32198902\n'}"
4228,"{'code': 'ecac7768c22ab1d4093b6a00b16aca1d067e5f08', 'message': 'Remove NullPointerTester#ignore(Member).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32198797\n'}"
4229,"{'code': '07ab8b8b83c38feddcaf1da53912fe2f5338554b', 'message': 'Add some toString tests for CharMatcher.anyOf().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32185623\n'}"
4230,"{'code': '7bb7ca9ab7e5b4ce7f43249c57b58a16f8c4bc4f', 'message': 'Remove c.g.c.base.Equivalences.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32160887\n'}"
4231,"{'code': '51ce6ddf7a1c10a558a534789ee5027e4a3edc01', 'message': 'A few small cleanups to Reflection.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32159687\n'}"
4232,"{'code': '2fdf6321178d99e7a13fd9ce31de7b459c95957a', 'message': 'Assorted cleanup:\n- Remove out-of-date CharMatcher comment.\n- Merge ContiguousSetNonGwtTest into ContiguousSetTest.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32157893\n'}"
4233,"{'code': 'cc36cdedb53cc4d2fb3efb897c2d3c4a30535b0e', 'message': 'Improve ImmutableMap.of(K, V) error message re: Guava issue 988.\n\nFrom Louis: http://codereview.appspot.com/6427050/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32156881\n'}"
4234,"{'code': 'bd4ca938834ce904684319f13732d898ad41c96b', 'message': 'Make comments javadocs so MOE correctly strips them.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32142622\n'}"
4235,"{'code': '1e229a23f23394f70bf6bcb32c772a36ae6cc832', 'message': 'Making exception more descriptive when someone tries to proxy a class\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32142551\n'}"
4236,"{'code': '1064c5d855ac917767c29081028c8f43d2ec6847', 'message': ""Deprecate mutator methods on immutable/unmodifiable classes in common.collect.  It can't possibly be correct to invoke a method that mutates a collection on an immutable object and this will help catch those errors at compile time.  It also has the benefit that IDEs set up to filter deprecated methods from the auto-complete suggestions will filter out the unsupported methods.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32083827\n""}"
4237,"{'code': 'e019451e44495ec1c7da56be5d4aa94df04139f6', 'message': 'Add serialization tests to the Multimap test suites.\nFrom Louis: http://codereview.appspot.com/6421047/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32082297\n'}"
4238,"{'code': '13d60bc213fc30852b9b0bef93d15ecd116f91d3', 'message': 'Fix a comment on AbstractScheduledService.Scheduler that implied that you could create subclasses of Scheduler (that are not subclasses of CustomScheduler).  This is impossible since Scheduler has a private constructor.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32059988\n'}"
4239,"{'code': 'de9ae15bdc975de69a96c317d7a01a588f2dbeef', 'message': 'Remove unused methods in c/g/c/{hash,reflect}/...\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32056245\n'}"
4240,"{'code': '8011045a11d102e65f36c94a5174b3bd39067516', 'message': 'HashIterator fix for LocalCache\nRemove a few unused chunks of code from common.cache\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32015573\n'}"
4241,"{'code': 'fc666e2d5e42da15a9255bc56a09d232ad32723b', 'message': 'Fix comment to refer to InternetDomainName.isValid instead of deprecated isValidLenient.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32011124\n'}"
4242,"{'code': '89fe504cd733010850beaa6f0dcdbec6c032244a', 'message': 'Remove unused methods from c/g/common/collect\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=32009861\n'}"
4243,"{'code': 'db6b2b695c608202912299f7356eafb82ff0cf69', 'message': 'Remove public from TypeResolver in Guava.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31969908\n'}"
4244,"{'code': 'f2242dbc8a99accda1f70c0f178cfa5f5b847dc8', 'message': 'Updating putString(String) spec and default implementation, to avoid\nforcing implementations to inefficiently deal with unpaired surrogate characters.\nThis is an incompatible change for inputs with such characters.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31932872\n'}"
4245,"{'code': 'f51d8fa33a59b6f817fabffbe729a8992359e15f', 'message': 'Remove unused char[] instance in CharMatcher.inRange.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31924666\n'}"
4246,"{'code': 'f7c152e19c6df9a7b28ee3a41f1a1c3d71491a23', 'message': 'Remove unused code.\nFrom Louis: http://codereview.appspot.com/6343051/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31920587\n'}"
4247,"{'code': '514296296fb73c8bb5821beec3a9089801313de0', 'message': 'Made TypeResolver @Beta and added clearer document.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31858151\n'}"
4248,"{'code': '9a351e61a59c83dd4ec00adc0a1518b7731c1ff3', 'message': 'Rephrase to stop suggesting that there are only two overloads of transform().\nAlso, publicly release a comment in the Future.addListener Javadoc about addCallback, which was publicly released in Guava 10 (and already mentioned publicly elsewhere in the ListenableFuture doc).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31833262\n'}"
4249,"{'code': '52f8d08af67b86d479498bfac62d1915c6c0d1c9', 'message': 'Add tests that the custom hash table implementations expand correctly.\nFrom Louis: http://codereview.appspot.com/6351075/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31822084\n'}"
4250,"{'code': '654a760c3ce4cef00bef066602bc2c10400982fd', 'message': 'Decrease tasks again for get() basher, which currently takes 4x as long as any other cache test.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31820210\n'}"
4251,"{'code': '36a9b4eca8ce849672ffe4522b4f8a90818efc70', 'message': 'Update the handling of gwt.xml files.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31818898\n'}"
4252,"{'code': 'b019312572c43b100a5ad12b0a92c606469c5bcc', 'message': ""Add IntMath.mean and LongMath.mean. It's an efficient implementation resilient to overflow which is useful when computing midpoints.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31799895\n""}"
4253,"{'code': '68862d7803ca58a2c73d87a7e866152dc1444826', 'message': ""Rollback gwt.xml change.\n\n*** Reason for rollback ***\n\nBreaks compilation under --check_constraints=gwt, perhaps other settings?\n\n*** Original change description ***\n\nMake java_and_gwt_library support extra_module_contents, even though java_library doesn't :)\nThis lets us remove our manually maintained (and often wrong) .gwt.xml files.\nOccasionally we still need an extra_module_contents file, and we should someday figure out why.\n(Note: Because java_and_gwt_library has access to information that plain java_library does not, it can actually be a bit smarter about what it puts in the .gwt.xml automatically.)\nThe net effect on the GWT modules themselves is mostl\n\n... description truncated by g4 rollback ...\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31797949\n""}"
4254,"{'code': '314727b81a4f45210ab53ebd46b695150ea36f8c', 'message': 'Fix a bug with CharStreams.copy not clearing its buffer after reading.\n\nGuava issue 1061: http://code.google.com/p/guava-libraries/issues/detail?id=1061\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31793143\n'}"
4255,"{'code': 'eebb4d038a9fa2b9780e5c5d0fc046aeadb08c9b', 'message': 'Update the handling of gwt.xml files.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31782922\n'}"
4256,"{'code': '0ab2a58836b5a5a1b8e9154920faf8b279710b1d', 'message': 'Special-case Immutable{List,Set}.copyOf(Iterator) for 0 or 1 elements, as per Guava issue 691.\n\nFrom Louis: http://codereview.appspot.com/6347069/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31745579\n'}"
4257,"{'code': '69c6b9390a317db716efc164115ae5dad1775477', 'message': 'Force ArbitraryOrdering to handle nulls consistently.\n\nFrom Louis: http://codereview.appspot.com/6355072/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31745563\n'}"
4258,"{'code': '9fe3f63fdfabcfd57676fc709928ae2ccb891cd2', 'message': 'Add SortedSet overload for Maps.asMap(SortedSet, Function).\n\nFrom Louis: http://codereview.appspot.com/6361045/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31720830\n'}"
4259,"{'code': 'd5ae395da2e15d222db7a4e36145d375843e0c05', 'message': 'Improve toString() for Supplier/Function implementations in Suppliers.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31718621\n'}"
4260,"{'code': 'e85b9465b6f28055b31e0f36720c7525432730bc', 'message': 'Make Suppliers.compose(Function, Supplier).toString() return something useful.\n\nFrom Louis: http://codereview.appspot.com/6350082/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31715841\n'}"
4261,"{'code': '2be6eaab8c09eaa54debe3a6622d2ce68b0768d0', 'message': 'Ensure Cache.get expands hash table appropriately\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31657582\n'}"
4262,"{'code': '889fd40211f549885b93060e761afed80468b920', 'message': 'Fix tests for IntMath.isPowerOfTwo and LongMath.isPowerOfTwo. The existing tests copied the implementation\ncode and therefore were not really testing the code. The tests now use BigInteger.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31628328\n'}"
4263,"{'code': 'e40ccefdad7c12f708c27890ca01cc27e894a7ea', 'message': 'Fixed dropping of CharMatcher description when precomputing.\n\nSee https://groups.google.com/forum/?fromgroups#!search/guava-discuss/guava-discuss/R4vNbxB1xAs/lprChIFnaDkJ\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31609773\n'}"
4264,"{'code': 'db5977647f55e4e8065d3971d216f0a0d1a42541', 'message': 'Remove MapMaker: strongKeys(), strongValues(), and valueEquivalence() from MapMaker and friends.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31583111\n'}"
4265,"{'code': 'a7e1248b491f0e5067686555e33e45e2ffc60a0a', 'message': 'Strip out comments pertaining to maximumSize() and expireAfterWrite() (which are no longer public).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31579977\n'}"
4266,"{'code': 'd2459d24049953b290409312a3e1ac4a624063a3', 'message': 'Remove MapMaker#expiration (scheduled for deletion in July 2012).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31579076\n'}"
4267,"{'code': 'd5481a89a15bc7c73d45d847e317ade586293a0a', 'message': 'Remove Iterables#reverse\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31578998\n'}"
4268,"{'code': 'ada07d6dc56625211c39c8e8a2ba36f4330dbedb', 'message': 'Remove the use of MoreAsserts from the AbstractServiceTest.  Apparently it breaks the maven build.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31573774\n'}"
4269,"{'code': 'bc763c57d382eb75023dd146ca1df2c6a88d4eda', 'message': 'Add MediaType for Google ""Sketchup""\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31546185\n'}"
4270,"{'code': '7eec09ede5fa6ccdb1cb19558833c6857b037171', 'message': 'Introduce an immutable object to encapsulate the mutable state of AbstractService.  This will allow us to perform state queries (isRunning, failureCause, state()) without grabbing a lock.\n\nAlso, rewrap the file to 100 lines.  It was already a little inconsistent and i own the blame on the whole file by this point anyway.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31521820\n'}"
4271,"{'code': '4f08e59ad9541f9d3f8fad6addbc9fed7aaf00cb', 'message': 'Remove c.g.c.base.Stopwatch#toString(int).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31520651\n'}"
4272,"{'code': '0361f84dc72d8e55d458cb814f9397fb3a980cba', 'message': 'Change the AbstractService so that listeners are called without the lock held.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31519707\n'}"
4273,"{'code': '8d5659ad0e137d3a594014793264292a75b48bb9', 'message': 'Fix 2 bugs in the AbstractService implementation of listeners.\n1. Ensure that the futures are updated before listeners are called consistently\n2. Fix a bug that would cause the running() callback to be invoked when the Service was transitioning from STARTING -> STOPPING directly.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31519336\n'}"
4274,"{'code': '59e0fa707b40686406ea2c9812785391beb13367', 'message': 'A few small cleanups to the murmur3 hash functions.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31507627\n'}"
4275,"{'code': 'feb65a5d30e43d8b4198c150c764b588aa337bd9', 'message': 'Open source a few more of the benchmarks.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31487288\n'}"
4276,"{'code': 'd4e7d7b6ffd6967264e907a73cb5fe709e20c8bd', 'message': 'Simplify implementation of ByteStreams.hash(); add direct tests for it and getChecksum().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31456068\n'}"
4277,"{'code': '8c535423fcdeeacaa2c62600db3e88a52b92ddb0', 'message': 'Fix javadoc warnings.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31406210\n'}"
4278,"{'code': '3da9b56d5a58247c15f1c55b5d9dd17d123d6163', 'message': 'Add @GI to failureCause overrides.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31400072\n'}"
4279,"{'code': '46c545d7a79d375e37cc077aff8df7f72fd8a126', 'message': 'Optimize GCD implementation to use fewer branches for ~25% speedup.\nFrom Louis: http://codereview.appspot.com/6306091/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31398961\n'}"
4280,"{'code': 'a76694863c256747a32c19b6752d457f4759a0d1', 'message': 'Remove some email addresses from @author tags.\nAdd a test to try to keep them from creeping in in the future.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31397324\n'}"
4281,"{'code': 'f280c64ba31c0e5271cfeac606713ab829416d81', 'message': 'Optimize BigIntegerMath.log10 by using the log2 to get an initial approximation of the log10.\nFrom Louis: http://codereview.appspot.com/6329066/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31397137\n'}"
4282,"{'code': '7827f648225f88d47470d272f7b56b543f78d21d', 'message': ""Optimize {Int,Long}Math.log10 with techniques from Hacker's Delight.\nFrom Louis: http://codereview.appspot.com/6303085/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31396705\n""}"
4283,"{'code': '77b68bd49407cfc419cdffcc2b8b1590a4e23daf', 'message': 'Add Guava copyright.\nOther no-op changes.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31368650\n'}"
4284,"{'code': '4327836ddd40eb1b047d071f0f34a54a4db1c8e5', 'message': 'Fix more Guava copyright headers.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31366544\n'}"
4285,"{'code': 'a364f16500ab36088ce75aa86945c978ee2da3ff', 'message': 'Expose TypeResolverTest; various internal reshuffling.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31366061\n'}"
4286,"{'code': '4d4704e384b5505e058665d9620cd80dd05ad806', 'message': 'Add Guava copyright header to files that were missing it.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31355899\n'}"
4287,"{'code': 'd1000f80b04267f9d562fec407612f0a856d4a7d', 'message': 'Add @since to Striped.\nAdd @GI to Service#failureCause.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31355804\n'}"
4288,"{'code': '21e013010b9de96f6a14107bd2ffc6da71bdcb26', 'message': 'Fix the formatting of the javadoc in j/c/g/c/util/concurrent/Service.  Rewrap everything to 100 cols.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31314728\n'}"
4289,"{'code': '8634dfafb850b8150c14de0fc9c24cfcd05093cc', 'message': 'Explicitly test that NullPointerTester uses null as a default for @Nullable parameters.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31300698\n'}"
4290,"{'code': '52694674ed5a4fcdeb6fc4b2b7c8878b5a5db632', 'message': 'Fix a deadlock in the new addListener implementation and also tweak the docs on stopAndWait which are out of sync with reality.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31289338\n'}"
4291,"{'code': 'ce1247246c30ea7c29787c126a531e6ad9e0689c', 'message': 'Fix a few minor issues in cache javadocs. Some of this patched from fry.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31272683\n'}"
4292,"{'code': '749abea7237ad23efc4f0099619dcacfba411667', 'message': 'Update to latest Mozilla PSL.\n\nThe net effect of this change is only to add these 16 public suffixes:\ncom.tm com.ug co.tm edu.tm\ngov.sx gov.tm mil.tm net.tm\nnet.uz nom.tm org.tm org.ug\norg.uz sx tv.sd wf\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31270763\n'}"
4293,"{'code': 'cdc0a08dc8f4b65b1a0597ce7c3cd1b3ef96c969', 'message': 'Delete Navigable* and Navigable*Test.\nMove transformEntries and transformValues implementations into Maps.\nMove synchronizedNavigable* implementations into Synchronized.\nMove unmodifiableNavigable* tests into MapsTests/SetsTests.\nAlso, open-source synchronizedNavigable{Set,Map} tests.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31268670\n'}"
4294,"{'code': '8cc93151a9fa7d3c86bd5a1ec7e4665147493f8c', 'message': 'Addded reference of TypeToInstanceMap to ClassToInstanceMap javadoc.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31252218\n'}"
4295,"{'code': '36d07cffd58bc09fe7caff77dd1ea7d3dc64bf45', 'message': 'Graduate Sets.filter (SortedSet overload) from @Beta.\nGraduate Maps.filter* (SortedMap overloads) from @Beta.\nGraduate Multimaps.filter* from @Beta.\nRelease CycleDetectingLockFactory as @Beta.\nRelease UnsignedLong_CustomFieldSerializer to make UnsignedLong GWT-serializable in Guava.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31229567\n'}"
4296,"{'code': '09582e5bebf124e27336568e8539efb2c0fcae3d', 'message': 'Add Eclipse .metadata/ folder to .gitignore.\n'}"
4297,"{'code': '8d87436505e80d6a275afde82224b182e31d816f', 'message': 'Fix a minor issue in TypeToInstanceMap javadoc.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31226970\n'}"
4298,"{'code': '451329ade0540ba0f84bc27ef107169ce81b9ae7', 'message': 'VisibleForTesting Javadoc tweaks.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31220800\n'}"
4299,"{'code': '84848fe1bdfa9ff2da7b708fe5cd1885d20f7f7f', 'message': 'Make findbugs a provided dependency to avert dep conflicts when using findbugs 2.0.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31212790\n'}"
4300,"{'code': '179325f2eda54c77305bced834a2d87a9255dc85', 'message': 'Begin migrating methods from Navigable{Maps,Sets} to {Maps,Sets}.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31212696\n'}"
4301,"{'code': '99c2135a38efa787e2b85bb0ca24ffb0244d21a4', 'message': 'Add @Beta to Optional#or(Supplier) and Optional#or(Optional).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31210314\n'}"
4302,"{'code': '7c773aad63e3433cdd128dc99b947439e5f678b5', 'message': 'Release HostAndPortTest.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31209654\n'}"
4303,"{'code': '3d812f0b4dd11b055b5b372e4947b1cab21caa7b', 'message': 'Add a state transition listening mechanism to Service and implement in AbstractService.\n\nThis is the first of several CLs that will change the Service interface. The basic plan is:\n1. add the listener interface (this cl)\n2. add some utility methods for doing timed waits via the listener apis.\n3. migrate users of start() and stop() to void versions of those methods.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31186755\n'}"
4304,"{'code': 'e9f938f5698467f14e43c48f3b9a7db4a5d00dde', 'message': 'Make HostAndPort serializable.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31186303\n'}"
4305,"{'code': 'b0aa4a41db1715aa95f1eb03965ab4b13c860b4c', 'message': 'De-@Betaify the c.g.c.collect.Tables class\nLeave @Beta on newCustomTable(), transformValues(), and unmodifiableRowSortedTable().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31184139\n'}"
4306,"{'code': 'ca176c9481ed7e447a4207efd821da338fd0b6b5', 'message': 'Remove @Beta from c.g.c.base.Equivalence (leave it on #equivalentTo).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31183871\n'}"
4307,"{'code': '1a22643a2cf10bf98dccf516828f7d0d8617afdd', 'message': 'Fix comment reference to ""toImmutableSortedList.""\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31183592\n'}"
4308,"{'code': 'cb140e39acac7da75a7f28bcf406c9ff9086c7cf', 'message': 'Release RateLimiter as @Beta after cleaning up the todos a bit.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31183139\n'}"
4309,"{'code': '0f400b0ddb59279c5dbf5427e336b47bb8bdd89d', 'message': 'Allow expectedInsertions == 0 for BloomFilters.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31182172\n'}"
4310,"{'code': '156690e48fee2fc602be0b0df9d9cb2544f9c328', 'message': 'Remove @Beta from Multisets methods: containsOccurrences(), retainOccurrences(), and removeOccurrences()\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31181488\n'}"
4311,"{'code': '5e9171ed66da2e445431b0197a358196cb41eb1b', 'message': 'Release FluentIterable##toSortedImmutableList.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31181172\n'}"
4312,"{'code': 'fe6576f7e5a83876db44f4f91374b8d04e24175a', 'message': 'Remove @Beta from Lists.newCopyOnWriteArrayList() and Sets.newCopyOnWriteArraySet()\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31180601\n'}"
4313,"{'code': '3d6b39c2ccdec6a7866f894d1ffa394f1967dfd5', 'message': 'Remove @Beta from Strings.common{Pre,Suf}fix.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31180208\n'}"
4314,"{'code': '5744fecd922893e8238373812559a6a8ea61adc4', 'message': 'Remove @Beta from Iterator-accepting methods in Joiner (except for the Map.Entry related methods because the Iterable-accepting versions are still @Beta themselves).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31180145\n'}"
4315,"{'code': '1fff815a61e85ea84ab45b353a15058320c6ba9f', 'message': 'Implement Maps.asMap(Set, Function) view.\n\nFrom Louis. (http://codereview.appspot.com/6304066/)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31179035\n'}"
4316,"{'code': '3e6a1dff154c407fd38a45796a7c0caf28966ba1', 'message': 'Migrate local MediaType constants to the class MediaType\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31178318\n'}"
4317,"{'code': '716d731cd8998a812db23750edeb8244c35bf1cd', 'message': ""Add caliper as a dependency.\nForce build of 'benchmark'\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31177762\n""}"
4318,"{'code': '93a4d360168b51e1e32c0f31632bfde787e115e2', 'message': 'Give a readable name to the thread used by a delayed shutdown\nhook.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31171327\n'}"
4319,"{'code': '18fb2a20cfc43d5e17b93fd2e683aeda468abf84', 'message': 'Open source lots of Caliper benchmarks!\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31147973\n'}"
4320,"{'code': 'c2baa95a5dd23a4e0f061bcf17766e6619d5aadd', 'message': ""Make protected methods of EventBus package-private, hiding the package-private EventHandler type.\n\nLeaving the one protected method that didn't have EventHandler in the signature protected but @Deprecated for one release before making it package-private as well.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31147025\n""}"
4321,"{'code': '33ba073c98f56b4918bf539af8b70c3f272b8943', 'message': ""Map *Benchmark.java files into guava-tests/benchmark (they aren't buildable externally yet, but will be some day).\nOpen source a few Set-related benchmarks as a preliminary test.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31143691\n""}"
4322,"{'code': 'c8a6b01dfdc58b8f1eab1d7e369656dc2981029f', 'message': 'Remove erroneous statement about inability to unregister from eventbus package Javadoc.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31129205\n'}"
4323,"{'code': '3f72054d6997c9a80e83cb2657dd8c96e6cf1fac', 'message': 'Replace another instance of supertype-finding code in EventBus with TypeToken.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31082777\n'}"
4324,"{'code': 'ff2b5c0897d02d726d803b8103d12ad823c5c4b9', 'message': 'Take Iterators.advance out of @Beta.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31078297\n'}"
4325,"{'code': '706c81f7021b5cb06419e25671f4ee4216784ca2', 'message': 'Changed callers of Iterators.skip to call Iterators.advance.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31044719\n'}"
4326,"{'code': 'aba87338f827f9ee79a69f3638933c54a8afaeb4', 'message': 'Fix copyright notice, other Guava things on Striped.\nFrom Louis: http://codereview.appspot.com/6306084/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31038311\n'}"
4327,"{'code': '507da39b4b26d3b0abde85045dc2345e9f2f8c6e', 'message': 'Added min, max, lexicographicalComparator tests\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31034294\n'}"
4328,"{'code': '49791e17582dcd77a73ebbc930e2109922231e29', 'message': 'Comment out assertions that fail during mvn testing.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31007060\n'}"
4329,"{'code': '730a302debc8b19c49bd84f57df7ba7d2534cc34', 'message': 'Mark Hashing#weightedConsistentHash tests as @GoogleInternal\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=31002683\n'}"
4330,"{'code': 'b01348bb5a1cee6848b64e52032c96bf3dc605a1', 'message': 'Removed debug printlines\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30996792\n'}"
4331,"{'code': '63bbd7b239879a96614e03f3986f2c83f56850dd', 'message': 'Added min, max, lexicographical comparator tests to primitives.UnsignedInts\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30995925\n'}"
4332,"{'code': '7fb563e8edb365b8bd941b76eb94ca3bf091b090', 'message': 'Just a little reformatting.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30976931\n'}"
4333,"{'code': 'ee0a59572b9185e82474919c32a2d6a858efc33a', 'message': 'Attempt to improve Ordering.allEqual() documentation.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30975026\n'}"
4334,"{'code': 'a9c5facd9a1f73763a3245f58d91c82e1a650e3b', 'message': 'Implement HashFunction#hashString shortcut for murmur3_32\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30974860\n'}"
4335,"{'code': '2ab9e938a833221d2da456a5107c2ea27cb73cb4', 'message': 'Added Iterators.advance and deprecated Iterators.skip.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30972849\n'}"
4336,"{'code': '6e11793e4d66f896082e54707de3e76607bc2fa2', 'message': 'Implement HashFunction#hashLong shortcut for murmur3_32\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30967967\n'}"
4337,"{'code': 'e09a9e3dca9880fe6c5a665d7a1824c823531512', 'message': 'Add shortcut overload for Murmur3_32HashFunction#hashInt.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30962091\n'}"
4338,"{'code': 'f44ab11f78a1b9f86bb37de45bb6dfb1e0516507', 'message': 'Implement Hashing.weightedConsistentHash().\nSee: []\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30960525\n'}"
4339,"{'code': '4424ba34bb857f158a81770b7f4a0741e5f0e114', 'message': 'Bake the 1.0 load factor into LinkedHashMultimap, eliminating redundant fields for a savings of 8 bytes/distinct key.\nFrom Louis: http://codereview.appspot.com/6308061/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30957194\n'}"
4340,"{'code': '5aee9aff734cd508a742e1714d311b70888c4b0a', 'message': 'Make LinkedHashMultimap.ValueSet extend ImprovedAbstractSet, tying up the last loose end from Guava issue 1013.\nFrom Louis: http://codereview.appspot.com/6304067/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30956797\n'}"
4341,"{'code': '5c2ee466c3d270bf498e352c081bad27f074344b', 'message': 'Add @Nullable annotations to computing map/cache implementations to satisfy Findbugs.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30931750\n'}"
4342,"{'code': '21e01b8f8f207558c47d97cc3a2c091d318d8441', 'message': ""Make methods of Ordering no longer arranged as if by Ordering.arbitrary().\n(Ok, it wasn't *that* bad.) Improve class docs a tiny bit.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30928085\n""}"
4343,"{'code': 'e98dd10dee2935c433e8447a7831bc6692f9b503', 'message': 'Assorted cleanup:\n\n- Add @Nullable annotations to LinkedHashMultimap to satisfy Findbugs.\n- Fix indentation in FunnelsTest.\n- Remove latent references to Truth from MOE config.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30925508\n'}"
4344,"{'code': '0f3b2f226115503ebde95479822c6f64a12f63aa', 'message': 'Optimize Ordering.sortedCopy, eliminating one gratuitous copy.\nFrom Louis: http://codereview.appspot.com/6306046/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30917998\n'}"
4345,"{'code': '8aa1ffe7c36a9f19c052dde74f6368da998e822f', 'message': ""Implement UnsignedInts.decode, corresponding with UnsignedLongs.decode.\nFrom Louis: http://codereview.appspot.com/6285043/\n(after which I extracted a common method on Kurt's suggestion)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30829538\n""}"
4346,"{'code': 'c888c6bbb226998980f3fe84587f1f0606578c88', 'message': 'Reimplement LinkedHashMultimap with a custom, memory-efficient implementation.\nFrom Louis: http://codereview.appspot.com/6250063/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30828656\n'}"
4347,"{'code': '80fa49a2680e9e7331e959ad9ec8b85337584f7f', 'message': ""Changed TypeToken.getTypes().rawTypes() to not rely on getGeneric*() methods, to work around the GenericSignatureFromatError.\n\nAs a side bonus, classes() won't pay the cost of traversing the entire type hierarchy.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30823174\n""}"
4348,"{'code': '0c5eab22a7165f89ce52dc1da692983cd2521f88', 'message': 'More extensive testing for murmur hashing (in prep for shortcut speedups).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30798282\n'}"
4349,"{'code': '50aa85dbbbea3e3826a9d7e4c9de0fd3669c625d', 'message': 'Replace the use of AbstractSet with a new Sets.ImprovedAbstractSet that\nis less susceptible to quadratic-time removeAll() calls, as in Guava\nissue 1013.\n\nFrom Louis: http://codereview.appspot.com/6271045/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30791718\n'}"
4350,"{'code': '965e65f7cd47fa659931e4094c72b291c065969d', 'message': 'Marks the methods in Longs regarding byte array conversions as GWT compatible,\nand adapts the LongsTest to run the tests in GWT mode.\n\nThe only method not yet being GWT compatible was toByteArray, due to a bug in\nhow GWT handles narrowing conversions on byte casts. To fix this, copied\nthe implementation from util.UnsignedLongs.toByteArray, which is already used\nby GWT applications in [].\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30778541\n'}"
4351,"{'code': '2c92ede0ed264b70e19e2edc01b9b66e9b090713', 'message': 'I believe our snapshots should be called 13.0-SNAPSHOT now.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30703852\n'}"
4352,"{'code': '3be93d556159d99bc186497da6ad558c013f3972', 'message': 'Release Futures.dereference() into Guava.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30701037\n'}"
4353,"{'code': '61e6a48a69ba09f65499d6e0394d448e9313777c', 'message': 'Graduate Striped out of labs\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30662139\n'}"
4354,"{'code': '03afbea918471a1b536c0754b10719adc0317135', 'message': 'Optimize ImmutableList,Set,SortedSet builders.  In particular, uniquify\nImmutableSet/SortedSet contents in-place, and make it so that if an\nImmutableSet/SortedSet is initialized to the correct size and has\nall unique elements, then no copying is done at all.\n\nFrom Louis: http://codereview.appspot.com/6210074/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30647962\n'}"
4355,"{'code': 'a1b8356ef94c66fdd805dbf7d92e7de5feec0909', 'message': 'Add ""stateless and thread-safe"" to the HashFunction javadocs.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30634203\n'}"
4356,"{'code': 'bd6ab7f3f7c31eedd57449f9f003152f34653a54', 'message': 'Cache the 32-bit and 128-bit hash functions used in Hashing#goodFastHash\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30634030\n'}"
4357,"{'code': '26b9a4da08e4ee8002c527195121c2741fa43f29', 'message': 'Stop depending on an ImmutableSortedSet quirk in getTypes():\nImmutableSortedSet.copyOf() currently assumes, for a Set input, that there is no need to deduplicate inputs.\nThis is true if the given Comparator if consistent with equals (really, consistent with the original Set\'s definition of equality).\nHowever, if it\'s not, we can get a set with ""duplicates"" according to the Comparator.\ngetTypes() depends on this behavior because it sorts by type-hierarchy depth, which is no reason to treat objects as ""equal.""\nAn upcoming CL will change ImmutableSortedSet.copyOf() to remove this behavior.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30617067\n'}"
4358,"{'code': 'e2e3183e4029103d8ecca116b23dc9d207bc4e42', 'message': 'Fixed recursion in toArray for a couple ConcurentMultimap view collections.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30610815\n'}"
4359,"{'code': '254bde6e0064981420de3d2aa3b888934bda6df8', 'message': 'Widen presentInstances parameter type to Iterable<? extends Optional<? extends T>>.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30607561\n'}"
4360,"{'code': 'd59c3da61ed7746e8b5cb36b668b1991343ff2ec', 'message': ""Added TypeToInstanceMap, ImmutableTypeToInstanceMap and MutableTypeToInstanceMap, mirroring ClassToInstanceMap. One major difference, is that put() and putAll() aren't supported. This is because there is no way to check isInstance() for generic types at runtime. In addition:\n1. I added ImmutableTypeToInstanceMap.of() for empty map. I've wanted similar thing for ClassToInstanceMap in the past.\n2. Omitted MutableTypeToInstanceMap.create(). With diamond operator coming along soon, do we still benefit from hiding default constructor and exposing static factory? For one thing, default constructor works better with reflection-based frameworks, such as ArbitraryInstances.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30580364\n""}"
4361,"{'code': 'c1bce61b17ac2ed6d4c8b492df5594de40b3ce04', 'message': 'Multimap is up next in my quest to write new classdocs for every important class we own.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30550395\n'}"
4362,"{'code': '389a868730c09be1b33a36518f41ad35e11b4385', 'message': 'Adding wml media type.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30545427\n'}"
4363,"{'code': '3634bd3831742e5edd5c58c0cf77bb36cd67617d', 'message': 'Fix up a few odd style nits in the UnsignedLongsTest.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30541742\n'}"
4364,"{'code': '46fa75fb9486ccd18c4674d00a2e002224a98c74', 'message': 'Add method to parse a prefixed unsigned long, e.g. 0xHEX, decimal, #HEX, and 0octal\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30539666\n'}"
4365,"{'code': 'd5bfc481b8204e5c2072998a1e2ce9139d910b24', 'message': 'Basically: sed ""s,{ },{},g""\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30535233\n'}"
4366,"{'code': '30dddd15001899b7500f6445d820a6419e3f38f3', 'message': 'Make LongAdder and SimpleStatsCounter final.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30534531\n'}"
4367,"{'code': '54577caba118a72b35be0bf73f2d4453ee026523', 'message': 'Simplify ImmutableSortedMap, reducing memory consumption and simplifying code.\nFrom Louis: http://codereview.appspot.com/6218056/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30531807\n'}"
4368,"{'code': '4f95e6ed7442be451a49207e103aa6a917d9737f', 'message': ""Remove a redundant RegularImmutableSortedSet workaround for comparators that are inconsistent with equals().\nThe workaround, added in CL 13880333, existed to support ImmutableSortedAsList.\nHowever, it turned out that the workaround was needed for other types, too, and it was added to ImmutableSortedAsList itself (but not removed from RegularImmutableSortedSet) in CL 29041788.\nThis CL removes the redundant RegularImmutableSortedSet copy, moving its comments into the ImmutableSortedAsList copy.\nAdditionally, it adds a test to demonstrate that the redundant copy, which is no longer used only by asList(), was causing problems.\nOur existing tests caught a similar problem when I applied Louis's pending http://codereview.appspot.com/6218056/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30530740\n""}"
4369,"{'code': 'e5a6ae44b6313b40fb1ec94686af9e632a642752', 'message': 'Use TypeToken in EventBus to avoid the duplicated superclass-finding logic.\nFrom Louis: http://codereview.appspot.com/6195089/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30463039\n'}"
4370,"{'code': '4d4a0737b3e2b0a4edf9443a98a54ca1a0941cef', 'message': 'Eliminate redundant fields and code from SingletonImmutableMap.\nFrom Louis: http://codereview.appspot.com/6211080/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30462649\n'}"
4371,"{'code': '5383fe9dc29195da481d2b60f4b1911d5fc3f938', 'message': 'De-@Betaify Optional.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30422058\n'}"
4372,"{'code': 'c7af92815a2ba50e1b4f46538cdd20f3a2da93d6', 'message': 'A few small cleanups to the Murmur3 HashFunctions.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30419610\n'}"
4373,"{'code': '25fd8b3c09917cd7b66a4eb01cde57ca83db478f', 'message': 's,(){,() {,g in {java,javatests}/com/google/common/...\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30381316\n'}"
4374,"{'code': '1354c73c9b78c480db46799934c587950a26a189', 'message': 'Reduce default values per key for LinkedHashMultimap from 8 to 2.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30373088\n'}"
4375,"{'code': '7cc5d5d6e121f1fe72aeabb9dc70d96648186384', 'message': 'Internal shuffling in FluentIterable with some public spillover.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30372447\n'}"
4376,"{'code': 'f4c4b50a822b1870c266ed8b76108b336fe47ad8', 'message': 'Improved the code coverage of OrderingTest and removed an unused constructor.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30356104\n'}"
4377,"{'code': 'a33efc80075ea37c3f76db14d71c7b0609b10bd7', 'message': 'MOE insert public for the Equivalences class.\n@Deprecate the 2 methods in Equivalences.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30352883\n'}"
4378,"{'code': 'cb72618c27773e8aa91238eca87b5e63f08b010f', 'message': 'Equivalences -> Equivalence.\n\nAnd remove unused imports.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30351331\n'}"
4379,"{'code': '309d177e3fde9d5823a45128b36e93cb603a7a05', 'message': 'Add an executor service that automatically retries tasks on failure.  (A continuation of cl/24643522)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30345739\n'}"
4380,"{'code': 'c1ccc3e2d0fb52c351d9ae5ebdc097d334de4731', 'message': ""Exposing an estimate of how the BF performs (without it, it's hard for the\nuser to know when the BF degenerates)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30342458\n""}"
4381,"{'code': '06e76c06ea93a4c39f4e823a6ba8e0c4b3f67c97', 'message': 'Rewrite the ImmutableSortedMultiset implementation for improved efficiency and reduced memory consumption.\nFrom Louis: http://codereview.appspot.com/6203097/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30340746\n'}"
4382,"{'code': 'a2f0856bfd7a9c3a70306c3cd91906a9ebb768d8', 'message': 'De-betaify c.g.c.annotations.Beta\nDe-betaify c.g.c.base.Ascii\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30310396\n'}"
4383,"{'code': '84e94a821e997f96f5eff8e8c7b3595ab4a787db', 'message': 'Fix name spelling in pom.xml.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30309935\n'}"
4384,"{'code': 'acc41e104e59a78b8ce8d2469e97ece32055b995', 'message': 'Adds ContiguousSet.create(Range, DiscreteDomain).  Follow-up CLs will remove Range.asSet(DiscreteDomain).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30308145\n'}"
4385,"{'code': '5abb71a345d73c3b7d670edf40b0ff564d767163', 'message': '#intFunnel() and #longFunnel() funnels, and a PrimitiveSink --> OutputStream\nwrapper.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30307214\n'}"
4386,"{'code': '68cc7d92bb0335af1b58f0037fbe5270cc0155ba', 'message': 'Copy Equivalences methods to Equivalence.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30304467\n'}"
4387,"{'code': '6de50d39a296a3d5f00779dbeaf3b520791b9cda', 'message': ""Move the invokeAny implementation to a static method that can be used by ListentingExecutorService that don't extend AbstractListeningExecutorService.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30136643\n""}"
4388,"{'code': 'b7c9182e370d1f1f8e3cf43d675a961d7b3c0790', 'message': ""bug fix: don't decrement count and send spurious notification when refresh+get are concurrent with invalidate\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30128702\n""}"
4389,"{'code': 'f2aac46b0dfd4d77358e2f3b26223a55563621b2', 'message': 'Use callbacks on ListenableFutures to implement invokeAny on AbstractListeningExecutoreService rather than an ExecutorCompletionService.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30127153\n'}"
4390,"{'code': '76cb1603231a610b201a97bdbbee76f7f4376a08', 'message': 'GWT/Guava maintenance:\n- Rename com.google.common.collect.testing.testing-gwt to com.google.common.collect.testing.Testing, and actually use the existing Testing.gwt.xml file.\n- Annotate classes with @GwtCompatible.\n- Open-source GWT files.\n- Stop stripping some GWT modules that have since become open-sourced.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30035555\n'}"
4391,"{'code': '234690321682b0fdbbee5e3ae02e06a95c95e275', 'message': 'Exploit my years of hard-earned skill to devise a unit test for Equivalence.wrap().get().\nAlmost got it right, but luckily Colin was here to help me.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30014813\n'}"
4392,"{'code': '066090e6909db7ca3741c0d9fdae1a0c87b40af6', 'message': 'Add Iterable#toString implementation for Splitter#split.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30006050\n'}"
4393,"{'code': 'd7b563b0142912022e61160081b4a7f99f08d2c2', 'message': 'Assorted followups from past reviews/discussions:\n- Comment the places where we avoid Iterator allocations.\n- Reintroduce assertion failure message.\n- Reduce comments in Ordering.allEqual.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30005462\n'}"
4394,"{'code': '01b3c9f52e316dd40b379432174d3b5a817ab141', 'message': 'Use Joiner in Iterators#toString.\nAdd tests for null element handling.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30005349\n'}"
4395,"{'code': '96032ce84e8a955c9d0e30abbdf16a7c7e46b1b5', 'message': 'Remove @GoogleInternal from FluentIterable#transformAndConcat (and add @since 13.0)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=30005337\n'}"
4396,"{'code': 'bbb0cffbdeabc78dd212f2320bb8e1799f895c2e', 'message': ""NullPointerTester hasn't thrown Exception in a while, so stop declaring that all its users throw it.\n(My search for users was just plain grep, so I'm sure I missed some, but this is a good start, and I'm not sure it's worth the effort to seek out more, since that will take more than 30 seconds.)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29954788\n""}"
4397,"{'code': 'c9547ca5b186ae058e75547a95899b33274b1483', 'message': 'Export files that were missing from Guava.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29933483\n'}"
4398,"{'code': '46b4996a7851b808d0faca9eb90472910feaeead', 'message': 'Many small improvements in common.collect.\nFrom Louis: http://codereview.appspot.com/6205045/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29932528\n'}"
4399,"{'code': '188d2dd30d8c41cd8ea7d0087bd105ad78c450d4', 'message': 'Add one or two missing tests.\nFrom Louis: http://codereview.appspot.com/6190059/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29931664\n'}"
4400,"{'code': '8b78348ab5c5305c838a9e7d13e260becc311aa1', 'message': 'Optimize BigIntegerMath.binomial to use long arithmetic for as much as possible.\nFrom Louis: http://codereview.appspot.com/6170043/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29924844\n'}"
4401,"{'code': '1f1ce1726ec4495eb5562d0d6cd0560aef4f706f', 'message': ""Make Truth accessible to all of testlib, not just its tests, now that it's used by the collection-suite builders.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29915599\n""}"
4402,"{'code': '9203df3996481fc701c47300eb35d2a9c57cdeae', 'message': 'Made the size of RegularImmutableMap more conservative.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29893278\n'}"
4403,"{'code': '3ec0620713e3d6b82397067d5b2b1e8e4e6ccb48', 'message': 'Fill in some missing javadoc. Only checked a small number of files.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29888245\n'}"
4404,"{'code': '5e647120f16fd087f04ac2630bdc3b03af527e09', 'message': ""Don't depend on the precise format of the failure message, only that it contains the expected string.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29887759\n""}"
4405,"{'code': '726047f845374b9d1514f6a88a9eb70f5ced721e', 'message': 'Guava issue 988: improve error messages in ImmutableMap.\nFrom Louis: http://codereview.appspot.com/6192047/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29885493\n'}"
4406,"{'code': 'ba8284bdfab78f544222410ffd6c0598dd125496', 'message': 'Remove the unnecessary ""bulk"" operation Features from the TestSuiteBuilders.\nFrom Louis: http://codereview.appspot.com/6196048/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29883364\n'}"
4407,"{'code': '02a6ca4b4753c2ec922b7acc8c4ab8f9444bed4f', 'message': 'Optimize Ordering.immutableSortedCopy.\nFrom Louis: http://codereview.appspot.com/6202050/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29881848\n'}"
4408,"{'code': 'e6f43bf9ea8ecaf79920fd2349fc16cedd82dd89', 'message': 'Remove obsolete JavaDoc referring to a sun.net dependence I removed years ago.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29830593\n'}"
4409,"{'code': 'ce8e387fa8d181d508af459148c0d3b1cb2a56f5', 'message': 'AUTHORS += Emily Soldal\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29801283\n'}"
4410,"{'code': 'e630857e486cc8f8e4599b3c6de26e202044cd4e', 'message': 'Introduce MultimapTestSuiteBuilder, hoping to eventually migrate from AbstractMultimapTest.\nFrom Louis: http://codereview.appspot.com/6123061/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29800810\n'}"
4411,"{'code': '57fe4b972a19dcbef798880f3de4559e5a6ea956', 'message': 'Switch BiMap tests all the way over to BiMapTestSuiteBuilder.\nFrom Louis: http://codereview.appspot.com/6127058/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29799739\n'}"
4412,"{'code': '3a0ce24946eeb83239615dea83011672ccbd6c5c', 'message': 'Issue 972: Ordering.allEqual().\nFrom Emily: http://codereview.appspot.com/6061053/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29799363\n'}"
4413,"{'code': '86812e5acf9c82d9c3627bc4d956086759703023', 'message': ""Admit that the TestSuiteBuilder classes aren't *really* GWT-compatible, despite our hacks to make them appear so.\nMove the derived generators into separate classes that *are* GWT-compatible.\nAlso acknowledge that a bunch of suite() aren't GWT-compatible; GWT has been ignoring them.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29798619\n""}"
4414,"{'code': '1b909536f390cb3f5814cea4440f935e16091af6', 'message': 'Internal-only changes with some spillover.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29798181\n'}"
4415,"{'code': '4541b6c424325ecc1382fe31eff5ea2f743e24a8', 'message': 'Internal-only changes with some spillover.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29790005\n'}"
4416,"{'code': 'f44e4418cf4acd6b2744eb7e4c4586d415545e2b', 'message': 'Add an optimization for CompoundOrdering to avoid iterator allocation.  On my benchmarks, for the common two-comparator case, the speedup is ~30%.\nFrom Louis: http://codereview.appspot.com/6092047/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29762878\n'}"
4417,"{'code': '82d26584d7c6aeeaa29a478ee4c9f2f0af80c5c4', 'message': ""Implement basic capacity control for immutable collection builders.  We don't expose them yet, though, until the API is agreed upon.\nThis will likely pay off with the in-progress immutable collection rewrites, which make much more use of each other's builders internally.\nFrom Louis: http://codereview.appspot.com/6092044/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29762640\n""}"
4418,"{'code': '200c82944815465525ad87c759012b1ea7efc9f6', 'message': 'Serialization scaretext for Lists.transform.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29756113\n'}"
4419,"{'code': '5773fa27ae83c17723ba3a8002c8eab2b89b1977', 'message': ""Fix another non-fatal GWT compile error I introduced:\n[ERROR] Errors in 'generated://FD81516CE6734FC4CAA6FA770EC8D576/com/google/common/collect/ForwardingImmutableSet_FieldSerializer.java'\n[ERROR] Line 12: The method deserialize(SerializationStreamReader, ForwardingImmutableSet) is undefined for the type ImmutableSet_CustomFieldSerializer\n[ERROR] Line 17: The method serialize(SerializationStreamWriter, ForwardingImmutableSet) is undefined for the type ImmutableSet_CustomFieldSerializer\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29727380\n""}"
4420,"{'code': '3cd12b26e3ecb8955699cf409167ad05ccf908c6', 'message': 'Stop importing ImmutableFoo.Builder.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29722333\n'}"
4421,"{'code': 'a36dbdaa5863d986cba3f68ceee27e9715490ccc', 'message': ""Optimize DenseImmutableTable so that it doesn't rebuild rows and columns on the fly.\nFrom Louis: http://codereview.appspot.com/6066046/\n\nPlus, actually run ImmutableTable tests under GWT (oops).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29719445\n""}"
4422,"{'code': '4e65ce73450ce04a77f6c03757de26210bf7622f', 'message': ""More assorted cleanup:\n- reenable Multiset NullPointerTester tests\n- fix @Nullable annotations and add checkNotNull as necessary to get them to pass\n- remove email addresses from @author tags\n- update explanation of why we can't use Arrays.copyOfRange\n- remove completed TODO from fuzzyEquals\n- fix out-of-date AbstractMapBasedMultiset comment\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29718341\n""}"
4423,"{'code': 'e166b1d9e79afd12149a5141b32426666355ac84', 'message': 'Skip gpg signing by default, which can be overridden on the command-line at release time with -Dgpg.sign=false\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29698293\n'}"
4424,"{'code': '02eeaf9198ad979905a44e418522831bc0cd5671', 'message': 'Add HashFunction#hashFoo shortcuts for AbstractNonStreamingHashFunction.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29681822\n'}"
4425,"{'code': 'a3a6f115f2cb06a4cf3cfd9c5f8558c89d59b0bb', 'message': 'Document the purpose of the or() compilation tests.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29679858\n'}"
4426,"{'code': '51a41aae5c2ca166a5838bcf27e99cda04d30fab', 'message': 'Fix broken comment.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29637759\n'}"
4427,"{'code': '60ddd24e73fb9ee45a13907caf3a7ce219864297', 'message': ""Export more guava-testlib tests to Guava, and move already-exported guava-testlib tests under guava-testlib.\n\nAlso, remove obsolete opensource_files target. (We've been using opensource_filegroup instead for a while now.)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29631103\n""}"
4428,"{'code': '577ff976b6c1fda0f0582ec445599e4ae9998f73', 'message': 'Adding some performance remarks/warnings regarding recursive constructions\nof Iterators#concat and Sets#union\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29609623\n'}"
4429,"{'code': 'fc5979f45d14e21d61c52f2adf9d292d2d605dc4', 'message': 'Cleanup grab bag:\n- Findbugs warnings\n- compiler warnings (cast, generic array, unchecked)\n- Javadoc warnings\n- unnecessary @Beta tags for package-private classes\n- unnecessary Platform.newArray(Class, int) indirection\n- Guava copyrights\n- exception message typo\n- DerivedGenerator documentation\n- parameterized instanceof\n- import sorting in files already changed\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29598347\n'}"
4430,"{'code': '1d10d2732792c001603c6050dfcba72e65e847e8', 'message': 'Mark the two deprecated digesting methods as @GoogleInternal.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29595646\n'}"
4431,"{'code': '3ef229071cacbf3559efc65a977955ec0c8612af', 'message': 'Guava issue 783: Fix handler finder w.r.t. subclasses and interfaces.\nFrom Louis: http://codereview.appspot.com/5389041/\n\nAlso, open-source existing OutsideEventBusTest.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29570767\n'}"
4432,"{'code': '7d5825f96a618f0b7edf3054019e22dfd1910902', 'message': 'CharMatcher space improvements (Small = same trick used for Whitespace, Medium = traditional hash table, large = what we do now).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29564154\n'}"
4433,"{'code': '5c0fcc82692e2691ee821612f785656bf18a0a9e', 'message': 'Use get() as the example method call on a synchronized Multimap.\nThis is probably the most common case, so using a different method as an example was misleading.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29524021\n'}"
4434,"{'code': '5089436ca0707f57d9bd3b8e568012ad36a365e8', 'message': ""Remove reference of getGenericInterfaces() from javadoc, it's @GoogleInternal; Added mention of getTypes() and resolveType().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29506914\n""}"
4435,"{'code': '548f8698683cb282d8a8d5f5a140af63562cc740', 'message': 'Minor simplifications to the ArrayTable implementation.\nFrom Louis: http://codereview.appspot.com/6057048/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29492178\n'}"
4436,"{'code': 'ca91565c0f3692f8efabec10dd1febf5cf4fc97d', 'message': 'Delete the unnecessary DoubleUtils.fastAbs, preferring the JVM-intrinsified Math.abs.\nFrom Louis: http://codereview.appspot.com/5992076/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29482263\n'}"
4437,"{'code': '24dbee52488621b0529ed0caa0b7128c050f32da', 'message': 'Rewrite TreeMultiset in terms of a traditional AVL tree, significantly increasing speed and reducing allocation.\nFrom Louis: http://codereview.appspot.com/5700055/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29480735\n'}"
4438,"{'code': '4077f6011814ef7db2a36671864beed21034ecdb', 'message': 'Update CharMatcher.java INVISIBLE for Unicode 6.1,\nu0604 added, new char, gc = format\nu17b4, u17b5 removed, changed gc from Cf to Mn\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29327732\n'}"
4439,"{'code': '091f6b3accc118312859cdd744c5586d1bc47219', 'message': 'Add public filter() example to FluentIterable docs.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29275867\n'}"
4440,"{'code': '2169c86ef5ddd350b1a48aed7f917d6c555a7602', 'message': 'Update poms to support properly generated OSGI metadata and signing with GPG\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29254221\n'}"
4441,"{'code': '439d752bc1402011b4d6d92092011b9f91fb4edf', 'message': 'Work around GWT overflow problems in IntMathTest.\nThis lets us stop skipping one case of testDivNonZero, and it lets us run testCheckedPow and thus have the confidence to make checkedPow @GwtCompatible.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29228136\n'}"
4442,"{'code': '24f9088a97ecac44bb2d3e9669ccfcdd2b0a2775', 'message': 'Fix a build issue in FRQ tests.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29211136\n'}"
4443,"{'code': '4347ab06e201f5de8d58624acbf914ee9015b6c6', 'message': ""Fix coverage runs by excluding FinalizableReferenceQueue ClassLoader-unloading tests from the normal suites.\n(I've confirmed that the test does still run despite the suppression, which applies only to suites.)\nI've also edited our project definition to exclude the new target from coverage runs.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29201526\n""}"
4444,"{'code': 'ed38ec2fbd739995c79ca020bfcaf04d47082e42', 'message': ""Fix non-fatal GWT compilation errors:\n[ERROR] Errors in 'generated://1DCFAC23BE2D8C9BC205377978109764/com/google/common/collect/ForwardingImmutableList_FieldSerializer.java'\n[ERROR] Line 12: The method deserialize(SerializationStreamReader, ForwardingImmutableList) is undefined for the type ImmutableList_CustomFieldSerializer\n[ERROR] Line 17: The method serialize(SerializationStreamWriter, ForwardingImmutableList) is undefined for the type ImmutableList_CustomFieldSerializer\nSee snapshot: /export/hda3/tmp/gwttJezSA/com.google.common.collect.ForwardingImmutableList_FieldSerializer7338663414191156255.java\n[ERROR] Errors in 'generated://678D18D6E583C7FF092AA10F8A0D52A6/com/google/common/collect/ImmutableAsList_FieldSerializer.java'\n[ERROR] Line 12: The method deserialize(SerializationStreamReader, ImmutableAsList) is undefined for the type ImmutableList_CustomFieldSerializer\n[ERROR] Line 17: The method serialize(SerializationStreamWriter, ImmutableAsList) is undefined for the type ImmutableList_CustomFieldSerializer\nSee snapshot: /export/hda3/tmp/gwttJezSA/com.google.common.collect.ImmutableAsList_FieldSerializer2670401979529327298.java\nSneak in a little internal cleanup.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29200972\n""}"
4445,"{'code': 'fe4882f94d139d287dcbb44d86c883bb52d43210', 'message': 'Adding Converter<String, String> CaseFormat.this.converterTo(CaseFormat).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29167278\n'}"
4446,"{'code': 'fa351948dbb3937cf046b6a05dc11c1113544963', 'message': ""Silence GWT serialization warnings:\n\ncom.google.common.collect.testing.Helpers.NullsBeforeTwo\nAnalyzing the fields of type 'com.google.common.collect.testing.Helpers.NullsBefore' that qualify for serialization\n[WARN] Field 'private final java.lang.String justAfterNull' will not be serialized because it is final\ncom.google.common.collect.testing.Helpers.NullsBeforeB\nAnalyzing the fields of type 'com.google.common.collect.testing.Helpers.NullsBefore' that qualify for serialization\n[WARN] Field 'private final java.lang.String justAfterNull' will not be serialized because it is final\n\nNullsBefore isn't GWT-serializable on its own (whatever that means for an abstract class), so don't implement Serializable.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29166411\n""}"
4447,"{'code': '97f00f81899c0faf6e63f45a92715f9797ab5b82', 'message': 'Open-source RangeSet/RangeMap classes so that Louis can rebase his http://code.google.com/r/wassermanlouis-guava/source/detail?r=fb106087948b2c0da9f5f6ed610d2df3ebb0240a&name=rangemap on top of them.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29159225\n'}"
4448,"{'code': '7a795c36f53c13d8fd93a1b031a5c13be31160d0', 'message': 'Use a binary release of Truth.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29129847\n'}"
4449,"{'code': '23e2a99b4112dee10b6d0ff3ca3dc02483958eb5', 'message': ""Fix UnsignedLongs/UnsignedInts join method.\nThe first argument wasn't treated as unsigned.\nhttp://code.google.com/p/guava-libraries/issues/detail?id=966\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29126150\n""}"
4450,"{'code': '2c1b904fc0063b220f8e1a5c0e5ac513e496cf3c', 'message': 'Fix Splitter to handle patterns that have empty matches, like boundaries and look-behind/ahead patterns, without exploding.\nFrom Louis: http://codereview.appspot.com/5901060/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29124245\n'}"
4451,"{'code': 'd6acf74526efee51bd12df6329afc7968e019945', 'message': 'include CacheBuilderSpec example in external javadoc\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29120699\n'}"
4452,"{'code': 'cab6f3f08d31bb3f492eeeabdda767a191dbf0ef', 'message': 'Make HashCode implementations serializable.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29100445\n'}"
4453,"{'code': '96059782ccf3c780d6f137eb3a56ae5bdfe9bd80', 'message': 'Inline Itera*s#getLast into FluentIterable#last due to performance issue in GWT.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29097188\n'}"
4454,"{'code': 'e2ba499f902b786d4f6a8243acfc120c165b2b7d', 'message': ""Eliminate test that uses systemNanos() but expects nano precision, which will break on platforms that only have micro precision.  The test isn't really testing anything, so rather than fix it, I'm removing it.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29095913\n""}"
4455,"{'code': '8662c5586dee7b68ebc6b02c3511e802dbd89a08', 'message': 'Deprecated NPT.ignore(Member); added ignore(Method) overload as the new preferred method. No one ignores constructor in []. And the code to ignore constructor would read less meaningful.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29094202\n'}"
4456,"{'code': '06cbdb1ed84f235b51fec6acc740d8261357545d', 'message': 'migrate from AtomicLong to LongAdder\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29046868\n'}"
4457,"{'code': '813d692929d7ce614a073ebf22c0c1a2669b43eb', 'message': 'don\'t allow garbage collected values to be ""copied""\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29043800\n'}"
4458,"{'code': '75225d640fa4d95f602a1b6060e37ec9ef4d8373', 'message': 'Improve ImmutableCollection.asList(), making more asList views delegate contains() queries to the backing collection.\nFrom Louis: http://codereview.appspot.com/5785044/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29041788\n'}"
4459,"{'code': '6d9be3db16361b8389f30bbb4aea94c36d0bf81d', 'message': 'Fix Guava Javadoc warnings.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29041212\n'}"
4460,"{'code': '98db310a151c40ca2b044d062a6d1ef230a8d6eb', 'message': 'Fix Guava GWT module:\n- Issue 961: Release java.nio.charset.Charset module to Guava.\n- Remove bogus @GwtCompatible annotation from ForwardingDeque... and remove commented annotation from MinMaxPriorityQueue.  (IIRC, we have a hack in one of our many levels of processing that just looks for the literal string ""@GwtCompatible."")\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29041128\n'}"
4461,"{'code': 'c50f528b2b4648dc472545c6671f44c1b9145bf3', 'message': 'turn of CacheStats collection by default\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29039525\n'}"
4462,"{'code': '525c016d108a33bd148036a7afef01cd73709a03', 'message': 'Address comments left on CL 28921581 and CL 28923961.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29039515\n'}"
4463,"{'code': '1cac97e676f58cfb8a9e92d28aed9c080bd590d4', 'message': ""Address issue 952 on public guava: don't make spaces in parameters mandatory.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29032281\n""}"
4464,"{'code': '7e9e59b1074eb585bc39fc1c4341c090f69f3ebc', 'message': 'Some javadoc tweaking to NullPointerTester. Please comment away, I have absolutely no confidence in my wordsmithing\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29029545\n'}"
4465,"{'code': '3cf8d5fab0278aa203c31908e2c6fc5eefea145c', 'message': 'add CacheBuilder.recordStats\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29024502\n'}"
4466,"{'code': '901f4f7d624b998471ccaeebf4aefcc1012d43bc', 'message': 'Some minor tweaks of TypeToken javadoc. While I was reading the release note, these occurred to me as calling for improvement.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=29016235\n'}"
4467,"{'code': '35e669642cecbe40f32ad4b0c2b18b9ff10f6e89', 'message': 'Add DoubleMath.fuzzyEquals and DoubleMath.fuzzyCompare (Guava issue 725).\nFrom Louis: http://codereview.appspot.com/5924043/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28988303\n'}"
4468,"{'code': '77eed532e9313671b16449facccbb3938cc9ecff', 'message': 'Make FindBugs marginally happier.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28982197\n'}"
4469,"{'code': 'c8ac5329685569a07cb2a64bcb684a80823affa2', 'message': 'Fix old pom wording that contains a reference to sub-packages that is a 2 year old woopsie.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28979425\n'}"
4470,"{'code': '42422ccbd626e58696bc7bf6e4cf89142aeb0df4', 'message': 'Optimize DoubleMath rounding implementations, avoiding branches and expensive floor/ceiling operations where possible.\nFrom Louis: http://codereview.appspot.com/5976057/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28923961\n'}"
4471,"{'code': '63c7f635199b45982c9bbd7d06a286a0bc3d1fba', 'message': ""Guava issue 955: orderKeysBy shouldn't conflate keys that compare as equal.\nFrom Louis: http://codereview.appspot.com/5969066/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28922962\n""}"
4472,"{'code': 'ee40820afb25d447acfce175d41246495d1e6db2', 'message': 'Add parseUnsignedByte, toString, and MAX_VALUE to UnsignedBytes.\nFrom Louis: http://codereview.appspot.com/5907072/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28921581\n'}"
4473,"{'code': 'e69bde4dda3b309dcc164aa7f4ab50cfe89e9193', 'message': 'fix version numbers on Guava for non-release trunk to fit with maven version numbering standards.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28904802\n'}"
4474,"{'code': 'f39ad80f7783ba8a1d019ce99046c267fec71bb8', 'message': '- fix @links to point to LoadingCache\n- internally move LoadingCache methods out of LocalManualCache\n- clarify use of weight in maximumWeight\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28862370\n'}"
4475,"{'code': 'b31535bc7551c8debf7ed27f7b98ec17df6cff4e', 'message': ""Remove unnecessary dependency.  This modules doesn't contain any tests - the tests for this module are in guava-tests, where this is more appropriately specified.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28859438\n""}"
4476,"{'code': 'a50cb403ce1dc80a3dbd002fd82a829b7f743208', 'message': 'Remove open-source project and code which provides a backported Java6-style ExecutorService for Java5 compatibility, with all the extra build steps involved in using it.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28854629\n'}"
4477,"{'code': '034bd999f5a00e7657dc48d9a4c50597a351697f', 'message': 'Queues was released in 11.0 but is missing from package-info.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28850827\n'}"
4478,"{'code': '2c0541982e091da5455373d4f3b66cfc9a8f6d52', 'message': 'Fix unchecked warnings.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28850534\n'}"
4479,"{'code': '250b3d6fa7ba65ba225be4f7670adc8b1e64eb9c', 'message': '@since tweaks:\n- ForwardingSet.standardRemoveAll is an override of ForwardingCollection.standardRemoveAll, so, as binary compatibility goes, it ""inherits"" @since 7.0 from its parent.  Still, it\'s good document what we changed.\n- ImmutableSortedMap changed to implement NavigableMap.  That seems worth documenting.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28850312\n'}"
4480,"{'code': '1977a32ec0f261459baf7a7f2a647c8a7f4d04ed', 'message': 'Add missing @since tags.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28834851\n'}"
4481,"{'code': '5cc3b0b33392b02ff95a4ce5f291c439b5b1406e', 'message': 'Broken people using c.g.c.base.Strings in Android (1.5?)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28833864\n'}"
4482,"{'code': '94225aae1eb510d19b225df3995cb1d608b2e291', 'message': '- throw InterruptedException from CacheLoader methods\n- propogate interruptions which occur during cache loading\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28832819\n'}"
4483,"{'code': '66e833ad489d855bf9a201af4cc24623d3617232', 'message': 'Remove the severely outdated primitive generate scripts.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28829652\n'}"
4484,"{'code': 'a86e366244f9cd13898c274daa78af3979a3a656', 'message': 'Java6 cleanups for Guava 12.0\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28829456\n'}"
4485,"{'code': '7adacdf912f3e1829071421cd57f649b3df6857a', 'message': 'Document the weird problem with Optional<? extends T> along with its workaround.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28829356\n'}"
4486,"{'code': 'a0fdfe9985143b795149194c749a93db292316af', 'message': 'Fix ForwardingList documentation.\nhttp://code.google.com/p/guava-libraries/issues/detail?id=873\nFrom Louis: http://codereview.appspot.com/5576046/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28826914\n'}"
4487,"{'code': '4367e2ad3c72a38ebfba05b734267df81b795211', 'message': 'Use SortedMapTestSuiteBuilder and NavigableMapTestSuiteBuilder more widely.\nThis requires two improvements:\n- Generalize NullsBeforeB, intended for use with test elements ""a"", ""b"", ""c"", etc., to introduce NullsBeforeTwo, intended for use with test elements ""one"", ""two"", ""three"", ....\n- Do not require SortedMap keySet() to be a SortedSet (as the interface doesn\'t require this).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28826718\n'}"
4488,"{'code': '683a0e2832a38d8ca110b8b5ba25558a673a9a7f', 'message': 'Make SortedMapTestSuiteBuilder work under GWT.\nThere is some restructuring and additions of trivial getters in the builders, but the only real code changes are in GwtTestSuiteGenerator (and the use in ImmutableSortedMapTestSuite).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28819226\n'}"
4489,"{'code': '7a2d19a43e69ceb7623ee4d2749490a69c17f2ea', 'message': 'Add FluentIterable.toImmutableSortedSet(Comparator)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28795758\n'}"
4490,"{'code': 'e17759dcf1575e634058443bce106b34e15215cd', 'message': 'Bunch of small style cleanups/code cleanups to InetAddresses.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28795487\n'}"
4491,"{'code': '390065920f44c80e567b8c71e7feec1578e1a6fa', 'message': 'Use murmur32 for hashing when coercing IPv6 addresses into IPv4 addresses.\nAlthough murmur32 is slightly slower, it has fewer collisions (on a sample dataset) and is licensed under the MIT License.\nThe hash was last changed on 2010/12/06: []\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28793594\n'}"
4492,"{'code': '4e23ecc8ae473ebe8aacd6fe5047c856ac4ebd02', 'message': 'Make ImmutableSortedMap implement NavigableMap.\nFrom Louis: http://codereview.appspot.com/5606043/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28789345\n'}"
4493,"{'code': '561e50586995195031e1916d3cee995ec1850a16', 'message': 'Make MapTestSuiteBuilder (also BiMapTestSuiteBuilder) work under GWT, and then use it there (as well as the non-GWT ImmutableSortedMapTest, where it should have been used already).\n\nThis primarily involves making more derived suites (e.g., keySet(), values(), entrySet()) work under GWT.\nThe GWT test suites are produced with code generation, so, in order to work under GWT, a derived suite must be recognized by GwtTestSuiteGenerator so that we know how to generate code for it.\nI\'ve generalized the existing DerivedTestIteratorGenerator support to support any DerivedGenerator (each of which should have a one-arg constructor accepting its inner generator as an argument).\n\nNow that we run MapTestSuiteBuilder tests, we can remove the individual, manually generated ""derived"" test suites.\n\nThe MapTestSuiteBuilder tests did encounter a couple problems:\n- I had to move NullsBeforeB from MultisetCollectionTest to Helpers so that it could be used more widely (for reasons that its Javadoc hopefully makes clear).  (This was a problem in the test, not the production code.)\n- I had to support null queries in the GWT ImmutableSortedMap.  (While I was there, I also prevented us from double-wrapping any submaps with unmodifiableSortedSet, since we know that the original map was already unmodifiable.  This is a tiny optimization.)  The null-query behavior was a ""bug,"" albeit a very small one.\n\nTODO(cpovirk): get the SortedMap tests running under GWT\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28784540\n'}"
4494,"{'code': '1787c68ce94219f34906ad6c1b65747245c0259f', 'message': 'Make KNOWN_ORDER significant for Map tests.\n(There are no direct Map tests using KNOWN_ORDER, but we now pass KNOWN_ORDER on to our keySet, entrySet, and values sub-suites.)\nStart using KNOWN_ORDER in various tests, including automatically in all SortedMap and SortedSet tests.\nIntroduce TestStringSortedMapGenerator to save us from having to write ""sort(insertionOrder, Helpers.<String, String>entryComparator(Ordering.natural().nullsFirst()));"" as an order() implementation over and over.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28780249\n'}"
4495,"{'code': 'd4f53a983e8776505cfb664340502fb7d9a24bbb', 'message': 'warn that Cache.asMap.get does _not_ automatically load values.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28753957\n'}"
4496,"{'code': 'f594440f46536d573dc5c51911d05f790fdd1f1e', 'message': 'Fix up erroneous git rebase?\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28743194\n'}"
4497,"{'code': '305d4749447a41ef78efc6cfbbbc2d82c059d640', 'message': 'Split SortedMap tests out of NavigableMap tests in preparation for running the former under GWT.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28743199\n'}"
4498,"{'code': '11ca41e98e8930d8a6506a08678439bc10666706', 'message': 'Changed NullPointerTester to test inherited methods.\n\nWe only cover inherited methods from superclasses of the same package. This is\nbecause we don\'t want to step into classes the author doesn\'t own.\n\nFor example, one may inherit from AbstractList, even though\nAbstractList#equals() doesn\'t use @Nullable.\n\nWhile for classes of the same package, we consider moving a method from subclass\nto superclass a refactoring with no behavioral change. We don\'t want to silently\nlose coverage just because of a ""extract to superclass"" refactoring.\n\nAlso, remove @GoogleInternal from getPackageName.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28743194\n'}"
4499,"{'code': 'ae80f64044d657af43fb4732ab5909471ee10c8e', 'message': 'Stop erroneously placing the ""normal Java"" version of TestPlatform under guava-gwt.\n(The GWT version happens to be missing, and we\'ll need to fix that up before the tests can run externally.)\nThis fixes the Guava build breakage introduced by my Collections2 CL.\n'}"
4500,"{'code': '91c10473084d808b488b23d1fce21f72f8c3a928', 'message': 'Simplify ImmutableMultiset implementations.\nFrom Louis: http://codereview.appspot.com/5780044/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28742978\n'}"
4501,"{'code': '1a7e408ce9f1e2c256635d6673595282fed8805a', 'message': 'retract partition and partitionWithPadding from Guava\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28741930\n'}"
4502,"{'code': 'd72c700e82a8aa728569ff7182aac5b63978f83f', 'message': 'Fix GWT behavior of ""opportunistic"" ImmutableList subclasses.\nThe ""standard"" ImmutableLists were fine, but Lists.charactersOf() and\nTransformedImmutableList were broken.\nUnder Java, they inherited working implementations of their methods; under GWT,\nthey inherited versions that forwarded to an empty ""delegate"" collection.\nI\'ve overridden all forwarding methods in the GWT emulation in order to avoid\nthis.\nI\'ve also added tests for charactersOf(), which reveal that GWT\nString/StringBuilder doesn\'t perform index checks, so I\'ve added manual checks.\nTransformedImmutableList could probably stand to have some tests, too, but at\nleast it will be exercised indirectly through the asList() views implemented\natop it in Louis\'s coming CL, which is in fact what revealed these problems.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28741879\n'}"
4503,"{'code': '946bb1f5bf9ee7ab7702a21cb75ec3fbbeb8343f', 'message': 'specify missing version numbers\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28741770\n'}"
4504,"{'code': 'cdee39b8e7d7e4a303d615da5e3557b6bd3974ac', 'message': 'Fix up deprecation messaging in ByteStreams and Files.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28728118\n'}"
4505,"{'code': '3962aabbbf87e27e6f11373d0782a15da83ddde6', 'message': 'Add private constructor (pointed out by Louis).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28717208\n'}"
4506,"{'code': 'fb16503b15241807f65ecfc5bb545d3961315ad3', 'message': 'A few final minor javadoc fixes to close external guava bugs.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28717009\n'}"
4507,"{'code': '1d75b660abdce7128dadc517b2255f9626eb2c0b', 'message': 'Remove unnecessary method type parameter.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28715773\n'}"
4508,"{'code': '701837629ccc49d182a72b9cc4a979a31ee58d44', 'message': 'Adds a ForwardingDeque.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28714562\n'}"
4509,"{'code': '16ddbb5f52a4538ba31e9d4b5a763f45415c95bb', 'message': 'Expose ImmutableSortedMultiset\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28711726\n'}"
4510,"{'code': 'ce5be991c18074bb57c74972c8842c9963334792', 'message': 'Change Ascii.MIN and MAX from ints to chars.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28708581\n'}"
4511,"{'code': '94ded5e2edee8c98a0bf8d126641d04be54d3a27', 'message': ""Just reduce the default expectedValuesPerKey for HashMultimap from 8 to 2,\nand for ArrayListMultimap from 10 to 3.\n\nThere's much more we could and should do but these one-character changes seem\nlike pure win to me.\n\nhttp://code.google.com/p/guava-libraries/issues/detail?id=447\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28708533\n""}"
4512,"{'code': 'dfd0f7dedc650c7c519102e9bc45c497f480eaf5', 'message': 'ComparisonChain.compare(boolean, boolean) is too confusing, especially when\nusers have to negate or reverse the parameters so as to get true to come first.\nAdding compareTrueFirst and compareFalseFirst, and deprecating compare(boolean,\nboolean).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28707952\n'}"
4513,"{'code': '38ef7e8acfe8ae37af01930d800b89100a0e814b', 'message': 'more carefully bound the segment count by maximum size/weight\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28665687\n'}"
4514,"{'code': '30dccfb7e97e8c2a900c1b9daead04fbd7abbb33', 'message': 'Adds:\n-ByteStreams#hash(InputSupplier, HashFunction) -> HashCode\n-Files#hash(File, HashFunction) -> HashCode\nDeprecates:\n-ByteStreams#getDigest(InputSupplier, MessageDigest) -> byte[]\n-Files#getDigest(File, MessageDigest) -> byte[]\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28662456\n'}"
4515,"{'code': '49ae40b145bebb8bd06a967edc03cb285577d0cc', 'message': 'Created compact, special-case Unicode whitespace CharMatcher.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28661107\n'}"
4516,"{'code': '2c5657b1ee65c4f8338d1d9b1ed595c4ab50c8fc', 'message': 'Fix typo in Javadoc of DiscreteDomain.distance.\nFix misleading UncheckedExecutionException Javadoc.\nProvide dangerous listenInPoolThread that accepts an Executor.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28660317\n'}"
4517,"{'code': 'b5b4b40a9c17484828dbd7ceb28e0a468dad0b75', 'message': 'Fix FinalizableReferenceQueue class leak which prevented the\nClassLoader that loaded FinalizableReferenceQueue from being\ngarbage-collected subsequently. This is Guava issue\nhttp://code.google.com/p/guava-libraries/issues/detail?id=92\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28624233\n'}"
4518,"{'code': '8cd024fe646729e855468750cf2a20e8ab0f770f', 'message': ""Make Collections2.orderedPermutations work under GWT again.\nTo do so, make the minimal (I think) subset of common.math required work under GWT.\nThis requires suppressing a few cases in the divide() tests due to GWT's non-compliant int implementation (which, for example, occasionally believes that 2147483648 is a valid int).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28659665\n""}"
4519,"{'code': '94c047c01521965b1a1b3e94a24e95c1b55f3bfe', 'message': 'Add more null values to NullValues, and rename to ArbitraryInstances.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28658308\n'}"
4520,"{'code': '323b48157718353987d1cf465c17988b6279ee48', 'message': 'Strip ImmutableSortedMultiset from package-info, and un-strip ForwardingNavigable*.\nStrip FluentIterable getOnlyElement and append methods.\nAnnotate TypeParameter as @Beta, and add @since.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28658296\n'}"
4521,"{'code': '6bff760c10d79c6a00a5c02a01626f6b4d4488d5', 'message': ""Fix javadoc of getRawType(). The old one wasn't accurate.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28652466\n""}"
4522,"{'code': 'ea4d8f3a5756d920033728a4646fe80ac162119f', 'message': 'Add Apache header to BloomFilterStrategies\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28651552\n'}"
4523,"{'code': 'd26ce6c5c5d775422926ba6d54242a668fb19029', 'message': '- have Iterables return FluentIterables\n- allow FluentIterables to be subclassed\n- withdraw toImmutableSortedList from Guava (will be restored as toSortedImmutableList)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28621161\n'}"
4524,"{'code': '4d38b1674bb23385c8ab866af98a2a31e7ab098e', 'message': 'Clarify the impact of having a synchronous refresh implementation.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28619483\n'}"
4525,"{'code': '5b4c81e0606cf55ec32cf747cb7e66bc1f1946f8', 'message': 'Add createConstant and createConstantUtf8 static methods. This avoids a lot of the weird initiaization ordering issues and allows us to consistently use create everywhere instead of having to rely on the constructor in some places.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28617806\n'}"
4526,"{'code': 'f81aa60c8461401640add879ea9a627f963eb334', 'message': 'Strip references to Google-internal Escape module from Guava.\n'}"
4527,"{'code': '04bb5f70c38935c6fa24073f8ce8b1facaf392bc', 'message': 'Remove completely unnecessary type parameter from Iterators.skip().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28598708\n'}"
4528,"{'code': '1b23f4e098bcc4de59b5993b5577049bd2eebdd7', 'message': 'Applied missing Apache license stuff to the files I forgot in previous round (oops)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28579696\n'}"
4529,"{'code': '9eecc5ff9cbace8bb8609d9cdd9585f17cedac4c', 'message': 'Widen the default-accepting methods of Itera*s.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28577590\n'}"
4530,"{'code': '56790c18cd659c9696e56bc7988b5723b506c34d', 'message': 'Re-word Beta comment to work around MOE bug that strips anything with the word [] in it.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28517528\n'}"
4531,"{'code': '95c35d3cb9c716f26fb2d3b260049b2bd0d9024b', 'message': 'Fix some typos in MediaType javadocs and error messages.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28512819\n'}"
4532,"{'code': 'b9358ae952477b4b8ba9bd97428bc6ed46acc61e', 'message': 'Make ImmutableSortedSet implement NavigableSet.\n(Under GWT, it still implements only SortedSet.)\nFrom Louis: http://codereview.appspot.com/5590046/\n\nAlso:\nAdd suite-builder tests for ContiguousSet headSet/tailSet/subSet, and make the existing tests run the NavigableSet suite instead of just the Set suite (plus, do the same for some other ImmutableSortedSet tests).\nThese reveal that ContiguousSet has the legal but somewhat antisocial behavior of throwing IllegalArgumentException for inputs outside its ""restricted range"" and the probably illegal but unlikely to matter behavior of throwing IAE for subSet(x, false, x, false); change both.\nAdd GWT suite-builder tests for ContiguousSet, and make the existing GWT ImmutableSortedSet tests run the SortedSet suite (plus, add some missing ALLOWS_NULL_QUERIES features to the existing ImmutableSet tests).\nTo allow those tests to cover the SortedSet methods, separate SortedSetTestSuiteBuilder out from NavigableSetTestSuiteBuilder, include splitting SetNavigationTester (and renaming MapNavigationTester, too, to keep the non-GWT glob simple).\nAlong the way, promote TestIntegerSetGenerator and its SampleElements out of ContiguousSetNonGwtTest. (I think that this may have been necessary for GWT compatibility, but I forget.)\nFinally, some small cleanup:\n- Make less use of the scary ImmutableSortedSet(Comparator) constructor, and add warnings to its documentation. (A similar constructor has produced GWT bugs in ImmutableList subclasses, which I plan to look at next.)\n- Make /* @Override */ methods use @Override (if possible), or strip them with @GwtIncompatible (if not needed under GWT).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28502805\n'}"
4533,"{'code': 'd902c949efad09bd3f9400802ae091078c04bce5', 'message': ""Added default-value auto generation to NullPointerTester, for interfaces (and\ngot rid of the manual registration of Function, Predicate and BinaryPredicate).\n\nTo support generics correctly, I added common/reflect as dependency (which might\nbe\nthe biggest issue).\n\nAlong the way, I needed the dynamic proxy to handler equals/hashCode/toString.\n\nSearched around for similar pattern and found about 30 clients that are rolling\ntheir own version:\n[]\nSo I added AbstractInvocationHandler that deals with this. Since NPT needs it, I\nwent ahead and just made it @Beta and apache and everything. If we don't think\nit's worth releasing, I can move it to the common/testing package and make it\npackage-private.\n\nTested:\n[][]\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28462273\n""}"
4534,"{'code': '2b5830861fa281a59a072b6e8117116e3d93c5cf', 'message': 'Un-GoogleInternal a variable used in a test.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28460268\n'}"
4535,"{'code': '31046a7559332368053a6cffe62be3dc12bd2046', 'message': 'Deprecate a few more StringUtil trimming methods; several random javadoc cleanups.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28459342\n'}"
4536,"{'code': '7ed2aab3422eb9ba7187b74aea64c69a43708204', 'message': 'Some small fixes for Guava (methods called were @GI).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28457946\n'}"
4537,"{'code': '20e02b70a3a8d08e40456c0a9dc67560325c6661', 'message': 'Added support for resolving types from type variable and wildcard bounds. Useful when deriving inherited generic method signatures.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28457914\n'}"
4538,"{'code': 'ed528dd50aae58fb6a3de43f6261105178a13c6f', 'message': 'Range: fairly major javadoc rewriting. Meticulous math term definitions that we no longer supply here can be found on the Guava Glossary page I just created, or on wikipedia for that matter.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28455770\n'}"
4539,"{'code': 'a7f1729ad02a50fea6cb33dbca5a6d03a447da0f', 'message': 'Make FluentIterabl#of @GoogleInternal\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28454584\n'}"
4540,"{'code': '05ba41fc65d2bad97a35cc5f368e6785d287c7fa', 'message': 'Dump some more blahblah into the @Beta annotation to try to clear up some persistent misconceptions.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28454189\n'}"
4541,"{'code': 'eff8aceed635612158a5422168515d6e642724a9', 'message': 'Mark AtomicLongMap @GwtCompatible.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28453594\n'}"
4542,"{'code': '50d906b9cd3768067846ed168458e6e3273463ff', 'message': 'Fix some minor javadoc typos in FluentIterable.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28451125\n'}"
4543,"{'code': '5d20cd63a82dbebe644ed8d69c6383c6d24d6d71', 'message': 'Make UnsignedLong final.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28448320\n'}"
4544,"{'code': 'f4cdd87a6103131b1faaa6531ee3650dd790d47e', 'message': 'Add superclass safety check in getSupertype(), added @Beta and @since to TypeToken and Reflection.\nreflect needs no GWT compatibility, so there seems to be no BUILD dark magic to do?\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28428778\n'}"
4545,"{'code': '550c3b9efb37ff248193e05e084d0f2208230eef', 'message': 'Revert: Widen the default-accepting methods of Itera*s\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28412150\n'}"
4546,"{'code': '7b513c2dc24ac2735b894b573b67135d78fd94ee', 'message': 'Widen the default-accepting methods of Itera*s\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28402326\n'}"
4547,"{'code': '738a4732cd67e0fe0a771c508d637a3d5586d76a', 'message': 'specify 1.6 as source/target for maven-compiler-plugin\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28377677\n'}"
4548,"{'code': '9eed06311194b0060c42ea9662cc6d3cb76e6a43', 'message': ""don't unnesessarily constrain type of getIfPresent and getAllPresent parameters\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28374192\n""}"
4549,"{'code': '1678fdb055fb98f44f8c1814981c4ef51fcc2935', 'message': 'leave from methods as Beta\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28374134\n'}"
4550,"{'code': 'b656eca11bf9f0785b2df180ca5a76b5bac9ac82', 'message': 'Filling in coverage for last couple of uncovered branches\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28369624\n'}"
4551,"{'code': '68f3baf20396dcbdd3403f1ff8287f4b0f1e6df8', 'message': 'Use immutable sets in FluentIterableTest where possible\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28342780\n'}"
4552,"{'code': '7bab537f942c39e499ed8088463a860631abcec0', 'message': 'Remove assorted unused fields and variables.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28333899\n'}"
4553,"{'code': '3b4e1a6e6c3ceb5a3f31422af98cfc16d656ec92', 'message': 'fix cache links\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28332818\n'}"
4554,"{'code': '44cc8b95c855857a9d582449701e723cfe342b50', 'message': '- discuss segment behavior in concurrencyLevel\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28316785\n'}"
4555,"{'code': '2d33ed7fd15022675c91e9be6a68ca1011f83d60', 'message': 'add warning to Ticker\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28316339\n'}"
4556,"{'code': 'ec452d24ada3b476ede4bbd9c68e71d4211c0afe', 'message': 'Release FluentIterable into Guava 12.0\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28311090\n'}"
4557,"{'code': '843f8d8fc37133e6870d5b2200838219a55eb83e', 'message': ""Nuke 85 lines of code in Collections2 by adopting common.math. Which apparently fixed a size calculation bug that wasn't found due to a bad test that thought C(34,14) > MAX_VALUE.  (?)\n\nAlso snuck a call to IntMath.pow() into cartesianProduct.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28310475\n""}"
4558,"{'code': 'fb807d78d20685fc1c1139c1ca6b8c0a3db3bca8', 'message': 'Adding a custom serialization option, when the space overhead of java serialization\nis significant compared to the BF size itself (i.e. for small BFs)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28310115\n'}"
4559,"{'code': 'f27e2690a260db7c3c9355b75132c86e0b0a7ff8', 'message': 'Change primitives #toArray to take Collection<? extends Number>\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28305601\n'}"
4560,"{'code': '66b3ca82937bd6194039cda7e58825eb1d3b6683', 'message': 'Add MediaType matching according to the model defined in the HTTP/1.1 Accept header.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28299737\n'}"
4561,"{'code': 'e3ec650dd008fd92cb494ab54d152062614503c7', 'message': 'test for indexOf with two array arguments; isEmpty and other methods of BooleanArrayAsList\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28292228\n'}"
4562,"{'code': '1ef9b7d6b95602f03e729e28207ae64041c71c0c', 'message': 'test for minimum when the minimum is not the first element in the array\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28246126\n'}"
4563,"{'code': '7ebdd5768ad1a5f839a9c78f42606f91bfc22546', 'message': 'delete methods whose Time Has Come\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28245241\n'}"
4564,"{'code': '60f83464509bbed6ff52a9fe65c671e461d425aa', 'message': 'Formal testing of null server and client in TeredoInfo\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28244957\n'}"
4565,"{'code': 'ea2b4743d2f327d17d586cd061e4c686dc016d19', 'message': 'enhance documentation\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28216272\n'}"
4566,"{'code': 'bd3d46ff61aab113bac98311b77c1d5f6ce1334e', 'message': 'Simplify ImmutableMap, providing skeleton implementations of each view.\nFrom Louis: http://codereview.appspot.com/5753064/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28206736\n'}"
4567,"{'code': '2f4db4ac381cb8405286d8d57f47ad90cd63b5f2', 'message': 'Provide a default subList() implementation in ImmutableList.\nFrom Louis: http://codereview.appspot.com/5759058/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28206673\n'}"
4568,"{'code': '12c2f68b5661d415c8a88228c8372c1a80e3523c', 'message': 'Make MediaType more lenient when parsing whitespace.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28182440\n'}"
4569,"{'code': '6316d5eee36e8d6deb91eb85b096821d9e790b2b', 'message': 'Removing unused, untested non-public no-args constructor\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28138884\n'}"
4570,"{'code': 'b8bdd426430015ecca79d35eb7f67b320a00ddd2', 'message': 'Removing unnecessary cast\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28137851\n'}"
4571,"{'code': '2f830e65a6705678a41f5da1d3eb5eee86f2f2fb', 'message': 'Complete several TODOs, and introduce TransformedIterator, which simplifies and reduces the overhead of package-internal iterator transformations.\nFrom Louis: http://codereview.appspot.com/5730052/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28112037\n'}"
4572,"{'code': '0a3a6d9cd933017d738684d4197838315d9ee150', 'message': 'Provide failure atomicity in AbstractMultimap.put.\nFrom Louis: http://codereview.appspot.com/5728049/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28110338\n'}"
4573,"{'code': '707f3a276d4ea8e9d53621d137febb00cd2128da', 'message': 'Simplify ImmutableList and its implementations.\nFrom Louis: http://codereview.appspot.com/5731051/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28109145\n'}"
4574,"{'code': '83504453b0f6f49220988bd068e11d6469488f83', 'message': 'Eliminate Platform#unsafeArrayCopy\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28108805\n'}"
4575,"{'code': '70455d395feb903752268145fb8561262cc185cd', 'message': 'UnsignedLongs.toString is suboptimal.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28107274\n'}"
4576,"{'code': '5676e86ee53d6721d1ecd5e9fdd1da8f8c991e85', 'message': 'Add c.g.c.net.MediaType#TIFF\nFix minor typo in c.g.c.hash.Hasher javadocs.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28107242\n'}"
4577,"{'code': '9d782cc8033a9cd0ec6e6257db7fa8b06f4ab8a8', 'message': 'Make minor simplifications to WellBehavedMap, and small optimizations to ForwardingSet.\nFrom Louis: http://codereview.appspot.com/5719046/\n(Also, sneak in a change to make toRemove final.)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28047471\n'}"
4578,"{'code': '8395dcbd9c9860508c9c16a7db3c07945ca346d7', 'message': '- new @Beta classes for Guava 12.0\n- @Beta graduations for Guava 12.0\n- remove classes scheduled for removal in Guava 12.0\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28043743\n'}"
4579,"{'code': 'cec7952f282c73c2221bddc9dd620298f906870d', 'message': 'BloomFilter changes:\n- Add copy method.\n- Add equals method.\n- Modify put method to return boolean, indicating whether the underlying BloomFilter bits may have changed.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=27988892\n'}"
4580,"{'code': 'a4944fb7e64392cd53159de6a42e2711e3808db1', 'message': 'Roll back CL 23327883\'s very broken FeatureSpecificTestSuiteBuilder optimization.\n(We don\'t clone the tests, so we run all methods against the same target class (the last to be initialized).)\nFix up newly failing tests (except for CompactIntegerListTest, for which I\'ve filed a bug).\nMost are problems with the tests themselves:\n- Test suppressions weren\'t being carried over to tests of the reserialized collections.\n- Map values() collections were universally assumed to permit null queries.\n- EnumSet was asserted to fail fast on concurrent modification.\n- Many ConcurrentModificationException tests advanced the iterator past the end of size-zero or size-one collections.\n- It\'s not possible to create an empty collection that contains null. Empty collections don\'t contain anything :)\n- (Bi)MapGenerator.create is passed an Object[] containing Entry objects, not an Entry[].\n- (Bi)MapGenerator.create is passed an Object[] containing Entry objects, not an Entry[].\n- StandardImplForwardingNavigableMap.keySet() returned a SortedSet instead of a NavigableSet.\n- StandardImplForwardingNavigableMap implemented lastEntry and descendingSet in terms of one another (using the standard* methods).\n- Tests of null SortedMultiset values fail when run against a nullsFirst() comparator because the nulls are outside the submultiset ranges tested.\n- NavigableSets.synchronizedNavigableSet(SafeTreeSet) does not allow null queries.\n- Tables.transformValues().cellSet() permits remove operations.\n- collect/testing SmallTests needed their timeout increased.\n- CompactIntegerListTest didn\'t specify all the mutation operations it supports.\nA few are fixed by improvements to production code that arguably aren\'t strictly ""bug fixes"":\n- ConcurrentHashMultiset.removeAll(collectionContainingNull) threw NPE.\n- Maps.unmodifiableNavigableMap().subSet/headSet/tailSet returned a SortedSet instead of a NavigableSet.\n- NavigableMaps.unmodifiableNavigableMap().keySet() returned a SortedSet instead of a NavigableSet.\n- RegularContiguousSet.contains/containsAll threw NPE (which the EmptyContiguousSet equivalents did not).\n- WellBehavedMap.entrySet().remove(null) threw NPE instead of returning false. (The fix removes the need for Sets.transform.)\nA few more are real bugs:\n- TreeMultiset.add(null) succeeded even for comparators that do not permit null.\n- TreeMultiset.remove(null) failed even for comparators that permit null.\n- TreeMultiset iterators couldn\'t remove null elements.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=28001960\n'}"
4581,"{'code': 'fefd98f33f69a4beec09606bb96a8113ead755e2', 'message': ""Drop +co.yu from changes file now that it's been removed from the Google domains list.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=27972295\n""}"
4582,"{'code': '42d8301aa9d4d570e7d4bea07b3fa7641c338bdc', 'message': 'Add parsing test that caught a regression in overflow detection.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=27952556\n'}"
4583,"{'code': '4df8c4ce6c29346b24a8b2ad1d94ce034d5b08fc', 'message': 'Update to latest Mozilla tld data file.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=27943273\n'}"
4584,"{'code': '397b9934cf8ec5e7a5b4b25972ad8c368950246f', 'message': 'Make startUp and shutdown non-abstract on AbstractScheduledService.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=27904180\n'}"
4585,"{'code': 'b145ddc17680673605aa45a1deef15ba0c60a4bf', 'message': '- clarify CacheBuilder\'s similarity to MapMaker in the @deprecated messages\n- be more explicit about CacheBuilder Cache\'s ""default"" behavior\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=27837348\n'}"
4586,"{'code': '113dea14725c0c97b4abfce934a650bb6d9ba1dc', 'message': 'introduce Cache.putAll\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=27837322\n'}"
4587,"{'code': '3c8b80ac26c04ed731b87c99df0726e4605b5145', 'message': 'Guava issue 534: static builders for COWAS/COWAL.\nFrom Louis: http://codereview.appspot.com/5273049/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=27817252\n'}"
4588,"{'code': 'a1ebd775d663a1c3caab588ef5cd70eddd4be0ce', 'message': ""remove escapers from Guava (won't make it for Guava 12)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=27816445\n""}"
4589,"{'code': '66a4a82d359ee8ec552e0af29290081c09ad9d48', 'message': 'Remove c.g.common.escape usages in c.g.common.net.MediaType.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=27815215\n'}"
4590,"{'code': 'f8144b4df7eec5f1c9e6942d8d5ef734a8767fd9', 'message': 'For all of //java/com/google/common/... and //javatests/com/google/common/...\n-sort imports\n-remove unused imports\n\ng4 edit java/com/google/common/... javatests/com/google/common/...\n\ng4 change\n\n/home/build/[]/tools/java/remove_unused_imports.py --fix -c 27791544\n\ng4 list -s 27791544  | sed ""s%//depot/[]/%%"" | xargs\n/home/build/[]/tools/java/sort_java_imports.py\n\ng4 revert -c 27791544 -a\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=27803889\n'}"
4591,"{'code': '17f6cb8aa782944d63d33232153cab4a417004d9', 'message': ""Extracted part of NullPointerTester and Stub into NullValues;\nAdded code to call default constructor if all else failed;\n\nSome potential incompatibility from previous version:\n1. Use ImmutableList.of() in place of Collections.emptyList(), ImmutableSet.of() in place of Collections.emptySet(). I don't anticipate issues here.\n2. Use ImmutableSortedSet.of() in place of new TreeSet(). mutable -> immutable.\n3. Use a Comparator that always returns 0, instead of reverseOrder() which requires T extends Comparable.\n\nIf this sounds reasonable, I'll send it through global TAP queue to make sure it doesn't break builds.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=27791649\n""}"
4592,"{'code': '6d31346faa5a42f735a6b8055d6ca7a22b1ce096', 'message': 'Make MediaType fully GWT-compatible.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=27783220\n'}"
4593,"{'code': '535653a2637b3d0628e7d7e8df4c26d1c480c3fa', 'message': 'Make Charsets GWT-compatible now that Charset is emulated.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=27776341\n'}"
4594,"{'code': 'a331fdd7c89e1c91e696d06b80f1bd611dab0c5c', 'message': ""Don't specify weakValues in a flaky test where it's not required.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=27770962\n""}"
4595,"{'code': '29e1378b00d80d51fcf7ddcc8cdf892010edce09', 'message': 'Open-source missing .gwt.xml and TestModuleEntryPoint files.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=27751596\n'}"
4596,"{'code': '267e41fbf208f6511c513048cbe7f7da25370b24', 'message': 'add escapers back to Guava\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=27739172\n'}"
4597,"{'code': '2daad4cb6bdd1ba3ae36f4bdab8fd4dbb7cf78a7', 'message': 'Release MediaType into Guava as @Beta.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=27598067\n'}"
4598,"{'code': '543c2e92b4445eb22e400d2ff89721f4a20c707e', 'message': 'Write tests to verify that HashFunction shortcuts are equivalent to the long forms.  Then fix the legacy hashing implementations to unbreak them.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=27678321\n'}"
4599,"{'code': '0823847e96b1d082e94f06327cf218e418fe2228', 'message': 'Add c.g.common.base.Optional#transform(Function)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=27673881\n'}"
4600,"{'code': 'de8eeba94bd6a12a83a05786cf2ddd00d8547b48', 'message': 'Expose c.g.common.hash.HashCodes and its static factory methods.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=27671928\n'}"
4601,"{'code': '222448cb98d9f53819d8f36c1e36d4c4b3ee7cbd', 'message': 'Remove obsolete TODO from CharMatcher.\nAnnotate the return type of Function#apply as @Nullable.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=27671585\n'}"
4602,"{'code': 'a122d63e9c87338b080ec48d2fcc75265339f0d7', 'message': 'Make the shortcut methods in the new hashing API faster by using the legacy implementations.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=27671418\n'}"
4603,"{'code': 'ae671eb9a3601782256c7bf3311af719db6aa5e3', 'message': 'add Beta disclaimer\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=27667758\n'}"
4604,"{'code': '9657adb9a22190fd43ff06d2aecbfc66f1135dc3', 'message': 'Add @since for Enums.getField.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=27632359\n'}"
4605,"{'code': 'da2e687edd79b6bbab3d279de529a71ed034c2e6', 'message': 'Copy Reflection.getField(Enum) to Enums.getField().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=27564524\n'}"
4606,"{'code': 'b0abc289340340a36a1a2deec33702331ee4a31c', 'message': 'Randomizing goodFastHash\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=27545564\n'}"
4607,"{'code': 'c9830858e734c11312f3d10a06390cb1bc7185c1', 'message': 'Rename com.google.common.hash.Sink to PrimitiveSink.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=27538021\n'}"
4608,"{'code': '51a457bcc4443e4160593df00d5a8f21e6d27d25', 'message': 'Open-source GWT emulation of CacheLoader, which was unintentionally missing.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=27522709\n'}"
4609,"{'code': '237fef61e00fe356f5e3bad6ecedfb7b924fa4f2', 'message': 'Restore accidentally removed Util.gwt.xml.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=27483073\n'}"
4610,"{'code': 'f863c7433cd69d2d0c29b8db4f8e3fb98bb42a10', 'message': 'eliminate trailing whitespace and tabs\n'}"
4611,"{'code': '720104e72da61e660c704195eba94de8b4926304', 'message': 'Refactor tests for BiMaps to use BiMapTestSuiteBuilder.\nFix a bug with EnumBiMap in which null values throw the forward and backward maps out of sync.\nFrom Louis: http://codereview.appspot.com/5642050/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=27388061\n'}"
4612,"{'code': 'e86741fbb4b53b8913440de9626e276db6c1466d', 'message': 'Add tests for ConcatenatedHashFunction.\nAdd NullPointerTester test for Hashing.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=27382584\n'}"
4613,"{'code': 'b959173880ef1bcb89d98c83c76c3eb7256d14a9', 'message': 'Add SERIALIZABLE feature to TestSuiteBuilders.\nFrom Louis: http://codereview.appspot.com/5635044/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=27376846\n'}"
4614,"{'code': '7a155b570906e2c31c5773e100839ce6a2d79679', 'message': 'Release more Queues methods: newAD, newLBD\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=27350067\n'}"
4615,"{'code': '24449864a733812c37d5a280f1d8c2e7b14743b7', 'message': 'Add testConstructors(), testStaticMethods(), testInstanceMethods() that take a\nminimalVisibility parameter\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=27341632\n'}"
4616,"{'code': '1b1943f69c90fe45c6b920da04e6e6a86b4ee0ca', 'message': ""Add/document constructors for Forwarding* and their Standard* nested classes.\nFix visibility of ForwardingNavigableSet.StandardDescendingSet constructor so that it's usable outside the package, e.g.,\n\npublic static final class MySet<E> extends ForwardingNavigableSet<E> {\n@Override protected NavigableSet<E> delegate() {\nreturn delegate;\n}\n\n@Override public NavigableSet<E> descendingSet() {\nreturn new StandardDescendingSet(); // StandardDescendingSet() has protected access in com.google.common.collect.ForwardingNavigableSet.StandardDescendingSet\n}\n}\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=27336831\n""}"
4617,"{'code': '026ec0d4f3294d37b83894154f396a12c710535e', 'message': 'open-source AtomicLong\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=27336398\n'}"
4618,"{'code': '22fc7ff20615bebb9029184dcc0e33067035edae', 'message': 'Add c.g.common.base.Enums#getIfPresent(MyEnum.class, ""FOO"") -> Optional\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=27314756\n'}"
4619,"{'code': '2c6e1366dee1a252a08c889ef1d4e3eb0d54acbb', 'message': 'Switching to non-power-of-2 bloom filter sizes, and making serialization more\nfuture-proof.\nUnfortunately, this changes the serialized form, since hashBitsPerFunction was\nhardwired\nto the BloomFilter, and that really assumed power-of-two tables.\nAlso, this fixes a nasty exponential-slowdown bug that was in the previous version of BloomFilter (that code was added to support serialization, and deleted as part of the new strategy for serialization)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=27307766\n'}"
4620,"{'code': 'eecbe53fbfaa870636a4c7144505d5863ba5fecf', 'message': 'Implemented Maps.unmodifiableNavigableMap.\nFrom Louis: http://codereview.appspot.com/5590044/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=27271664\n'}"
4621,"{'code': '806967c3660d231e62a52674703acb51ec4e6623', 'message': 'Link pages to the wiki.\nFrom Louis: http://codereview.appspot.com/5553067/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=27271233\n'}"
4622,"{'code': '7806203c8f5e3f351b9d71744c33aa115aa43725', 'message': 'Improve ForwardingNavigableMap, adding standard* methods.\nRelease in Guava.\nFrom Louis: http://codereview.appspot.com/5585045/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=27260448\n'}"
4623,"{'code': 'a7a666c992819ca60ea7990ff3cf63a9a8f2210a', 'message': 'Add documented constructor.\nMove private utility method to bottom of file.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=27260445\n'}"
4624,"{'code': 'd58ff32e240a70b92a7133edd5c73c6c276798af', 'message': 'Changed default sizes of ImmutableSet to be more conservative.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=27245924\n'}"
4625,"{'code': '2bba62b3c9928b0e3e11c725a600689990c6af90', 'message': ""Add empty array and enum handling to NullPointerTester; I can also clean up the 'throws Exception' though is it better to do it in a separate CL?\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=27238145\n""}"
4626,"{'code': '81c7840b444adf271634a509b11fa4080e525919', 'message': 'Add missing @since+@Beta for nested class.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=27233385\n'}"
4627,"{'code': 'f25158e086c1a2eeb22b1ff782a3e6075c8f1752', 'message': 'Updates math utilities to use JDK 6 methods where possible, addressing several TODOs.\nFrom Louis: http://codereview.appspot.com/5587044/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=27228554\n'}"
4628,"{'code': 'a3bbf1bcbf797ead80e5e23f79a07e17b07aa19d', 'message': 'Implemented Sets.unmodifiableNavigableSet.\nFrom Louis: http://codereview.appspot.com/5591044/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=27228500\n'}"
4629,"{'code': 'a324899e2e017a5ea275e8d2c6b2fcf95ca73613', 'message': 'Add legible #toString implementations for CharMatcher.\nFrom Louis: http://codereview.appspot.com/5570067/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=27203019\n'}"
4630,"{'code': '381584a0f4124a9316dd2d7219033d2a981a3289', 'message': 'Improve ForwardingNavigableMap, adding standard* methods.\nRelease in Guava.\nFrom Louis: http://codereview.appspot.com/5591043/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=27201643\n'}"
4631,"{'code': 'e25ea225661c61002c90b7c631c49b4754056f0c', 'message': 'Rearranging of methods, plus Javadoc changes.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=27173884\n'}"
4632,"{'code': '53abadc9336bfc8c73ec993f0c396eff701c853d', 'message': 'add osgi metadata\n'}"
4633,"{'code': '1e2090489003cc96d3f9bebb1f3e0a84fab0432e', 'message': 'Update test sizes per feedback from []\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=27164800\n'}"
4634,"{'code': '49dee297a34a74649db340facc5ca4d5cb1f9cf4', 'message': 'Test suite checking for fail-fast iterators.\nFrom Louis: http://codereview.appspot.com/5556071/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=27129949\n'}"
4635,"{'code': '732d54fa40cada5ac2956be1af84122af8989952', 'message': 'Created BiMapTestSuiteBuilder.\nFrom Louis: http://code.google.com/r/wassermanlouis-guava/source/detail?r=7d23827f8dc31cda03829bcadd0d0ef419a00ed4&name=bimap-testsuitebuilder\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=27127892\n'}"
4636,"{'code': '46156c9b4f2af68882ca4c1907cdc90bc2d88f53', 'message': 'take core cache classes out of Beta\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=27122549\n'}"
4637,"{'code': '3e82ff72b19d4230eba795b2760036eb18dfd4ff', 'message': 'Make Optional GWT serializable.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=27120368\n'}"
4638,"{'code': 'e8370c5f62b108802ddb1d8fe3ce96f19884a6fe', 'message': 'Remove JDK5 hack now that Guava is on JDK6.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=27059690\n'}"
4639,"{'code': 'dc5a4119abe8328cd1cd863fbb9f2ad0d5219379', 'message': 'allow jdk6 in Guava\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=27051331\n'}"
4640,"{'code': '320501e0a6457802f4afc9d2f21cf394b3e173a8', 'message': '- Eliminate serialization warning on TreeMultiset by marking AbstractSortedMultiset.comparator as @GwtTransient: http://code.google.com/p/guava-libraries/issues/detail?id=871\n- Eliminate reference to long-gone ""Note on element equivalence"" in Multiset docs.\n- Fix ByteStreams.copy inconsistency over whether the output is closed: http://code.google.com/p/guava-libraries/issues/detail?id=757\n- Link in Partition shouldn\'t contain the space after the word.\n- Mention unsigned types in package-info.\n- Standardize on ""input"" for name of input Future parameters in transformation methods.\n- Remove deprecated Futures.chain for Guava 12.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=27031992\n'}"
4641,"{'code': 'edcaa9418aa5e315ba081f4b6791bd9daa926bfa', 'message': 'Strip workarounds for past Google bugs from public release.\nIn fact, stripping the allAsList/successfulAsList code is basically a bug fix, as the existing workaround allows get() to block indefinitely after the Future is done.\nPast discussion: https://groups.google.com[]group/java-libraries-discuss/browse_thread/thread/33a137c1707fe40b\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=27022708\n'}"
4642,"{'code': 'afce494977cb4f1018b72333a6ed7d7fac3531d1', 'message': 'Added new method omitNullValues() to ToStringHelper.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26991532\n'}"
4643,"{'code': '883202c1ea5bfb52914cc1546ff38a4716c08dde', 'message': 'AbstractLinkedIterator -> AbstractSequentialIterator.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26926853\n'}"
4644,"{'code': 'ca8467cff1588a95df50bc8cf2ae171953e36da4', 'message': 'Eliminate unneeded Annotations dependency.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26894404\n'}"
4645,"{'code': 'a18a9c955aa9c488e14d5fdfb9d6351cb7ec4e2a', 'message': 'Irrelevant no-op diff created by internal-only changes.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26829506\n'}"
4646,"{'code': 'e0c54a1b1874d846bc393939bd1a4b97d2d606c8', 'message': 'Remove a few lines of unused code\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26803682\n'}"
4647,"{'code': '01ffe90e79766394fba487461e58a9e9abc0facd', 'message': 'Add c.g.common.math.DoubleUtils#ensureNonNegative\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26762334\n'}"
4648,"{'code': 'c27eee83a57e9b5639f9cbb251f456acd61bd534', 'message': 'In forUriString(), check the IP version before giving getByAddress()\na chance to collapse mapped addresses from IPv6 to IPv4.\n\nAlso, add a bytesToInetAddress() helper function which lets us\nremove a bunch of UnknownHostException handlers.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26697119\n'}"
4649,"{'code': '01a5709c3de641d9055a68452c428ad5b8e624e5', 'message': 'Use ""null"" for null entries when joining.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26695018\n'}"
4650,"{'code': '95866063bfb234cc0977341a8136a424fe496aab', 'message': 'Provide better documentation for the state transitions that are legal/illegal for a Service to make.  Also change the behavior of service.start() such that it will now throw exceptions when trying to start a TERMINATED or FAILED service.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26691313\n'}"
4651,"{'code': '674fc65b8d5bc466c7bbc138deabba957fa0df25', 'message': 'Deleting (again) the weird Interners#newInterner(GenericMapMaker) method: has been mostly unused, and not entirely correct\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26688481\n'}"
4652,"{'code': 'b8222756f9a21c86b983b542fd52404a8cc57883', 'message': 'Some small test changes that I found forgotten in my client.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26686444\n'}"
4653,"{'code': 'b55bf940bd46534b441d5729d6fdd732c8cdfbc2', 'message': 'clarify verbage regarding the cleanup of entries with reclaimed keys/values (Issue 841)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26627817\n'}"
4654,"{'code': '23aa7906fea8756ffe401e1fac6c999cce16934d', 'message': 'add softKeys scare text\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26614390\n'}"
4655,"{'code': 'ca0537e080e601f517b3721839340f2f907c2f18', 'message': 'fix broken javadoc links, per issues 853 and 855\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26594437\n'}"
4656,"{'code': '996313a820ef2b89c1c34ae2871807b65416c6e3', 'message': 'remove from Guava methods which were scheduled for deletion in release 12.0\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26591946\n'}"
4657,"{'code': '4e186093dd12cb5d74b1679295b582423d42345e', 'message': 'Add awaitFullGc()\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26591095\n'}"
4658,"{'code': '27138179b9db52895a4236d4f041b4dd1052dd25', 'message': 'specify that asMap never auto-loads entries\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26581537\n'}"
4659,"{'code': '7d779571cb4f2970f6ea79b8e1853b64d9267646', 'message': 'reorganize hash tests\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26573308\n'}"
4660,"{'code': '422653c89062c58e9206a147d4de26811aaf3ab2', 'message': 'Typo\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26568675\n'}"
4661,"{'code': '7c3778f085554d9df44182b4b0cb25078d00ed85', 'message': 'add new patterns\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26562202\n'}"
4662,"{'code': '056b64495f4a7bb64d83fbf858f742b9d0406e0f', 'message': 'properly adjust size/weight on clear calls without a removal listener\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26558016\n'}"
4663,"{'code': 'ffa4945ff3e117385a5433c3353403d7c473c484', 'message': 'add pm\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26523300\n'}"
4664,"{'code': '471ed9841fe95cfa9cab826649dcb14772dceaae', 'message': 'new hash tests\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26509373\n'}"
4665,"{'code': '81f0a77431bf90bf02543b999577400c7c13aa13', 'message': 'Fix bug in Optional#presentInstances.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26472796\n'}"
4666,"{'code': '5bbd6db3e6c5b4cfab0c900dd27f4158fbf65bdb', 'message': 'Using a MessageDigest per Hasher, not per MessageDigestHashFunction (making the latter thread-safe)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26416662\n'}"
4667,"{'code': '00749f8f82776ae65d475f15c380a08795ee4640', 'message': '@GoogleInternal to CycleDetectingLockFactoryTest\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26393155\n'}"
4668,"{'code': 'ef63e4f4692eb168aa1a859e822cdb7b161f84b7', 'message': 'Mentioning the number of hash bits to algorithms where it is not quite clear from their name.\n(I also add them for sha-256 and sha-512, though these are more obvious)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26389968\n'}"
4669,"{'code': 'abb836693293727f91f1249f43ac421825fcd744', 'message': 'Remove MOE stripping of public modifier from c.g.c.base.Joiner\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26365643\n'}"
4670,"{'code': '5bf085557770b769437895ab763541ec7240c44d', 'message': 'Add leak-detection example.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26365358\n'}"
4671,"{'code': '0aaf62796d043621a7458e0b49916671d7643290', 'message': 'Use GcFinalization.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26339509\n'}"
4672,"{'code': 'ae7bc782b786d8421c9536b624888f7d9419af54', 'message': 'Make the Joiner Iterator/Iterable accepting overloads package-private (MOE public).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26321753\n'}"
4673,"{'code': '9d410869d8f333d422b7c305c017a63bcabbee15', 'message': 'Make the Maps/Multimaps Iterator/Iterable accepting overloads package-private (MOE public).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26321384\n'}"
4674,"{'code': '25628af3241c74a4e68d67c0b5bdbe60763b693d', 'message': 'Use GcFinalization.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26310755\n'}"
4675,"{'code': 'bc5fa6eeaa254f4872465390454fe88e17f5fe2a', 'message': 'CycleDetectingLockFactory creates ReentrantLocks and ReentrantReadWriteLocks\nthat detect potential deadlock by checking for cycles in lock acquisition\norder.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26303617\n'}"
4676,"{'code': 'd0f4023bd9027b21d9ef3f8077651ad0d2c2275d', 'message': 'This fixes to publicly filed bugs against the AbstractScheduledService:\n\nhttp://code.google.com/p/guava-libraries/issues/detail?id=826&sort=-id&colspec=ID%20Type%20Status%20Milestone%20Summary&num=200\nhttp://code.google.com/p/guava-libraries/issues/detail?num=200&colspec=ID%20Type%20Status%20Milestone%20Summary&sort=-id&id=825\n\nIt fixes some typos in the example class and adds some more documentation specifying the concurrency guarantees that the service provides.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26297114\n'}"
4677,"{'code': 'e55f2b580a67c7fb34b86097255df8cce96b047d', 'message': '- allow a small amount of leniency in expiration timestamp ordering during concurrent reads\n- use ticker to make strong assumption about expiration\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26292370\n'}"
4678,"{'code': '5a212334f8e7119594d9f7dff61bb6802cf1daf2', 'message': '- remove transform(Future, Function) for 11.0 as promised\n- fix @since formatting\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26291224\n'}"
4679,"{'code': '8fce2b3fd00ec920f4621bb42b7e1862a732ed1c', 'message': 'Add Iterator support to c.g.common.base.Joiner\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26290845\n'}"
4680,"{'code': '556976f81c236be7798e5d065a0dae09ca0cc1d3', 'message': 'Fixing bug in NullPointerTester, where it fails spuriously for methods with no default value for @Nullable parameters.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26289693\n'}"
4681,"{'code': '6fcf6088fd78018dadc61536f149027247055598', 'message': '- remove methods scheduled for deletion in 11.0\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26259157\n'}"
4682,"{'code': '2c0727049d7e7cbbe1febf5bcf6b7a4b1860dea5', 'message': ""Fix two aspects of the AbstractScheduledService.CustomScheduler implementation\n1. Give the abstract callback method a more intuitive and convenient signature which will make it easier to ensure that weird things don't happen.\n2. Handle exceptions thrown from the scheduling callback.  Previously if this method threw an exception the service would silently stop running.  Typically without any logging or notification of any kind.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26228216\n""}"
4683,"{'code': '735c50d1de5f1e603fe87db3fbad3d05b54976da', 'message': ""Fix SingletonImmutableSet's isHashCodeFast(), and slightly reduce its memory footprint.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26227772\n""}"
4684,"{'code': 'f9318924b71d4ed2c59d3d835fe6a4ce3feefcbf', 'message': 'Open source c.g.common.hash into Guava 11.0\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26225631\n'}"
4685,"{'code': '3bda9bf977d2df45a688cc3d4fe6aa67b666eb10', 'message': 'fix spacing\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26220833\n'}"
4686,"{'code': '60262d5b7e4c834062b8c06c81ad5e85ae728721', 'message': 'remove escapers from Guava for now\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26201712\n'}"
4687,"{'code': '484ed1848fc76d4541eacf605100e68018db5af3', 'message': 'Fix UnsignedInteger documentation.\nFrom Louis: http://codereview.appspot.com/5488051/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26200863\n'}"
4688,"{'code': '41da518d8920cdf1db6571e55efdfa55cfebbf00', 'message': 'Avoid generating garbage while evaluating and() and or() predicates.\nExternal guava issue: http://code.google.com/p/guava-libraries/issues/detail?id=820\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26198729\n'}"
4689,"{'code': 'cb2d3860c6c6ce5f234981d21914a1f5e0bac08a', 'message': 'remove tests of absent code\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26198410\n'}"
4690,"{'code': '17969e18334d05efd6438e0275ebbec296d62371', 'message': 'Updating Javadoc and removing commented-out lines\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26197988\n'}"
4691,"{'code': 'ea728eaf52cbdcac3ab3ede7109367a9f0b34f15', 'message': ""- Cache.get(K, Callable<V>) => get(K, Callable<? extends V>)\n- more clearly document how Cache methods moved to CacheLoader should be dealt with\n- explain what expireAfterAccess does and doesn't count as an access\n- recall RangeSet from Guava\n- tweak Queues javadoc\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26193165\n""}"
4692,"{'code': '8f95b6b573c6473df57cf145e5275e7f1b990100', 'message': ""deprecate MapMaker's caching methods in favor of CacheBuilder\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26186850\n""}"
4693,"{'code': '852dcdc3a06a889d9a24e8e02d25d4cd1aa5bf37', 'message': 'rename CacheBuilder.refreshInterval to refreshAfterWrite\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26186574\n'}"
4694,"{'code': '085c040764a9a242012cacd2f70761197a35828a', 'message': 'exclude base.internal from javadoc\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26186322\n'}"
4695,"{'code': 'a434310da225aa2467c65beea6123ae18ac562ce', 'message': 'Add package-info for math.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26186233\n'}"
4696,"{'code': '3d38931cf28d1551e56f2b6682061b96ccaeb9cf', 'message': 'Fixing the issue of XmlWriter not escaping \\t, \\n and \\r in the\nattribute value.  This change adds XmlEscapers.xmlAttributeExcapte().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26174331\n'}"
4697,"{'code': 'e53f74d98a676e9784ed0dd83cc69f4797ea26cd', 'message': 'Use tryLock to avoid expensive calls to nanoTime when possible (only if not fair).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26172551\n'}"
4698,"{'code': 'e4da692d191d2b3db21858f4b59abd70673674d3', 'message': 'Add inverse() method to Immutable{,Set,List}Multimap.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26169224\n'}"
4699,"{'code': '0af256f339334e7f50a3cdb5103de14bc9f96d33', 'message': 'Retract tryParse overload that accepts a radix from Guava.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26163146\n'}"
4700,"{'code': '5b5b107c851a3f8c80c62ac53a458ed1d60af9e2', 'message': 'Eliminate the reevaluateGuards method of Monitor and tighten the contract of Monitor.Guard.\n\nAs Dimitris Andreou argued, ""reevaluateGuards() ... doesn\'t seem to offer any advantage ... over ... use of Condition. Basically you give up implicit signaling, the main selling point of this class, and revert to manual signaling. Why not leave that scenario to Condition, and make this class simpler to use for its own sweet spot?""\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26121010\n'}"
4701,"{'code': '66939aa3b89c02fb5c8a64e137689978dedf97bc', 'message': 'Remove @GuardedBy annotation from all public methods of Monitor.\n\nRationale: It\'s arguably incorrect for leave, which gives up the lock. It doesn\'t make sense for the other methods either because ""lock"" is meaningless to users of the class. Furthermore, every one of these methods checks whether the lock is held if necessary, so there\'s not actually any danger in calling them incorrectly (they fail fast).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26114296\n'}"
4702,"{'code': 'eca25fd66c44202627678b711342c22e74c42c7e', 'message': 'remove spurious new method\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26108853\n'}"
4703,"{'code': 'ce4a11c5cef5de8c4b0997bbb0feedba3bd63186', 'message': 'add more missing @since tags\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26105362\n'}"
4704,"{'code': '302c4a033600dd90bb2219d9657537d66d9c59a5', 'message': 'add GwtSerializationDependencies\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26103631\n'}"
4705,"{'code': '6a8de5972a8b85c54fd0730d150aac74f525e43c', 'message': 'add missing @since tags, per the jdiff report\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26103222\n'}"
4706,"{'code': 'a3192ae7e8297e688f8338470965c87c69bad523', 'message': ""Make CharEscaper.escapeSlow final (as UnicodeEscaper.escapeSlow already is).\nNo one overrides it.\n\nAlso, make Escaper.asFunction final.\nI could be convinced that it isn't worth the effort, but it's hard to imagine why anyone would want to override this.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26086749\n""}"
4707,"{'code': '72b2f75013ece02c4410a63e77579ba3c30ab774', 'message': ""Add Ints.tryParse. The implementation is based off that of Android's java.lang.Integer#parseInt.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26080239\n""}"
4708,"{'code': '163ac499a9a7dc973e1b8293080fdf794bd07a78', 'message': 'Restore LocalCache.LocalManualCache.{apply,get,getUnchecked} to fix Guava compilation.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26079466\n'}"
4709,"{'code': '068891544566246bd5caea917ae3cb78f1a21747', 'message': 'Remove Futures.chain internally, though it will go out in Guava r11 before being removed in r12.\nRoll back temporary AbstractFuturesChainTest mess from 25962636 (but restore FuturesChainTest as ""FuturesTransformAsyncFunctionTest.""\nAlso, fix a copy-and-paste error in the AsyncFunction Futures.transform Javadoc.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26078097\n'}"
4710,"{'code': '223faeecda173159b63f15cf224b201eb2e103e8', 'message': 'Add c.g.common.collect.Sets#newLinkedHashSetWithExpectedSize\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26074694\n'}"
4711,"{'code': '206ae78f06324ff4a6257ed8ef6cd4d97746cce5', 'message': 'add new Cache/LoadingCache methods to RemovalCause javadocs\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26048028\n'}"
4712,"{'code': '097aa881a449c790285c1790af90382eca69c645', 'message': 'emulate CacheBuilder in GWT, gwtifying all requistie dependencies\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26046933\n'}"
4713,"{'code': '9db1ad6ef2aac319e91db7e6b06a9a418a4eae21', 'message': ""Convert more users from to-be-deprecated Futures.chain to new AsyncFunction-based Future.transform.\nDeprecate Futures.chain.\n\n- xargs perlsed 'Function<(\\s*)(.*),(\\s+)ListenableFuture<(\\s*)([^?].*)>>(\\s+)(.*)(\\s+)=(\\s+)new(\\s+)Function<(\\s*)(.*),(\\s+)ListenableFuture<([^?].*)>>' 'AsyncFunction<$1$2,$3$4$5>$6$7$8=$9new$10AsyncFunction<$11$12,$13$14>' < files\n- xargs perlsed 'Function<(\\s*)(.*),(\\s+)ListenableFuture<(\\s*)([^?].*)>>' 'AsyncFunction<$1$2,$3$4$5>' < files\n- xargs perlsed '\\bFutures.chain' Futures.transform < files\n- importtool --add=com.google.common.util.concurrent.AsyncFunction $(g4 whatsout -c 26028933 ....java)\n- many manual fixes\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=26043722\n""}"
4714,"{'code': 'b041be5124ef01b392e21a3ff0bc3d93f552156d', 'message': 'Add Multimaps.filter methods\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25993671\n'}"
4715,"{'code': '36048c35fc79c0265f9dfde4a27b4ffa14966772', 'message': 'Tiny clarification to Queues#drain\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25965634\n'}"
4716,"{'code': '2f2090bad927edb46799411a1220a88cf092f2a4', 'message': ""Introduce Futures.transform overloads that accept an AsyncFunction in preparation for eliminating Futures.chain.\nAlso:\n- Fix Javadoc example code's rowKeyFuture confusion: http://code.google.com/p/guava-libraries/issues/detail?id=788\n- Add test that the result of the preexisting Future.transform is memoized when the transformation succeeds.\n""}"
4717,"{'code': '8ebc9b11b98d538e43369b75ad6f19173537717a', 'message': 'Include all source files as resources in guava-gwt jar.\nThe only one currently missing was GwtSerializationDependencies, but this causes serialization problems:\nhttp://code.google.com/p/guava-libraries/issues/detail?id=791\n'}"
4718,"{'code': 'd5de86dc98b759183762543e3e977743e781d923', 'message': 'If {ByteStreams,CharStreams}.copy fails to close both input and output, it should log one exception while throwing the other.\nhttp://code.google.com/p/guava-libraries/issues/detail?id=667\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25920059\n'}"
4719,"{'code': '4b9da9148906ad483af308daf48d597046d306dd', 'message': ""Fixed a tiny Javadoc typo. You might be asking yourself: why is he\nwasting his time with this? I... don't know.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25918269\n""}"
4720,"{'code': '909420f21d93ca1e9866baa6a10c88fb3cc295db', 'message': 'Many Javadoc fixes, including fixes for public issues:\n- http://code.google.com/p/guava-libraries/issues/detail?id=778\n- http://code.google.com/p/guava-libraries/issues/detail?id=736\n- http://code.google.com/p/guava-libraries/issues/detail?id=713\n- http://code.google.com/p/guava-libraries/issues/detail?id=710\n- http://code.google.com/p/guava-libraries/issues/detail?id=709\n- http://code.google.com/p/guava-libraries/issues/detail?id=706\n- http://code.google.com/p/guava-libraries/issues/detail?id=566\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25915349\n'}"
4721,"{'code': '03b79658d4d2591bf76e9377081c16906c77fe0b', 'message': 'trigger refresh on Cache.getIfPresent\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25908678\n'}"
4722,"{'code': 'f8cdf1885e05d64889c64006c0a894062e71f581', 'message': 'Add c.g.common.base.Optional#presentInstances\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25881600\n\nAdd Optional#presentInstances to Optional.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25892141\n'}"
4723,"{'code': '6dc1da63206320ccdb959ccbcc811ee2c1e2cc2e', 'message': ""Make threads used by listenInPoolThread daemon, since the mere act of creating a ListenableFuture isn't expected to keep a process alive.\nhttp://code.google.com/p/guava-libraries/issues/detail?id=726\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25885317\n""}"
4724,"{'code': '120633982325062f3c9952821382189e5338cb5f', 'message': 'Copy c.g.c.collect.AbstractIterator to c.g.c.base as a package-private class.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25880322\n'}"
4725,"{'code': '287bc67cac97052b13cbbc0358aed8054b14bd4a', 'message': 'Replace try/catch/propagate with try/finally idiom.\n\nThis actually fixes a serious bug: A few of those Throwable.propagate calls were potentially wrapping InterruptedExceptions.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25813299\n'}"
4726,"{'code': 'c72ba765bed12267569936ffeb7c76d2f525fe2a', 'message': 'Reorder some of the HTTP Headers.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25806584\n'}"
4727,"{'code': 'e3676a6b21e798b632e75048209fd1eb0719a7a9', 'message': 'Test that transform* calls on a ""secretly"" sorted map are passed off to the SortedMap overloads.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25679905\n'}"
4728,"{'code': '99d7ce0525002a4d8c709f61acc4fe3dabc69b8f', 'message': 'Plug a bunch of unit testing holes in common.net.\nAlso, remove a redundant item from the HostSpecifier Javadoc.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25677661\n'}"
4729,"{'code': '2b7e8589db7c8ba987c6a960114a3194a7c2fe0e', 'message': 'Make SerializableTester.reserialize a no-op under GWT so that test authors can use it as part of larger test methods.\nWith that done, eliminate the equivalent, awful hack in RangeTest.\nFurther, with bug 5599623 fixed, run OrderingTest under GWT.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25672151\n'}"
4730,"{'code': 'f7a1c2b042abc23e9abd885336ffed201aac5f6d', 'message': ""Add explicit <K, V> to entryOf() call. The current code works in javac but fails compilation in Eclipse compiler. It could be Eclipse's fault. But it seems easy enough to avoid the gray area, no?\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25651472\n""}"
4731,"{'code': '6fcc6652057d52769bffe6d3fb228343964ba518', 'message': 'Document advantages of ""implicit signaling"".\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25642514\n'}"
4732,"{'code': 'f69e0d232b1837ea6a866d4addd81685b5047177', 'message': ""Create PriorityQueue with internal capacity 2 instead of estimating the size from the number of inputs.\nThis is simpler, and it might be faster than iterating twice.\nIt might be slower if the input (a) is a Collection (so that size() is available) and (b) is larger than size 2 (so that growing the array is necessary), but I'm not too concerned.\nOnly 2 of ~8 callers have a chance of passing in more than 2 inputs, anyway.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25641457\n""}"
4733,"{'code': '3decb92053378e31a24b5bdf5eac0fd7e489f76c', 'message': 'Remove @Beta from QueuesTests (we never mark tests as @Beta).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25588377\n'}"
4734,"{'code': '507347f2a8eb702f5fc6a22ec856375ebda7f0ea', 'message': 'Making Queues#drain calls timeouts more accurate, by potentially adding a System.nanoTime() call.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25588185\n'}"
4735,"{'code': 'b17c9e85b643e61a9d94fb239f1bf75212d707ae', 'message': 'Reference Futures.get from CheckedFuture\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25577062\n'}"
4736,"{'code': '7cd8c61f13f3cb977abc49e5101a21d1505adef2', 'message': 'Tests for several newDataInput.readFoo methods\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25574201\n'}"
4737,"{'code': '48cc5df92df6ae9695b2985c6da799c8b47094f6', 'message': 'Mark the Queues methods that deal with ArrayDeque and LinkedBlockingDeque as internal only (they are JDK6 only).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25554993\n'}"
4738,"{'code': '268b89eb0ddc028c4f093042060ad05fa0e107e0', 'message': ""Clear interrupt at end of test so as not to interfere with subsequent tests.\nI have vague plans to run all tests that call interrupt() in a fresh, non-main thread so that this sort of problem can't occur, but naturally I haven't gotten around to it.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25527509\n""}"
4739,"{'code': 'aa1f8216acb9d4e8f3ea40ab5254ed841163f346', 'message': 'Use Uninterruptibles.awaitUninterruptibly() instead of a hand-rolled version or an abort-on-interrupt version.\nReuse DelayingIdentityLoader instead of reimplementing.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25523974\n'}"
4740,"{'code': 'c6de7a5f6d4f990ce38abffe1c67d413bcaef8b8', 'message': ""Make c.g.c.collect.Queues @Beta.\nRemove old TODO from Optional (unrelated change, but combined for TAP's sake).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25522897\n""}"
4741,"{'code': 'f54e659fad056b233bf134d17823a3e71ad6456b', 'message': 'Test that finalize deletes the backing file. This required refactoring the model code to make finalize accessible from tests.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25515639\n'}"
4742,"{'code': 'f956ac11a48f7cdf836f6037ac9b5c1be25b3cd3', 'message': 'Remove GuavaAsserts, replacing all calls with calls to Assert.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25472533\n'}"
4743,"{'code': 'c50a8e8e0268dbdbf618c6c786d73b6a48ee5776', 'message': 'Use iterator().next() in FilteredSortedSet#first\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25472467\n'}"
4744,"{'code': 'f29391d6c98f82c0e797369d9ecff3231e1c40c6', 'message': 'documentation enhancements to Cache, LoadingCache, and CacheBuilder\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25472243\n'}"
4745,"{'code': 'b2f584589d18c4d933025a65ebbe88505f74cb8d', 'message': 'Document the relationship between Multiset and AtomicLongMap.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25472109\n'}"
4746,"{'code': '95a474bbd250ecccdcc522240108c20e2870e929', 'message': 'test when resetOnFinalize==true\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25434366\n'}"
4747,"{'code': 'f67e430a61873ed1e58d00a23b5834057787cc11', 'message': 'Replace custom TestAssertionFailure with JUnit AssertionFailedError.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25397711\n'}"
4748,"{'code': '2a561b1b7275e92623c6e452698453bfed20fcbd', 'message': 'Add Ordering.min(Iterator) and Ordering.max(Iterator).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25397156\n'}"
4749,"{'code': '2383c0ef29cb6c9b7ff884026baa337e094a6798', 'message': 'Add Builder#put(Entry) to ImmutableMultimap, ImmutableListMultimap, and ImmutableSetMultimap.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25396013\n'}"
4750,"{'code': '73c5fc6ef0d1cc45cf628e7b4897674e4b4c58e1', 'message': 'Added filter(SortedSet) to allow for the creation of a filtered SortedSet\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25393046\n'}"
4751,"{'code': 'c29d8ae455fac7d3a416e92cd60be2d1f33d11f6', 'message': 'Add ImmutableMap.Builder#put(Entry) overload.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25392198\n'}"
4752,"{'code': '8d3f84c2785acd666707d57d4f58090b670b8c7b', 'message': 'Throw an IAE if source and destination files are the same in Files#copy\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25364042\n'}"
4753,"{'code': '31fc73e80e99ad0ce8ea9948da6c329216f1f7b4', 'message': 'Delete GuavaAsserts.checkEqualsAndHashCodeMethods, replacing its one use with EqualsTester.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25351800\n'}"
4754,"{'code': '9c7ee3dd920286c451268a7e5a82273f77f8c7a5', 'message': 'Move SortedMaps.filter* to Maps.\nCopy tests for SortedMaps.transform* to MapsTest.\nTest the filter* methods under GWT, and make them available under GWT.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25351048\n'}"
4755,"{'code': '2914956e0e2409a0f249048881c4c4b0f1169ec3', 'message': 'Add tests for interruption while waiting.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25335633\n'}"
4756,"{'code': '726b42b0794e85f6936ddd31c7f864442ae1e346', 'message': ""Improve initial approximation to sqrt(x) when x.doubleValue() == Double.POSITIVE_INFINITY (x >= 2^1024).\nLouis's: http://code.google.com/r/wassermanlouis-guava/source/detail?r=6ea966f033aead7adc3aba9f74c05b115b37f83b&name=big-sqrt\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25315505\n""}"
4757,"{'code': 'd8d8ef522d14a8fb2c6494ca19834d88197f41d2', 'message': 'Change the implementation of AbstractFuture.Sync#complete to guarantee that the future is complete before exiting, even if the current thread is not the thread actually completing the future.\n\nThis guarantee helps with problems such as rpcFinished completing without the future actually being in the done() state.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25297462\n'}"
4758,"{'code': 'cbfbc3b7eda05e0286f65c147441d61432d60f62', 'message': 'Javadoc improvements:\n- Emphasize that an empty SetMultimap and an empty ListMultimap are equal.\n- ListenableFuture listeners can also run in the thread that cancels the future (hat tip to <https://plus.google.com/114212977194801425439/posts/eFxZv6ibkM9>, which tipped me off to this by describing a related bug)... plus other minor improvements.\n- ListeningExecutorService can throw RejectedExecutionException.\n- Subclasses of AbstractListeningExecutorService must implement execute() and the shutdown/termination methods.\nAlso, fix a comment in AbstractListeningExecutorServiceTest.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25284749\n'}"
4759,"{'code': '10755664196d6018caa01bef58cb40787c1ea8c9', 'message': 'be more accomodating of slow gc reference enqueuing\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25267574\n'}"
4760,"{'code': 'b89023cb0d117432817e081fce8ea19bb3d758ff', 'message': 'have CacheLoader.reload return ListenableFuture\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25264832\n'}"
4761,"{'code': 'caaae1c713b905fdc2268c61d80f309d8581654e', 'message': '@Beta, @since, and hard-coded test seed\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25248940\n'}"
4762,"{'code': '6ddbfccc91fb3fed94a708cf9df07814c43454f4', 'message': 'Removing MoreAsserts call\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25247052\n'}"
4763,"{'code': 'c22cfd1b2ac9dc59f652f1d3e955ef69ae089d93', 'message': 'test coverage for ready and skip\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25242419\n'}"
4764,"{'code': 'b5fe5675b8ff0086bde230f88ce2cab3daca2f1d', 'message': 'Adding test for skipFully\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25242304\n'}"
4765,"{'code': '4c9351138e15f02a7dd58463968a180664e7830a', 'message': 'Overrides of synchronized methods should be synchronized\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25242297\n'}"
4766,"{'code': '234b26abce7c22088a3bffb67802633856eed2f2', 'message': 'Testing exceptional conditions on reset\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25242293\n'}"
4767,"{'code': '8defea1872ecd6f96676e5b54f21f1a248ebf703', 'message': 'JavaDoc grammar fix.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25242113\n'}"
4768,"{'code': 'f63606f9b5bfc46fdf8e598b3762489be68523b7', 'message': 'more tightly accomodate garbage-collected keys and values\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25202456\n'}"
4769,"{'code': '1278d9c6ed68fde9e630678f009cfd91bf2b9ff4', 'message': 'introduce AtomicLongMap\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25201110\n'}"
4770,"{'code': 'ec3c0062a8918bcc53d68bc95d4bbe47a5a03b83', 'message': 'Replace MoreAsserts calls so that code compiles in Guava.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25200636\n'}"
4771,"{'code': 'a7b281ed0c557c5a7ba5bf9fb8435e8fb52eba92', 'message': 'Test for resources.toByteArray\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25194827\n'}"
4772,"{'code': '196e0bbc645609dd542749262832c251da18eba0', 'message': 'Cleaning up JavaDoc copy-and-paste errors\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25192783\n'}"
4773,"{'code': '211d803baeeecf9f5b121cb57e3d62172935aa4e', 'message': 'Filling in test coverage on several methods\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25192532\n'}"
4774,"{'code': 'b37e84970a242ee48062f84b93c8e9a3b3808633', 'message': 'Adding tests for multiple ByteStreams methods\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25179180\n'}"
4775,"{'code': '71b9c3f4e5e49cba693fe721f3dec6458a2957e3', 'message': 'Expanding test coverage on several methods\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25178955\n'}"
4776,"{'code': '8b5f2e0d5acdbf7b35a14800f68660322fff59ac', 'message': 'Fix instances of divzero in [].\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25176483\n'}"
4777,"{'code': '9745076bfb78c1335b94b0c2b877d6425ab2a733', 'message': 'add CacheBuilder.refreshInterval\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25139834\n'}"
4778,"{'code': '3e537c1c5aea2b676eb8e5ac8c9cfc1c0c837772', 'message': 'Remove JAVA_WHITESPACE.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25139131\n'}"
4779,"{'code': '6f84ad2c0489f40b8d34d4d6840ae25e1ef4f96a', 'message': 'deprecated/remove LoadingCache methods from Cache\n\nNEEDS_QA=false\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25134497\n'}"
4780,"{'code': 'eea6e7bfc9fe9475a6b32579a2fec75ae324ff8b', 'message': 'Use RuntimeException to make things a little more convenient for\ntest authors.  Forcing users to deal with InterruptedException\nand TimeoutException does not seem sufficiently useful in a\n_testing_ utility.  Controversial.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25119032\n'}"
4781,"{'code': '2837f9fe2b6b9943f5ea46794721ea04e6b1af53', 'message': 'split LoadingCache out of Cache interface\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25099006\n'}"
4782,"{'code': 'c6aa1e3c0282de8ac6c5d142cd02e65bdefd9395', 'message': 'Simplify BigIntegerMath.factorial logic.\nFrom Louis: http://code.google.com/r/wassermanlouis-guava/source/detail?r=4ff33ce527b87451c7ee92136d29664fb2c750e1&name=simplify-big\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25071062\n'}"
4783,"{'code': '4394fd2ad92e334ff0ac2d98ee931a773b567407', 'message': 'Fix deadlock in CompositeService when attempting to shutdown a FAILED service.  Also, when shutting down services make sure all services are either TERMINATED or FAILED before notifyingStopped or notifyingFailed.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25070823\n'}"
4784,"{'code': '0fd5af56f1f124a53aa91250531b24c8d9564643', 'message': 'Defer building of error message.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25067192\n'}"
4785,"{'code': 'f5fd39f531deb5518d423913c0b0442857de2859', 'message': 'Add CacheStats.plus() similar to minus().\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=25033829\n'}"
4786,"{'code': '9b1de11918c7e17b02c883365b1d13532988ee05', 'message': ""Add AtomicDouble and friends.\n\nAll derived from code originally written by Doug and friends\nfor AtomicLong and friends.\n\nThis version has marginally less efficient, but more portable\nimplementation (doesn't directly use sun.misc.Unsafe).\n\nUpdates JSR166TestCase to get latest Doug/Martin infrastructure.\n\nCurrently, AtomicDouble seems unlikely to get into upstream\njava.util.concurrent.atomic, (so guava is likely to be its\npermanent public home) but I'd like to continue to keep the\ndoor open forever.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24963153\n""}"
4787,"{'code': 'c06d0ad496c0563030950a49122aba46a95faaf5', 'message': 'Update class docs of HostAndPort regarding immutability.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24957966\n'}"
4788,"{'code': 'aac333b616c49840a060f600fed3a8db49251167', 'message': 'add Cache.getIfPresent, Cache.put, and CacheBuilder.build()\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24936790\n'}"
4789,"{'code': 'c321d666797914e0bc01f106bf0bb59a7738f8b6', 'message': 'Bring documentation of Service.{start,stop}().cancel() in line with reality.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24922495\n'}"
4790,"{'code': '08fb8bc14dff5e928840d4e95176b1279bb4ea58', 'message': 'cleanup stats collection workarounds from MapMaker\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24891730\n'}"
4791,"{'code': '75ac5fd70fb316fcdcf9428a5d763d8db4fbe744', 'message': 'move LocalCache into LocalCacheInternalMap, then rename LocalCacheInternalMap to LocalCache\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24848838\n'}"
4792,"{'code': '77f56b0a3f6b34790c0ffe9830cbf591ff0c5752', 'message': 'rename CustomConcurrentHashMap to MapMakerInternalMap\nrename LocalCacheAsMap to LocalCacheInternalMap\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24846402\n'}"
4793,"{'code': '99091e882f9c6985315f9498b2125af9141af431', 'message': 'Introduce Tables.unmodifiable(RowSorted)Table.\nFrom Louis: http://codereview.appspot.com/5266049/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24846124\n'}"
4794,"{'code': '3daf3f9a1cfb17447b2afcc81947b54a19a23a2d', 'message': ""Optimize BigIntegerMath.sqrt.\nLouis's: http://codereview.appspot.com/5130047/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24844188\n""}"
4795,"{'code': '5dc1f62c8d234c8eb45bac7d9c4732eca59f67a5', 'message': 'Changing ImmutableList.of(E[]) and ImmutableSet.of(E[]) to be non-public. Callers should have been changed already to call .copyOf(E[]).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24840447\n'}"
4796,"{'code': '125c1b340ad55cc3fcb30db77cadab6c152339a7', 'message': ""Add GWT tests for cache and labs.concurrent.\nThese are the last two packages that use java_and_gwt_library but not java_and_gwt_tests (excluding annotations and labs.converter, both of whose GWT-compatible classes are all annotations).\nThe newly added tests discovered that Cache.gwt.xml contains dependencies that the package doesn't declare, and I've removed them.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24827412\n""}"
4797,"{'code': '6d2ff1d9bce1a5c068ba83786ab9007d5e99b9d5', 'message': 'add Cache.getAll and CacheLoader.loadAll\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24824285\n'}"
4798,"{'code': '034c881e4fd9c148da7aa4aa824c503071b51ffb', 'message': 'Betafy\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24809615\n'}"
4799,"{'code': '79a6e8977e7eae259909a769a35fcd5c6cb399bc', 'message': 'Put the timeout duration into the exception detail message.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24781085\n'}"
4800,"{'code': 'd099e2b65d5ae3b5fa9e31ff5206dd4b51ba2ce1', 'message': 'BigIntegerMath.factorial rewritten to be faster.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24767128\n'}"
4801,"{'code': '53921947d568c284669a95de482579ffe40f329e', 'message': 'Declare mergeSorted() return type as Iterable instead of UnmodifiableIterable, which is private.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24756036\n'}"
4802,"{'code': '64f16597f629142dcefc2b914089a22000511802', 'message': 'Move merge sorting code out of TreeBasedTable.\nAdd mergeSorted() functionality to Iteratorables.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24751437\n'}"
4803,"{'code': 'c98da2e62ba1635fd883bfa3a8754b0c7d2ea1f5', 'message': 'rename CustomConcurrentHashMap to LocalCacheAsMap\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24749721\n'}"
4804,"{'code': '57670278b2d635bdc4011c2f1aee9b0a198accc0', 'message': 'fix a flaky test by using a FakeTicker\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24746343\n'}"
4805,"{'code': 'bd5c0d6cb2cf91d7fb8ea573f94116b4181b58f6', 'message': 'Remove reference to done() from documentation.\nClumsily attempt to document the wart of a visible done() method that no one can call.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24720806\n'}"
4806,"{'code': '7abeec86044d5cbee6e615af1c053f3e1ce04b43', 'message': ""Manually reject leading plus signs since JDK7 won't.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24713441\n""}"
4807,"{'code': 'bd4ced02fe51dbd9153c1e0622aa90ad38e42bc0', 'message': 'Just noticed a few missing constructors while looking at javadocs.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24713377\n'}"
4808,"{'code': '5ea28885057164801a8c59d8d3975658d29e451c', 'message': 'Trivial cleanup.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24676130\n'}"
4809,"{'code': '660ff323d335810d7114c178d938f3c94de18e07', 'message': 'add missing Apache header\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24673684\n'}"
4810,"{'code': 'f2e25e258c514a4c1b58d2ba97a37b1085794936', 'message': 'Release GcFinalization.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24667108\n'}"
4811,"{'code': '1435b80485acc907e218d53068f41ff6dd95f8fa', 'message': 'Run common.testing tests under GWT\nGWT-enable a few other classes that are trivial to GWT-enable.\nOpen-source the common.testing tests.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24640713\n'}"
4812,"{'code': 'fcb4a1b81a96fd658f7f25018cdf25e41ea6453e', 'message': 'test cleanup\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24637603\n'}"
4813,"{'code': 'a63efb286b7a54c2965e32ab045afe32439d03d1', 'message': 'more gwt test standardization\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24636709\n'}"
4814,"{'code': '8124eb561b979c5d4300f5694f8871d1d7a5619e', 'message': 'Initial release of the escapers into Guava.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24623640\n'}"
4815,"{'code': '0e9af8d8fa16397ee9797f101aa35d799dc099b2', 'message': 'standardize test modules\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24612598\n'}"
4816,"{'code': 'cf4dce06543d1fd7c63260fd1775e347e359390c', 'message': 'Add Optional.asSet()\n\nSee http://code.google.com/p/guava-libraries/issues/detail?id=669\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24612296\n'}"
4817,"{'code': 'f9736b98decdccb33084604577d6b865609322b9', 'message': 'only read ticker once per operation\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24604473\n'}"
4818,"{'code': 'd446df5924608c8d4b202488be6a842363728bf7', 'message': 'Reformatting-only CL: reflow ConcurrentHashMultiset to make it consistently\n100 characters.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24603115\n'}"
4819,"{'code': '872d2894d3b7f10013b7b80d5261a4f983abbf8c', 'message': ""drop spurious '?' in UnsignedInts.toLong() javadoc\n\nalso, changed 64-bit in remainder() javadoc to 32-bit.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24598262\n""}"
4820,"{'code': 'aaa31fda95b49f81f46411a7f1c75d99d4d20c61', 'message': 'Disallow null-returning suppliers in Optional#or\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24585583\n'}"
4821,"{'code': '83cd3a4f56120309323a8db0ff9f848775d52f58', 'message': 'Remove Iterables#rotate.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24585036\n'}"
4822,"{'code': '7ecaf592b89798c9d35c056cd957e3522354bdbb', 'message': 'Add c.g.c.net.HttpHeaders to Guava (since 11.0).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24584184\n'}"
4823,"{'code': '6ee12c7a936073f098b809bd25f826c329385978', 'message': 'Mark Caches as final.\nUpdate ImmutableTable.Builder#putAll to use ImmutableTable.Builder#put(Cell).\nUpdate docs on Files#simplifyPath\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24574078\n'}"
4824,"{'code': 'd08ed948cbf80a3633f50edbbdcbbce75deb553b', 'message': ""- allow expireAfterWrite + expireAfterAccess\n- throw AssertionError on computation code paths which musn't return null\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24573984\n""}"
4825,"{'code': '2f345c3c276773d555938699f467f722ade40441', 'message': 'Replace evictionQueue and expirationQueue with accessQueue and writeQueue.\nAlso tightly couple accessTime with expirationQueue, and writeTime with\nwriteQueue.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24572156\n'}"
4826,"{'code': '186bf93f6405eb3ad6c63b1b8db7e49dcd81de36', 'message': 'Add Itera{bles,tors}#tryFind\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24555364\n'}"
4827,"{'code': 'f14a101d537c1627a16b6d6d653cf8441049690c', 'message': 'remove lenient builder\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24546639\n'}"
4828,"{'code': '18a39333df1fa0179495a66eb2d8506313a961fa', 'message': 'inline Callables.throwing\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24545964\n'}"
4829,"{'code': 'ffe659d2a0ff60efd6d4fd0568c0a2fa1d5db76f', 'message': 'Fix @param javadoc for UnsignedInts.parseUnsignedInt() to reflect actual parameter name.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24544750\n'}"
4830,"{'code': 'd94b5bf4170459c301f79a93678e7a4e8e576da8', 'message': 'doc cleanup\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24510024\n'}"
4831,"{'code': 'f1d53007f14206d37b2458433fba71217dbe55d5', 'message': 'tweaks\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24509876\n'}"
4832,"{'code': '64db350ddbb15e42b936560e636962d6abc0fd04', 'message': 'add Cache.get(K, Callable<V>)\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24506370\n'}"
4833,"{'code': 'c4ac9f1c9742de5d3f402c02d82f435a44045093', 'message': 'only call waitForValue on loading references\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24502384\n'}"
4834,"{'code': '67ccb7b9674578700f80821d18899644a397b8b3', 'message': 'Add overloaded primitive methods to ToStringHelper to avoid autoboxing\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24476666\n'}"
4835,"{'code': '620820eb11c587909fedcd6fd6455d4e6b4a9d2d', 'message': 'un-deprecate FinalizableReferenceQueue and friends\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24467300\n'}"
4836,"{'code': '0c60dc3c8e760b0583cde051f4253f6960fe9ea8', 'message': 'allow Cache.asMap().get(Object) to count as an access wrt eviction\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24445289\n'}"
4837,"{'code': '2ed70e770c428854c7e12988bda3883ec0bf9957', 'message': 'add Maginatics\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24433529\n'}"
4838,"{'code': 'b5de7f6c155739d221f30136ebac74493aec4143', 'message': 'hold strong references to new entries added during testing loops\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24399894\n'}"
4839,"{'code': '7df4faca1bac3e9ce35ae3ecbf77a1b7b4118e95', 'message': 'call newBuilder\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24383532\n'}"
4840,"{'code': '64c42745d40d75332f97d11e1c3443e12fe22bea', 'message': 'remove incomplete test\n'}"
4841,"{'code': 'c88a4a8aa5bfa6e0508f3de6739831f1a76c4fa3', 'message': 'release MultisetNavigationTester\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24382979\n'}"
4842,"{'code': 'a767620313fe5fdb127a6c1eaabc3a6cdf28d459', 'message': 'Implement expireAfter*(0, *) in terms of maximumSize(0).\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24379350\n'}"
4843,"{'code': 'c660cab465638fe5b82c26b2f4b97ce1633e84d7', 'message': 'fix broken Guava tests\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24377974\n'}"
4844,"{'code': 'e4916cf1ad5e18427e76851741c88eb901d4bf8c', 'message': ""Fix TreeMultiset.subMultiset().size() overflow condition.\nFrom Louis: http://codereview.appspot.com/5153041/\n\nAlso, remove SortedTreeMultiset now that it's been moved to TreeMultiset, since it, too, would have needed to have been updated in this CL.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24372922\n""}"
4845,"{'code': 'b49c1296eb569afcaee5b521ad2d0c7afd921d8f', 'message': 'Add extensive tests for simplifyPath that aren\'t prefixed with /b/c.\nThese tests caught the ""."" -> """" problem (though I initially ignored it... oops) and would have caught the if->while problem raised during review.\nI suspect they would also have caught the existing bugs, but I haven\'t yet confirmed this.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24372607\n'}"
4846,"{'code': '99335d2f4143510a2c3319e72b2ce74f14fe1986', 'message': 'Integrate common.math into common.collect.\nFrom Louis: http://codereview.appspot.com/5142053/\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24372231\n'}"
4847,"{'code': '6b8a5f91cdc57f2bee24a62e8a871603a48b02e4', 'message': ""rename MapMakerTests to MapMakerTest for Guava's sake\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24372219\n""}"
4848,"{'code': 'b138010e6d5ad6effc11e7e729080cfb3e1b72de', 'message': 'Resolve ""."" to ""."" instead of the empty string.\n\nThis changes the existing behavior of this method.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24370864\n'}"
4849,"{'code': '11fc7c2bb6b7deb4187a58f349032a4e375c752c', 'message': 'remove NullCache, now that we support immediate eviction\n\nTested:\nTAP\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24368352\n'}"
4850,"{'code': '85ea2911e041fa53e3f81e36fd81dbc4cd4f2969', 'message': 'add Cache.refresh\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24327805\n'}"
4851,"{'code': '00dbf54a864d873d7efd8093c6f57e4dc2992f5b', 'message': ""Replace old 'simple' Strings.repeat with more complex, but faster implementation based on binary exponentiation. Add benchmark to compare with old method.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24327769\n""}"
4852,"{'code': '0e1b915cb9a181809b1891146e7dfb6ab069b8b9', 'message': '- rename ComputingCache to LocalCache\n- internally refer to computation as loading\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24327248\n'}"
4853,"{'code': 'd30cc68a0c604c0fe737777291699caf2e1b1a29', 'message': 'Make IntMath @GwtCompatible so that it can be used in common.collect overflow checks.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24308523\n'}"
4854,"{'code': 'dcd0f8dda7d2458011c71054d6a40a0f8437125a', 'message': 'I give up. I can no longer maintain the in-place algorithm. The bugs have defeated me.\n\nThis cl introduces a much simpler, clearer algorithm that splits the path into pieces, and then builds a new path one piece at a time while resolving . and .. along the way.  Finally it does a little fixup to handle the initial slash, if any.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24306712\n'}"
4855,"{'code': '0b048ef06d395a8d2fe4a46322a3f5725c861522', 'message': 'externally remove methods scheduled for deletion in release 11.0\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24306560\n'}"
4856,"{'code': '4a065e382213f084402c05e6131b1505545bd954', 'message': 'use isFinite instead of getExponent, from Louis\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24305670\n'}"
4857,"{'code': '08bab65fac9237d965b1fe9d5f0afa77fcf5ca95', 'message': 'Implement a new Service base class for services that need to execute some functionality periodically.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24292212\n'}"
4858,"{'code': 'e5a1fab31f45cee47eaedd828e9a9e525e4da69a', 'message': 'Replace unused generic type parameter with wildcard.\nIf the Iterable is a Collection, use its isEmpty() method instead of\nconstructing an Iterator instance.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24282737\n'}"
4859,"{'code': 'b00fc801c438f40a9f116a2f85517944ae601f07', 'message': 'A round of promotions/deletions/updates for Guava 11.0.\nTry to minimize use of MOE: magic somewhat.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24279246\n'}"
4860,"{'code': '622cdb75f9b7a5c87d50ca0e44753f36adf2ce79', 'message': 'Rename CleanPathTest to FilesSimplifyPathTest.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24256474\n'}"
4861,"{'code': 'f4cace556e08d2576de45f6d85289afcba74f521', 'message': 'update since on simplifyPath to 11.0\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24251651\n'}"
4862,"{'code': '649834561cf07e6cb630a7a6420ee6b32dbed7cd', 'message': ""Louis's changes to remove JDK6-isms from DoubleMath\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24246702\n""}"
4863,"{'code': 'd725feea787baab9facdd90727888981190d0d44', 'message': 'introduce maximumWeight\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24224790\n'}"
4864,"{'code': 'b8c92d6a6bc75be4d4983c9901fa88d8b74e1fb5', 'message': 'Export input file for new CleanPathTest tests.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24216931\n'}"
4865,"{'code': 'b0fbb1287e8f0bbae2077210f3f2c72c819c4913', 'message': 'One missing copyright, one missing @since. Should cherrypick, but not end of world if not.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24215692\n'}"
4866,"{'code': '97181ffb37ea82ae0ac70f2d3c99dbdcd837eb1f', 'message': 'Doc-only changes to the InternetDomainName family clarifying validation options and fixing some references to deprecated methods.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24213290\n'}"
4867,"{'code': '8870f03f567756585168c17b70c691adcc6ed456', 'message': 'Add a method to Files that returns the file extension from a given file name.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24212884\n'}"
4868,"{'code': 'd35febe2c6eb578026310b00f9fede73ee8d8689', 'message': 'fix common.math copyrights\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24212498\n'}"
4869,"{'code': '7f8883575ddc64ab3b40b08e635e7992bf06c9e2', 'message': ""Extensive tests for simplifyPath.\nThis doesn't cover tests beginning with a character other than /, which is unfortunate, but realpath, which I used to generate the expected outputs, would resolve any .. at the beginning of the input path, which isn't what we want here.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24168601\n""}"
4870,"{'code': 'dc850b69ccba246f601a5205ad615de8064be665', 'message': 'forbid null return from cache lookups, and null parameter in invalidate\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24168264\n'}"
4871,"{'code': '83e45164044f16362e0d6921b6254f3c85ff3fd5', 'message': 'Add some URI resolution tests to the simplifyPath tests.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24166215\n'}"
4872,"{'code': '3b89bebb16858aa352b4018c54af3c2aba8902db', 'message': 'Fix indentation.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24147455\n'}"
4873,"{'code': '27f1f61eab9e0af0eeb33ed35027ae8d93dbfcf6', 'message': 'Release common.math package.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24109421\n'}"
4874,"{'code': '0b76a315b803465779786630c967df15ba2d7630', 'message': '- have Cache.size() return a long\n- remove Cache.activeEntries\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24109421\n'}"
4875,"{'code': '997fcecd77d595b28870417d3cc01cd89a653754', 'message': '- Fix handling of filenames that contain more than one period as reported in bug 716\n- Fix problem with simplifying paths that begin ./\n'}"
4876,"{'code': '211010cdea45f7296d2ca60a4276d7a67ccbb575', 'message': ""Clone of Louis's UnsignedLong(s) documentation CL.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=24073780\n""}"
4877,"{'code': '025874e98e89f2fc5f60ba15d7f0c75b61a2d88e', 'message': 'Eliminate most uses of non-Unicode whitespace in com.google.common tests.\n'}"
4878,"{'code': '2a4a1074f4a911eb3d233473e14d137cef2a7f43', 'message': 'Fix compile problems with Guava.\n'}"
4879,"{'code': '097102081ab68bdefcbc8ad7977a760565f87e51', 'message': 'Link {Iterables,Collections2,Lists}.transform.\tRefer to ForkJoinTask.join from Futures.getUnchecked Javadoc.\tRemove an unnecessary cast.\tAlso, fix a typo in the InterruptedRuntimeException deprecation instructions.\n'}"
4880,"{'code': '1ed32d483d0e583f7a245b60932c8c291c9a1e37', 'message': 'Fix ImmutableMultiset 1.6.0u24 compilation error.\n'}"
4881,"{'code': '60abb1cc79bf78d53b59cfb540f6c67dea4f9d1d', 'message': 'allow all write operations on asMap view\n'}"
4882,"{'code': '550c8c54f190cc722c46b0b9ddd7b3dc0e58e8e3', 'message': 'Drop in SortedTreeMultiset in place of TreeMultiset.\n'}"
4883,"{'code': 'e34196b55437eb5d687cb4d319826c1ad1f86252', 'message': 'Update primitives package-info\n'}"
4884,"{'code': 'c3e76e441b6b0b56edbff6c903cb245e1056b7ea', 'message': 'Make Bst framework null-compatible when the comparator is\n'}"
4885,"{'code': '9edd26602faeaa033f2426900ef0da148d24f45d', 'message': 'Update testers to recognize that null may be a restricted element\n'}"
4886,"{'code': '60dcf63ae6d58e4bd0bbab26ef5c96c736f4b1bf', 'message': 'make tests of unreleased classes GoogleInternal\n'}"
4887,"{'code': '75cdf1695d9d40809507991eed6a8acf6be2911b', 'message': 'implement basic serializability for ComputingCache\n'}"
4888,"{'code': 'ad738e396e084c7068bcb17d21a169ba08bb1209', 'message': 'Allow nulls in GeneralRange.\n'}"
4889,"{'code': '7d537203053ef3fdd18dbf0a4f3273e44bc977c4', 'message': 'Move SortedMaps.difference to Maps\n'}"
4890,"{'code': 'ad96fd0ccf5c0d63fbd1f2911e608e353cd3e61d', 'message': 'Add UnsignedInts to primitives.\n'}"
4891,"{'code': '8f6162205cf8746cf3a6c3c01a64b2af8fa028aa', 'message': 'Begin adding ""most common element"" operations to Multisets.\n'}"
4892,"{'code': '1069aa565069b30bbedb2c03a27a8b682b2ac1b1', 'message': 'update since to 10\n'}"
4893,"{'code': '64b32d8a33f284adc71e423515b93fa83694fe97', 'message': 'Provide serialization for UnsignedLong\n'}"
4894,"{'code': '312e0a94847816fb6f4c4d3b24f90522a9992802', 'message': 'add ForwardingCache\n'}"
4895,"{'code': '61816638fc933cd40a152618d858e1000387b996', 'message': 'Reorganize methods between UnsignedLongs and UnsignedLong.\tMake clear in the Javadoc the reasons to use each.\n'}"
4896,"{'code': '6055146e0f6b02098512cbc686e2b43bbb63a8c4', 'message': 'Migrate SortedMaps.transform{Values,Entries} to Maps\n'}"
4897,"{'code': '73bc67770d8636e4ea514250536fca88b21929c8', 'message': 'Implement Range.isContiguousWith(Range), which defines the conditions under which two ranges will be coalesced in RangeSet.\n'}"
4898,"{'code': '3ba2abcbae26e2943b5514910a3ccee4966bae65', 'message': 'Handling paths of the form x/../../b (bug 705)\n'}"
4899,"{'code': '6aa742def37629a4d92742b0d6ecfe227508c940', 'message': '@since tags\n'}"
4900,"{'code': '055ca91078cdd419a49a2ab9d3a134d358e685fe', 'message': 'Eliminate GWT serialization warnings for HashBasedTable/TreeBasedTable and TreeMultiset.\tAs of <http://gwt-code-reviews.appspot.com/1544803>, GWT recognizes any annotation named @GwtTransient.\n'}"
4901,"{'code': '5589a2c5b35b6463038121a5d4b453a5ce31fac1', 'message': ""Inline BaseHolder interface into Holder and Optional. It was causing issues to\tScala users and didn't really serve any purpose anyway. This also makes it\teasier to start selectively eliminating some of the methods from Holder if we\twant to do that.\n""}"
4902,"{'code': '0fd75ca0d5ef77b79b89ef8dc9ca72b7799258d5', 'message': 'Improve Javadoc of ArrayTable methods cellSet() and values()\n'}"
4903,"{'code': 'ef9505fc17e8bb888dfc891266192add41d7b08a', 'message': 'Merging BlockingQueues into Queues\n'}"
4904,"{'code': '46f185a04d35d1e6c40a49d258f0247f395d8965', 'message': 'Better SerializableTester Javadoc.\tStrip reference to internal SerializationChecker from Guava.\n'}"
4905,"{'code': '95f6ef1fc6a2162170addddde38c341faa589679', 'message': 'Further Javadoc changes.\n'}"
4906,"{'code': '3d52e50b4e93523669d0a436dada37b9ab8fbd08', 'message': 'Improve @throws InterruptedException documentation for get().\n'}"
4907,"{'code': '29d80d96ffbf32318de15706751386d963892cab', 'message': 'Add putUninterruptibly and takeUninterruptibly, and use them in the implementation of chain().\n'}"
4908,"{'code': '57a4677cc2def1228e7dd76fbb997826add30a8e', 'message': 'Visibility changes.\n'}"
4909,"{'code': '58b25281762b670b1559b0b7a3e5aa7f01b68f6b', 'message': 'Expose StandardXXX constructors, fixing external issue 701.\n'}"
4910,"{'code': '1f00a91744712ce98b2512a73e617f1b517a6037', 'message': 'Fully qualify @links so that they actually work.\n'}"
4911,"{'code': 'c24084136974dfb50adb252bdc4ed363faaa27c9', 'message': 'use new sonatype parent\n'}"
4912,"{'code': 'edd8c6856b3e6a759e726bb924682bf34383ea3d', 'message': 'doc cleanup\n'}"
4913,"{'code': 'c24d831d266910f67eef3f54bec7abbc7b2314b9', 'message': 'javadoc cleanup\n'}"
4914,"{'code': 'd2eebdb1a15b401a48439ea7df44b28ac2a47861', 'message': 'deprecate throwCause\n'}"
4915,"{'code': '75c1e6a324e878c0858d650f121c1d3cc7dff277', 'message': 'remove build.xml, and unneeded libs\n'}"
4916,"{'code': 'afd2a9fe6d069050dbf5d13fa2967152d61027e4', 'message': 'update scm urls\n'}"
4917,"{'code': '1513e307f1047b9677ee42ce5ad3b32b6201818a', 'message': 'split configuration out of execution so it will apply to other executions\n'}"
4918,"{'code': '4fc7c376154e26f694eead7bc6720cfe6a06653a', 'message': '- add cache cleanup\n- scrub @since tags\n'}"
4919,"{'code': '89adf4023d9672f209e064700e1ea47ba22eca6d', 'message': 'test updates\n'}"
4920,"{'code': '9d58d3bfcd1237217747562b86983d0dfdd6c516', 'message': 'remove unused xerces jar\n'}"
4921,"{'code': 'b5def53eef1ab922c7c6ff608b2876bd2acbe03a', 'message': ""use 'latest' for non-release version\n""}"
4922,"{'code': 'dc01c7fb3e17f4179bd651694ee8eab1e4ef6390', 'message': 'add support for jdiff generation\n'}"
4923,"{'code': 'c8d9d9095315893882867ec7519888f83df41278', 'message': 'copyright and warning cleanup\n'}"
4924,"{'code': '4ca190810367bceba3dc35478ab8d3895f0cd92f', 'message': 'add javadoc generation\n'}"
4925,"{'code': 'f69e5a487b794508363c860422c4b0b996b91a14', 'message': 'update artifact names\n'}"
4926,"{'code': 'f032011ce38eecea4ae0425bf9c78623c6b986de', 'message': 'specify plugin versions\n'}"
4927,"{'code': '964bbeb9831bb9e9b1fb3426cf9b1cc30c92c002', 'message': 'make all tests pass\n'}"
4928,"{'code': 'bc3d55804a5e98a18849e04e3fe8e53bbe310d04', 'message': 'make more tests pass\n'}"
4929,"{'code': 'c77ce7f12037fe1fee19635cc73eb6a658538119', 'message': '- cleanup formatting, and add missing dependencies\n- use animal-sniffer-maven-plugin to verify 1.5 compatibility\n'}"
4930,"{'code': '956d3d3a40c6148de35957b1d0d4d8b268ba1ee6', 'message': 'manual sync\n'}"
4931,"{'code': 'c33b595b65bf2b5a83117e53139b78e5fd0af8bd', 'message': 'delete IDEA files, and update .gitignore accordingly\n'}"
4932,"{'code': '6923b5fac0feb7005429d0b24be93b91685f9637', 'message': 'manual sync\n'}"
4933,"{'code': '709d400204a574ffbed50e874821f8a2d32ef02b', 'message': 'ignores.\n'}"
4934,"{'code': '00b6d8823b0de865c769ff3438888c639448cfff', 'message': 'fix build\n'}"
4935,"{'code': '5560bc10e7472f94e8f50831eb0907a35628e725', 'message': 'manual git sync\n'}"
4936,"{'code': 'd2576e967953ba6aec0cc20283d8714838bc1d75', 'message': 'remove unused imports.\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@645 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
4937,"{'code': 'd2e06112416223cb5437d43c12a989c0adc7345b', 'message': 'add missing dependencies, and fix a few typos\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@644 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
4938,"{'code': 'ea947ffc893512d103f44c119554ee38fd457b3f', 'message': 'manual sync\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@643 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
4939,"{'code': '4fbef9f220a86423f6ebc131c06bac5c3bb5e731', 'message': 'manual sync\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@642 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
4940,"{'code': 'e2899b353e58105dc6a0fd5e2605f4cdbea32abf', 'message': 'manual sync\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@641 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
4941,"{'code': '0ae2d4fe60720233283579aea8c325bde5d60a6f', 'message': 'massive manual sync\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@640 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
4942,"{'code': 'a961ac31197d5b221898539ceaa5be61dec4d1cc', 'message': 'unused imports.\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@637 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
4943,"{'code': '5dbd44263855481dd3d0843eb98c892998af4812', 'message': '\nA bunch of Guava javadoc tweaks and such, trying to cut down on warnings.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2952\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@636 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
4944,"{'code': 'dab38ee0da7e0883b72a5322ac112608b3713f86', 'message': '\nGWT-ify UnsignedLongs.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2951\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@635 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
4945,"{'code': 'ecfd36e04848863229f5e946758fb32a8ab17ff1', 'message': '\nAdd the missing asymmetric ByteStreams.copy()\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2950\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@634 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
4946,"{'code': '38d9403a6875b6a9c0a551da50a77eabfb2c62ed', 'message': '\nUpdate some ContiguousSet documentation to clarify some of the edge cases in the ContiguousSet -> Range conversion.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2949\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@633 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
4947,"{'code': '284c5aebcc91d15537094da23fe1d59eb058541d', 'message': '\nReplace newly added usages of testing.util EqualsTester/NullPointerTester/SerializableTester with usages of common.testing, removing the former.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2948\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@632 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
4948,"{'code': '2585c71e6158b4db59e3f5cfce44c8424f2b6311', 'message': '\n- start throwing ExecutionError from Cache.get\n- allow Throwable in UncheckedExecutionException again\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2947\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@631 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
4949,"{'code': '70453cbaefed33888d4b098a99c4e6fd295fd72b', 'message': '\nDocument that simplifyPath may change the meaning of a path.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2924\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@630 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
4950,"{'code': 'c92fa930bd9ce9229a7dea3dea29472acb6b494c', 'message': '\nRemove deprecated addNotEqualObject, replacing all newly introduced calls with one or more calls to addEqualityGroup.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2922\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@628 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
4951,"{'code': '7a95b2151f935aa1b95875200e6a7f999c8eeb1f', 'message': ""\nMake SortedLists public.  It makes it much clearer what you're doing in a binary search.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2921\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@627 8138a162-5c33-11de-8abc-d1c337b90d21\n""}"
4952,"{'code': '9f9ffca114c92a8ba72f52033ed94c1117e1315e', 'message': '\nSwitch from testing.util to common.testing in preparation for the removal of the former.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2919\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@626 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
4953,"{'code': '4b454d968113001e544011c90fc7ba6408a68171', 'message': '\nrollback\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2914\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@625 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
4954,"{'code': '04cb0bd4acb8028fb66127a59ba9d0e93a5e6892', 'message': '\nMake ListeningScheduledExecutorService.schedule* return a ListenableFuture\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2913\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@624 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
4955,"{'code': '2969926e4549bccbb8ddaa8b4e93e08f9f0054f4', 'message': '\ndocument @throws\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2910\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@623 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
4956,"{'code': '6371dcebdfd7690fb79907d49549fba0e7c25db7', 'message': '\nAnnotate UnsignedLongs with @Beta and a @since\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2909\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@622 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
4957,"{'code': 'a902488bba2e3c5f4163b7f3595fbb4775853414', 'message': '\nImplement SortedMultisets.unmodifiableSortedMultiset.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2908\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@621 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
4958,"{'code': '63073cc36f910d2470802a8e25a3ca7300bb5dd2', 'message': '\nRemove unnecessary catch and rethrow.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2907\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@620 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
4959,"{'code': 'd0686ecae5f502ca81b611f7a8653bd94d29420e', 'message': '\nSerializableTester.reserializeAndAssert checks that original.getClass() == copy.getClass().\nFix EmptyContiguousSet serialization using cgdecker\'s patch (which also removes a redundant ""implements Serializable"" from RegularContiguousSet).\nAlso, stop using reserializeAndAssert for the few instances in which the reserialized version of an object is a different class.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2906\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@619 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
4960,"{'code': '06eab020b4ea54091ab0c0ee72b0aa7e2e2aa27c', 'message': '\nLink from Futures.getUnchecked to Uninterruptibles.getUninterruptibly.\nAlso, <code> -> {@code} to fix a Javadoc problem (thanks, Louis).\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2905\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@618 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
4961,"{'code': '825c1ac5a6367a94f0f53a21d2c67403ef440d57', 'message': ""\nMinor bugfix to CCHM where null returns weren't\ncounted as either computeSuccess or computeException - changed to count them as\ncomputeException.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2904\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@617 8138a162-5c33-11de-8abc-d1c337b90d21\n""}"
4962,"{'code': '830e03139e65820edf12a47090fe70253d3f3c37', 'message': '\nSuppress some deprecation warnings.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2903\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@616 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
4963,"{'code': 'd30089cd3d7788a6ca83d5d5f3b29dd8437695df', 'message': ""\nStop forcing all users of the BST framework to total all nodes in each subtree; they may do that in their subclass, if they like.\n\nFactor out BstAggregate into its own file, while we're at it.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2893\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@615 8138a162-5c33-11de-8abc-d1c337b90d21\n""}"
4964,"{'code': '6e7e451a734bb79881b5a24b4f1da28fd58eabbb', 'message': '\nLong overdue updates to common/base/package-info\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2892\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@614 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
4965,"{'code': 'f5a7c1a3e0a55b4440fccd0f5004fb7256ce1fcc', 'message': '\nInstead of providing the views themselves in the ""standardXXX"" methods of ForwardingMap and ForwardingMultiset, provide overridable classes that represent the sensible implementations.  This is much cleaner and doesn\'t require awkward ""iterator supplier"" workarounds.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2889\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@613 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
4966,"{'code': '5fe70b8509b2a14787d3823b5f928ef399a7afdc', 'message': '\nIntroduce UnsignedLongs.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2888\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@612 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
4967,"{'code': 'e79151ace251da007c70d1ead9e9c5992f9901e4', 'message': '\nminor cleanup\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2887\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@611 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
4968,"{'code': '616b0430d73f5dfc602c6e4fb17c60288e0b480f', 'message': '\nadd common.collect.testing to Guava\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2879\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@610 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
4969,"{'code': 'b5119bde43a61b7ab66d8c843a3e48326071e96b', 'message': '\nAdd a new method: InetAddresses.isMappedIPv4Address(String)\nFixes issue 536.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2877\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@609 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
4970,"{'code': '988c4914c12449cb8719ccbd6c3d5c41a4f7f54d', 'message': '\ndistinguish between expired and collected within computation lock\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2876\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@608 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
4971,"{'code': '361267e22e6f2a7a2d897315a43f7feddf9d05a7', 'message': '\nBugfix: CustomConcurrentHashMap.clear() could send a RemovalNotification with\na null value in the case of an in-progress computation. Added a test to check\nthis case.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2875\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@607 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
4972,"{'code': '65d41f4243942f41e788878525f38433e9ab8df3', 'message': '\nadd deprecation comment\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2874\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@606 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
4973,"{'code': '4d3387cf16363994efd6c3361e7573dfa1d26eff', 'message': '\n- log removal listener exceptions\n- internally log removal notifications with non-null keys or values when using strong references\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2873\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@605 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
4974,"{'code': '81eedd445ecba741fc53b9846c5a2e56e6eeb171', 'message': '\nRework exception handling in Futures.get and Futures.getUnchecked.\nAdd ExecutionError, and use it in Futures.get, Futures.getUnchecked, and Cache interface and implementations.\nSpecialize UncheckedExecutionException constructors to accept only Exception, rather than Error, to encourage use of ExecutionError.\nFix an unrelated typo in the MapMaker Javadoc.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2872\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@604 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
4975,"{'code': '37fa1d4fcd055e99351a2542c939c74cf272f22f', 'message': '\nImplement ImmutableSortedMultiset.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2854\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@601 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
4976,"{'code': '9522d8652c4d6d5762fc21fe6b6586e220d8e3d7', 'message': '\nrelease tweaks\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2853\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@600 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
4977,"{'code': 'c001245dd8df746d36af64391f53212d4613e4d7', 'message': ""\nUse a custom serialized form for RegularContiguousSet, as in cgdecker's original patch, to avoid using ImmutableSortedSet's very, very large serialized form.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2850\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@599 8138a162-5c33-11de-8abc-d1c337b90d21\n""}"
4978,"{'code': '4de5e3903ea31cf2bf4cd3cd7908cff83d72a054', 'message': '\nAdd javadoc to DiscreteDomains methods, and rename private classes because when\nI navigate to ""Longs"" in my IDE this ain\'t the one I mean.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2849\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@598 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
4979,"{'code': '0825f346a52ebfc8e4e2959d8d7c864d9da94a9b', 'message': '\n- deprecate caching methods\n- remove unused cleanupExecutor\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2848\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@597 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
4980,"{'code': '5549d365b673a569043b6a6f91df099bfe07ae0a', 'message': ""\nMake more classes serializable.\nMerged from cgdecker's patch for Enums.valueOfFunction, Equivalence.Wrapper, Optional, Range (and Cut), the DiscreteDomain implementations, and ContiguousSet (but skipped Holder)\n\nThe patch also:\n- adds equals/hashCode for Enums.valueOfFunction\n- makes the DiscreteDomain constructor visible, internally and externally (possibly controversial? but the whole class is still @Beta, anyway)\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2847\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@596 8138a162-5c33-11de-8abc-d1c337b90d21\n""}"
4981,"{'code': '7da1a643cb05dc3e006afe087bedfb53ad2c1143', 'message': '\n- remove CacheBuilder.softKeys()\n- Deprecate MapMaker.softKeys()\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2846\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@595 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
4982,"{'code': '64bcc64fff10beb2cea629064f2b447b2f39d9ee', 'message': '\nAdd Colin Decker to Guava authors.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2845\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@594 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
4983,"{'code': '6363cf972c56fa1983bb8f50cbf15be73a0ae714', 'message': '\nAdd c.g.common.base.Optional#or(Supplier).\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2844\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@593 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
4984,"{'code': '91868c0f611e7e122738585cc9086cabff994488', 'message': '\nAdd protected equivalentImpl() and hashImpl() to Equivalence.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2843\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@592 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
4985,"{'code': '07cbb899f48261a4a11707647b173a3dedefd44f', 'message': '\nAdd a new version of Maps.difference which takes an Equivalence to use instead\nof natural equality for comparing values in the maps.\n\nAlso modified Equivalences helper class to be a bit more generic-y (and\nfriendlier to clients).\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2819\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@591 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
4986,"{'code': '928a3fadb7be6ab3046798ef870759ded8bc4dc3', 'message': '\nUnit test Maps.newHashMapWithExpectedSize. Make the method return the minimal values that pass the test.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2818\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@590 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
4987,"{'code': 'b5d39b05fbca60fd285e65f2a8ce18a36bd41da3', 'message': ""\nMapJoiner support for Iterable<Entry>.\nFrom cgdecker's patch, except a change in line wrapping and a reordering of methods.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2817\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@589 8138a162-5c33-11de-8abc-d1c337b90d21\n""}"
4988,"{'code': '8ecbbcc022da4728a4e301647d3a61410fcfcf3b', 'message': '\nCall only the no-arg EqualsTester constructor, addEqualityGroup, and testEquals.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2816\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@588 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
4989,"{'code': '3318bf8fc09829a8b9293864a5f1fc7993249d48', 'message': '\nRemove Holder.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2815\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@587 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
4990,"{'code': 'dae49d1c4bce831a80b5a6e033a72af57eac3f2b', 'message': '\nMerge recent changes to common.testing and testing.util versions of utility classes.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2814\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@586 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
4991,"{'code': 'd0026766b1581677a406aa68e2c0bc4a18fa3c3f', 'message': '\nTake @Beta off sameThreadExecutor and listeningDecorator.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2813\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@585 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
4992,"{'code': 'd6c1c40dc4fbd0cecf476272419f2b7e9c46dd7e', 'message': '\n-Xlint:-serial\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2812\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@584 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
4993,"{'code': '414b26b365af30cc2defcdaf06a163178eed5f7f', 'message': '\nReplace EvictionListeners with RemovalListeners\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2811\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@583 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
4994,"{'code': 'f4f4caf04a5130bdf630d4670a4d6f2d7707cab7', 'message': '\nAdd the ability to mutate the tip of a path to BstOperations.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2810\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@582 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
4995,"{'code': 'd6b8b507adb35f98a6b85e16eaa4b28f46ee5f6e', 'message': '\nFix licenses and simplify a few things in BstRangeOps\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2809\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@581 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
4996,"{'code': 'af5194696140453304a4d0d52bc8ac46823752b8', 'message': '\nfromLenient -> from in HostSpecifier.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2808\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@580 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
4997,"{'code': 'f8a62a7a01315b1549b499ef6cedf44f35d3ff87', 'message': '\nAdd note that exception mappers can throw (rather than return) a\nRuntimeException to allow use of a combination of checked and unchecked\nexceptions.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2807\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@579 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
4998,"{'code': '2b6570d8a552fcfdbff387de51bb59d764e6eaf4', 'message': '\n- document immutablility of PatternFilenameFilter\n- PatternFilenameFilter implements FileFilter\n- FileBackedOutputStream javadoc fix\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2755\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@577 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
4999,"{'code': 'de78035826ac131e562d025a87d61fdb36c648ae', 'message': '\nmove EquivalenceWrapper to Equivalence.Wrapper\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2754\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@576 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5000,"{'code': '17c363a0c1ef30c17e860067c524f8da59caa307', 'message': '\nmake AbstractExecutionThreadService.getServiceName protected\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2753\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@575 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5001,"{'code': 'd6d9e5315c26f179b6d768dcd02b4af2cb34f73a', 'message': '\ndocument what counts as an access with regard to expireAfterAccess\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2752\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@574 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5002,"{'code': 'dcaab87e6bc95a8e8162fecbc4a757ef534e062d', 'message': '\nUnify BstInOrderPath.nextInOrder(), prevInOrder() to one function with a BstSide argument\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2751\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@573 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5003,"{'code': 'aadd54a45faff761042e29821f39b0b797dec28e', 'message': '\nAdd BstAggregate to BstRangeOps, which allows us to total distinct nodes, element occurrences, or whatever within a specific range.\n\nAlso, unify firstPath and lastPath into furthestPath.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2750\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@572 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5004,"{'code': '2769293fa44aeb60819a41150e6f20cd8f8ff0b4', 'message': '\nImplement BSTCountBasedBalancePolicies, which implements size-balancing of binary search trees.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2749\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@571 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5005,"{'code': 'b26983651b4c13ae718e2eb22df13c4fde77cc4d', 'message': '\nUse BstTesting.defaultNullPointerTester() in all tests\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2748\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@570 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5006,"{'code': '87fa2e243109d1f28c94ddb8392411115273d4f1', 'message': '\nImplement BSTUtilities, which provides helper methods for balance policies that insert and remove the minimum or maximum entry in a binary search tree.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2747\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@569 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5007,"{'code': '13ac2cd2e2deeee5d43255885076ee56853793ee', 'message': '\nAdd BSTRangeOps and GeneralRange.  GeneralRange is a package-private\nimplementation of an interval with any desired comparator, and BSTRangeOps\nprovides operations on ranges within binary search trees.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2746\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@568 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5008,"{'code': 'db84b65703f9ba207a52f252b0018ddd6f40ed7b', 'message': '\nHide flattenHierarchy() behind a MapMaker cache.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2745\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@567 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5009,"{'code': 'f1569d50ec5199583cdd223bd55d1a2716d1e5ad', 'message': '\nRename BSTXXX to BstXXX.  Also, move testing utilities (like the SimpleNode class) to new file BstTesting.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2744\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@566 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5010,"{'code': 'bf3b770ff9f808b4b773ebe1961ea6ba1bab2cdc', 'message': '\nSome additional release 10 tweaking.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2743\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@565 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5011,"{'code': '756dd64541365d318a69a49e751bf7448e8e38c1', 'message': '\nMinor FindBugs bugfix: not caching entrySet as intended.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2742\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@564 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5012,"{'code': 'b3b3eca79a5159fe4fb7a165fd2d861e853e72ba', 'message': '\nImplement BSTOperations, which does single-key query and modification operations.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2741\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@563 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5013,"{'code': 'e767cfd2cb5dda09a31ab4b15a5622c5ac971529', 'message': '\nRemove dummy <K> type parameters.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2740\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@562 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5014,"{'code': '2789a742435443060abb74c2f618226fa4ea05db', 'message': '\n- Add a new InetAddresses.toAddrString() method that produces a\ntext-formatted IP address according to RFC5952.\n- Change toUriString to use this method instead of getHostAddress()\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2739\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@561 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5015,"{'code': '8fe3740b4f3b9166153cb8031d7dbd1322b8ec90', 'message': '\nImplement BSTMutationResult and BSTMutationRule.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2738\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@560 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5016,"{'code': '56967521032344e4648d54b7ad9b9d99fcb627fd', 'message': '\nImplement BSTInOrderPath, which extends paths in binary search trees with\nforward and backward inorder traversal.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2737\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@559 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5017,"{'code': 'b508f5c6650742252aec7696c2159eb03ac1a220', 'message': '\nAdd BSTPath and BSTPathFactory, which provide a generic way of manipulating paths in a binary search tree.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2736\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@558 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5018,"{'code': '395e998b21811e68ebb26f0ecb02e722f1c99f72', 'message': '\nAdd the interfaces/abstract classes BSTNodeFactory and BSTBalancePolicy, which\nare responsible for manipulating binary search tree nodes and keeping them\nbalanced, while keeping track of the data in each one.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2735\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@557 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5019,"{'code': '1a089b80b1760d5efc9e9d369fcd69e88e12672b', 'message': '\nrollback\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2713\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@556 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5020,"{'code': '83dcbe2470a4e2b74833dd866993c5b06201bb20', 'message': '\nAdd the interfaces/abstract classes BSTNodeFactory and BSTBalancePolicy, which are responsible for manipulating binary search tree nodes and keeping them balanced, while keeping track of the data in each one.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2712\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@555 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5021,"{'code': '7476dde5258cdc306f1c598f3d77bce0f898c86e', 'message': '\nCreate the BSTNode class and the BSTSide enum.  BSTNode is the root type of nodes in binary search trees.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2711\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@554 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5022,"{'code': '1c7c26962b76b3e066d126be70a8788e0a64d4f8', 'message': '\ninline ComputingConcurrentHashMap into CustomConcurrentHashMap\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2710\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@553 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5023,"{'code': '23f4d6f35f6408eec2cc33badb0a7b213d5c3096', 'message': '\nSeparate i18n support from InternetDomainName.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2705\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@552 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5024,"{'code': 'b6b9d05351c32cb9d8f52227c4ce6cdc52749ef7', 'message': '\nrelease Atomics\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2704\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@551 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5025,"{'code': '718bad39b0bff3e26cc44ab0ef6631b911674fb5', 'message': '\nMake startAndWait/stopAndWait call Futures.getUnchecked instead of performing custom exception handling.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2703\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@550 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5026,"{'code': 'c58ed03477bb35b7e515090534ace1245c94accc', 'message': '\nadd EventBus\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2702\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@549 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5027,"{'code': '5828d379dc7e9f673122e76d1681fbd991efaeba', 'message': '\nWork around bug in GWT compiler (perhaps its use of the JDT?) that produces bogus ""redundant cast"" warnings.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2678\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@546 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5028,"{'code': 'd527a39f9e9536918c37b4c8bc6eceea7506986d', 'message': '\nFix overspecified class-name tests\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2635\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@545 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5029,"{'code': '0bec11dadb3e962aad6d4954dd08d374b8922614', 'message': '\nBeta changes for R10\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2633\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@544 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5030,"{'code': '51234d756e9ebd547f9978626ac01ef594381b7d', 'message': '\nMark makeUninterruptible/UninterruptibleFuture as @Deprecated\nHave the makeUninterruptible implementation delegate to getUninterruptibly\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2632\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@543 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5031,"{'code': '05362312b7e4b828321e4d09a925c0c8ba86d6af', 'message': '\nA few fixups to @Beta/@since/javadoc/etc. for Guava release 10.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2631\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@542 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5032,"{'code': 'dfdac94415422e64b699141227f2f90660e3b996', 'message': '\nDeprecate run()\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2630\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@541 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5033,"{'code': '270fb44b0f4d68acaf15c7fa0342bf688c0dbfc3', 'message': '\nMake AbstractListeningExecutorService public.\nAlso, make it a little more consistent with Guava style and inline the misleading newTaskFor\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2612\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@540 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5034,"{'code': '4264ac9c3ae3cf1188f6de93a83bf4a9069524ec', 'message': '\n-Fixed bug in the Objects#simpleName helper method\n-Wrote tests in ToStringHelperTest (since simpleName is used by\ntoStringHelper)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2611\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@539 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5035,"{'code': '31a2ff00211e28ada5bbcfde0a171432e607cd61', 'message': '\nAdd factory methods to support the two remaining construction use cases for Ranges.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2610\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@538 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5036,"{'code': 'b21e63569b69aa02124b2df97b7571f7449d3eb0', 'message': '\nMake AbstractFuture.cancel/done and ListenableFutureTask constructors visible and @Deprecated.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2609\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@537 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5037,"{'code': 'e3eb31934c08c0adbba59d2cad81f559f768bf8a', 'message': '\nMake AbstractCheckedFuture extend ForwardingListenableFuture.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2608\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@535 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5038,"{'code': '3c39c3d3cc403c017b3681432e324be92044f141', 'message': '\nCopy ExecutionList.run to ExecutionList.execute, deprecating the former and updating callers.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2607\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@534 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5039,"{'code': '5469124a71873058c07f0999115a186f5a5300e3', 'message': '\nAdd Uninterruptibles.getUninterruptibly\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2581\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@533 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5040,"{'code': 'ad26795b4220ccacd7f56d7cf7ea96ab669e772a', 'message': '\nA batch of minor tweaks to Range-related code/docs.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2580\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@532 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5041,"{'code': 'b90d3753f6e127f1ebffa52471f955eabd20654f', 'message': 'Create maven metadata for tests and testlib, disable two tests missing testlib support, and add modules for them.\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@531 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5042,"{'code': '2324b8da74a4849e2341a0cee1421bd6ae1fe173', 'message': 'Ignore files from within a git/svn bridge client.\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@530 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5043,"{'code': 'fe758695c2cf3abd61e1e22dc902bb764adba7ca', 'message': '\nSync folders for tests and test-libraries to separate ""projects"" in the open-source.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2563\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@528 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5044,"{'code': 'a7acd14f84eabd98f44f8df9e598d386dce17fc8', 'message': '\nRemove no-arg AbstractFuture.cancel, updating final caller.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2561\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@527 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5045,"{'code': 'ab3bd3a78d8acc6922f328269b4810c1a56541ce', 'message': '\nrollback\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2560\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@526 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5046,"{'code': 'eff547826025edda6873becb3104d07c13f81630', 'message': '\nMake ListeningScheduledExecutorService.schedule* return a ListenableFuture\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2559\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@525 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5047,"{'code': 'a7493e579b9d4febd01bbc2f856fa1186280acce', 'message': '\nPromotes ContiguousSet to part of the public Range api.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2549\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@523 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5048,"{'code': 'dbf570f8c1c9a1d62bed24d1be8d159e484e597c', 'message': '\nRemove deprecated Optional.get(T) method that has no callers.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2548\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@522 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5049,"{'code': 'cf6c470efd2cb17cf79b2f96a2ab328494d5fde8', 'message': '\nReplace various occurrences of the new constant Ints.MAX_POWER_OF_TWO.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2535\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@521 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5050,"{'code': 'e642d9344d9f32bb4cc5d3f5627eebbfe102623b', 'message': '\nImplement Multisets.containsOccurrences\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2534\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@520 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5051,"{'code': '117a7cf8b0606c06a1ef6b95fb5b97b291458cec', 'message': '\nmake K, V the base type, and then extend to K1, V1\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2533\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@519 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5052,"{'code': '457b295e7bc6f6ad15b3abe7149bf890d25ab1b6', 'message': '\nImplement Multisets.removeOccurrences and retainOccurrences\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2511\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@518 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5053,"{'code': '5416b3db0de8436a6388dc733623b474ea5c3e6f', 'message': '\nAdd MAX_POWER_OF_TWO to Ints, Longs, and Shorts.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2510\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@517 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5054,"{'code': 'da891b4c8b0ed8e0403e0752fce506eca0e6932c', 'message': '\nAdd package info for common.cache\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2509\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@516 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5055,"{'code': '8fefc2db7942c08628b1a17d7680209ca650c18c', 'message': '\nSome findbugs annotating\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2492\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@515 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5056,"{'code': '6d5ee971d4f6f94fc9c174b0ec8612cefdb62f36', 'message': '\ntrim tld\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2491\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@514 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5057,"{'code': 'c8f276037d02c63b6860031feedc39642b4c6131', 'message': '\nBug fix in Interners#newWeakInterner.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2475\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@513 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5058,"{'code': 'd54d130fb1cbdc405e78adfc65339b8a3b6f26b4', 'message': '\nAdd Keys, Values, and Entries skeleton implementations to Multimaps.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2470\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@512 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5059,"{'code': 'bf3cbe742aa51e16bc35e4dc7f68f2b3ea7bee08', 'message': '\nIntroduce common.cache\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2437\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@509 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5060,"{'code': '5e5a6d2ad71915be42e945a97b56a96d9c525c20', 'message': '\ninternal tweak\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2433\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@508 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5061,"{'code': '566710252062c7cae0e1af40e246ae222ae89378', 'message': '\nrollback\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2432\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@507 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5062,"{'code': '8b5c2b458485597b358ec7e2eb5c9b91a863cfc3', 'message': '\ntemporary GwtCompatible\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2431\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@506 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5063,"{'code': '6acec39b056814b43cc7c055f6fe197317a24865', 'message': '\nRemove collect.Cache and all associated classes and references, soon to be added in common.cache.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2430\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@505 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5064,"{'code': '74798fb2cefa5d002fc3827594654740b3ee8599', 'message': '\nAdd MapSplitter implementation to Splitter.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2429\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@504 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5065,"{'code': '6c37b4b488b32e3b574305ad1bd6cffa35157d71', 'message': '\nProvide package-private tailMap(E, boolean), etc. methods for ImmutableSortedSet and ImmutableSortedMap.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2428\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@503 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5066,"{'code': '10c62d7b6e70bc4ab342287a8a57dc61d22cf28f', 'message': '\nUn-nest BoundType from Range, and attempt to make its javadoc ""general""\n(not tied to Range).\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2417\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@502 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5067,"{'code': 'f1dd5f59b4c796a5165d3e4063a1ffd568272c0a', 'message': '\nMoved UncheckedExecutionException to util/concurrent.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2416\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@501 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5068,"{'code': '1360e12079223b1cc8b142cd52bc5b03ce6b0ebc', 'message': '\nRollback.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2399\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@499 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5069,"{'code': 'a9e38e42901ebaddf9285d8b0f5be5b5a10244f5', 'message': '\nCreate EmptySortedMultiset, a trivial implementation of a subMultiset whose bounds are such that it could never have any elements.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2398\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@498 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5070,"{'code': '774ebd4cdc7294a47ddc47ff5701474ef0ef20f4', 'message': '\nImplement AbstractSortedMultiset, a skeleton implementation of a SortedMultiset.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2397\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@497 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5071,"{'code': '872769250cb5c39afe834d5cdc12de4e8e656646', 'message': '\nMake use of the new Multisets.ElementSet and EntrySet skeletons in common.collect.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2396\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@496 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5072,"{'code': '9413cf4a7bb88c5464a5a00deb853d0931c7d267', 'message': '\nTreeBasedTable.row() returns a SortedMap\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2395\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@495 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5073,"{'code': '7c603ae3d3d76af888ad3685c6a789ffc8c0834b', 'message': '\nAdd Uninterruptibles.joinUninterruptibly\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2393\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@494 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5074,"{'code': 'b367e8a004116c66626c087ccd0b1f7ad702b54c', 'message': '\nAdd FutureListeners.addCallback as an easier-to-use version of addListener\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2392\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@493 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5075,"{'code': 'ddd2809334bf3daf4ed53451b660d5cd1d527ae8', 'message': '\nAssorted cleanup\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2391\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@492 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5076,"{'code': '4569adf3c580376e65eec3170429c48e2a9f6255', 'message': '\n@since Guava release 10\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2390\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@491 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5077,"{'code': '1bf14f9852e41756fd658638bcdb9682e637d57c', 'message': '\nFix TestModuleEntryPoint.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2389\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@490 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5078,"{'code': '94d8950f580a11390f5aa212733ef58ca358d727', 'message': '\nAdd SortedMultiset.ElementSet and SortedMultiset.DescendingMultiset skeleton implementations to SortedMultisets.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2364\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@489 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5079,"{'code': '8285ea5d073d6883eaf53595b0b9c2fd0ec182c4', 'message': '\nDeprecate AbstractFuture.cancel().\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2363\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@488 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5080,"{'code': 'e96330b6b6b4a3e756a96a98ec991d0b95a6d459', 'message': ""\nReport problems with _changes to _names consistency during tld patterns file generation. Also, make it safe to specify a removal in _changes which isn't actually present in _names; this would cause a build error previously.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2360\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@487 8138a162-5c33-11de-8abc-d1c337b90d21\n""}"
5081,"{'code': '4453b1e930121c4a99929259115015360a4ee55b', 'message': '\nChanges to SortedMultiset.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2359\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@486 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5082,"{'code': 'd1cd105198f2e40eb43ceed869edf294e0a6d726', 'message': '\nRefactor ImmutableMultiset so that all of its implementation details are in RegularImmutableMultiset.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2358\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@485 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5083,"{'code': '2ebe4b2fe66170cf77b7984bc46aaa0f66e0f5f9', 'message': '\nStopwatch/Ticker @GwtCompatible\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2357\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@484 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5084,"{'code': '0f665880c99f90936464b763fff3b23bad7e118c', 'message': '\nCall UncheckedExecutionException constructor instead of using reflection.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2356\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@483 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5085,"{'code': '580538910fac252b1d308d8ac6d2bf08e774673f', 'message': '\nRefactor Maps.valuesImpl, entrySetImpl, and keySetImpl into skeleton abstract classes\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2355\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@482 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5086,"{'code': '559a0744abb05326badf3b5a0345860f80798788', 'message': '\nDocument that copying a Multiset into a Multiset is efficient.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2354\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@481 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5087,"{'code': '2f4cae379dcc3db3437b78046b1ad0513a52791f', 'message': '\nAdd skeleton ElementSet and EntrySet implementations to Multisets\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2353\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@480 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5088,"{'code': 'c5145ffbf08aabb6ee9d5ea8833a4ce18d8d72db', 'message': '\nWarning cleanup.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2352\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@479 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5089,"{'code': '005d2636567e070ea0fa8b4e13e53501214087f3', 'message': '\nCorrect the Javadoc of ForwardingMultiset.standardClear()\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2347\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@478 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5090,"{'code': 'cceffaf2d98c278fbae7b8451528d1589a01d6ae', 'message': '\nMake ListenableFutureTask constructor private (and un-deprecate it).\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2346\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@477 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5091,"{'code': 'f397b6a97aa7ffb3f9e5ed7997d27d1d9ae44df7', 'message': ""\nIntroduce a SortedMultiset interface.  It's package-internal for now.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2338\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@476 8138a162-5c33-11de-8abc-d1c337b90d21\n""}"
5092,"{'code': '466620fa6de518dae169734661d24151e6dd9993', 'message': '\nEliminate most calls to AbstractFuture.cancel() in preparation for removing the method.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2329\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@475 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5093,"{'code': '80b8cc52b2102da2feda215bfd859c0ada4c2ea4', 'message': '\nMake ListenableFutureTask |final|.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2328\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@474 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5094,"{'code': '1e8985b92efa2d82f2d750d0fe13395b67a9c9f6', 'message': '\nIntroduce ListenableFutureTask.create to replace the constructor, deprecating the latter.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2327\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@473 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5095,"{'code': 'ecad59d96734e9b07e89ffd3e9608aa18de9398c', 'message': '\nreformat\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2324\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@472 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5096,"{'code': '4d14578f560048c131e6748e64898008905dd7db', 'message': '\nFutures.get and getUnchecked.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2313\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@471 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5097,"{'code': '78b0172b008ca1fd37363951cbeaa217a2041f94', 'message': '\nDocument the advantages of Iterables.frequency().\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2312\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@470 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5098,"{'code': 'f120240f86606523799380dec477d7f37379fb11', 'message': '\nAdd a Javadoc pointer from DiscreteDomain to DiscreteDomains.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2311\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@469 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5099,"{'code': '13525d2e9b607ec2770e90116b87472c1f9a6c70', 'message': '\n- add invalidateAll\n- rename getChecked to get\n- undeprecate (but discourage) apply\n- maintain Nullable annotations in AbstractCache\n- disallow null values\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2304\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@467 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5100,"{'code': '0805113e81b6f80cda67a0eb265ec025f7571b9f', 'message': '\nreformat\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2276\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@466 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5101,"{'code': '9dde2406c8fcf61022b471d792bf4e46207a5fcc', 'message': '\ndeprecate FinalizableReferenceQueue\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2275\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@465 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5102,"{'code': '6b5fbaa81c9c1b6c211dea7acc02f70104f68ef8', 'message': '\nimplement newWeakInterner using CustomInterner\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2250\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@464 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5103,"{'code': '19ec9dd7ddea5a54271c422c886eccf290e14429', 'message': ""\n- don't let Cache.asMap.get impact recency queue\n- add getLiveEntry, and use it in get, containsKey, and Interners\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2249\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@463 8138a162-5c33-11de-8abc-d1c337b90d21\n""}"
5104,"{'code': '7021c4ef7f2960780a345e1fd3b4bd180170ee04', 'message': '\nHandle multipart paths that begin with ../ in simplifyPath\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2246\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@461 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5105,"{'code': '5c8e33ab1817afd0cc8dede2db1d9f5750f4f8de', 'message': '\nTearDown Javadoc clarification.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2245\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@460 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5106,"{'code': 'c4e15b8fc32c580afb8dc3fa6060bb67f23c92db', 'message': '\nsplit compute into getOrCompute/compute\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2187\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@459 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5107,"{'code': 'f61b8474810da4b2a48b0f21d0a5184f627b8398', 'message': ""\nAvoid storing an extra cached copy of the ToStringHelper's internal string.\nAlso avoid storing the separator and instead store a boolean.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2186\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@458 8138a162-5c33-11de-8abc-d1c337b90d21\n""}"
5108,"{'code': '8fb836ebb3ae191c608db81e1193ebd775432ff7', 'message': '\nFix javadoc typo in lazyTransform\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2185\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@457 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5109,"{'code': 'd55e49806cc1648d260c68dad979b75833c384f8', 'message': '\nAdd Futures.lazyTransform\nCleanup some small javadoc inconsistencies\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2184\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@456 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5110,"{'code': '48a9f33b1d20381dbc51e038bebda59fba094e32', 'message': '\nadd Files.simplifyPath\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2183\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@455 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5111,"{'code': '093c91737c08de04a16d8412e84cd0089b3a47b2', 'message': '\nDeprecate Futures.makeChecked\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2182\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@454 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5112,"{'code': '0092825a6ddccdb868f1a3b726445676b087191c', 'message': '\nIn CheckedFuture Javadoc, emphasize that it has checkedGet(), not that it has addListener(), since any ListenableFuture has the latter.\nIn Futures.transform/chain Javadoc, attempt to simplify the text about cancellation, and revise and move a not always accurate statement about sameThreadExecutor().\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2181\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@453 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5113,"{'code': 'c58f5577cdaa08cdf38b19dca3beacb6d679046f', 'message': '\nAdd Callables.throwing method to make it easier to construct Callables\nfor error conditions.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2176\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@452 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5114,"{'code': 'a09c2e1ca049fe2b17312ac9d928a3d4c6075882', 'message': '\nRemove @Beta.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2175\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@451 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5115,"{'code': 'c3e283e5a4e5bc9151791e094e48904c7fb82416', 'message': '\nrename MapMaker.privateKey/ValueEquivalence\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2174\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@450 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5116,"{'code': 'b0a5ff44fa2e6888be778b0685a7229bc032ed4d', 'message': '\nMinor fixes to Objects.ToStringHelper.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2173\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@449 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5117,"{'code': '9a5e97e85d4df3a1659286c1b7fe7100c5c1d22e', 'message': '\n- document the difference between makeComputingMap and makeCache\n- specify expiration visibility guarantees and cleanup policy\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2172\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@448 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5118,"{'code': '61e205c9052232b130461d7e505d6f3982be77f0', 'message': '\nallow null parameters wherever possible in public ConcurrentMap methods\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2171\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@447 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5119,"{'code': '5809efca4c4fd7dbd3c954a3c1656baecf5cf9b2', 'message': '\nCacheStats bugfix: createExceptionRate() was always reporting 0 because of\ninteger division.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2170\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@446 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5120,"{'code': 'a13e02167e90125e6a78bf9bbd061996d05a143a', 'message': '\nstop using FinalizableReferenceQueue\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2169\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@445 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5121,"{'code': '87df707d642a3cbf8037678aa4ea4c58c502fe85', 'message': '\nintroduce CacheStats.createExceptionCount\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2146\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@443 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5122,"{'code': '8309c2994a3ef05b91252aec8864ae371135800d', 'message': '\nMake ImmutableCollection.Builder public.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2131\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@442 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5123,"{'code': '30aae4f25d511a34ef41d340945234b9679fa5b0', 'message': '\nAdd a first pass to InetAddresses.forString() that validates the\ncharacters, and decides which address family\'s parser to call.\n\nRewrite textToNumericFormatV6 so that it allocates fewer temporary\nstrings, and correctly rejects IPv6 addresses like ""0:1:2:3::4:5:6:7"".\n\nAlso remove some validation from parseOctet/parseHextet, because\nthat\'s now handled by the first pass.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2130\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@441 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5124,"{'code': '2b295dc3ce740836534f7caf0b214c7589b0b8d0', 'message': '\nout of Beta for Guava release 10\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2110\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@440 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5125,"{'code': 'd9df723ceefa789c14d3f60b0d3b805096843823', 'message': '\n- move custom queue implementations out of Segment\n- update (unreleased) cleanupExecutor to use ScheduledExecutorService\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2109\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@439 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5126,"{'code': '816331252820d2b52cf1ac22fd2b1180ae6f59ee', 'message': '\nAnother warnings cleanup\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2088\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@438 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5127,"{'code': '1caee4174f50a088dc42ab0b3f8782f8f079d7b0', 'message': '\ndocument deletion timeframe\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2087\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@437 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5128,"{'code': '3ba8913b9fad819c24323943971b256151d67a80', 'message': '\nleave a few classes/methods public but deprecated for the next release\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2037\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@435 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5129,"{'code': 'ac4eddbe2c16062e74753f7218a3f392d0a745b6', 'message': '\nannotate getKey and getValue as returning @Nullable\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2036\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@434 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5130,"{'code': 'f472da48a1a04c6df9fc7745e285cd386e3d2f15', 'message': '\nJavadoc fixes.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2035\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@433 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5131,"{'code': 'b10c01e2baca951cc914b21fe920a578dffb6652', 'message': '\nwarnings cleanup\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2034\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@432 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5132,"{'code': '177a182b35f8dfcf9cbeea8f5c7c912285e33458', 'message': '\nWarnings cleanup.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2005\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@430 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5133,"{'code': 'ad3640c6eec0ccac230a0f9c96b343aa025b89bb', 'message': ""\n- Fix strongValues key/value confusion reported on guava-discuss.\n- Make HostAndPort's port field final.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=2004\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@429 8138a162-5c33-11de-8abc-d1c337b90d21\n""}"
5134,"{'code': 'f6c76b737c31bbd6089fa9f78fa5cb640c105192', 'message': '\nrename Cache.get to Cache.getUnchecked\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1994\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@428 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5135,"{'code': '46d4eb45009051a9c1d212c26ee4567db3e9c34d', 'message': '\nEquivalence abstract class change\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1993\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@427 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5136,"{'code': '457462e54495dc3e31d8680f1de6b9c260ad70b6', 'message': '\nrelease makeCache\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1992\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@426 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5137,"{'code': 'f681eacba59748d116ecab7b8885f545a6b4aea7', 'message': '\nBugfix: The GWT emulation of ImmutableSortedMap.get(null) throws\nNullPointerException, whereas the JVM version returns null.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1991\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@424 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5138,"{'code': '4bef95a137f3cdfce8e5961a8b0274ca1f83d813', 'message': '\nRemove k12.ca.us from the under-TLD test list to fix the build.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1990\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@423 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5139,"{'code': '6e1f1fd477562d47463279503b0551b53c640e39', 'message': '\nAdding converters for primitives and Enums.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1989\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@422 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5140,"{'code': '798be897ac21ab4b861acaa44a83c0dc8185827d', 'message': '\nImmediately cleanup partially-collected entries as they are encountered. This should only happen when FinalizableReferenceQueue falls behind.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1968\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@421 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5141,"{'code': '46c620d094ef1f7caec153616b421b2f35798829', 'message': '\nLinkedListMultimap values() and entries() methods now return Lists\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1967\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@420 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5142,"{'code': 'c1b14ee27f5a094cf59a1cebc8510020f60788c3', 'message': '\nauthor cleanup\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1933\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@419 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5143,"{'code': 'f7af1268fa325b985ae41ad2724133bfe0ac4341', 'message': '\nexport com.google.common.testing into guava testing\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1932\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@418 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5144,"{'code': '8d93dfaccc39ae925d8ac86f8c3ed510ceedbfb3', 'message': 'Add a bootstrap JVM class replacement that overcomes an incompatibility between JDK5/6.  This allows us to compile in such a way that our concurrency code works in J2SE 5 and 6.\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@416 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5145,"{'code': 'e6715f52d29a45fd38af3222ab8283b638187f6b', 'message': '\nMove JDK5-JDK6 shim from overridebootsourcepath to guava-bootstrap/src in preparation for moving it\nto a separate Maven project.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1931\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@415 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5146,"{'code': 'ee1dc95f8ccae95a3f4fbcb26c434ee396aa5816', 'message': '\ncleanup deprecation annotaitons\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1930\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@414 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5147,"{'code': '483276e6be92c9a37714335e4e12225557fc9419', 'message': '\nFix up @Beta, @since, etc.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1929\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@413 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5148,"{'code': '425f94349f5c09a054bd2ad69c395818703ab879', 'message': '\nFix Javadoc error in Optional resulting from reference to ""not visible"" BaseHolder methods.\nFix other Javadoc warnings.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1928\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@412 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5149,"{'code': 'a909fde4811a54e8cb4dc1d60175e7534ebbb4c0', 'message': 'Enable source artifact generation in all builds on guava, and use that plus other resources to build the Guava-gwt artifact. Then enable the gwt artifact in the aggregate build.\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@411 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5150,"{'code': '88564fd20074bd3fd6ce8bcf71b7c7616f543b37', 'message': '\nsend removal notification (REPLACED) after cloberred compute completes\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1873\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@410 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5151,"{'code': '41ffe5d7a7fa4be3034c63b309094878618f801d', 'message': '\nforbid insertions on MapMaker.makeCache.asMap view\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1872\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@409 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5152,"{'code': 'e6b0f8aebb7a36dd4eb0ed83100b3a8f9d13d6cd', 'message': '\ndeprecate MapEvictionListener in favor of MapMaker.RemovalListener\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1871\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@408 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5153,"{'code': 'cc0d96ecd04b2614cf28b66b93e24d163553ed9f', 'message': '\nA partial round of javadoc wordsmithing on MapMaker and a small javadoc addition to MMPQ.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1870\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@407 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5154,"{'code': 'f725415eae3da91ec3ccb3a10f5351624dfcfb19', 'message': '\nintroduce Stopwatch\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1869\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@406 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5155,"{'code': 'c8d9b916179531d0899a0411fc562eec611e5d33', 'message': '\n- remove cleanupQueue, immediately remove entries rather than unsetting them\n- ignore partially-collected entries during most operations, simplifying count management\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1868\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@405 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5156,"{'code': 'cf718c5842b150a0df6411a457d427b51e60ae28', 'message': '\n- release Cache and AbstractCache in @Beta\n- rename CacheStatsCounter to AbstractCache.StatsCounter\n- rename CacheStatsCounterImpl to AbstractCache.SimpleStatsCounter\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1858\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@404 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5157,"{'code': 'c19921758fe661962e3f5f5c697453475171e213', 'message': '\n- make removalNotification public\n- unit tests for removal notification\n- remove unused EvictionListeners class\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1857\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@403 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5158,"{'code': '58c90ae66c33501b0d301e2307aeb53c5082bf6d', 'message': '\nintroduce CacheLoader\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1856\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@402 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5159,"{'code': 'c7b17cede87c16cb4cf7059441fa67585ace18a2', 'message': '\nrelease Holder to go with Optional; misc improvements to Optional.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1848\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@399 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5160,"{'code': 'bc47900d640c2264fb8a9f0cf799c3985adb9a27', 'message': '\nFix race condition when run() is called concurrently, annotating the idempotence.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1837\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@398 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5161,"{'code': 'e69b9484e6d89e41e9e4e6a058588d053a53934b', 'message': '\nTest reorganization.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1836\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@397 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5162,"{'code': '6981740800b04aa5df81f3d80ae561953e7b1e56', 'message': '\nImprovements to Optional: or/or/orNull methods.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1835\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@396 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5163,"{'code': 'a6339e3b12f563a1c1129b9fafc87a830a17b493', 'message': '\nAdd Functions.forSupplier(Supplier).\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1834\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@395 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5164,"{'code': '61ce6ccc3714f870ec83b1aab69dcbb27963ef73', 'message': '\nImprove AbstractFuture.cancel(boolean) to actually do something.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1833\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@394 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5165,"{'code': '00bbec0d0e197a6b3f577530623aaf269c00db69', 'message': '\nNow users can create an Interner by providing the underlying MapMaker.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1832\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@393 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5166,"{'code': 'c87142e306811f7ac9094d43de45dca4339a2898', 'message': '\n- Convert c.g.c.base.Ticker into an abstract class from an interface.\n- Add Ticker#systemTicker.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1831\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@392 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5167,"{'code': 'df76d9fa660f672e95d621ae5b20b4ff7adf1769', 'message': '\nintroduce RemovalNotification for use by RemovalListener\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1830\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@391 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5168,"{'code': '1e894ebb3ba63e1ea06af2c7ae15b30693ab29a4', 'message': '\nrollback\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1778\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@390 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5169,"{'code': 'ef80c224861e3a676e2b6545a68781053b549ed5', 'message': '\nTurn Equivalence to abstract class.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1777\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@389 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5170,"{'code': 'f52ed9ee8e39c679e07ee118dfb7f7dfc3179659', 'message': '\nFix issue 572 and issue 614\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1776\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@388 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5171,"{'code': 'e3b22f92567bc66425772f5deb2e1f9d2d7b13d8', 'message': '\n- implement stats for NullCache\n- take new expiration methods out of Beta\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1760\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@387 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5172,"{'code': '9246aef36f6cdd59db4b6495a9f7a57891736e6d', 'message': '\nintroduce CacheStatsCounter/Impl, to facilitate stats counting\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1749\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@386 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5173,"{'code': '3295847aa0f463fd082b5dd1b54eba6a4c8aa06c', 'message': '\nprocess pending cleanups during lockedCleanup\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1748\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@385 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5174,"{'code': 'dc5f806882f1447f2ce5d024817d0bdfe66bf09d', 'message': '\nCommented out assert\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1747\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@384 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5175,"{'code': '3ab5ad4f16dad46dde4e2f4c32cad19141f0fd14', 'message': '\nAdd more MapInterfaceTests.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1712\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@383 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5176,"{'code': '892f2a51c0f1a8405832c339ffe90142ae94c1e6', 'message': '\nprepare for MapMaker.removalListener\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1711\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@382 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5177,"{'code': '859a3816b268781af1802719a7d0a5a2158121ee', 'message': '\nStart running the collection test suite of c.g.common.primitives in GWT.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1688\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@381 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5178,"{'code': 'e6d92d2323a96871aef78be3ff4e57cf5edd33f7', 'message': '\nFix GWT coverage runs for ImmutableSortedSet.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1687\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@380 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5179,"{'code': '6739a534dfbc82ad6eaf8db9fcaf47bc1ea79bed', 'message': ""\n- don't enqueue cleanupExeuctor work on every operation\n- pull put into ComputingSegment\n- call postWriteCleanup after every unlock\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1686\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@379 8138a162-5c33-11de-8abc-d1c337b90d21\n""}"
5180,"{'code': 'd3abdd9e76ef0dc23650da95f60e03fd1b2ed60d', 'message': '\nRemove deprecated AbstractListenableFuture.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1685\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@378 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5181,"{'code': 'bee56d564204d35d412f802f867f3ba00c75fa08', 'message': '\nAdd GWT MapInterfaceTests in com.google.common.collect.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1668\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@376 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5182,"{'code': 'fdff38befd3294746b465993be5db36d98f2a34b', 'message': '\nAdd missing tests in com.google.common.base.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1667\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@375 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5183,"{'code': 'b1e632ac78c6074ada75233462452780a93762de', 'message': '\nAdd Tables.transformValues().\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1666\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@374 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5184,"{'code': 'ba41093b42024d072743904adf0a6dd2417451df', 'message': '\nSupport GWT serialization for Uri and UriParameterMap.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1665\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@373 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5185,"{'code': '7b42834aa30de9ab058584b2787227d9988ac1a3', 'message': '\nrollback previous change\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1664\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@372 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5186,"{'code': '1ef7f793742b940281e513ab5bb6d1c819d495dd', 'message': ""\n- don't enqueue cleanupExeuctor work on every operation\n- pull put into ComputingSegment\n- call postWriteCleanup after every unlock\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1663\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@371 8138a162-5c33-11de-8abc-d1c337b90d21\n""}"
5187,"{'code': '75214c924d9c39facb61183b0247619fcfebc92b', 'message': ""\nFix keySet() of transformed maps when the map iterator doesn't support remove().\nImproves performance of that key set.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1662\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@370 8138a162-5c33-11de-8abc-d1c337b90d21\n""}"
5188,"{'code': '205d7fdf0469960ab65820e3c850f4e8efa2961f', 'message': '\nDeprecate AbstractListenableFuture in favor of AbstractFuture.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1661\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@369 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5189,"{'code': '6d60ccc7204ec520780b6899359132eba4edc407', 'message': ""\nMake AbstractFuture implement ListenableFuture in preparation for changing all\nAbstractListenableFuture users to AbstractFuture and removing the former.\nMerge both classes' Javadoc into AbstractFuture, and tweak it some more.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1660\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@368 8138a162-5c33-11de-8abc-d1c337b90d21\n""}"
5190,"{'code': 'f7fba870bc4fdce22e491dba2ee0d619eb0ea2cf', 'message': '\nConsolidate c.g.common.primitives and c.g.common.primitives.gwt\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1655\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@367 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5191,"{'code': 'b2b80b63f2ce0a704ae8411fcebaf61145d8d9cc', 'message': '\nMake AbstractFuture.done() package-private.\nSubclasses can extend AbstractListenableFuture and call addListener() instead.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1654\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@366 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5192,"{'code': 'a9d192cbe41d23f9417ddccf8ff0fe6cc628663e', 'message': '\nRollback previous change.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1640\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@365 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5193,"{'code': '53bcea501aab53f77cf6f313f5794b8f3e9cbca8', 'message': ""\n- remove cleanupQueue\n- immediately remove entries rather than unsetting them\n- don't enqueue cleanupExeuctor work on every operation\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1639\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@364 8138a162-5c33-11de-8abc-d1c337b90d21\n""}"
5194,"{'code': '65b86a4b57abbc844279a307339a4a615d57bb42', 'message': '\n- test null computations\n- move ComputingMapAdapter into ComputingConcurrentHashMap\n- restore the while() loop around wait()\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1638\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@363 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5195,"{'code': 'a0753a617325b308d2d8b2158182eb717e787d3a', 'message': ""\nFix Maps.transformValues() when map views have iterators that don't support remove()\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1637\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@362 8138a162-5c33-11de-8abc-d1c337b90d21\n""}"
5196,"{'code': 'c6f8f2035d5f2287e391849ac66996e2fc04bcf7', 'message': '\nAdd a HostAndPort Java class. Update HostSpecifier to use this class.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1630\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@361 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5197,"{'code': '44e73ae5701e5e61e53d1f55a9fd30f5c283a067', 'message': '\nMake makeListenable package-private.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1629\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@360 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5198,"{'code': '6c3eec595a9a8d2ec0277cfa46e9592637ae24c3', 'message': '\nRelease Listening{,Scheduled}ExecutorService and MoreExecutors.listeningDecorator as @Beta by using Jsr166AbstractExecutorService.\nMake MoreExecutors.sameThreadExecutor implement ListeningExecutorService.\nAlso, revert a few Guava-fications of non-Guava @since tags.\n\nGet Jsr166AbstractExecutorService to compile in Guava by:\n(1) providing a compile-time-only JSR166 version of ExecutorService\n(2) changing its newTaskFor methods to return ListenableFutureTask\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1628\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@359 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5199,"{'code': '294ae439736e9aa3f87ce727929b2bb6f225dc43', 'message': '\nAdd iterate() to CidrAddressBlock\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1627\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@358 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5200,"{'code': '926b756dd992a11ccab513e1abd9a9f20f8868d5', 'message': '\nUpgrades build.xml to compile gwt test modules with\n-strict -validationOnly so that it no longer requires the entry points\nto reference all relevant classes.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1626\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@357 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5201,"{'code': '6b57b0fac9f798a0f8a6d48f1c53f04db47112b1', 'message': '\nAllow using @GwtIncompatible on constructors.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1554\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@353 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5202,"{'code': 'ef2231dbccbafe2b1ed1b49c2a190b550b09e7df', 'message': '\n- move null computation checking out of CustomConcurrentHashMap\n- avoid indirection of ForwardingMap in ComputingMapAdapter\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1553\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@352 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5203,"{'code': 'aed324cc5bcc6b50d5624d734d8cfb6336be84c4', 'message': ""\n- call postReadCleanup during view iteration\n- don't lock for spurious read cleanup\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1541\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@351 8138a162-5c33-11de-8abc-d1c337b90d21\n""}"
5204,"{'code': '6b0878bb361f990e8125db56e1905ea43d35ad45', 'message': '\nreally fix gwt src directory reference in gwt.javadoc target\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1540\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@350 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5205,"{'code': 'fd8214ea734857a27bfd349a85ca32fc7a24d5bb', 'message': '\nfix gwt src directory reference in gwt.javadoc target\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1539\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@349 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5206,"{'code': 'ac41a695df586611cc94b58b0a4694b45fb0367f', 'message': '\nalways call postReadCleanup after compute\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1533\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@346 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5207,"{'code': '195c219da43c9e72d4f203bde6af55b6b9c44955', 'message': '\nrequire GWT 2.2.0 for its java.math support and testing improvements\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1532\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@345 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5208,"{'code': 'ee8f585a1bc430c6c2ee035e7a0b7fd28aadcda5', 'message': ""\nadopt ConcurrentHashMap's new isEmpty\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1531\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@344 8138a162-5c33-11de-8abc-d1c337b90d21\n""}"
5209,"{'code': '8bd124ef4b414552fcdc6ba7a52aa677c60f6fee', 'message': '\nnew Beta additions for r10\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1530\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@343 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5210,"{'code': 'e7eb1829e0979fb691a7668ecd15116a9afd7e2e', 'message': '\nintroduce AbstractReferenceEntry to cleanup partial ReferenceEntry implementations\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1529\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@342 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5211,"{'code': '0fbb5fd987e669919e77023b5f44319cbf1a1fc4', 'message': 'updated POMs for maven builds.\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@341 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5212,"{'code': '6febfcaeb5cee048529e38cb781a8dc7a06252c4', 'message': ""\nadopt ConcurrentHashMap's new containsValue, without the locking\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1497\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@339 8138a162-5c33-11de-8abc-d1c337b90d21\n""}"
5213,"{'code': '5ef30df12a54b06d59416feeb53ae1891d9579ff', 'message': ""\nMake ExecutionList no longer extend Runnable, as it's never used that way.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1496\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@338 8138a162-5c33-11de-8abc-d1c337b90d21\n""}"
5214,"{'code': '604b400e38cf8bd9aa7d5b70ea06ba1569ceed1a', 'message': 'point build.xml at new\nMOE_MIGRATION=\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@336 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5215,"{'code': '2abfb185dc4979580376486777093b82e4ae5222', 'message': 'directory reorganization in preparation for deeper maven integration\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@328 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5216,"{'code': 'b146e2bb8d049de9f23e2784da4ddfac37671565', 'message': '\nclarify description of iterators\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1473\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@320 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5217,"{'code': 'a73e9bcc445f66008777b3390f045b1083d75f48', 'message': '\nRemove two unnecessary Platform methods, and remove an unnecessary call to another.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1463\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@319 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5218,"{'code': 'fd6ff6be7b75b8fc6eaa88c0f65cf7bb15760fbe', 'message': ""\nmake removeIf() deal with lists that don't support 'set()' but do support 'remove()'.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1462\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@318 8138a162-5c33-11de-8abc-d1c337b90d21\n""}"
5219,"{'code': '9b9bb4b435386a8ba7f1c74786e0f260e3cd205f', 'message': '\nAdd Table.\nAdd AbstractLinkedIterator.\nAdd ForwardingNavigable*, but strip from public release.\nStandardize on <ul> instead of our current <dl>/<ul> mix.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1447\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@317 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5220,"{'code': 'f4bfb429f2609ddf95e215a71eee37f92513e06c', 'message': '\nAdd Predicates.assignableFrom.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1446\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@316 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5221,"{'code': 'c320dfaaea46ba3c20c68d04bd935379ee17cdf3', 'message': '\nmake Segment a static nested class\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1445\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@315 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5222,"{'code': 'e7c525b3310b07221b263ff48b3978d4ed54f811', 'message': '\nupdate @since syntax to specify ""Guava release 0x""\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1444\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@314 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5223,"{'code': 'a7aa10ddb815ce7996f3fae103bfd3823b1336ed', 'message': '\nfix indentation\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1443\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@313 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5224,"{'code': 'c2fea903c81ef754117cf32142e93a32a59edef8', 'message': '\nreformat to 100 columns\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1442\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@312 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5225,"{'code': 'babe3c2090831cb1a83f66ea2a0b15799150ea12', 'message': '\ncomplete sync\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1360\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@311 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5226,"{'code': '770b137ad233eb366548bbcf71646d751469005c', 'message': '\nClean up some doc in InternetDomainName.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1359\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@310 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5227,"{'code': 'a6cec8bd85195fa81c44b66bacc1f9f92a888aa2', 'message': '\nRemove unneeded Range.create.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1358\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@309 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5228,"{'code': '49c77566cf27f765a690b6b42b8848002b8b4d90', 'message': '\nrollback simplification of UninterruptibleFuture.get(long, TimeUnit).\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1305\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@308 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5229,"{'code': '434f70ba6a6e235626d929d0aa98f895e7e9230b', 'message': '\n- include jsr class files in gwt jar\n- add manifest annotations to jar files\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1304\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@307 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5230,"{'code': '5c0b425d75f0ea1e5702f9b93298f45a32d35641', 'message': '\n(Re)Add Uninterruptibles with support for CountDownLatch.await() and sleep()\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1303\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@306 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5231,"{'code': '3ee8e542b02a448c07dbe25ae038597b07856b1b', 'message': '\nremove gwt-specific comment\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1302\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@305 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5232,"{'code': 'fc8755491eac7595d7ac9a8f6ff6f6017051bbc6', 'message': '\nEmulate MapMaker#concurrencyLevel.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1301\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@304 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5233,"{'code': '3f70b40ba5ac8b9a48f06513e9d474bcc78a957e', 'message': '\nRe-source this class.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1300\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@303 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5234,"{'code': 'c094199109215123e123908f5420de898717d35c', 'message': '\ndocument non-locking behavior of size/containsValue\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1299\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@302 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5235,"{'code': 'e918d249a188f3ca45879729b764b9cbed379205', 'message': '\nsync new changes\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1357\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@301 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5236,"{'code': '5d1e93275b75bafc5b401f50eafdcdc4b3e7b8fb', 'message': ""\ndon't lock on pending computation\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1297\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@300 8138a162-5c33-11de-8abc-d1c337b90d21\n""}"
5237,"{'code': '42e0ea4c7ea08343c0e75342d1374a390dd93d5d', 'message': '\n<p> for Javadoc paragraphs.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1296\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@299 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5238,"{'code': 'e220d1a02bf6e3c35eb97d8f9221977528e7f6eb', 'message': 'bump version number\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@298 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5239,"{'code': '6f63c9bbc3602f6db1db721d7a793da65e98b5e0', 'message': '\nLeave makeListenable public for Guava.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1111\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@286 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5240,"{'code': '4d5835c40b1a56b4a2679d5e91d447ef992ef0c6', 'message': '\nRewrite Converter Javadoc, based in part on the Javadoc of Function.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1110\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@285 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5241,"{'code': 'e7aaa9eaa6b3b870ebbfb531c67ab037b7816348', 'message': '\nDocument the reasoning behind the 127-part limit, with an RFC reference.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1109\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@284 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5242,"{'code': 'e249f4cbc759d0d05b586bb7af3e06b6f532a19b', 'message': ""\ndon't expose fromInternal\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1071\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@282 8138a162-5c33-11de-8abc-d1c337b90d21\n""}"
5243,"{'code': 'c2bfa2e4e2a45ca36a78ceed0efe8b8cc94f24f8', 'message': '\nDocument that makeChecked(ListenableFuture, Function) is source-compatible back to Guava 1 (a la ImmutableList.of()).\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1070\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@281 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5244,"{'code': '8af53637967693ef5ed722837acb24f1390b857d', 'message': '\nflag the _new_ makeChecked as since 9\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1069\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@280 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5245,"{'code': 'adfdb1b41ceb048d7d9aedfbb01f23c756a17e0f', 'message': '\nWarning / Live without warning.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1063\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@279 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5246,"{'code': '349fd22a39e91d41d0b9db43c9fc198ff660816b', 'message': '\nadd missing sinces for release 09\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1062\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@278 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5247,"{'code': '2e28ed5bc3e9bc106db27b28470b64b9a9154708', 'message': '\nMake InternetDomainName respect more limits imposed by relevant RFCs:\n* At most 127 parts\n* At most 253 characters in length\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1041\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@277 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5248,"{'code': 'dd96b4930181fc70bd7c90beded3a272f251db35', 'message': '\nFix a second case of ""childless uncle"" bug causing heap corruption.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1027\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@275 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5249,"{'code': 'd0d1aac3cdb69a32c84e4dc5e20ab2c2e6891b6b', 'message': '\nexplicitly target 1.5 on gwt compilations\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1011\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@274 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5250,"{'code': '5807bf599eef0891fd0b68ac08a53cf85fd3828a', 'message': '\nadd CONTRIBUTORS file\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=1010\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@273 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5251,"{'code': '9a065fb087fd3b019538ec2d65d06eeab5bf5796', 'message': '\nRemove @throws InterruptedRuntimeException from Service javadocs.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=983\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@272 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5252,"{'code': 'd3711b898132f7348966355283fa1297a24e4ecc', 'message': '\nremove Beta from stable APIs; introduce Splitter.limit\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=982\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@271 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5253,"{'code': '0f935923d7f361384194bea54305f097b04186d6', 'message': '\nDeprecate withExplicitOrder\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=981\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@270 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5254,"{'code': 'e3e2b852354b4056c412750d8b45b772132cde84', 'message': '\ntest tweaks\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=979\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@269 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5255,"{'code': '363b1a236e9952d81f75301cf5122e9af3869460', 'message': ""\n- replace removeEntry with reclaimKey/unsetKey\n- extract tryExpiredEntries\n- introduce notifyKeyReclaimed, rename valueReclaimed to notifyValueReclaimed\n- don't create notification entries for discarding queue\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=972\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@268 8138a162-5c33-11de-8abc-d1c337b90d21\n""}"
5256,"{'code': 'f6258adeccaf8de1eee71f524780bb248299d780', 'message': '\nadd AUTHORS\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=964\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@266 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5257,"{'code': '4cdf3278c56489ff77e4c37bf919bc59df7902e2', 'message': '\nonly expireEntries on reads when an expired entry is encountered\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=963\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@265 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5258,"{'code': '5098b1d5721cb1533c3bbc5f03a2d5ccb1ebbf63', 'message': '\n- check expiration in computation lock\n- expireEntries post-read in a tryLock\n- add recordLockedRead\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=962\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@264 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5259,"{'code': 'fe9cc7312552892746a56f8eaaeb273a4f815576', 'message': '\nfix copyrights\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=947\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@263 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5260,"{'code': '036ebbac7132b8ae7156a7939d77578f668b3c35', 'message': ""\n- Make AbstractService's Futures implement ListenableFuture by reimplementing the custom Transition class on top of AbstractListenableFuture.\n- Remove asciiHtmlEscaper, replaced with Html.htmlContentEscaper.\n- Make Service.start() and stop() return a ListenableFuture.\n- Eliminate the distinction between Range and DiscreteRange and move operations that used to live in DiscreteRange into ContiguousSet.\n- Preserve strict/lenient validation when deriving IDN instances from other IDN instances. No test changes yet; wanted to get feedback on the approach first.\n- Add a deprecated version of Ranges.integers() and Ranges.longs() to temporarily fix builds.\n- MapMaker:\n\t- containsValue should fail on collected key\n\t- refine expiration javadocs\n\t- structure all reads similarly, documenting more assumptions\n\t- more white-box tests\n- Use constants in UriEscapers instead of PercentEscaper, deprecating the latter.\n- Make Javadoc (and occasionally FindBugs) happier.\n- Rename package.html files to package-info.html, which are preferred as for JDK 5 (see `man javadoc`).\n- Avoid stack overflow.\n- Make InternetDomainName lenient validation a little less lenient.\n- Remove all usages of Ranges.longs() and Ranges.integers().\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=946\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@262 8138a162-5c33-11de-8abc-d1c337b90d21\n""}"
5261,"{'code': '2e52abd38ed4b5aecc80fc6b935461a7898679b1', 'message': '\nRemove util.concurrent.Service.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=911\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@261 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5262,"{'code': '8004d22b04cbd0973c2d617307a4e7cd3ba8e2a4', 'message': '\nAdd new Enums class with #valueOfFunction.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=910\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@260 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5263,"{'code': '36fbe99a2fe26186397b806f267a6a96d28b4646', 'message': '\nAdd GWT support for MapMaker#maximumSize.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=877\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@259 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5264,"{'code': '35db821fe4aece89dce426b6aa6876e988919db4', 'message': '\nMove users of Service off the version in base and onto the version in util.concurrent.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=873\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@258 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5265,"{'code': '2b8393de107d8e15c6ed7e7796af31b01d9ae22b', 'message': ""\ndon't lock to calculate size and containsValue\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=872\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@257 8138a162-5c33-11de-8abc-d1c337b90d21\n""}"
5266,"{'code': 'e4b62b62d5d17e3e7e8cb87a0f96b4683b558e54', 'message': '\nAdd standardStartAndWait() and standardStopAndWait() to ForwardingService.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=855\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@256 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5267,"{'code': 'efc3bcd50ef740e3dabc0a15eabd82331242c26d', 'message': '\nAutomatic addition of @Override annotations\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=850\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@255 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5268,"{'code': 'e7549e36067bd5e478f95467c6486039c88f57dc', 'message': '\n- Add a class javadoc @link to Charsets.US_ASCII. Add constant definitions for MIN and MAX. Take out of @Beta.\n- copy Ticker into common.base\n- Perform stopAndWait/startAndWait uninterruptibly instead of throwing InterruptedRuntimeException.\n- add MapMaker.ticker(Ticker)\n- Clone Service from base to util.concurrent.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=849\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@254 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5269,"{'code': '36543154b171a59f1587df58a05076f9bce3badb', 'message': '\nRemove deprecated StringUtil.xmlEscape/htmlEscape, which are replaced by XmlEscapers.xmlEscaper and Html.htmlContentEscaper.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=817\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@253 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5270,"{'code': '819f65e6f804eb6ced59a4079bbe78e42fff3a50', 'message': '\nAdd a wrap() method to Equivalences that returns objects whose equals() and hashCode() methods are implemented using and Equivalence and a value.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=816\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@252 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5271,"{'code': '080f4ceba169c13d7a7ca7bfc159da0518811bd1', 'message': '\nCorrect javadoc error for Multimaps#index() and be more specific about the interation ordering of the result.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=815\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@251 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5272,"{'code': '62a75edc672350f100a397f2c050e14dccbae7a6', 'message': '\nRemove Futures.compose\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=814\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@250 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5273,"{'code': 'c9fe165e4bc9449cc7fe61feeb86d515bf06a00a', 'message': '\nreduce lock leakage under Error conditions\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=813\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@249 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5274,"{'code': '3e4287cde2895e0fb1a4b6b0cac5256972e0228f', 'message': '\nRollback Ticker.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=807\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@248 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5275,"{'code': '5381a6641b3997dbc02971cf3590b737d240cc8b', 'message': '\nadd common.base.Ticker\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=777\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@247 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5276,"{'code': 'b62f510978e54490f6e6811d81d02d482a5bf74f', 'message': ""\ndon't create recency queue or record reads for expireAfterWrite\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=773\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@246 8138a162-5c33-11de-8abc-d1c337b90d21\n""}"
5277,"{'code': 'c34f758b200ad57633d43638b5387e31bd42c8e2', 'message': '\nReduce visibility of makeListenable to package-private (for use in makeChecked only).\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=754\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@245 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5278,"{'code': '66268769bccfce522af8ada6d24af2ad7f06f049', 'message': '\nadd MapMaker.toString\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=753\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@244 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5279,"{'code': 'c9ecc9d3b22f2a729f1f2898783860e39fe4efaa', 'message': '\nadd ExpirationQueue and EvictionQueue to CustomConcurrentHashMap\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=747\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@243 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5280,"{'code': '3a8101d911d5a4959ec22822dd2ed5d71cec1b50', 'message': ""\nMapMaker:\n- put size's unlock in a finally block\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=742\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@242 8138a162-5c33-11de-8abc-d1c337b90d21\n""}"
5281,"{'code': 'f2674a68ac6e7ceb054e0aa19c01590548747aef', 'message': ""\nMapMaker:\n- call recordRead instead of recordWrite on failed putIfAbsent/replace\n- unset partially-collected entries as soon as they're found\n- skip partially-collected entries when copying buckets\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=714\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@239 8138a162-5c33-11de-8abc-d1c337b90d21\n""}"
5282,"{'code': '6d1a280976e58c9426fbfc3572e9221e7f136c14', 'message': '\nFix typo in SimpleForwa(r)dingCheckedFuture\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=713\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@237 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5283,"{'code': 'e3430e6b85d0c62269aff3cc633ee1e6b5d2ba90', 'message': '\nTweak ListenableFuture Javadoc, primarily to link to common implementations.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=712\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@236 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5284,"{'code': '638ea92f0351fea0e307b3670c04c320124eb523', 'message': '\nSmall javadoc fix to InternetDomainName.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=707\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@235 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5285,"{'code': '6edaa99c9a97eb8b67152f9d80a9abd4b36ac9c1', 'message': '\nhandle initialCapacity > maximumSize\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=689\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@234 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5286,"{'code': 'aeb7280ddd7b306ada03ac17468fcd8269b0b228', 'message': '\nCreate Futures.transform, and forward Futures.compose to it.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=688\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@233 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5287,"{'code': 'babcf3128ca0f1609beb9c7caeff3fc1cfb1be1e', 'message': '\nFix Eclipse-compiler build breakage caused by raw-types cleanup\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=687\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@232 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5288,"{'code': '48ec1301ce521f4b653a7267e3eb36818a180eab', 'message': '\nAllows for the maximumSize & expiration to be zero by using a light-weight map\nthat stores no data.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=686\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@231 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5289,"{'code': 'f9d6b349e2e2a0f09f9a7dec96ea0556dc3a8abc', 'message': '\nremove antiquated comment about upper limits on expiration time\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=685\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@230 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5290,"{'code': '280115ac2154c34b3e7f4b951058ab59b16ed41c', 'message': '\nUse raw types less in common.collect.\n\nMapMaker:\n- call putIfAbsent instead of custom setComputedValue\n- Allows for the maximumSize & expiration to be zero by using a light-weight map that stores no data.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=675\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@229 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5291,"{'code': '364fb82d4b6194cb9ada76b2b34a4735f1b11889', 'message': ""\nInternally remove unused 'of(E[])' from the ImmutableSortedSet API.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=564\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@227 8138a162-5c33-11de-8abc-d1c337b90d21\n""}"
5292,"{'code': '7040d5d35bff798fb3785a3d1668233c188f3e0a', 'message': '\nMapMaker: only allow computed value to be set once. this removes race condition between concurrent put and compute\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=563\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@226 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5293,"{'code': '096761770ce31ba97793f4d7822398e0ae1ea172', 'message': '\nMapMaker: refactor cleanup\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=562\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@225 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5294,"{'code': 'fe561b0554c29b4ffd9b9181c559b238713fa335', 'message': '\nValueFuture->SettableFuture.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=561\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@224 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5295,"{'code': 'b762524d89bb420e9cefa0c52b2b2ebbf69ddf50', 'message': '\nImprove InternetDomainName documentation on validation.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=554\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@223 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5296,"{'code': 'dc85ef84a014ce90cc0d1e9479b7abea15320071', 'message': '\nMapMaker:\n- fix inline cleanup to perform locked cleanup when the lock is held!\n- correctly implement read-time cleanup\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=553\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@222 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5297,"{'code': 'dda9d3f744073e17c1adbf8879357b273fa8241d', 'message': '\nMapMaker: optimize cleanup when using the default executor by doing lock-requiring-cleanup under lock, instead of requiring a second lock to be taken\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=551\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@221 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5298,"{'code': '6c0d45c57e23ac9503ed07a558fba079d6633927', 'message': '\nMapMaker:\n- move read-time recencyQueue draining to cleanup executor\n- replcae recencyQueueLength with readCount\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=550\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@220 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5299,"{'code': '4262a5d19a69caa2ed39160799804e5eaf8652d2', 'message': '\nMake ForwardingListenableFuture javadoc consistent\nAdd SimpleForwading*Future\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=549\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@219 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5300,"{'code': '35ee006b49a5f9af9a077089ed8ac97eff8c109a', 'message': '\nMapMaker\n- invalidate entries containing partially collected keys\n- assert that expiration list is valid\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=541\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@218 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5301,"{'code': 'c8a557c96c5fa5c3808d6183947864fe50f9bcf0', 'message': '\nWarnings cleanup\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=540\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@217 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5302,"{'code': '9fcb76a3000ec4643120db1dd0abce84512330a5', 'message': '\nMapMaker rollback\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=539\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@216 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5303,"{'code': '990c74a01b91f331adfb92187d35a42d4fcb1062', 'message': '\nMapMaker:\n- invalidate entries containing partially collected keys\n- assert that expiration list is valid\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=528\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@215 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5304,"{'code': '5bb0c619894468166c600bddb3a298a2dde0ca69', 'message': ""\nAssorted util.concurrent tweaks, mostly Javadoc.\n- @link from CheckedFuture to common implementations, since it seems that many people can't find them: https://groups.google.com/a/google.com/group/java-libraries-discuss/browse_thread/thread/83589a60aa3c5318\n- Warn that makeListenable(...).addListener() and friends use a thread.\n- Add examples to Futures.combine.\n- Rewrite the Javadoc for some methods in Futures to cram more information into the first sentence.\n- Also, stop extending Assert in ListenableFutureTester in favor of static imports.\n- Finally, make combine(..., Iterable) more permissive. (This should be backward compatible.)\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=527\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@214 8138a162-5c33-11de-8abc-d1c337b90d21\n""}"
5305,"{'code': 'f1d94e8d2a6892197b3e0600b6cbc3fceab600d8', 'message': '\nAdd ForwardingCheckedFuture\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=526\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@212 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5306,"{'code': '452cf9ded56866c529466cc52ccba839701f47ee', 'message': ""\nMapMaker:\n- increment count at computation end instead of beginning\n- distinguish computation from partial-collection when put clobbers incomplete\nvalues\n- don't suppress notifications when computation encounters partially-collected\nvalues\n- don't remove computing entries\n- test many more edge cases\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=525\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@210 8138a162-5c33-11de-8abc-d1c337b90d21\n""}"
5307,"{'code': '99a10191f4a6575e95bbfe1c587e98ef2b1fc486', 'message': '\nrollback cl/19492453\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=516\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@209 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5308,"{'code': '2894bf82cb3e95b321acb64603f985c000eb9329', 'message': '\ncleanup partially-collected entries during computation, since scheduled cleanup uses tryLock and thus may not cleanup\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=515\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@208 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5309,"{'code': 'a090e4a156923e48ea5ecd1520cce1b380d59dc8', 'message': ""\ndon't return null value from computation; fixes race condition where value was garbage-collected between null check and return\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=514\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@207 8138a162-5c33-11de-8abc-d1c337b90d21\n""}"
5310,"{'code': '95616b5ec55ec6bb09d3090774ff572a4296678a', 'message': '\nintroduce MapMaker.cleanupExecutor\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=513\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@206 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5311,"{'code': '8320c63d9cc1fa5b982888dd98ab08035aec6239', 'message': ""\nMapMaker:\n- increment count at computation end instead of beginning\n- distinguish computation from partial-collection when put clobbers incomplete\nvalues\n- don't suppress notifications when computation encounters partially-collected\nvalues\n- don't remove computing entries\n- test many more edge cases\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=512\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@205 8138a162-5c33-11de-8abc-d1c337b90d21\n""}"
5312,"{'code': '8ee7b136b57d4606a784382ccd16a707e3288a10', 'message': ""\nMapMaker:\n- introduce default cleanup executor (not user-visible yet)\n- don't call recordRead on invalidated entries\n- expire entries when over-writting invalid entries\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=507\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@204 8138a162-5c33-11de-8abc-d1c337b90d21\n""}"
5313,"{'code': '04af674ebb40c6d42a1325ab1695bd23355e63a5', 'message': '\nRegularImmutableSet should never contain one element on the client\nside, or it will cause problem deserializing them\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=499\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@203 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5314,"{'code': '993e2caef44f668a72f302168c529c36d28d48cb', 'message': '\nFix TreeBasedTable to return columns in globally sorted order.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=485\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@202 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5315,"{'code': '8bd8c25e309e9debf877449826bbdb55493dec25', 'message': '\nuse invalidation+cleanup for MapMaker gc-cleanup\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=473\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@201 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5316,"{'code': 'ec644e95cb2938ca2bf78271e524ed75409d564a', 'message': '\nMapMaker cleanup:\n- replace computed value reference upon completion\n- account for copied entries when clearing invalid computations\n- properly propagate computation exceptions to waiting threads\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=472\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@200 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5317,"{'code': '86cc1efc4fb32ccf49eadcbb8d8d4da1121c8571', 'message': '\nAdd examples to Futures chain() and compose() Javadoc.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=471\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@199 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5318,"{'code': '39fbaad1df64ba579bc41031dfbde99e5f4ba1d4', 'message': '- added Equivalences.pairwise()\n-\tcleanup failed MapMaker computes with invalidateValue instead of racy removeEntry\n-\tdetect recursive MapMaker computation and fail fast rather than silently deadlocking\n-\tsend MapMaker notifications after unlocking related to computaiton\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@198 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5319,"{'code': '67445d6ea580dcef646a495f23efd8f1cda4abb7', 'message': '- send removal notification in MapMaker when reclaimed keys are encountered during copies\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=424\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@181 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5320,"{'code': '4b5166a10e3f5d914791a51510a26f43cda286e3', 'message': '- lower default MapMaker concurrency level to 4\n- remove Equivalences.nullAwareEquals()\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@178 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5321,"{'code': '3fbaf56f390db1a7c442ceaeab2c3a8bc1c8fd79', 'message': 'Fixed bug/532.\nAdd warnings to README.\n\nThese should be the last changes for Guava release 08.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@160 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5322,"{'code': 'ad3f05ddb4028b3bfd022388783fb718dd001c5a', 'message': 'Restore CharMatcher.SINGLE_WIDTH\nDeprecate MapMaker.expiration\nMake Equivalences.equals/identity null-aware, deprecate nullAwareEquals\nLists.reverse out of beta\nFix some multimap javadoc problems\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@159 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5323,"{'code': '125228dc08768d08f2456689b80f38eed3cc47aa', 'message': 'Send removal notification when entries containing garbage-collected values are reused\nUse StringBuilder instead of implicit concatentation in SingletonImmutableList#toString.\nMark Joiner.MapJoiner as final.\nJDiff update.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=339\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@151 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5324,"{'code': '1c10d149117d7c19a2d603b77a3898190f784543', 'message': '\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@149 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5325,"{'code': 'bd5b63e3fe3b5d505c0b422f0423094f542ff7e2', 'message': ""\nAdd CharMatcher.matchesAnyOf()\n\nMake HostSpecifier.fromValid's thrown ParseException encapsulate the original exception.\n\nIn InternetDomainName, rename from->fromLenient, and add isValidLenient.\n\nUpdate error messages on MapMaker#expireAfter{Read,Write}. Fix a bug where the expireAfterAccessNanos wasn't being substituted into error message.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=297\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@148 8138a162-5c33-11de-8abc-d1c337b90d21\n""}"
5326,"{'code': '56c28b327391220332d63e638adedc48a5dae8d1', 'message': ""Today's code refresh.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@147 8138a162-5c33-11de-8abc-d1c337b90d21\n""}"
5327,"{'code': 'df76e2f933055aaca01a15790cbc19b4de3a2141', 'message': ""Push of latest guava code which unfortunately includes temporarily backing out\nthe common.testing stuff, which still hasn't been figured out properly in a way\nthat allows us to keep internal and external codebases synchronized.  That\nstuff may or may not be available as part of release 8 after all.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@146 8138a162-5c33-11de-8abc-d1c337b90d21\n""}"
5328,"{'code': '509fe0a4e7b30c00d1a7e1aae3e4de6718939c15', 'message': 'Next gigantic code drop.\n\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@143 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5329,"{'code': '6a25cb512850ee84cb5ba37ee0ba9e96f7272146', 'message': 'Next giant code dump. Most interesting stuff: MinMaxPriorityQueue,\nOrdering.{least,greatest}Of, SortedMaps.\n\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@138 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5330,"{'code': '999a06ddb6b0cb5681bbbef73beb3e934376d2a7', 'message': 'Add expireAfterWrite() and expireAfterAccess() to MapMaker, replacing\nexpiration() (which will be deprecated for release 8).\n\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@137 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5331,"{'code': '6ccbb455a8549c95eca3469a165fe02c72b6bc91', 'message': ""Batch of 18 days' worth of changes, which I should be itemizing (sorry).\n\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@136 8138a162-5c33-11de-8abc-d1c337b90d21\n""}"
5332,"{'code': '697576a2b9c0a9321f7dc2a027e1e530215ee953', 'message': 'Add the most basic portion of our testing infrastructure required to make the Guava tests pass, and add a replacement for Assert.* so we can have the assertions available to the tests in this core library, without forcing a dependency on JUnit or any other testing framework.  The tests, themselves, of course, can remain dependent on JUnit.\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@135 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5333,"{'code': '673199352be3efcf775036e47cba86e163d8b3a8', 'message': 'bump version to r08-SNAPSHOT\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@134 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5334,"{'code': '7d4849b19bb33ab4ad6c442a501f019b7dc00d89', 'message': 'Accidentally removed -use and -linksource from javadoc task.\n\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@133 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5335,"{'code': '4fdf70002a73087bcb94ac0619f819bbc6c035d8', 'message': '@Beta release of MapMaker.maximumSize()!\n\nAdd Interners.asFunction per issue 398.\n\t\nStart emulating ImmutableAsList, and make it GWT serializable.\n\nAdd missing Javadoc to Maps.EntryTransformer.transformEntry().\n\t\nSince ConcurrentHashMap consistently invokes equals() as\n""objectYouJustGaveMe.equals(objectAlreadyInMap)"", it was suggested we should do\nthe same with our equivalences.\n\t\nVarious small doc fixes.\n\n\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@132 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5336,"{'code': '13bc6c9bf52aa45fe4371357546b7ca66f317df2', 'message': 'One forgotten @Beta/@since.\n\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@128 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5337,"{'code': '006fea628d014b2df0f545a21e3827f803bc2a1d', 'message': 'JDiff update\n\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@127 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5338,"{'code': '9773a7573adcb2baf9459966ae9a8fddb47327e4', 'message': ""Provide default implementations for various methods in ForwardingMap and ForwardingSortedMap.\n\nSpecify in Interners javadoc that they don't consume permgen, which is one of\nthe advantages of using them (for strings).\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=237923\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@126 8138a162-5c33-11de-8abc-d1c337b90d21\n""}"
5339,"{'code': 'e3bc0703d0a123ab5d3d2edf4124a14c8b3ba235', 'message': '\nForward get call on chained future to underlying input future.\n\nProvide default implementations of many methods for ForwardingSortedSet.\n\nImproved documentation and standardClear method for ForwardingMultiset.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=240546\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@125 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5340,"{'code': '6499316bc379dc1309b6a20eba375a269fd8918a', 'message': '\nProvide default implementations for some methods in ForwardingQueue\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=224287\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@121 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5341,"{'code': '89b32f14dea661c0812ff94b42db8ca9f81ba9ec', 'message': 'Fix InternetDomainName case normalization (only ASCII characters are to be normalized to lowercase).\n\nIntroduce new common.base.Ascii class for ascii-specific functions.\n\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@118 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5342,"{'code': '51eb6fc0de824525ed0aa8728359efb12d88001d', 'message': '\nDelegate from compose(Future, Function) to compose(ListenableFuture, Function) when applicable.\n\nAdd some missing @since tags.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=216874\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@117 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5343,"{'code': '9fc278e12300128c14757877fe81a7d0d47808d1', 'message': '\nProvide default implementations for various methods for ForwardingMultiset.\n\nFix issue 411, NPE in Equivalences.nullAwareEquals().hash(null).\n\nMinor style fixes.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=216777\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@116 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5344,"{'code': '4583e8bd8b7eac0e3fbef41d341d57ef5a925c5d', 'message': '\nLists.charactersOf(CharSequence)\n\nFix RegularImmutableSortedSet.containsAll to handle sets with the same comparator, but different element types.\n\nOrdering needed @Nullables on a few methods (issue 346).\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=219055\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@115 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5345,"{'code': 'e899c1158b140d6b1dc845dbc16ab9bb04747a2c', 'message': '\nProvide default implementations of methods as protected methods in Forwarding{Collection,List,Set}.\n\nAdd Lists.reverse() (@Beta).\n\nRework ImmutableSortedMap to be backed by an ImmutableList.\n\nMinor internal style fixes.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=218295\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@113 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5346,"{'code': '48736a0b064bb5c3ba32cc13496f4a5770fccf46', 'message': '\nRework RegularImmutableSortedSet to be backed by an ImmutableList instead of an array.\n\nMake IDN conform more closely to the Mozilla PS algorithm. In the process, we introduce a weird disjunction in our definition, but that seems unavoidable (for now?).\n\nMake com.google.common.base.Equivalence{,s} GwtCompatible.\n\nMake Futures.compose(Future, Function) wrap any RuntimeException/Error that occurs in an ExecutionException.\nAlso, call the Function only once even if it throws.\n(Futures.compose(ListenableFuture, Function) already had both these behaviors.)\n\nDo not cancel() when interrupted. Do restore the interrupt.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=213626\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@112 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5347,"{'code': '3291ead520514ebaa8bd19f65074aaa9a93cdd7f', 'message': '\nUpdate ToStringHelper to do what users expect with Class<?> objects.  This addresses bug 381.\n\nAdd ImmutableList.reverse().\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=211340\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@111 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5348,"{'code': '0b981c73ab5d5aad3234bcc96049060e98f2027b', 'message': '\nFix an issue in Multimaps.transformValues that did not reflect changes to the backing Multimap\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=202775\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@110 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5349,"{'code': '5cffe4f4d1dd5a647bc34fb29e62a16e9321a833', 'message': '\nRecognize hosts like ""www.nhs.uk"" as valid (since they are). This is probably not the final word on this problem.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=206002\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@109 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5350,"{'code': 'a938a4e30b796948fb43636d2d31c033e0584f48', 'message': '\nKeep the supersource version of MakMaker in sync with the server version.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=201371\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@108 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5351,"{'code': '6937f3679ccc5d46c097819142d9dc7fe5664fc8', 'message': '\nAdd missing @since tags.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=203377\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@107 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5352,"{'code': 'ee91c47432889467d38b60703b41267c0a803897', 'message': '\nAdded Multimaps.transformValues and Multimaps.transformEntries\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=204316\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@106 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5353,"{'code': '91c77c074eb325b601071516cd98514cd1b9d355', 'message': '\nAdd getFirst() implementations to Itera*s per external bug 217\n(http://code.google.com/p/guava-libraries/issues/detail?id=217).\n\nPlus, some modest documentation clean-up.\n\nR=kevinb\nDELTA=70  (68 added, 0 deleted, 2 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=200293\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@105 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5354,"{'code': 'c785a6817e6c62b1a5a4c6687cbc7f50a0eb4ccf', 'message': '\n3-arg version of find()\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=201272\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@104 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5355,"{'code': '6475a214ebbad56daa661478c10b34d75f3b78d8', 'message': '\nRemove a @since tag that was just plain false\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=200245\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@103 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5356,"{'code': 'c458d9964069e3aad104888ddf214e22ac26c727', 'message': '\nHandle some edge cases in createParentDirs.\n\nR=kevinb\nDELTA=62  (54 added, 1 deleted, 7 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=201259\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@102 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5357,"{'code': 'b16c7513906c7d859d5c5c8c262d054809203351', 'message': '\nFix up how Immutable*.copyOf() work -- they should short-circuit the copy when safe, but not when the copy takes up less memory, etc.  \n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=202225\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@101 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5358,"{'code': 'dd6db4e265b0428c787a801d6d69e29994fceaed', 'message': '\n(implementation detail) create UnmodifiableListIterator\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=205212\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@100 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5359,"{'code': 'c3aafce2ec11cd26cd94df7efc132dc0431925a7', 'message': '\nAnd then roll forward.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=205211\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@99 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5360,"{'code': 'e6400c35ed25c87586f5c5825fe3fb91a2e6d8c6', 'message': '\nRoll back recent Immutable(Sorted)Set change temporarily.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=205210\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@98 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5361,"{'code': 'c74890efa59b8254d879c37803ddc888b75c3ad5', 'message': 'Next batch of pent-up fixes.\n\nVisible changes:\n- Add ImmutableSortedSet.copyOf(Collection) which is safe for concurrent\n  modification.\n- Make ImmutableSet.copyOf(Collection) public.\n- Various Futures javadoc improvements (also use <V> and <X> over <T> and <E>).\n- Revamp javadoc for Function, Predicate and related classes. Highlight the\n  issue about consistency with equals, as this problem has been noticed with\n  utilities like Sets.filter() (issue 363).\n\nLess-visible changes:\n- Add a few missing @Nullable annoations.\n- In Iterables.concat impl, create an Iterator<Iterator> directly rather than via transform().\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@97 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5362,"{'code': '4211cf3a0e11ba822a37ebd45a149cd959015f8c', 'message': '\n- Make GwtCompatible and GwtIncompatible @Documented in the open source\nversion.\n- Update links to the documentations.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=197273\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@96 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5363,"{'code': '214ee7fe4fecfec593b97e17fff1f39d4b95ba31', 'message': ""3 days of pent-up improvements:\n- Make setException(null) throw NullPointerException instead of silently \n  setting the future to succeeded (with a result value of null).\n- Remove unnecessary type parameter from transformExceptions() and its \n  implementation class.\n- New ConcurrentHashMultiset factory method that takes a MapMaker. This allows \n  using soft/weak keys and expiration on the backing map.\n- Turns out it's annoying to not know whether it's the key or value that was\n  null in an ImmutableMap.\n- Tiny javadoc fixes, mostly concerning code snippets.\n- Introduce a package-private Iterables.toArray(Iterable) method as a\n  GWT-compatible alternative to the public Iterables.toArray(Iterable, Class),\n  and achieve a marginally more efficient implementation of the GWT emulation\n  for ImmutableSet's Builder and copyOf methods.\n- Make EnumBiMap and EnumHashBiMap GwtCompatible.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@94 8138a162-5c33-11de-8abc-d1c337b90d21\n""}"
5364,"{'code': '803f44ac9c6a3457388394e952132fe18449cb9f', 'message': '\nFix performance problem in LinkedHashMultimap.removeAll(key), as documented in http://code.google.com/p/guava-libraries/issues/detail?id=371&start=100\n\nR=kak\nDELTA=3  (2 added, 0 deleted, 1 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=177089\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@93 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5365,"{'code': '45c18d9b8a07b42fbb00e8b71fd33510345fbc52', 'message': '\nUse a simple workaround for http://bugs.sun.com/view_bug.do?bug_id=6558557\ninstead of suppressing all over the place.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=177036\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@92 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5366,"{'code': '9270cf11f71cce9664bd15afb7999d125b0906b3', 'message': '\nMake ImmutableEntry.setValue() final.  Makes it clearer that ImmutableEntry is, in fact, immutable.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=180040\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@91 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5367,"{'code': 'f48bbba10ec4475c6b0de7ed5101bb326605e253', 'message': '\nMinor tweaks\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=176021\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@90 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5368,"{'code': '99c3afca566710cd347e840b1877ea289277ae20', 'message': '\nExclude CustomFieldSerializers from GWT javadoc\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=179003\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@89 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5369,"{'code': '72ac0ffe8d04f35d5d18f56ed5d63a24414f84db', 'message': '\nAdd ImmutableSet.copyOf(Collection), following lead of ImmutableList, to make it safe with copyOf(synchronizedConcurrentList).\n\nAlso had to add ImmutableSortedSet.copyOf(Collection), to make Java overloading happy.\n\nI guess another alternative, is to hide the copyOf(Collection) overload and make sure copyOf(Iterable) is safe when the iterable is actually a Collection. (But why is ImmutableList.copyOf(Collection) needed?)\n\nI also added ImmutableSortedSet.copyOf(Comparator, Collection), for sake(excuse) of consistency.\n\n(Ben Yu)\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=163006\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@88 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5370,"{'code': '62cdc3e0cda2d55432ac1969a3cf94f9c7c42655', 'message': '\nReduce one temp array creation for ImmutableList.of().\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=159004\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@87 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5371,"{'code': '41aee888e28f25a8b74544f70545177a8c504031', 'message': '\nIrrelevant change to outside users.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=156004\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@86 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5372,"{'code': 'd84933a3e66fe532e1fd1143081073f9d4923b3c', 'message': '\nTighten up the restriction of supersource builder to require\nemulated = true to be set in the @GwtIncompatible.\n\nUpdated all references to add the emulated=true spec back.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=140002\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@85 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5373,"{'code': '9d880c5120824c432ef72c611ce3358368059ec6', 'message': '\nMakes the result of Futures#chain() cancellable.  It will now be\nsuccessfully canceled in these cases:\n1. A thread calls cancel(boolean) directly on it and the Future is\ncurrently running.\n2. The underlying input Future is cancelled.\n3. The Future result of the Function is cancelled.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=134006\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@84 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5374,"{'code': '699b85572f607856a143ac713784ce5ee7728e61', 'message': '\nChange InternetDomainName to reflect reality of public suffixes which are websites by changing javadoc to specify safe and unsafe usage patterns.\n\nR=jessewilson\nDELTA=51  (40 added, 2 deleted, 9 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=91009\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@83 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5375,"{'code': '6caef5478cc70849eb3be7f299d31bd1f8a6338f', 'message': '\ndelay eviction until a new entry is created\n\nR=bmanes\nDELTA=11  (8 added, 2 deleted, 1 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=96006\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@82 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5376,"{'code': 'b3804dc9b51bca094e92f4c21ef263cd5cbb27a1', 'message': '\nFix our TODO comments to include username as required, usually naming\nmyself.  Remove a few I don\'t think we need, and handle one (it said ""use\nthis method from Maps when that class is gwt-safe""). Make moe not choke on\nunrecognized usernames. Whitelist a few usernames for non-scrubbing who\nhave agreed to it.\n\nR=jlevy\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=92006\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@81 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5377,"{'code': '9eca6cbc6418452c36cd0102fc784c884dd85947', 'message': '\nRemove the comments about List.subList.  GWT supports it now.\n\nR=cpovirk\nDELTA=9  (0 added, 9 deleted, 0 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=95006\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@80 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5378,"{'code': '3fbf39a13d2fa6e515fe31b88f9d19a2068f4ad6', 'message': '\nimplement maximumSize\n\nR=bmanes\nDELTA=451  (309 added, 10 deleted, 132 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=95005\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@79 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5379,"{'code': 'd2f36ca770e1fae1ce3391eb8ee7c267ae328bbb', 'message': '\nFix the license headers and @author tags of the new sources.\n\nR=cpovirk\nDELTA=104  (84 added, 0 deleted, 20 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=97002\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@78 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5380,"{'code': 'a104829d30932db72f71b8d6b7218345f0faddce', 'message': '\nMove a class to fit the existing organizational scheme in this file.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=96005\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@77 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5381,"{'code': '395d9e81af3e5b984640e3e21e68e8059d228c66', 'message': '\nAdd fromBytes() wherever there is fromByteArray().\n\nR=martinrb\nDELTA=141  (108 added, 8 deleted, 25 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=95004\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@76 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5382,"{'code': 'c4ec873e2c33a5c059d3a173587c7715f4deae1f', 'message': '\nGWT serialization stuff.\nAdd Table classes.\nMinor cleanups.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=87009\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@74 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5383,"{'code': '89be62265a01ba1b5c6c16559c8bc5103276c763', 'message': 'Performance of ImmutableMap improved, while paving the way for us to reduce its memory usage as well.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@73 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5384,"{'code': 'a054c11fb7ec473d053a0912c57ffa3abb448396', 'message': 'Minor code, javadoc, jdiff update.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@72 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5385,"{'code': 'b865e673377349e3b1d5b294f4efd40787d2bee5', 'message': 'Dump a bunch of GWT support classes out to guava.\nAdd a static factory for InternetDomainName which does full RFC 3490 validation.\nAdd MapMaker.evictionListener().\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=80001\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@71 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5386,"{'code': '97963a74d9102aefc1613738cc7c218fee2e03f8', 'message': 'Latest code dump.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@68 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5387,"{'code': '83055b2a783799cbeb913591e2e18eabaa2b00a4', 'message': 'bump maven version.\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@66 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5388,"{'code': 'b0b6cc835f577b0e62eb7b06bc2faea188a2450d', 'message': 'Final code update for r06 (@since tags).\n\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@61 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5389,"{'code': '4606ab0179fa19ae1366fca0730296e357740b06', 'message': 'Getting jdiff working more completely, so that a report can always be viewed of\nthe differences between the head revision and the most recent release.\n\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@59 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5390,"{'code': '4c949e3399a80396525774a0ffc66b8af3155242', 'message': 'Fix bug in InetAddresses and performance problem in InternetDomainName (changed\nfrom regex to CharMatcher).\n\nThis is intended as the last code update before release 06.\n\n\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@58 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5391,"{'code': 'a43e794ac6d46395f7e32a6e5b5f2cd75f3d77d8', 'message': 'Code update, only minor javadoc changes.\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=42003\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@56 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5392,"{'code': 'eff5674e3e976e9095ddc1de6e168f39922bfeee', 'message': 'Spot-fix two corrupted characters again. MOE bug fix on the way next week.\n\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@54 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5393,"{'code': 'cac16cfeea6c70fcf3e8787f9b9d042ec2f0376a', 'message': 'ImmutableMultiset:\n- add of() overloads up to 6 elements\n- add copyOf(E[])\n- deprecate of(E[])\n\nInetAddresses:\n- partially fix bug in calculation of dotted quad values\n\nUnsignedBytes:\n- new toInt(byte) method\n\nShorts:\n- fix unfinished javadoc (oops)\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=38003\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@53 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5394,"{'code': 'b293ed1fbb3d8b46bf4f2f638d46295329babccc', 'message': 'Spot fix for some Chinese characters that got corrupted by our experimental new\ncodebase-pushing tool.\n\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@52 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5395,"{'code': '221de73a17f4c5f2b913c5b0c640d54aa1000f94', 'message': 'Change on 2010/06/17 by cpovirk\n\n\tRename toStringBuilder() parameter from ""object"" to ""self"" in an attempt to discourage people from passing a String, Class literal, etc., e.g.,\n\tAdd a @param tag for it.\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION=29017\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@50 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5396,"{'code': '52aabe5b3834a5ec6ab4785a041c3162e127c8e4', 'message': 'Revision created by MOE tool push_codebase.\n\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@49 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5397,"{'code': '055d669ea456a8efc0731a8c8f8d095f88eb700e', 'message': ""Turn on linksource when generating javadoc -- why didn't we do this sooner?\n\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@47 8138a162-5c33-11de-8abc-d1c337b90d21\n""}"
5398,"{'code': 'bf08202a2eb0db2de8382f960276897ba68fb0aa', 'message': 'Code updates. Nothing particularly noteworthy.\n\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@44 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5399,"{'code': '5e083b830a3893f74e75acaf4eec50068b6e3b39', 'message': 'Updates.\n\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@43 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5400,"{'code': 'f082dc3b19dfc77cf02f53ba0ca1b7a5ca5ee060', 'message': 'Updates.\n\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@42 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5401,"{'code': 'd81f4f2c1b57eeb6d85899ab54abe29e5217ef58', 'message': 'Make existence of mvn signing plugin dependent on providing a key name/id as a proper parameter.\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@39 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5402,"{'code': '58e1568336dc0d2110e49e2b5c8b34d9dacfb4f4', 'message': 're-add a script for maven deployments\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@38 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5403,"{'code': '970ad12d61e18d5171f3a5e8e3d07c83f587d2ed', 'message': 'Last little fixes for release 05, will write up release notes on Monday.\n\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@34 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5404,"{'code': '2099f93f0e0890a9ae2cf8ee3d5cb19643d89af7', 'message': ""remove maven parallel tree for sub-artifacts... they won't break down this way necessarily, and guava is small enough to be a single dependency.  we'll just ship monolithic, per the mailing list conversation.\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@33 8138a162-5c33-11de-8abc-d1c337b90d21\n""}"
5405,"{'code': '8263a182d4a682974934dd26497a2f9b1e829e07', 'message': 'Next code drop, r05 should be later today.\n\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@32 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5406,"{'code': 'e031f621718dcd7a1baab0ba539e7495c23a735c', 'message': 'Source and javadoc update; this will likely be r05.\nNew: com.google.common.net!\nFixed: MapMaker bug (expired entries were appearing in collection views)\n\n\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@31 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5407,"{'code': '96e42b51353e959d05b4c7662ea80c43ce247be6', 'message': 'A few final tweaks before release 04.\n\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@28 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5408,"{'code': 'd6627b3e58a776f42ff9d032d499d840dd4cca69', 'message': 'Adding tests for common.base, just to start the process of exposing them,\nalthough they are not yet in a compiling state (they rely on other libraries we\nneed to copy out as well).\n\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@27 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5409,"{'code': 'bb36e5ab340e947abfb7485f3ae7d7cced956214', 'message': 'Bump maven pom versions to r04-SNAPSHOT (where they should be).\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@26 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5410,"{'code': '7ce09488d186e4f085046fb8d60578726ec429de', 'message': 'Big code drop in prep for cutting r04 next week.\n\nBrand new MapMaker implementation (expiration works way, way better).\n\n Initial @Beta release:\n  Itera*s.get(3-arg)\n  Files.createParentDirs\n  ForwardingListenableFuture\n  ThreadFactoryBuilder\n \n Initial release skipping @Beta:\n  Sets.powerSet\n  ForwardingBlockingQueue\n \n Exiting @Beta:\n  Charsets\n  Objects.toStringHelper\n  Objects.firstNonNull\n  Strings\n  Suppliers.memoizeWithExpiration\n  Throwables (except 2 methods)\n  ComparisonChain\n  ByteArrayData{In,Out}put\n  {In,Out}putSupplier\n  ForwardingFuture\n  UncheckedTimeoutException\n\nVarious miscellaneous improvements.\n\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@25 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5411,"{'code': '59f0ccef510cc7bf0d854fb2a7dd5fcc880a1e8c', 'message': 'add a convenient script for doing maven deployments - currently uses the default pgp key of the user deploying, which is acceptable to Sonatype.\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@24 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5412,"{'code': '571f5a2c628b85a03c6cc27a722d3c2b3b76d4e9', 'message': ""add Kevinb to the developers' section.\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@23 8138a162-5c33-11de-8abc-d1c337b90d21\n""}"
5413,"{'code': '632cb8323b3e503497cfa8b31df17e01c11816bf', 'message': 'Rename guava-complete to just guava per a conversation with kevinb regarding older naming decisions.\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@22 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5414,"{'code': '4c89fa2ca083ec4a98124cc26d99c5cb29446d85', 'message': 'woops.  remove dummy distributionManagement which is in the parent google pom.\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@21 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5415,"{'code': 'd249611648cdcacac702e1bdfe26ef4582d2e2a9', 'message': 'Add maven metadata and a faux maven project hierarchy for multi-module support to build this as several smaller maven modules, as well as the monolithic jar.\n\nAlso, add a README.maven to talk about this in general\n\nLastly, add a note in README about needing a 1.5 JDK that includes the @Overrides patch, since we use @Overrides to override interface methods, not just concrete/abstract class methods.\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@20 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5416,"{'code': '25e4590775329cdcee32423e5819ffdc08077add', 'message': 'guava-src-r03.zip is a better name than src-r03.zip.\n\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@14 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5417,"{'code': '95e8bd258dacfb9d1179d11465442aa3504e97b4', 'message': 'Final tweaks for r03 and rebuild javadoc.\n\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@13 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5418,"{'code': 'ee071f342edd0f5240dc2667a11e717a3a9395e6', 'message': 'Huge new source dump for source release 3, which will also become our first\nbinary release shortly.\n\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@12 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5419,"{'code': 'f5ad01f0326405c321a4d1a7bbafb01b7d4d5074', 'message': 'Some fixes to java5-compatible compilation\n\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@11 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5420,"{'code': 'bbab2ce3c162b244119bdc22a990d7b75fdef0af', 'message': 'ARGHGH, guess I was in the wrong directory when submitting... amateurs...\n\n\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@9 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5421,"{'code': 'b492c5570480e6fa1162757ccec9012174dd662f', 'message': 'Copy in the Google Collections 1.0-final sources, unmodified. Next step:\nrefresh them with newer versions.\n\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@6 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5422,"{'code': '78195d6c3d33aa34af8f0d817e341e240ee9af5e', 'message': 'Update google collections dependency to rc3.\n\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@4 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5423,"{'code': 'a194b64f31a7453a9be7e4573b2d92afab3aa37e', 'message': 'very minor tweaks to make consistent with internal copies, ignore.\n\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@3 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5424,"{'code': 'dc5915eb1072c61ff2c3c704af4ae36b25f97b6c', 'message': 'Initial code dump: version 9.09.15\n\n\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@2 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
5425,"{'code': 'db3929bd79ef57f8da40515b663f40200a941fa8', 'message': 'Initial directory structure.\n\ngit-svn-id: https://guava-libraries.googlecode.com/svn/trunk@1 8138a162-5c33-11de-8abc-d1c337b90d21\n'}"
